public final class org/jetbrains/exposed/jdbc/ExposedConnectionImpl : org/jetbrains/exposed/sql/DatabaseConnectionAutoRegistration {
	public fun <init> ()V
	public synthetic fun invoke (Ljava/lang/Object;)Ljava/lang/Object;
	public fun invoke (Ljava/sql/Connection;)Lorg/jetbrains/exposed/sql/statements/jdbc/JdbcConnectionImpl;
}

public final class org/jetbrains/exposed/sql/Database : org/jetbrains/exposed/sql/statements/api/DatabaseApi {
	public static final field Companion Lorg/jetbrains/exposed/sql/Database$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getIdentifierManager ()Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi;
	public fun getSupportsAlterTableWithAddColumn ()Z
	public fun getSupportsAlterTableWithDropColumn ()Z
	public fun getSupportsMultipleResultSets ()Z
	public fun getUrl ()Ljava/lang/String;
	public fun getVendor ()Ljava/lang/String;
	public fun getVersion ()Ljava/math/BigDecimal;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/Database$Companion {
	public final fun connect (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public final fun connect (Ljavax/sql/DataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public final fun connect (Lkotlin/jvm/functions/Function0;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/sql/Database$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/sql/Database$Companion;Ljavax/sql/DataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/sql/Database$Companion;Lkotlin/jvm/functions/Function0;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public final fun connectPool (Ljavax/sql/ConnectionPoolDataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connectPool$default (Lorg/jetbrains/exposed/sql/Database$Companion;Ljavax/sql/ConnectionPoolDataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public final fun getDefaultIsolationLevel (Lorg/jetbrains/exposed/sql/Database;)I
	public final fun getDialectName (Ljava/lang/String;)Ljava/lang/String;
	public final fun registerDialect (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public final fun registerJdbcDriver (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class org/jetbrains/exposed/sql/DatabaseConnectionAutoRegistration : kotlin/jvm/functions/Function1 {
}

public final class org/jetbrains/exposed/sql/SchemaUtils : org/jetbrains/exposed/sql/statements/api/SchemaUtilityApi {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/SchemaUtils;
	public final fun addMissingColumnsStatements ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public static synthetic fun addMissingColumnsStatements$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun checkCycle ([Lorg/jetbrains/exposed/sql/Table;)Z
	public final fun checkExcessiveForeignKeyConstraints ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public final fun checkExcessiveIndices ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public final fun checkMappingConsistence ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public static synthetic fun checkMappingConsistence$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun create ([Lorg/jetbrains/exposed/sql/Table;Z)V
	public static synthetic fun create$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)V
	public final fun createDatabase ([Ljava/lang/String;Z)V
	public static synthetic fun createDatabase$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun createFKey (Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;)Ljava/util/List;
	public final fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/util/List;
	public final fun createMissingTablesAndColumns ([Lorg/jetbrains/exposed/sql/Table;ZZ)V
	public static synthetic fun createMissingTablesAndColumns$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZZILjava/lang/Object;)V
	public final fun createSchema ([Lorg/jetbrains/exposed/sql/Schema;Z)V
	public static synthetic fun createSchema$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Schema;ZILjava/lang/Object;)V
	public final fun createSequence ([Lorg/jetbrains/exposed/sql/Sequence;Z)V
	public static synthetic fun createSequence$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Sequence;ZILjava/lang/Object;)V
	public final fun createStatements ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/List;
	public final fun drop ([Lorg/jetbrains/exposed/sql/Table;Z)V
	public static synthetic fun drop$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)V
	public final fun dropDatabase ([Ljava/lang/String;Z)V
	public static synthetic fun dropDatabase$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun dropSchema ([Lorg/jetbrains/exposed/sql/Schema;ZZ)V
	public static synthetic fun dropSchema$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Schema;ZZILjava/lang/Object;)V
	public final fun dropSequence ([Lorg/jetbrains/exposed/sql/Sequence;Z)V
	public static synthetic fun dropSequence$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Sequence;ZILjava/lang/Object;)V
	public final fun listDatabases ()Ljava/util/List;
	public final fun listTables ()Ljava/util/List;
	public final fun setSchema (Lorg/jetbrains/exposed/sql/Schema;Z)V
	public static synthetic fun setSchema$default (Lorg/jetbrains/exposed/sql/SchemaUtils;Lorg/jetbrains/exposed/sql/Schema;ZILjava/lang/Object;)V
	public final fun sortTablesByReferences (Ljava/lang/Iterable;)Ljava/util/List;
	public final fun statementsRequiredToActualizeScheme ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public static synthetic fun statementsRequiredToActualizeScheme$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun withDataBaseLock (Lorg/jetbrains/exposed/sql/Transaction;Lkotlin/jvm/functions/Function0;)V
}

public final class org/jetbrains/exposed/sql/statements/jdbc/JdbcConnectionImpl : org/jetbrains/exposed/sql/statements/api/ExposedConnection {
	public fun <init> (Ljava/sql/Connection;)V
	public fun close ()V
	public fun commit ()V
	public fun executeInBatch (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAutoCommit ()Z
	public fun getCatalog ()Ljava/lang/String;
	public synthetic fun getConnection ()Ljava/lang/Object;
	public fun getConnection ()Ljava/sql/Connection;
	public fun getReadOnly ()Z
	public fun getSchema ()Ljava/lang/String;
	public fun getTransactionIsolation ()I
	public fun isClosed ()Z
	public fun metadata (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public fun prepareStatement (Ljava/lang/String;Z)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	public fun prepareStatement (Ljava/lang/String;[Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	public fun releaseSavepoint (Lorg/jetbrains/exposed/sql/statements/api/ExposedSavepoint;)V
	public fun rollback ()V
	public fun rollback (Lorg/jetbrains/exposed/sql/statements/api/ExposedSavepoint;)V
	public fun setAutoCommit (Z)V
	public fun setCatalog (Ljava/lang/String;)V
	public fun setReadOnly (Z)V
	public fun setSavepoint (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/ExposedSavepoint;
	public fun setSchema (Ljava/lang/String;)V
	public fun setTransactionIsolation (I)V
}

public final class org/jetbrains/exposed/sql/statements/jdbc/JdbcDatabaseMetadataImpl : org/jetbrains/exposed/sql/statements/api/ExposedDatabaseMetadata {
	public static final field Companion Lorg/jetbrains/exposed/sql/statements/jdbc/JdbcDatabaseMetadataImpl$Companion;
	public fun <init> (Ljava/lang/String;Ljava/sql/DatabaseMetaData;)V
	public fun cleanCache ()V
	public fun columns ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun existingIndices ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun existingPrimaryKeys ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun getDatabaseDialectMode ()Ljava/lang/String;
	public fun getDatabaseDialectName ()Ljava/lang/String;
	public fun getDatabaseProductVersion ()Ljava/lang/String;
	public fun getDefaultIsolationLevel ()I
	public fun getIdentifierManager ()Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi;
	public final fun getMetadata ()Ljava/sql/DatabaseMetaData;
	public fun getSchemaNames ()Ljava/util/List;
	public fun getSupportsAlterTableWithAddColumn ()Z
	public fun getSupportsAlterTableWithDropColumn ()Z
	public fun getSupportsMultipleResultSets ()Z
	public fun getSupportsSelectForUpdate ()Z
	public fun getTableNames ()Ljava/util/Map;
	public fun getUrl ()Ljava/lang/String;
	public fun getVersion ()Ljava/math/BigDecimal;
	public fun resetCurrentScheme ()V
	public fun sequences ()Ljava/util/List;
	public fun tableConstraints (Ljava/util/List;)Ljava/util/Map;
	public fun tableNamesByCurrentSchema (Ljava/util/Map;)Lorg/jetbrains/exposed/sql/vendors/SchemaMetadata;
}

public final class org/jetbrains/exposed/sql/statements/jdbc/JdbcDatabaseMetadataImpl$Companion {
}

public final class org/jetbrains/exposed/sql/statements/jdbc/JdbcPreparedStatementImpl : org/jetbrains/exposed/sql/statements/api/PreparedStatementApi {
	public fun <init> (Ljava/sql/PreparedStatement;Z)V
	public fun addBatch ()V
	public fun cancel ()V
	public fun closeIfPossible ()V
	public fun executeBatch (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeMultiple (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeQuery (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeUpdate (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun fillParameters (Ljava/lang/Iterable;)I
	public fun getFetchSize ()Ljava/lang/Integer;
	public synthetic fun getResultSet ()Lorg/jetbrains/exposed/sql/statements/api/ResultApi;
	public fun getResultSet ()Lorg/jetbrains/exposed/sql/statements/jdbc/JdbcResult;
	public final fun getStatement ()Ljava/sql/PreparedStatement;
	public fun getTimeout ()Ljava/lang/Integer;
	public final fun getWasGeneratedKeysRequested ()Z
	public fun set (ILjava/lang/Object;)V
	public fun setArray (ILjava/lang/String;[Ljava/lang/Object;)V
	public fun setFetchSize (Ljava/lang/Integer;)V
	public fun setInputStream (ILjava/io/InputStream;Z)V
	public fun setNull (ILorg/jetbrains/exposed/sql/IColumnType;)V
	public fun setTimeout (Ljava/lang/Integer;)V
}

public final class org/jetbrains/exposed/sql/statements/jdbc/JdbcResult : org/jetbrains/exposed/sql/statements/api/ResultApi {
	public fun <init> (Ljava/sql/ResultSet;)V
	public fun close ()V
	public fun collectAll (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public fun collectSingle (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public fun getObject (I)Ljava/lang/Object;
	public fun getObject (ILjava/lang/Class;)Ljava/lang/Object;
	public synthetic fun getResult ()Ljava/lang/Object;
	public fun getResult ()Ljava/sql/ResultSet;
	public fun metadataColumnCount ()I
	public fun metadataColumnIndex (Ljava/lang/String;)I
	public fun metadataColumnName (I)Ljava/lang/String;
	public fun next ()Z
	public fun releaseResult ()V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/statements/jdbc/JdbcSavepoint : org/jetbrains/exposed/sql/statements/api/ExposedSavepoint {
	public fun <init> (Ljava/lang/String;Ljava/sql/Savepoint;)V
}

public final class org/jetbrains/exposed/sql/transactions/JdbcTransaction : org/jetbrains/exposed/sql/Transaction {
	public fun <init> (Lorg/jetbrains/exposed/sql/transactions/TransactionInterface;)V
	public final fun exec (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;)Lkotlin/Unit;
	public final fun exec (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun exec$default (Lorg/jetbrains/exposed/sql/transactions/JdbcTransaction;Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;ILjava/lang/Object;)Lkotlin/Unit;
	public static synthetic fun exec$default (Lorg/jetbrains/exposed/sql/transactions/JdbcTransaction;Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun execInBatch (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/sql/transactions/JdbcTransactionKt {
	public static final fun inTopLevelTransaction (IZLorg/jetbrains/exposed/sql/statements/api/DatabaseApi;Lorg/jetbrains/exposed/sql/transactions/JdbcTransaction;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun inTopLevelTransaction$default (IZLorg/jetbrains/exposed/sql/statements/api/DatabaseApi;Lorg/jetbrains/exposed/sql/transactions/JdbcTransaction;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun transaction (IZLorg/jetbrains/exposed/sql/statements/api/DatabaseApi;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun transaction (Lorg/jetbrains/exposed/sql/statements/api/DatabaseApi;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun transaction$default (IZLorg/jetbrains/exposed/sql/statements/api/DatabaseApi;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun transaction$default (Lorg/jetbrains/exposed/sql/statements/api/DatabaseApi;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/transactions/ThreadLocalTransactionManager : org/jetbrains/exposed/sql/transactions/TransactionManager {
	public fun <init> (Lorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bindTransactionToThread (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun currentOrNull ()Lorg/jetbrains/exposed/sql/Transaction;
	public fun getDefaultIsolationLevel ()I
	public fun getDefaultMaxAttempts ()I
	public fun getDefaultMaxRepetitionDelay ()J
	public fun getDefaultMaxRetryDelay ()J
	public fun getDefaultMinRepetitionDelay ()J
	public fun getDefaultMinRetryDelay ()J
	public fun getDefaultReadOnly ()Z
	public fun getDefaultRepetitionAttempts ()I
	public final fun getThreadLocal ()Ljava/lang/ThreadLocal;
	public synthetic fun newTransaction (IZLorg/jetbrains/exposed/sql/Transaction;)Lorg/jetbrains/exposed/sql/Transaction;
	public fun newTransaction (IZLorg/jetbrains/exposed/sql/Transaction;)Lorg/jetbrains/exposed/sql/transactions/JdbcTransaction;
	public fun setDefaultIsolationLevel (I)V
	public fun setDefaultMaxAttempts (I)V
	public fun setDefaultMaxRepetitionDelay (J)V
	public fun setDefaultMaxRetryDelay (J)V
	public fun setDefaultMinRepetitionDelay (J)V
	public fun setDefaultMinRetryDelay (J)V
	public fun setDefaultReadOnly (Z)V
	public fun setDefaultRepetitionAttempts (I)V
	public fun toString ()Ljava/lang/String;
}

