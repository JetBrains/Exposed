public final class org/jetbrains/exposed/v1/jdbc/Database : org/jetbrains/exposed/v1/core/DatabaseApi {
	public static final field Companion Lorg/jetbrains/exposed/v1/jdbc/Database$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConnector ()Lkotlin/jvm/functions/Function0;
	public fun getDialect ()Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;
	public final fun getDialectMetadata ()Lorg/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata;
	public fun getDialectMode ()Ljava/lang/String;
	public fun getFullVersion ()Ljava/lang/String;
	public fun getIdentifierManager ()Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi;
	public final fun getMajorVersion ()I
	public final fun getMinorVersion ()I
	public fun getSupportsAlterTableWithAddColumn ()Z
	public fun getSupportsAlterTableWithDropColumn ()Z
	public fun getSupportsMultipleResultSets ()Z
	public fun getUrl ()Ljava/lang/String;
	public fun getVendor ()Ljava/lang/String;
	public fun getVersion ()Ljava/math/BigDecimal;
	public fun isVersionCovers (II)Z
	public fun isVersionCovers (Ljava/math/BigDecimal;)Z
}

public final class org/jetbrains/exposed/v1/jdbc/Database$Companion {
	public final fun connect (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lorg/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Database;
	public final fun connect (Ljavax/sql/DataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lorg/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Database;
	public final fun connect (Lkotlin/jvm/functions/Function0;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lorg/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/v1/jdbc/Database$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lorg/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/v1/jdbc/Database$Companion;Ljavax/sql/DataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lorg/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/v1/jdbc/Database$Companion;Lkotlin/jvm/functions/Function0;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;Lorg/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/Database;
	public final fun getDefaultIsolationLevel (Lorg/jetbrains/exposed/v1/jdbc/Database;)I
	public final fun getDialectName (Ljava/lang/String;)Ljava/lang/String;
	public final fun registerDialectMetadata (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public final fun registerJdbcDriver (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration : kotlin/jvm/functions/Function1 {
}

public final class org/jetbrains/exposed/v1/jdbc/DatabaseKt {
	public static final fun getName (Lorg/jetbrains/exposed/v1/jdbc/Database;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/jdbc/EmptySizedIterable : java/util/Iterator, kotlin/jvm/internal/markers/KMappedMarker, org/jetbrains/exposed/v1/jdbc/SizedIterable {
	public fun <init> ()V
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun hasNext ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun next ()Ljava/lang/Object;
	public fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun remove ()V
}

public final class org/jetbrains/exposed/v1/jdbc/Except : org/jetbrains/exposed/v1/jdbc/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/Intersect;
	public synthetic fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun getOperationName ()Ljava/lang/String;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
}

public class org/jetbrains/exposed/v1/jdbc/ExplainBlockingExecutable : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker, org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExplainQuery;)V
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/ExplainQuery;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public final class org/jetbrains/exposed/v1/jdbc/ExplainBlockingExecutableKt {
	public static final fun explain (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;ZLjava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/ExplainBlockingExecutable;
	public static synthetic fun explain$default (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;ZLjava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/ExplainBlockingExecutable;
}

public final class org/jetbrains/exposed/v1/jdbc/ExposedConnectionImpl : org/jetbrains/exposed/v1/jdbc/DatabaseConnectionAutoRegistration {
	public fun <init> ()V
	public synthetic fun invoke (Ljava/lang/Object;)Ljava/lang/Object;
	public fun invoke (Ljava/sql/Connection;)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcConnectionImpl;
}

public final class org/jetbrains/exposed/v1/jdbc/Intersect : org/jetbrains/exposed/v1/jdbc/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/Intersect;
	public synthetic fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
}

public final class org/jetbrains/exposed/v1/jdbc/IterableExKt {
	public static final fun emptySized ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public static final fun mapLazy (Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
}

public class org/jetbrains/exposed/v1/jdbc/JdbcTransaction : org/jetbrains/exposed/v1/core/Transaction, org/jetbrains/exposed/v1/jdbc/transactions/JdbcTransactionInterface {
	public static final field Companion Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/jdbc/transactions/JdbcTransactionInterface;)V
	public fun close ()V
	public final fun closeExecutedStatements ()V
	public fun commit ()V
	public final fun exec (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/v1/core/statements/StatementType;)Lkotlin/Unit;
	public final fun exec (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/v1/core/statements/StatementType;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun exec (Lorg/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable;)Ljava/lang/Object;
	public final fun exec (Lorg/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static synthetic fun exec$default (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/v1/core/statements/StatementType;ILjava/lang/Object;)Lkotlin/Unit;
	public static synthetic fun exec$default (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/v1/core/statements/StatementType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun execInBatch (Ljava/util/List;)V
	public fun getConnection ()Lorg/jetbrains/exposed/v1/jdbc/statements/api/ExposedConnection;
	public final fun getCurrentStatement ()Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
	public synthetic fun getDb ()Lorg/jetbrains/exposed/v1/core/DatabaseApi;
	public final fun getDb ()Lorg/jetbrains/exposed/v1/jdbc/Database;
	public final fun getMaxAttempts ()I
	public final fun getMaxRetryDelay ()J
	public final fun getMinRetryDelay ()J
	public synthetic fun getOuterTransaction ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public fun getOuterTransaction ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public fun getReadOnly ()Z
	public fun getTransactionIsolation ()I
	public final fun registerInterceptor (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;)Z
	public fun rollback ()V
	public final fun setCurrentStatement (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;)V
	public final fun setMaxAttempts (I)V
	public final fun setMaxRetryDelay (J)V
	public final fun setMinRetryDelay (J)V
	public final fun unregisterInterceptor (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;)Z
}

public final class org/jetbrains/exposed/v1/jdbc/JdbcTransaction$Companion {
	public final fun getGlobalInterceptors ()Ljava/util/ArrayList;
}

public final class org/jetbrains/exposed/v1/jdbc/JdbcTransactionKt {
	public static final fun addLogger (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;[Lorg/jetbrains/exposed/v1/core/SqlLogger;)Lorg/jetbrains/exposed/v1/core/CompositeSqlLogger;
}

public final class org/jetbrains/exposed/v1/jdbc/LazySizedCollection : org/jetbrains/exposed/v1/jdbc/SizedIterable {
	public fun <init> (Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;)V
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public final fun getWrapper ()Ljava/util/List;
	public final fun isLoaded ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/LazySizedIterable : org/jetbrains/exposed/v1/jdbc/SizedIterable {
	public abstract fun getLoadedResult ()Ljava/util/List;
	public abstract fun setLoadedResult (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/v1/jdbc/LazySizedIterable$DefaultImpls {
	public static fun forUpdate (Lorg/jetbrains/exposed/v1/jdbc/LazySizedIterable;Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public static fun notForUpdate (Lorg/jetbrains/exposed/v1/jdbc/LazySizedIterable;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
}

public final class org/jetbrains/exposed/v1/jdbc/MetadataQueriesKt {
	public static final fun exists (Lorg/jetbrains/exposed/v1/core/Schema;)Z
	public static final fun exists (Lorg/jetbrains/exposed/v1/core/Sequence;)Z
	public static final fun exists (Lorg/jetbrains/exposed/v1/core/Table;)Z
}

public final class org/jetbrains/exposed/v1/jdbc/QueriesKt {
	public static final fun batchInsert (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Iterable;ZZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun batchInsert (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/sequences/Sequence;ZZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static synthetic fun batchInsert$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Iterable;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun batchInsert$default (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/sequences/Sequence;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static final fun batchReplace (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Iterable;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun batchReplace (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static synthetic fun batchReplace$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Iterable;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun batchReplace$default (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static final fun batchUpsert (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Iterable;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun batchUpsert (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/sequences/Sequence;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static synthetic fun batchUpsert$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Iterable;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun batchUpsert$default (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/sequences/Sequence;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static final fun delete (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;)I
	public static final fun delete (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;)I
	public static synthetic fun delete$default (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;ILjava/lang/Object;)I
	public static synthetic fun delete$default (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static final fun deleteAll (Lorg/jetbrains/exposed/v1/core/Table;)I
	public static final fun deleteIgnoreWhere (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun deleteIgnoreWhere$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun deleteJoinNullableParam (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;)I
	public static synthetic fun deleteJoinNullableParam$default (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static final fun deleteReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun deleteReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun deleteReturning$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun deleteReturning$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun deleteReturningNullableParam (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun deleteReturningNullableParam$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun deleteWhere (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun deleteWhere$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun insert (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public static final fun insert (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Ljava/lang/Integer;
	public static synthetic fun insert$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/Integer;
	public static final fun insertAndGetId (Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;
	public static final fun insertIgnore (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public static final fun insertIgnore (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Ljava/lang/Integer;
	public static synthetic fun insertIgnore$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/Integer;
	public static final fun insertIgnoreAndGetId (Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;
	public static final fun insertReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun insertReturning$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun mergeFrom (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/QueryAlias;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeSelectStatement;
	public static final fun mergeFrom (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public static final fun mergeFrom (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public static final fun mergeFromNullableParam (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public static synthetic fun mergeFromNullableParam$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public static final fun replace (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReplaceStatement;
	public static final fun replace (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Ljava/lang/Integer;
	public static synthetic fun replace$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/Integer;
	public static final fun select (Lorg/jetbrains/exposed/v1/core/ColumnSet;Ljava/util/List;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public static final fun select (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/Expression;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public static final fun selectAll (Lorg/jetbrains/exposed/v1/core/FieldSet;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public static final fun update (Lorg/jetbrains/exposed/v1/core/Join;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)I
	public static final fun update (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)I
	public static final fun update (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)I
	public static final fun update (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun update$default (Lorg/jetbrains/exposed/v1/core/Join;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static synthetic fun update$default (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static synthetic fun update$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static synthetic fun update$default (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun updateJoinNullableParam (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)I
	public static synthetic fun updateJoinNullableParam$default (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static final fun updateNullableParam (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun updateNullableParam$default (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun updateReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun updateReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun updateReturning$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun updateReturning$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun updateReturningNullableParam (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun updateReturningNullableParam$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static final fun upsert (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;
	public static synthetic fun upsert$default (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;
	public static final fun upsertReturning (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
	public static synthetic fun upsertReturning$default (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable;
}

public class org/jetbrains/exposed/v1/jdbc/Query : org/jetbrains/exposed/v1/core/AbstractQuery, org/jetbrains/exposed/v1/jdbc/SizedIterable, org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public static final field Companion Lorg/jetbrains/exposed/v1/jdbc/Query$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/FieldSet;Lorg/jetbrains/exposed/v1/core/Op;)V
	public final fun adjustColumnSet (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public final fun adjustSelect (Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public final fun adjustWhere (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/Query;
	public synthetic fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public final fun fetchBatchedResults (ILorg/jetbrains/exposed/v1/core/SortOrder;)Ljava/lang/Iterable;
	public static synthetic fun fetchBatchedResults$default (Lorg/jetbrains/exposed/v1/jdbc/Query;ILorg/jetbrains/exposed/v1/core/SortOrder;ILjava/lang/Object;)Ljava/lang/Iterable;
	public fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public synthetic fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun getSet ()Lorg/jetbrains/exposed/v1/core/FieldSet;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/jdbc/Query;
	protected final fun getTransaction ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public fun isAlwaysBatch ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public synthetic fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/Query;
	public synthetic fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public synthetic fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public final fun orderBy (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public synthetic fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public static synthetic fun orderBy$default (Lorg/jetbrains/exposed/v1/jdbc/Query;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
	public fun setSet (Lorg/jetbrains/exposed/v1/core/FieldSet;)V
	public final fun where (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public final fun where (Lorg/jetbrains/exposed/v1/core/Op;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public final fun withDistinctOn ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/Query;
}

public final class org/jetbrains/exposed/v1/jdbc/Query$Companion {
}

public final class org/jetbrains/exposed/v1/jdbc/QueryKt {
	public static final fun andHaving (Lorg/jetbrains/exposed/v1/jdbc/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public static final fun andWhere (Lorg/jetbrains/exposed/v1/jdbc/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public static final fun orHaving (Lorg/jetbrains/exposed/v1/jdbc/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
	public static final fun orWhere (Lorg/jetbrains/exposed/v1/jdbc/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/jdbc/Query;
}

public final class org/jetbrains/exposed/v1/jdbc/SchemaUtils : org/jetbrains/exposed/v1/core/SchemaUtilityApi {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;
	public final fun addMissingColumnsStatements ([Lorg/jetbrains/exposed/v1/core/Table;Z)Ljava/util/List;
	public static synthetic fun addMissingColumnsStatements$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun checkCycle ([Lorg/jetbrains/exposed/v1/core/Table;)Z
	public final fun checkExcessiveForeignKeyConstraints ([Lorg/jetbrains/exposed/v1/core/Table;Z)Ljava/util/List;
	public final fun checkExcessiveIndices ([Lorg/jetbrains/exposed/v1/core/Table;Z)Ljava/util/List;
	public final fun checkMappingConsistence ([Lorg/jetbrains/exposed/v1/core/Table;Z)Ljava/util/List;
	public static synthetic fun checkMappingConsistence$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun create ([Lorg/jetbrains/exposed/v1/core/Table;Z)V
	public static synthetic fun create$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Table;ZILjava/lang/Object;)V
	public final fun createDatabase ([Ljava/lang/String;Z)V
	public static synthetic fun createDatabase$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun createFKey (Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;)Ljava/util/List;
	public final fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/util/List;
	public final fun createMissingTablesAndColumns ([Lorg/jetbrains/exposed/v1/core/Table;ZZ)V
	public static synthetic fun createMissingTablesAndColumns$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Table;ZZILjava/lang/Object;)V
	public final fun createSchema ([Lorg/jetbrains/exposed/v1/core/Schema;Z)V
	public static synthetic fun createSchema$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Schema;ZILjava/lang/Object;)V
	public final fun createSequence ([Lorg/jetbrains/exposed/v1/core/Sequence;Z)V
	public static synthetic fun createSequence$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Sequence;ZILjava/lang/Object;)V
	public final fun createStatements ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/List;
	public final fun drop ([Lorg/jetbrains/exposed/v1/core/Table;Z)V
	public static synthetic fun drop$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Table;ZILjava/lang/Object;)V
	public final fun dropDatabase ([Ljava/lang/String;Z)V
	public static synthetic fun dropDatabase$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun dropSchema ([Lorg/jetbrains/exposed/v1/core/Schema;ZZ)V
	public static synthetic fun dropSchema$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Schema;ZZILjava/lang/Object;)V
	public final fun dropSequence ([Lorg/jetbrains/exposed/v1/core/Sequence;Z)V
	public static synthetic fun dropSequence$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Sequence;ZILjava/lang/Object;)V
	public final fun listDatabases ()Ljava/util/List;
	public final fun listTables ()Ljava/util/List;
	public final fun listTablesInAllSchemas ()Ljava/util/List;
	public final fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;Z)V
	public static synthetic fun setSchema$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;Lorg/jetbrains/exposed/v1/core/Schema;ZILjava/lang/Object;)V
	public final fun sortTablesByReferences (Ljava/lang/Iterable;)Ljava/util/List;
	public final fun statementsRequiredToActualizeScheme ([Lorg/jetbrains/exposed/v1/core/Table;Z)Ljava/util/List;
	public static synthetic fun statementsRequiredToActualizeScheme$default (Lorg/jetbrains/exposed/v1/jdbc/SchemaUtils;[Lorg/jetbrains/exposed/v1/core/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun withDataBaseLock (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Lkotlin/jvm/functions/Function0;)V
}

public abstract class org/jetbrains/exposed/v1/jdbc/SetOperation : org/jetbrains/exposed/v1/core/AbstractQuery, org/jetbrains/exposed/v1/jdbc/SizedIterable, org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public static final field Companion Lorg/jetbrains/exposed/v1/jdbc/SetOperation$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun count ()J
	public fun empty ()Z
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public final fun getFirstStatement ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun getOperationName ()Ljava/lang/String;
	public final fun getSecondStatement ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun getSet ()Lorg/jetbrains/exposed/v1/core/FieldSet;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
	protected final fun getTransaction ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public fun isAlwaysBatch ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
	public synthetic fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
	public synthetic fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public final fun orderBy (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
	public synthetic fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public static synthetic fun orderBy$default (Lorg/jetbrains/exposed/v1/jdbc/SetOperation;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)Ljava/lang/String;
	protected fun prepareStatementSQL (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public final class org/jetbrains/exposed/v1/jdbc/SetOperation$Companion {
}

public final class org/jetbrains/exposed/v1/jdbc/SetOperationsKt {
	public static final fun except (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/jdbc/Query;)Lorg/jetbrains/exposed/v1/jdbc/Except;
	public static final fun intersect (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/jdbc/Query;)Lorg/jetbrains/exposed/v1/jdbc/Intersect;
	public static final fun union (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/jdbc/Query;)Lorg/jetbrains/exposed/v1/jdbc/Union;
	public static final fun unionAll (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/jdbc/Query;)Lorg/jetbrains/exposed/v1/jdbc/UnionAll;
}

public final class org/jetbrains/exposed/v1/jdbc/SizedCollection : org/jetbrains/exposed/v1/jdbc/SizedIterable {
	public fun <init> (Ljava/util/Collection;)V
	public fun <init> ([Ljava/lang/Object;)V
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public final fun getDelegate ()Ljava/util/Collection;
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/SizedIterable : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public abstract fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public abstract fun count ()J
	public abstract fun empty ()Z
	public abstract fun forUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public abstract fun limit (I)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public abstract fun notForUpdate ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public abstract fun offset (J)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public abstract fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
}

public final class org/jetbrains/exposed/v1/jdbc/SizedIterable$DefaultImpls {
	public static fun forUpdate (Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public static synthetic fun forUpdate$default (Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public static fun notForUpdate (Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;)Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
}

public final class org/jetbrains/exposed/v1/jdbc/Union : org/jetbrains/exposed/v1/jdbc/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public synthetic fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/Union;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
}

public final class org/jetbrains/exposed/v1/jdbc/UnionAll : org/jetbrains/exposed/v1/jdbc/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public synthetic fun copy ()Lorg/jetbrains/exposed/v1/jdbc/SizedIterable;
	public fun copy ()Lorg/jetbrains/exposed/v1/jdbc/UnionAll;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/v1/jdbc/SetOperation;
}

public class org/jetbrains/exposed/v1/jdbc/statements/BatchInsertBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/InsertBlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement;)V
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/BatchUpdateBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/UpdateBlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/BatchUpdateStatement;)V
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/BatchUpdateStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
}

public class org/jetbrains/exposed/v1/jdbc/statements/BatchUpsertBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BatchInsertBlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/BatchUpsertStatement;)V
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/BatchUpsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public abstract fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public abstract fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public abstract fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public abstract fun isAlwaysBatch ()Z
	public abstract fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public final class org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable$DefaultImpls {
	public static fun execute (Lorg/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public static fun isAlwaysBatch (Lorg/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable;)Z
	public static fun prepared (Lorg/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/DeleteBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;)V
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/InsertBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;)V
	protected fun execInsertFunction (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;)Lkotlin/Pair;
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	protected final fun getAutoIncColumns ()Ljava/util/List;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/InsertSelectBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;)V
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/MergeBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;)V
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/ReturningBlockingExecutable : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker, org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;)V
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/SQLServerBatchInsertBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BatchInsertBlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/SQLServerBatchInsertStatement;)V
	protected fun execInsertFunction (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;)Lkotlin/Pair;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/SQLServerBatchInsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun isAlwaysBatch ()Z
}

public class org/jetbrains/exposed/v1/jdbc/statements/UpdateBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/BlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;)V
	public fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun execute (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/Object;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public class org/jetbrains/exposed/v1/jdbc/statements/UpsertBlockingExecutable : org/jetbrains/exposed/v1/jdbc/statements/InsertBlockingExecutable {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;)V
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public synthetic fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;
	public fun prepared (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/statements/api/ExposedConnection {
	public abstract fun close ()V
	public abstract fun commit ()V
	public abstract fun executeInBatch (Ljava/util/List;)V
	public abstract fun getAutoCommit ()Z
	public abstract fun getCatalog ()Ljava/lang/String;
	public abstract fun getConnection ()Ljava/lang/Object;
	public abstract fun getReadOnly ()Z
	public abstract fun getSchema ()Ljava/lang/String;
	public abstract fun getTransactionIsolation ()I
	public abstract fun isClosed ()Z
	public abstract fun metadata (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun prepareStatement (Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
	public abstract fun prepareStatement (Ljava/lang/String;[Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
	public abstract fun releaseSavepoint (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint;)V
	public abstract fun rollback ()V
	public abstract fun rollback (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint;)V
	public abstract fun setAutoCommit (Z)V
	public abstract fun setCatalog (Ljava/lang/String;)V
	public abstract fun setReadOnly (Z)V
	public abstract fun setSavepoint (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint;
	public abstract fun setSchema (Ljava/lang/String;)V
	public abstract fun setTransactionIsolation (I)V
}

public abstract class org/jetbrains/exposed/v1/jdbc/statements/api/JdbcExposedDatabaseMetadata : org/jetbrains/exposed/v1/core/statements/api/ExposedDatabaseMetadata {
	public fun <init> (Ljava/lang/String;)V
	public abstract fun columns ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public abstract fun existingCheckConstraints ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public abstract fun existingIndices ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public abstract fun existingPrimaryKeys ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public abstract fun existingSequences ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public abstract fun getDatabaseDialectMode ()Ljava/lang/String;
	public abstract fun getDatabaseDialectName ()Ljava/lang/String;
	public abstract fun getDatabaseProductVersion ()Ljava/lang/String;
	public abstract fun getDefaultIsolationLevel ()I
	public abstract fun getMajorVersion ()I
	public abstract fun getMinorVersion ()I
	public abstract fun getSchemaNames ()Ljava/util/List;
	public abstract fun getSupportsAlterTableWithAddColumn ()Z
	public abstract fun getSupportsAlterTableWithDropColumn ()Z
	public abstract fun getSupportsMultipleResultSets ()Z
	public abstract fun getSupportsSelectForUpdate ()Z
	public abstract fun getTableNames ()Ljava/util/Map;
	public abstract fun getUrl ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/math/BigDecimal;
	public abstract fun sequences ()Ljava/util/List;
	public abstract fun supportsLimitWithUpdateOrDelete ()Z
	public abstract fun tableConstraints (Ljava/util/List;)Ljava/util/Map;
	public abstract fun tableNamesByCurrentSchema (Ljava/util/Map;)Lorg/jetbrains/exposed/v1/core/vendors/SchemaMetadata;
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi : org/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi {
	public abstract fun addBatch ()V
	public abstract fun cancel ()V
	public abstract fun closeIfPossible ()V
	public abstract fun executeBatch ()Ljava/util/List;
	public abstract fun executeMultiple ()Ljava/util/List;
	public abstract fun executeQuery ()Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public abstract fun executeUpdate ()I
	public abstract fun getFetchSize ()Ljava/lang/Integer;
	public abstract fun getResultSet ()Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public abstract fun getTimeout ()Ljava/lang/Integer;
	public abstract fun setFetchSize (Ljava/lang/Integer;)V
	public abstract fun setTimeout (Ljava/lang/Integer;)V
}

public final class org/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi$DefaultImpls {
	public static fun fillParameters (Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;Ljava/lang/Iterable;)I
}

public final class org/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcConnectionImpl : org/jetbrains/exposed/v1/jdbc/statements/api/ExposedConnection {
	public fun <init> (Ljava/sql/Connection;)V
	public fun close ()V
	public fun commit ()V
	public fun executeInBatch (Ljava/util/List;)V
	public fun getAutoCommit ()Z
	public fun getCatalog ()Ljava/lang/String;
	public synthetic fun getConnection ()Ljava/lang/Object;
	public fun getConnection ()Ljava/sql/Connection;
	public fun getReadOnly ()Z
	public fun getSchema ()Ljava/lang/String;
	public fun getTransactionIsolation ()I
	public fun isClosed ()Z
	public fun metadata (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public synthetic fun prepareStatement (Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
	public fun prepareStatement (Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcPreparedStatementImpl;
	public synthetic fun prepareStatement (Ljava/lang/String;[Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi;
	public fun prepareStatement (Ljava/lang/String;[Ljava/lang/String;)Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcPreparedStatementImpl;
	public fun releaseSavepoint (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint;)V
	public fun rollback ()V
	public fun rollback (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint;)V
	public fun setAutoCommit (Z)V
	public fun setCatalog (Ljava/lang/String;)V
	public fun setReadOnly (Z)V
	public fun setSavepoint (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint;
	public fun setSchema (Ljava/lang/String;)V
	public fun setTransactionIsolation (I)V
}

public final class org/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcDatabaseMetadataImpl : org/jetbrains/exposed/v1/jdbc/statements/api/JdbcExposedDatabaseMetadata {
	public static final field Companion Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcDatabaseMetadataImpl$Companion;
	public fun <init> (Ljava/lang/String;Ljava/sql/DatabaseMetaData;)V
	public fun cleanCache ()V
	public fun columns ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public fun existingCheckConstraints ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public fun existingIndices ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public fun existingPrimaryKeys ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public fun existingSequences ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public fun getDatabaseDialectMode ()Ljava/lang/String;
	public fun getDatabaseDialectName ()Ljava/lang/String;
	public fun getDatabaseProductVersion ()Ljava/lang/String;
	public fun getDefaultIsolationLevel ()I
	public fun getIdentifierManager ()Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi;
	public fun getMajorVersion ()I
	public final fun getMetadata ()Ljava/sql/DatabaseMetaData;
	public fun getMinorVersion ()I
	public fun getSchemaNames ()Ljava/util/List;
	public fun getSupportsAlterTableWithAddColumn ()Z
	public fun getSupportsAlterTableWithDropColumn ()Z
	public fun getSupportsMultipleResultSets ()Z
	public fun getSupportsSelectForUpdate ()Z
	public fun getTableNames ()Ljava/util/Map;
	public fun getUrl ()Ljava/lang/String;
	public fun getVersion ()Ljava/math/BigDecimal;
	public fun resetCurrentScheme ()V
	public fun resolveReferenceOption (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public fun sequences ()Ljava/util/List;
	public fun supportsLimitWithUpdateOrDelete ()Z
	public fun tableConstraints (Ljava/util/List;)Ljava/util/Map;
	public fun tableNamesByCurrentSchema (Ljava/util/Map;)Lorg/jetbrains/exposed/v1/core/vendors/SchemaMetadata;
}

public final class org/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcDatabaseMetadataImpl$Companion {
}

public final class org/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcPreparedStatementImpl : org/jetbrains/exposed/v1/jdbc/statements/api/JdbcPreparedStatementApi {
	public fun <init> (Ljava/sql/PreparedStatement;Z)V
	public fun addBatch ()V
	public fun cancel ()V
	public fun closeIfPossible ()V
	public fun executeBatch ()Ljava/util/List;
	public fun executeMultiple ()Ljava/util/List;
	public fun executeQuery ()Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public fun executeUpdate ()I
	public fun fillParameters (Ljava/lang/Iterable;)I
	public fun getFetchSize ()Ljava/lang/Integer;
	public fun getResultSet ()Lorg/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult;
	public final fun getStatement ()Ljava/sql/PreparedStatement;
	public fun getTimeout ()Ljava/lang/Integer;
	public final fun getWasGeneratedKeysRequested ()Z
	public fun set (ILjava/lang/Object;)V
	public fun setArray (ILorg/jetbrains/exposed/v1/core/ArrayColumnType;[Ljava/lang/Object;)V
	public fun setFetchSize (Ljava/lang/Integer;)V
	public fun setInputStream (ILjava/io/InputStream;Z)V
	public fun setNull (ILorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun setTimeout (Ljava/lang/Integer;)V
}

public final class org/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcResult : org/jetbrains/exposed/v1/core/statements/api/ResultApi, org/jetbrains/exposed/v1/core/statements/api/RowApi {
	public fun <init> (Ljava/sql/ResultSet;)V
	public fun close ()V
	public fun getObject (I)Ljava/lang/Object;
	public fun getObject (ILjava/lang/Class;)Ljava/lang/Object;
	public fun getObject (Ljava/lang/String;)Ljava/lang/Object;
	public fun getObject (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public final fun getResult ()Ljava/sql/ResultSet;
	public fun mapRows (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
	public final fun next ()Z
	public final fun releaseResult ()V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/jdbc/statements/jdbc/JdbcSavepoint : org/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint {
	public fun <init> (Ljava/lang/String;Ljava/sql/Savepoint;)V
}

public abstract interface class org/jetbrains/exposed/v1/jdbc/transactions/JdbcTransactionInterface : org/jetbrains/exposed/v1/core/transactions/TransactionInterface {
	public abstract fun close ()V
	public abstract fun commit ()V
	public abstract fun getConnection ()Lorg/jetbrains/exposed/v1/jdbc/statements/api/ExposedConnection;
	public abstract fun getDb ()Lorg/jetbrains/exposed/v1/jdbc/Database;
	public abstract fun getOuterTransaction ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public abstract fun getTransactionIsolation ()I
	public abstract fun rollback ()V
}

public final class org/jetbrains/exposed/v1/jdbc/transactions/JdbcTransactionInterfaceKt {
	public static final fun getTransactionManager (Lorg/jetbrains/exposed/v1/jdbc/Database;)Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager;
}

public final class org/jetbrains/exposed/v1/jdbc/transactions/ThreadLocalTransactionManager : org/jetbrains/exposed/v1/core/transactions/TransactionManagerApi {
	public fun <init> (Lorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bindTransactionToThread (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public synthetic fun currentOrNull ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public fun currentOrNull ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final fun getDefaultIsolationLevel ()I
	public fun getDefaultMaxAttempts ()I
	public fun getDefaultMaxRetryDelay ()J
	public fun getDefaultMinRetryDelay ()J
	public fun getDefaultReadOnly ()Z
	public final fun getThreadLocal ()Ljava/lang/ThreadLocal;
	public final fun newTransaction (IZLorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public static synthetic fun newTransaction$default (Lorg/jetbrains/exposed/v1/jdbc/transactions/ThreadLocalTransactionManager;IZLorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final synthetic fun setDefaultIsolationLevel (I)V
	public fun setDefaultMaxAttempts (I)V
	public fun setDefaultMaxRetryDelay (J)V
	public fun setDefaultMinRetryDelay (J)V
	public fun setDefaultReadOnly (Z)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/jdbc/transactions/TransactionManager : org/jetbrains/exposed/v1/core/transactions/TransactionManagerApi {
	public static final field Companion Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bindTransactionToThread (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public synthetic fun currentOrNull ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public fun currentOrNull ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final fun getDefaultIsolationLevel ()I
	public fun getDefaultMaxAttempts ()I
	public fun getDefaultMaxRetryDelay ()J
	public fun getDefaultMinRetryDelay ()J
	public fun getDefaultReadOnly ()Z
	public final fun getThreadLocal ()Ljava/lang/ThreadLocal;
	public final fun newTransaction (IZLorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public static synthetic fun newTransaction$default (Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager;IZLorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final fun setDefaultIsolationLevel (I)V
	public fun setDefaultMaxAttempts (I)V
	public fun setDefaultMaxRetryDelay (J)V
	public fun setDefaultMinRetryDelay (J)V
	public fun setDefaultReadOnly (Z)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/jdbc/transactions/TransactionManager$Companion {
	public final fun closeAndUnregister (Lorg/jetbrains/exposed/v1/jdbc/Database;)V
	public final fun current ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final fun currentOrNew (I)Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final fun currentOrNull ()Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;
	public final fun getDefaultDatabase ()Lorg/jetbrains/exposed/v1/jdbc/Database;
	public final fun getManager ()Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager;
	public final fun isInitialized ()Z
	public final fun managerFor (Lorg/jetbrains/exposed/v1/jdbc/Database;)Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager;
	public final fun registerManager (Lorg/jetbrains/exposed/v1/jdbc/Database;Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager;)V
	public final fun resetCurrent (Lorg/jetbrains/exposed/v1/jdbc/transactions/TransactionManager;)V
	public final fun setDefaultDatabase (Lorg/jetbrains/exposed/v1/jdbc/Database;)V
}

public final class org/jetbrains/exposed/v1/jdbc/transactions/TransactionManagerKt {
	public static final fun inTopLevelTransaction (IZLorg/jetbrains/exposed/v1/jdbc/Database;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun inTopLevelTransaction$default (IZLorg/jetbrains/exposed/v1/jdbc/Database;Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun transaction (IZLorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun transaction (Lorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun transaction$default (IZLorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun transaction$default (Lorg/jetbrains/exposed/v1/jdbc/Database;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/jdbc/transactions/experimental/SuspendedKt {
	public static final fun newSuspendedTransaction (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/v1/jdbc/Database;Ljava/lang/Integer;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun newSuspendedTransaction$default (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/v1/jdbc/Database;Ljava/lang/Integer;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun suspendedTransactionAsync (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/v1/jdbc/Database;Ljava/lang/Integer;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun suspendedTransactionAsync$default (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/v1/jdbc/Database;Ljava/lang/Integer;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun withSuspendTransaction (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun withSuspendTransaction$default (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
	public final fun allTablesNames ()Ljava/util/List;
	public final fun allTablesNamesInAllSchemas ()Ljava/util/List;
	public final fun catalog (Lorg/jetbrains/exposed/v1/jdbc/JdbcTransaction;)Ljava/lang/String;
	public final fun columnConstraints ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public final fun existingCheckConstraints ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public fun existingIndices ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public final fun existingPrimaryKeys ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public final fun existingSequences ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	protected fun fillConstraintCacheForTables (Ljava/util/List;)V
	protected final fun getAllTableNamesCache ()Ljava/util/Map;
	public final fun getAllTablesNames ()Ljava/util/List;
	protected final fun getColumnConstraintsCache ()Ljava/util/Map;
	public final fun getDatabase ()Ljava/lang/String;
	protected fun metadataMatchesTable (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Table;)Z
	public final fun resetCaches ()V
	public final fun resetSchemaCaches ()V
	public final fun schemaExists (Lorg/jetbrains/exposed/v1/core/Schema;)Z
	public final fun sequenceExists (Lorg/jetbrains/exposed/v1/core/Sequence;)Z
	public final fun sequences ()Ljava/util/List;
	public fun supportsLimitWithUpdateOrDelete ()Z
	public final fun tableColumns ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
	public final fun tableExists (Lorg/jetbrains/exposed/v1/core/Table;)Z
}

public final class org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadataKt {
	public static final fun getCurrentDialectMetadata ()Lorg/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata;
}

public class org/jetbrains/exposed/v1/jdbc/vendors/H2DialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
	public fun existingIndices ([Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Map;
}

public class org/jetbrains/exposed/v1/jdbc/vendors/MariaDBDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/MysqlDialectMetadata {
	public fun <init> ()V
}

public class org/jetbrains/exposed/v1/jdbc/vendors/MysqlDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
	protected fun metadataMatchesTable (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Table;)Z
}

public class org/jetbrains/exposed/v1/jdbc/vendors/OracleDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
}

public class org/jetbrains/exposed/v1/jdbc/vendors/PostgreSQLDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
	public fun supportsLimitWithUpdateOrDelete ()Z
}

public final class org/jetbrains/exposed/v1/jdbc/vendors/PostgreSQLNGDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/PostgreSQLDialectMetadata {
	public fun <init> ()V
}

public class org/jetbrains/exposed/v1/jdbc/vendors/SQLServerDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
}

public class org/jetbrains/exposed/v1/jdbc/vendors/SQLiteDialectMetadata : org/jetbrains/exposed/v1/jdbc/vendors/DatabaseDialectMetadata {
	public fun <init> ()V
	public fun supportsLimitWithUpdateOrDelete ()Z
}

