[versions]
kotlin = "1.9.21"
detekt = "1.23.5"
binary-compatibility-validator = "0.14.0"
docker-compose = "0.17.5"
kotlinCoroutines = "1.8.0"
kotlinxSerialization = "1.6.3"

slf4j = "2.0.9"
log4j2 = "2.23.1"

h2 = "1.4.200"
h2_v2 = "2.2.224"
mariaDB_v2 = "2.7.9"
mariaDB_v3 = "3.3.1"
mysql51 = "5.1.49"
mysql80 = "8.0.33"
oracle12 = "12.2.0.1"
postgre = "42.7.3"
postgreNG = "0.8.9"
sqlLite3 = "3.45.2.0"
sqlserver = "9.4.1.jre8"

springFramework = "6.1.5"
springBoot = "3.2.0"

spring-security-crypto = "6.2.1"
joda-time = "2.12.7"
junit = "4.13.2"
kotlinx-datetime = "0.5.0"
javax-money = "1.1"
moneta = "1.4.4"
hikariCP = "4.0.3"
logcaptor = "2.9.2"

[libraries]
jvm = { group = "org.jetbrains.kotlin.jvm", name = "org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
docker-compose = { group = "com.avast.gradle", name = "gradle-docker-compose-plugin", version.ref = "docker-compose" }
detekt = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }

kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlinx-coroutines-debug = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-debug", version.ref = "kotlinCoroutines" }
kotlinx-jvm-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime-jvm", version.ref = "kotlinx-datetime" }
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
spring-security-crypto = { group = "org.springframework.security", name = "spring-security-crypto", version.ref = "spring-security-crypto" }
joda-time = { group = "joda-time", name = "joda-time", version.ref = "joda-time" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
javax-money = { group = "javax.money", name = "money-api", version.ref = "javax-money" }
moneta = { group = "org.javamoney", name = "moneta", version.ref = "moneta" }

spring-boot-starter-data-jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-jdbc", version.ref = "springBoot" }
spring-boot-autoconfigure = { group = "org.springframework.boot", name = "spring-boot-autoconfigure", version.ref = "springBoot" }
spring-boot-configuration-processor = { group = "org.springframework.boot", name = "spring-boot-configuration-processor", version.ref = "springBoot" }
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "springBoot" }
spring-boot-starter-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "springBoot" }
spring-jdbc = { group = "org.springframework", name = "spring-jdbc", version.ref = "springFramework" }
spring-context = { group = "org.springframework", name = "spring-context", version.ref = "springFramework" }
spring-test = { group = "org.springframework", name = "spring-test", version.ref = "springFramework" }

h2 = { group = "com.h2database", name = "h2", version.ref = "h2_v2" }
h1 = { group = "com.h2database", name = "h2", version.ref = "h2" }

log4j-slf4j-impl = { group = "org.apache.logging.log4j", name = "log4j-slf4j-impl", version.ref = "log4j2" }
log4j-api = { group = "org.apache.logging.log4j", name = "log4j-api", version.ref = "log4j2" }
log4j-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j2" }

hikariCP = { group = "com.zaxxer", name = "HikariCP", version.ref = "hikariCP" }

mysql51 = { group = "mysql", name = "mysql-connector-java", version.ref = "mysql51" }
mysql = { group = "mysql", name = "mysql-connector-java", version.ref = "mysql80" }
pgjdbc-ng = { group = "com.impossibl.pgjdbc-ng", name = "pgjdbc-ng", version.ref = "postgreNG" }
postgre = { group = "org.postgresql", name = "postgresql", version.ref = "postgre" }
sqlite-jdbc = { group = "org.xerial", name = "sqlite-jdbc", version.ref = "sqlLite3" }
maria-db2 = { group = "org.mariadb.jdbc", name = "mariadb-java-client", version.ref = "mariaDB_v2" }
maria-db3 = { group = "org.mariadb.jdbc", name = "mariadb-java-client", version.ref = "mariaDB_v3" }
oracle12 = { group = "com.oracle.database.jdbc", name = "ojdbc8", version.ref = "oracle12" }
mssql = { group = "com.microsoft.sqlserver", name = "mssql-jdbc", version.ref = "sqlserver" }

logcaptor = { group = "io.github.hakky54", name = "logcaptor", version.ref = "logcaptor" }

[plugins]
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
binary-compatibility-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binary-compatibility-validator" }
docker-compose = { id = "com.avast.gradle.docker-compose", version.ref = "docker-compose" }
