public class org/jetbrains/exposed/dao/ColumnWithTransform {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun getCacheResult ()Z
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getToColumn ()Lkotlin/jvm/functions/Function1;
	public final fun getToReal ()Lkotlin/jvm/functions/Function1;
}

public final class org/jetbrains/exposed/dao/DaoEntityID : org/jetbrains/exposed/dao/id/EntityID {
	public fun <init> (Ljava/lang/Comparable;Lorg/jetbrains/exposed/dao/id/IdTable;)V
}

public final class org/jetbrains/exposed/dao/DaoEntityIDFactory : org/jetbrains/exposed/dao/id/EntityIDFactory {
	public fun <init> ()V
	public fun createEntityID (Ljava/lang/Comparable;Lorg/jetbrains/exposed/dao/id/IdTable;)Lorg/jetbrains/exposed/dao/id/EntityID;
}

public class org/jetbrains/exposed/dao/Entity {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/EntityID;)V
	public fun delete ()V
	public fun flush (Lorg/jetbrains/exposed/dao/EntityBatchUpdate;)Z
	public static synthetic fun flush$default (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/dao/EntityBatchUpdate;ILjava/lang/Object;)Z
	public final fun getDb ()Lorg/jetbrains/exposed/sql/Database;
	public final fun getId ()Lorg/jetbrains/exposed/dao/id/EntityID;
	public final fun getKlass ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getReadValues ()Lorg/jetbrains/exposed/sql/ResultRow;
	public final fun getValue (Lorg/jetbrains/exposed/dao/ColumnWithTransform;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getValue (Lorg/jetbrains/exposed/dao/OptionalReference;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun getValue (Lorg/jetbrains/exposed/dao/Reference;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun getValue (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getValue (Lorg/jetbrains/exposed/sql/CompositeColumn;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getWriteValues ()Ljava/util/LinkedHashMap;
	public final fun get_readValues ()Lorg/jetbrains/exposed/sql/ResultRow;
	public final fun lookup (Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/Object;
	public final fun lookupInReadValues (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun refresh (Z)V
	public static synthetic fun refresh$default (Lorg/jetbrains/exposed/dao/Entity;ZILjava/lang/Object;)V
	public final fun setValue (Lorg/jetbrains/exposed/dao/ColumnWithTransform;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public final fun setValue (Lorg/jetbrains/exposed/dao/OptionalReference;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun setValue (Lorg/jetbrains/exposed/dao/Reference;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun setValue (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public final fun setValue (Lorg/jetbrains/exposed/sql/CompositeColumn;Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public final fun set_readValues (Lorg/jetbrains/exposed/sql/ResultRow;)V
	public final fun storeWrittenValues ()V
	public final fun via (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/InnerTableLink;
	public final fun via (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Table;)Lorg/jetbrains/exposed/dao/InnerTableLink;
}

public final class org/jetbrains/exposed/dao/EntityBatchUpdate {
	public fun <init> (Lorg/jetbrains/exposed/dao/EntityClass;)V
	public final fun addBatch (Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun execute (Lorg/jetbrains/exposed/sql/Transaction;)I
	public final fun set (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/dao/EntityCache {
	public static final field Companion Lorg/jetbrains/exposed/dao/EntityCache$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/Transaction;)V
	public final fun clear (Z)V
	public static synthetic fun clear$default (Lorg/jetbrains/exposed/dao/EntityCache;ZILjava/lang/Object;)V
	public final fun clearReferrersCache ()V
	public final fun find (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/id/EntityID;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun findAll (Lorg/jetbrains/exposed/dao/EntityClass;)Ljava/util/Collection;
	public final fun flush ()V
	public final fun flush (Ljava/lang/Iterable;)V
	public final fun getData ()Ljava/util/LinkedHashMap;
	public final fun getMaxEntitiesToStore ()I
	public final fun getOrPutReferrers (Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun getReferrers (Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun remove (Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun scheduleInsert (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun scheduleUpdate (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun setMaxEntitiesToStore (I)V
	public final fun store (Lorg/jetbrains/exposed/dao/Entity;)V
	public final fun store (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/Entity;)V
}

public final class org/jetbrains/exposed/dao/EntityCache$Companion {
	public final fun invalidateGlobalCaches (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/dao/EntityCacheKt {
	public static final fun flushCache (Lorg/jetbrains/exposed/sql/Transaction;)Ljava/util/List;
	public static final fun getEntityCache (Lorg/jetbrains/exposed/sql/Transaction;)Lorg/jetbrains/exposed/dao/EntityCache;
}

public final class org/jetbrains/exposed/dao/EntityChange {
	public fun <init> (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/dao/EntityChangeType;Ljava/lang/String;)V
	public final fun component1 ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun component2 ()Lorg/jetbrains/exposed/dao/id/EntityID;
	public final fun component3 ()Lorg/jetbrains/exposed/dao/EntityChangeType;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/dao/EntityChangeType;Ljava/lang/String;)Lorg/jetbrains/exposed/dao/EntityChange;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/dao/EntityChange;Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/dao/EntityChangeType;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/dao/EntityChange;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChangeType ()Lorg/jetbrains/exposed/dao/EntityChangeType;
	public final fun getEntityClass ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getEntityId ()Lorg/jetbrains/exposed/dao/id/EntityID;
	public final fun getTransactionId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/dao/EntityChangeType : java/lang/Enum {
	public static final field Created Lorg/jetbrains/exposed/dao/EntityChangeType;
	public static final field Removed Lorg/jetbrains/exposed/dao/EntityChangeType;
	public static final field Updated Lorg/jetbrains/exposed/dao/EntityChangeType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/dao/EntityChangeType;
	public static fun values ()[Lorg/jetbrains/exposed/dao/EntityChangeType;
}

public abstract class org/jetbrains/exposed/dao/EntityClass {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun all ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun backReferencedOn (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;)Lkotlin/properties/ReadOnlyProperty;
	public final fun backReferencedOnOpt (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;)Lkotlin/properties/ReadOnlyProperty;
	public final fun count (Lorg/jetbrains/exposed/sql/Op;)J
	public static synthetic fun count$default (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Op;ILjava/lang/Object;)J
	protected fun createInstance (Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/sql/ResultRow;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun find (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun find (Lorg/jetbrains/exposed/sql/Op;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun findById (Ljava/lang/Comparable;)Lorg/jetbrains/exposed/dao/Entity;
	public fun findById (Lorg/jetbrains/exposed/dao/id/EntityID;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun findWithCacheCondition (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;
	public fun forEntityIds (Ljava/util/List;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun forIds (Ljava/util/List;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun get (Ljava/lang/Comparable;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun get (Lorg/jetbrains/exposed/dao/id/EntityID;)Lorg/jetbrains/exposed/dao/Entity;
	public fun getDependsOnColumns ()Ljava/util/List;
	public fun getDependsOnTables ()Lorg/jetbrains/exposed/sql/ColumnSet;
	public final fun getTable ()Lorg/jetbrains/exposed/dao/id/IdTable;
	public final fun isAssignableTo (Lorg/jetbrains/exposed/dao/EntityClass;)Z
	public final fun memoizedTransform (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/dao/ColumnWithTransform;
	public fun new (Ljava/lang/Comparable;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/dao/Entity;
	public fun new (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun optionalBackReferencedOn (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/OptionalBackReference;
	public final fun optionalBackReferencedOnOpt (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/OptionalBackReference;
	public final fun optionalReferencedOn (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/OptionalReference;
	public final fun optionalReferrersOn (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/OptionalReferrers;
	public final fun optionalReferrersOn (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;Z)Lorg/jetbrains/exposed/dao/OptionalReferrers;
	public static synthetic fun optionalReferrersOn$default (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;ZILjava/lang/Object;)Lorg/jetbrains/exposed/dao/OptionalReferrers;
	public final fun referencedOn (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/Reference;
	public final fun referrersOn (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/dao/Referrers;
	public final fun referrersOn (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;Z)Lorg/jetbrains/exposed/dao/Referrers;
	public final fun reload (Lorg/jetbrains/exposed/dao/Entity;Z)Lorg/jetbrains/exposed/dao/Entity;
	public static synthetic fun reload$default (Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/Entity;ZILjava/lang/Object;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun removeFromCache (Lorg/jetbrains/exposed/dao/Entity;)V
	public fun searchQuery (Lorg/jetbrains/exposed/sql/Op;)Lorg/jetbrains/exposed/sql/Query;
	public final fun testCache (Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;
	public final fun testCache (Lorg/jetbrains/exposed/dao/id/EntityID;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun transform (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/dao/ColumnWithTransform;
	public final fun view (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/dao/View;
	protected fun warmCache ()Lorg/jetbrains/exposed/dao/EntityCache;
	public final fun warmUpLinkedReferences (Ljava/util/List;Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Boolean;Z)Ljava/util/List;
	public static synthetic fun warmUpLinkedReferences$default (Lorg/jetbrains/exposed/dao/EntityClass;Ljava/util/List;Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Boolean;ZILjava/lang/Object;)Ljava/util/List;
	public final fun warmUpOptReferences (Ljava/util/List;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Boolean;)Ljava/util/List;
	public static synthetic fun warmUpOptReferences$default (Lorg/jetbrains/exposed/dao/EntityClass;Ljava/util/List;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Boolean;ILjava/lang/Object;)Ljava/util/List;
	public final fun warmUpReferences (Ljava/util/List;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Boolean;)Ljava/util/List;
	public static synthetic fun warmUpReferences$default (Lorg/jetbrains/exposed/dao/EntityClass;Ljava/util/List;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Boolean;ILjava/lang/Object;)Ljava/util/List;
	public final fun wrap (Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/sql/ResultRow;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun wrapRow (Lorg/jetbrains/exposed/sql/ResultRow;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun wrapRow (Lorg/jetbrains/exposed/sql/ResultRow;Lorg/jetbrains/exposed/sql/Alias;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun wrapRow (Lorg/jetbrains/exposed/sql/ResultRow;Lorg/jetbrains/exposed/sql/QueryAlias;)Lorg/jetbrains/exposed/dao/Entity;
	public final fun wrapRows (Lorg/jetbrains/exposed/sql/SizedIterable;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun wrapRows (Lorg/jetbrains/exposed/sql/SizedIterable;Lorg/jetbrains/exposed/sql/Alias;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun wrapRows (Lorg/jetbrains/exposed/sql/SizedIterable;Lorg/jetbrains/exposed/sql/QueryAlias;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/dao/EntityHook {
	public static final field INSTANCE Lorg/jetbrains/exposed/dao/EntityHook;
	public final fun subscribe (Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function1;
	public final fun unsubscribe (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/exposed/dao/EntityHookKt {
	public static final fun alertSubscribers (Lorg/jetbrains/exposed/sql/Transaction;)V
	public static final fun registerChange (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/dao/EntityChangeType;)V
	public static final fun registeredChanges (Lorg/jetbrains/exposed/sql/Transaction;)Ljava/util/List;
	public static final fun toEntity (Lorg/jetbrains/exposed/dao/EntityChange;)Lorg/jetbrains/exposed/dao/Entity;
	public static final fun toEntity (Lorg/jetbrains/exposed/dao/EntityChange;Lorg/jetbrains/exposed/dao/EntityClass;)Lorg/jetbrains/exposed/dao/Entity;
	public static final fun withHook (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/dao/EntityLifecycleInterceptor : org/jetbrains/exposed/sql/statements/GlobalStatementInterceptor {
	public fun <init> ()V
	public fun afterCommit (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun afterExecution (Lorg/jetbrains/exposed/sql/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public fun afterRollback (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun afterStatementPrepared (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public fun beforeCommit (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun beforeExecution (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/StatementContext;)V
	public fun beforeRollback (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun keepUserDataInTransactionStoreOnCommit (Ljava/util/Map;)Ljava/util/Map;
}

public abstract class org/jetbrains/exposed/dao/ImmutableCachedEntityClass : org/jetbrains/exposed/dao/ImmutableEntityClass {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun all ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun expireCache ()V
	public fun forceUpdateEntity (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)V
	protected final fun warmCache ()Lorg/jetbrains/exposed/dao/EntityCache;
}

public abstract class org/jetbrains/exposed/dao/ImmutableEntityClass : org/jetbrains/exposed/dao/EntityClass {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun forceUpdateEntity (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/dao/InnerTableLink : kotlin/properties/ReadWriteProperty {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/dao/EntityClass;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSourceColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun getTarget ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getTargetColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public synthetic fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/jetbrains/exposed/sql/SizedIterable;)V
}

public abstract class org/jetbrains/exposed/dao/IntEntity : org/jetbrains/exposed/dao/Entity {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/EntityID;)V
}

public abstract class org/jetbrains/exposed/dao/IntEntityClass : org/jetbrains/exposed/dao/EntityClass {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract class org/jetbrains/exposed/dao/LongEntity : org/jetbrains/exposed/dao/Entity {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/EntityID;)V
}

public abstract class org/jetbrains/exposed/dao/LongEntityClass : org/jetbrains/exposed/dao/EntityClass {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/dao/OptionalBackReference : kotlin/properties/ReadOnlyProperty {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/EntityClass;)V
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/dao/Entity;
}

public final class org/jetbrains/exposed/dao/OptionalReference {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/EntityClass;)V
	public final fun getFactory ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getReference ()Lorg/jetbrains/exposed/sql/Column;
}

public final class org/jetbrains/exposed/dao/OptionalReferrers : kotlin/properties/ReadOnlyProperty {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/EntityClass;Z)V
	public final fun getCache ()Z
	public final fun getFactory ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getReference ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/dao/Reference {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/EntityClass;)V
	public final fun getFactory ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getReference ()Lorg/jetbrains/exposed/sql/Column;
}

public final class org/jetbrains/exposed/dao/ReferencesKt {
	public static final fun load (Lorg/jetbrains/exposed/dao/Entity;[Lkotlin/reflect/KProperty1;)Lorg/jetbrains/exposed/dao/Entity;
	public static final fun with (Ljava/lang/Iterable;[Lkotlin/reflect/KProperty1;)Ljava/lang/Iterable;
}

public final class org/jetbrains/exposed/dao/Referrers : kotlin/properties/ReadOnlyProperty {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/dao/EntityClass;Z)V
	public final fun getCache ()Z
	public final fun getFactory ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getReference ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public abstract class org/jetbrains/exposed/dao/UUIDEntity : org/jetbrains/exposed/dao/Entity {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/EntityID;)V
}

public abstract class org/jetbrains/exposed/dao/UUIDEntityClass : org/jetbrains/exposed/dao/EntityClass {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/dao/View : org/jetbrains/exposed/sql/SizedIterable {
	public fun <init> (Lorg/jetbrains/exposed/sql/Op;Lorg/jetbrains/exposed/dao/EntityClass;)V
	public fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun getFactory ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getOp ()Lorg/jetbrains/exposed/sql/Op;
	public final fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (IJ)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/dao/exceptions/EntityNotFoundException : java/lang/Exception {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/dao/EntityClass;)V
	public final fun getEntity ()Lorg/jetbrains/exposed/dao/EntityClass;
	public final fun getId ()Lorg/jetbrains/exposed/dao/id/EntityID;
}

