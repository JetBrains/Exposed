<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Array" id="Array-types">
    <show-structure for="chapter" depth="2"/>
    <tldr>
        <p>
            <b>Required dependencies</b>: <code>org.jetbrains.exposed:exposed-core</code>
        </p>
    </tldr>
    <p>
        Exposed provides support for array data types, allowing you to store and manipulate arrays of various data
        types in your database. PostgreSQL and H2 databases support explicit array types, with PostgreSQL offering
        additional support for multidimensional arrays.
    </p>

    <chapter title="Supported types" id="supported-types">
        <p>
            The <code>exposed-core</code> module supports two main ways to define array columns using the
            <a href="https://jetbrains.github.io/Exposed/api/exposed-core/org.jetbrains.exposed.v1.sql/-table/array.html">
                <code>.array()</code>
            </a>
            function:
        </p>
        <list>
            <li>
                <p>Basic array definition using type inference for supported types:</p>
                <code-block lang="kotlin"
                            src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                            include-symbol="memberIds"
                />
            </li>
            <li>
                <p>Array definition with explicit column type for more control or custom types:</p>
                <code-block lang="kotlin"
                            src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                            include-symbol="deadlines"
                />
                Using explicit column types prevents exceptions when Exposed cannot automatically determine the
                appropriate mapping.
            </li>
        </list>
    </chapter>

    <chapter title="Basic usage" id="basic-usage">
        <p>
            Array columns store and retrieve data as Kotlin <code>List</code> objects, providing a natural way to
            work with array data in your code.
        </p>
        <p>You can define array columns within a table definition as follows:</p>
        <code-block lang="kotlin"
                    src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                    include-symbol="SimpleArrays, AdvancedArrays"
        />
        <p>Here's an example of inserting data into array columns:</p>
        <code-block lang="kotlin"
                    src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                    include-lines="63-67"
        />
    </chapter>
    <chapter title="Multidimensional arrays" id="multidimensional-arrays">
        <p>PostgreSQL supports multidimensional arrays, which can be defined using the <code>dimensions</code> parameter:</p>
        <code-block lang="kotlin"
                    src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                    include-symbol="MultiDimArrays"
        />
    </chapter>

    <chapter title="Array indexing" id="array-indexing">
        <p>To access individual elements, use index operators:</p>
        <code-block lang="kotlin"
                    src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                    include-lines="74-77"
        />
        <note>
            <p>Both PostgreSQL and H2 use one-based indexing, so the first element is at index 1.</p>
        </note>
    </chapter>

    <chapter title="Array slicing" id="array-slicing">
        <p>
            Use
            <a href="https://jetbrains.github.io/Exposed/api/exposed-core/org.jetbrains.exposed.v1.sql/slice.html">
                <code>.slice()</code>
            </a>
            to extract subarrays:
        </p>
        <code-block lang="kotlin"
                    src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                    include-lines="84"
        />
        <p>Both lower and upper bounds are optional when using PostgreSQL.</p>
    </chapter>

    <chapter title="ANY and ALL operators" id="any-all-operators">
        <p>Use array columns with SQL's <code>ANY</code> and <code>ALL</code> operators:</p>
        <code-block lang="kotlin"
                    src="exposed-data-types/src/main/kotlin/org/example/examples/ArrayExamples.kt"
                    include-lines="91-97"
        />
    </chapter>
</topic>
