public abstract class org/jetbrains/exposed/v1/core/AbstractQuery : org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (Ljava/util/List;)V
	public final fun adjustComments (Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public static synthetic fun adjustComments$default (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public final fun adjustHaving (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	public final fun comment (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public static synthetic fun comment$default (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun copyTo (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public final fun fetchSize (I)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public final fun getComments ()Ljava/util/Map;
	protected final fun getCount ()Z
	public final fun getDistinct ()Z
	public final fun getDistinctOn ()Ljava/util/List;
	public final fun getFetchSize ()Ljava/lang/Integer;
	protected final fun getForUpdate ()Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;
	public final fun getGroupedByColumns ()Ljava/util/List;
	public final fun getHaving ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getOffset ()J
	public final fun getOrderByExpressions ()Ljava/util/List;
	public abstract fun getSet ()Lorg/jetbrains/exposed/v1/core/FieldSet;
	public final fun getWhere ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun groupBy ([Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public final fun hasCustomForUpdateState ()Z
	public final fun having (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public final fun isForUpdate ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)Ljava/lang/String;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	protected final fun setCount (Z)V
	protected final fun setDistinct (Z)V
	protected final fun setDistinctOn (Ljava/util/List;)V
	protected final fun setForUpdate (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption;)V
	protected final fun setLimit (Ljava/lang/Integer;)V
	protected final fun setOffset (J)V
	protected final fun setWhere (Lorg/jetbrains/exposed/v1/core/Op;)V
	public fun withDistinct (Z)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public static synthetic fun withDistinct$default (Lorg/jetbrains/exposed/v1/core/AbstractQuery;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public final fun withDistinctOn ([Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/AbstractQuery;
}

public final class org/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition : java/lang/Enum {
	public static final field AFTER_SELECT Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;
	public static final field BACK Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;
	public static final field FRONT Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/AbstractQuery$CommentPosition;
}

public final class org/jetbrains/exposed/v1/core/Alias : org/jetbrains/exposed/v1/core/Table {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;)V
	public fun createStatement ()Ljava/lang/Void;
	public synthetic fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/lang/Void;
	public synthetic fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getAlias ()Ljava/lang/String;
	public fun getColumns ()Ljava/util/List;
	public final fun getDelegate ()Lorg/jetbrains/exposed/v1/core/Table;
	public fun getFields ()Ljava/util/List;
	public fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
	public fun getTableName ()Ljava/lang/String;
	public final fun getTableNameWithAlias ()Ljava/lang/String;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/lang/Void;
	public synthetic fun modifyStatement ()Ljava/util/List;
	public final fun originalColumn (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
}

public final class org/jetbrains/exposed/v1/core/AliasKt {
	public static final fun alias (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/QueryAlias;
	public static final fun alias (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ExpressionAlias;
	public static final fun alias (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnTypeAlias;
	public static final fun alias (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Alias;
	public static final fun getLastQueryAlias (Lorg/jetbrains/exposed/v1/core/Join;)Lorg/jetbrains/exposed/v1/core/QueryAlias;
	public static final fun joinQuery (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/v1/core/JoinType;ZLkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun joinQuery (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/v1/core/JoinType;ZLkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun joinQuery$default (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/v1/core/JoinType;ZLkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun joinQuery$default (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/v1/core/JoinType;ZLkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun wrapAsExpression (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/Expression;
}

public final class org/jetbrains/exposed/v1/core/AndBitOp : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/AndOp : org/jetbrains/exposed/v1/core/CompoundBooleanOp {
	public fun <init> (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/v1/core/ArrayColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/lang/Integer;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/util/List;I)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/util/List;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDelegate ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getDelegateType ()Ljava/lang/String;
	public final fun getDimensions ()I
	public final fun getMaximumCardinality ()Ljava/util/List;
	public synthetic fun nonNullValueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueAsDefaultString (Ljava/util/List;)Ljava/lang/String;
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Ljava/util/List;)Ljava/lang/String;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB (Ljava/util/List;)Ljava/lang/Object;
	public synthetic fun parameterMarker (Ljava/lang/Object;)Ljava/lang/String;
	public fun parameterMarker (Ljava/util/List;)Ljava/lang/String;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/util/List;
}

public final class org/jetbrains/exposed/v1/core/AutoIncColumnType : org/jetbrains/exposed/v1/core/IColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnType;Lorg/jetbrains/exposed/v1/core/Sequence;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoincSeq ()Ljava/lang/String;
	public final fun getDelegate ()Lorg/jetbrains/exposed/v1/core/ColumnType;
	public final fun getNextValExpression ()Lorg/jetbrains/exposed/v1/core/NextVal;
	public fun getNullable ()Z
	public final fun getSequence ()Lorg/jetbrains/exposed/v1/core/Sequence;
	public fun hashCode ()I
	public fun nonNullValueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun parameterMarker (Ljava/lang/Object;)Ljava/lang/String;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun setNullable (Z)V
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun valueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/Avg : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;I)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/BasicBinaryColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString ([B)Ljava/lang/String;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)[B
}

public final class org/jetbrains/exposed/v1/core/Between : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getFrom ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getTo ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract class org/jetbrains/exposed/v1/core/BiCompositeColumn : org/jetbrains/exposed/v1/core/CompositeColumn {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun getColumn1 ()Lorg/jetbrains/exposed/v1/core/Column;
	protected final fun getColumn2 ()Lorg/jetbrains/exposed/v1/core/Column;
	public fun getRealColumns ()Ljava/util/List;
	public fun getRealColumnsWithValues (Ljava/lang/Object;)Ljava/util/Map;
	public final fun getTransformFromValue ()Lkotlin/jvm/functions/Function1;
	public final fun getTransformToValue ()Lkotlin/jvm/functions/Function2;
	public fun restoreValueFromParts (Ljava/util/Map;)Ljava/lang/Object;
}

public class org/jetbrains/exposed/v1/core/BinaryColumnType : org/jetbrains/exposed/v1/core/BasicBinaryColumnType {
	public fun <init> (I)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLength ()I
	public fun hashCode ()I
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun validateValueBeforeUpdate ([B)V
}

public final class org/jetbrains/exposed/v1/core/BlobColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getUseObjectIdentifier ()Z
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedBlob;)Ljava/lang/String;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/api/ExposedBlob;
}

public final class org/jetbrains/exposed/v1/core/BooleanColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/BooleanColumnType$Companion;
	public fun <init> ()V
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Z)Ljava/lang/String;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB (Z)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Boolean;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/BooleanColumnType$Companion {
}

public final class org/jetbrains/exposed/v1/core/ByteColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Byte;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToDB (Ljava/lang/Byte;)Ljava/lang/Object;
	public synthetic fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/Case {
	public fun <init> ()V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun When (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/CaseWhen;
	public final fun getValue ()Lorg/jetbrains/exposed/v1/core/Expression;
}

public final class org/jetbrains/exposed/v1/core/CaseWhen {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun Else (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun When (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/CaseWhen;
	public final fun getCases ()Ljava/util/List;
	public final fun getValue ()Lorg/jetbrains/exposed/v1/core/Expression;
}

public final class org/jetbrains/exposed/v1/core/CaseWhenElse : org/jetbrains/exposed/v1/core/ExpressionWithColumnType, org/jetbrains/exposed/v1/core/ComplexExpression {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/CaseWhen;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getCaseWhen ()Lorg/jetbrains/exposed/v1/core/CaseWhen;
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getElseResult ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Cast : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/CharColumnType : org/jetbrains/exposed/v1/core/StringColumnType {
	public fun <init> ()V
	public fun <init> (ILjava/lang/String;)V
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColLength ()I
	public fun hashCode ()I
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun validateValueBeforeUpdate (Ljava/lang/String;)V
}

public final class org/jetbrains/exposed/v1/core/CharLength : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/CharacterColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun nonNullValueToString (C)Ljava/lang/String;
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (C)Ljava/lang/Object;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Character;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/CheckConstraint : org/jetbrains/exposed/v1/core/DdlAware {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/CheckConstraint$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/CheckConstraint;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/CheckConstraint;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/CheckConstraint;
	public fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCheckName ()Ljava/lang/String;
	public final fun getCheckOp ()Ljava/lang/String;
	public fun getDdl ()Ljava/util/List;
	public final fun getTableName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/CheckConstraint$Companion {
	public final fun from (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Op;)Lorg/jetbrains/exposed/v1/core/CheckConstraint;
}

public final class org/jetbrains/exposed/v1/core/Coalesce : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;[Lorg/jetbrains/exposed/v1/core/Expression;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Column : org/jetbrains/exposed/v1/core/ExpressionWithColumnType, java/lang/Comparable, org/jetbrains/exposed/v1/core/DdlAware {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/exposed/v1/core/Column;)I
	public fun createStatement ()Ljava/util/List;
	public final fun defaultValueInDb ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun descriptionDdl (Z)Ljava/lang/String;
	public static synthetic fun descriptionDdl$default (Lorg/jetbrains/exposed/v1/core/Column;ZILjava/lang/Object;)Ljava/lang/String;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public fun getDdl ()Ljava/util/List;
	public final fun getDefaultValueFun ()Lkotlin/jvm/functions/Function0;
	public final fun getForeignKey ()Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;
	public final fun getName ()Ljava/lang/String;
	public final fun getReferee ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public fun hashCode ()I
	public final fun isDatabaseGenerated ()Z
	public fun modifyStatement ()Ljava/util/List;
	public final fun modifyStatements (Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public final fun nameInDatabaseCase ()Ljava/lang/String;
	public final fun nameUnquoted ()Ljava/lang/String;
	public final fun referee ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun setDefaultValueFun (Lkotlin/jvm/functions/Function0;)V
	public final fun setForeignKey (Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun toString ()Ljava/lang/String;
	public final fun withColumnType (Lorg/jetbrains/exposed/v1/core/IColumnType;)Lorg/jetbrains/exposed/v1/core/Column;
}

public final class org/jetbrains/exposed/v1/core/ColumnDiff {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/ColumnDiff$Companion;
	public fun <init> (ZZZZZZ)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun copy (ZZZZZZ)Lorg/jetbrains/exposed/v1/core/ColumnDiff;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/ColumnDiff;ZZZZZZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/ColumnDiff;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoInc ()Z
	public final fun getCaseSensitiveName ()Z
	public final fun getDefaults ()Z
	public final fun getNullability ()Z
	public final fun getSizeAndScale ()Z
	public final fun getType ()Z
	public final fun hasDifferences ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/ColumnDiff$Companion {
	public final fun getAllChanged ()Lorg/jetbrains/exposed/v1/core/ColumnDiff;
	public final fun getNoneChanged ()Lorg/jetbrains/exposed/v1/core/ColumnDiff;
}

public abstract class org/jetbrains/exposed/v1/core/ColumnSet : org/jetbrains/exposed/v1/core/FieldSet {
	public fun <init> ()V
	public abstract fun crossJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public abstract fun describe (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public abstract fun fullJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public abstract fun getColumns ()Ljava/util/List;
	public fun getFields ()Ljava/util/List;
	public fun getRealFields ()Ljava/util/List;
	public fun getSource ()Lorg/jetbrains/exposed/v1/core/ColumnSet;
	public abstract fun innerJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public abstract fun join (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun join$default (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public abstract fun leftJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public abstract fun rightJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
}

public abstract interface class org/jetbrains/exposed/v1/core/ColumnTransformer {
	public abstract fun unwrap (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun wrap (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/jetbrains/exposed/v1/core/ColumnType : org/jetbrains/exposed/v1/core/IColumnType {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getNullable ()Z
	public fun hashCode ()I
	public fun nonNullValueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun parameterMarker (Ljava/lang/Object;)Ljava/lang/String;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun setNullable (Z)V
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun valueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/ColumnTypeKt {
	public static final fun columnTransformer (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/ColumnTransformer;
	public static final fun getAutoIncColumnType (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/AutoIncColumnType;
	public static final fun isAutoInc (Lorg/jetbrains/exposed/v1/core/IColumnType;)Z
	public static final fun resolveColumnType (Lkotlin/reflect/KClass;Lorg/jetbrains/exposed/v1/core/ColumnType;)Lorg/jetbrains/exposed/v1/core/ColumnType;
	public static synthetic fun resolveColumnType$default (Lkotlin/reflect/KClass;Lorg/jetbrains/exposed/v1/core/ColumnType;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/ColumnType;
}

public class org/jetbrains/exposed/v1/core/ColumnWithTransform : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/ColumnTransformer;)V
	public final fun getDelegate ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public fun getNullable ()Z
	public final fun getOriginalColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getTransformer ()Lorg/jetbrains/exposed/v1/core/ColumnTransformer;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun parameterMarker (Ljava/lang/Object;)Ljava/lang/String;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun setNullable (Z)V
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public fun unwrapRecursive (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/jetbrains/exposed/v1/core/ComparisonOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)V
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getOpSign ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/ComplexExpression {
}

public abstract class org/jetbrains/exposed/v1/core/CompositeColumn : org/jetbrains/exposed/v1/core/Expression {
	public fun <init> ()V
	public abstract fun getRealColumns ()Ljava/util/List;
	public abstract fun getRealColumnsWithValues (Ljava/lang/Object;)Ljava/util/Map;
	public abstract fun restoreValueFromParts (Ljava/util/Map;)Ljava/lang/Object;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/CompositeSqlLogger : org/jetbrains/exposed/v1/core/SqlLogger, org/jetbrains/exposed/v1/core/statements/StatementInterceptor {
	public fun <init> ()V
	public final fun addLogger (Lorg/jetbrains/exposed/v1/core/SqlLogger;)V
	public fun afterCommit (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public fun afterExecution (Lorg/jetbrains/exposed/v1/core/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public fun afterRollback (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public fun afterStatementPrepared (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public fun beforeCommit (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public fun beforeExecution (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/StatementContext;)V
	public fun beforeRollback (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public fun keepUserDataInTransactionStoreOnCommit (Ljava/util/Map;)Ljava/util/Map;
	public fun log (Lorg/jetbrains/exposed/v1/core/statements/StatementContext;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public final fun removeLogger (Lorg/jetbrains/exposed/v1/core/SqlLogger;)V
}

public abstract class org/jetbrains/exposed/v1/core/CompoundBooleanOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Concat : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()[Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getSeparator ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Count : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDistinct ()Z
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/CumeDist : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/CurrentOrFollowing : org/jetbrains/exposed/v1/core/WindowFrameBound {
}

public abstract interface class org/jetbrains/exposed/v1/core/CurrentOrPreceding : org/jetbrains/exposed/v1/core/WindowFrameBound {
}

public final class org/jetbrains/exposed/v1/core/CurrentRowWindowFrameBound : org/jetbrains/exposed/v1/core/CurrentOrFollowing, org/jetbrains/exposed/v1/core/CurrentOrPreceding, org/jetbrains/exposed/v1/core/WindowFrameBound {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/CurrentRowWindowFrameBound;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/CustomEnumerationColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/CustomEnumerationColumnType$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public final fun getFromDb ()Lkotlin/jvm/functions/Function1;
	public final fun getName ()Ljava/lang/String;
	public final fun getSql ()Ljava/lang/String;
	public final fun getToDb ()Lkotlin/jvm/functions/Function1;
	public fun nonNullValueToString (Ljava/lang/Enum;)Ljava/lang/String;
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Enum;)Ljava/lang/Object;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Enum;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/CustomEnumerationColumnType$Companion {
}

public class org/jetbrains/exposed/v1/core/CustomFunction : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/IColumnType;[Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()[Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getFunctionName ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/CustomOperator : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getOperatorName ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract class org/jetbrains/exposed/v1/core/DatabaseApi {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/DatabaseApi$Companion;
	protected fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/DatabaseConfig;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfig ()Lorg/jetbrains/exposed/v1/core/DatabaseConfig;
	public final fun getDefaultFetchSize ()Ljava/lang/Integer;
	public abstract fun getDialect ()Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;
	public abstract fun getDialectMode ()Ljava/lang/String;
	public abstract fun getFullVersion ()Ljava/lang/String;
	public abstract fun getIdentifierManager ()Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi;
	protected final fun getResolvedVendor ()Ljava/lang/String;
	public abstract fun getSupportsAlterTableWithAddColumn ()Z
	public abstract fun getSupportsAlterTableWithDropColumn ()Z
	public abstract fun getSupportsMultipleResultSets ()Z
	public abstract fun getUrl ()Ljava/lang/String;
	public final fun getUseNestedTransactions ()Z
	public abstract fun getVendor ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/math/BigDecimal;
	public abstract fun isVersionCovers (II)Z
	public abstract fun isVersionCovers (Ljava/math/BigDecimal;)Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/DatabaseApi$Companion {
	public final fun getDialects ()Ljava/util/concurrent/ConcurrentHashMap;
	public final fun registerDialect (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/DatabaseConfig {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/DatabaseConfig$Companion;
	public abstract fun getDefaultFetchSize ()Ljava/lang/Integer;
	public abstract fun getDefaultIsolationLevel ()I
	public abstract fun getDefaultMaxAttempts ()I
	public abstract fun getDefaultMaxRetryDelay ()J
	public abstract fun getDefaultMinRetryDelay ()J
	public abstract fun getDefaultReadOnly ()Z
	public abstract fun getDefaultSchema ()Lorg/jetbrains/exposed/v1/core/Schema;
	public abstract fun getExplicitDialect ()Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;
	public abstract fun getKeepLoadedReferencesOutOfTransaction ()Z
	public abstract fun getLogTooMuchResultSetsThreshold ()I
	public abstract fun getMaxEntitiesToStoreInCachePerEntity ()I
	public abstract fun getPreserveKeywordCasing ()Z
	public abstract fun getSqlLogger ()Lorg/jetbrains/exposed/v1/core/SqlLogger;
	public abstract fun getUseNestedTransactions ()Z
	public abstract fun getWarnLongQueriesDuration ()Ljava/lang/Long;
}

public class org/jetbrains/exposed/v1/core/DatabaseConfig$Builder {
	public fun <init> ()V
	public final fun getDefaultFetchSize ()Ljava/lang/Integer;
	public fun getDefaultIsolationLevel ()I
	public final fun getDefaultMaxAttempts ()I
	public final fun getDefaultMaxRetryDelay ()J
	public final fun getDefaultMinRetryDelay ()J
	public final fun getDefaultReadOnly ()Z
	public final fun getDefaultSchema ()Lorg/jetbrains/exposed/v1/core/Schema;
	public final fun getExplicitDialect ()Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;
	public final fun getKeepLoadedReferencesOutOfTransaction ()Z
	public final fun getLogTooMuchResultSetsThreshold ()I
	public final fun getMaxEntitiesToStoreInCachePerEntity ()I
	public final fun getPreserveKeywordCasing ()Z
	public final fun getSqlLogger ()Lorg/jetbrains/exposed/v1/core/SqlLogger;
	public final fun getUseNestedTransactions ()Z
	public final fun getWarnLongQueriesDuration ()Ljava/lang/Long;
	public final fun setDefaultFetchSize (Ljava/lang/Integer;)V
	public fun setDefaultIsolationLevel (I)V
	public final fun setDefaultMaxAttempts (I)V
	public final fun setDefaultMaxRetryDelay (J)V
	public final fun setDefaultMinRetryDelay (J)V
	public final fun setDefaultReadOnly (Z)V
	public final fun setDefaultSchema (Lorg/jetbrains/exposed/v1/core/Schema;)V
	public final fun setExplicitDialect (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)V
	public final fun setKeepLoadedReferencesOutOfTransaction (Z)V
	public final fun setLogTooMuchResultSetsThreshold (I)V
	public final fun setMaxEntitiesToStoreInCachePerEntity (I)V
	public final fun setPreserveKeywordCasing (Z)V
	public final fun setSqlLogger (Lorg/jetbrains/exposed/v1/core/SqlLogger;)V
	public final fun setUseNestedTransactions (Z)V
	public final fun setWarnLongQueriesDuration (Ljava/lang/Long;)V
}

public final class org/jetbrains/exposed/v1/core/DatabaseConfig$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/DatabaseConfig;
	public static synthetic fun invoke$default (Lorg/jetbrains/exposed/v1/core/DatabaseConfig$Companion;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/DatabaseConfig;
}

public abstract interface class org/jetbrains/exposed/v1/core/DdlAware {
	public abstract fun createStatement ()Ljava/util/List;
	public abstract fun dropStatement ()Ljava/util/List;
	public abstract fun getDdl ()Ljava/util/List;
	public abstract fun modifyStatement ()Ljava/util/List;
}

public final class org/jetbrains/exposed/v1/core/DdlAware$DefaultImpls {
	public static fun getDdl (Lorg/jetbrains/exposed/v1/core/DdlAware;)Ljava/util/List;
}

public final class org/jetbrains/exposed/v1/core/DecimalColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/DecimalColumnType$Companion;
	public fun <init> (II)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPrecision ()I
	public final fun getScale ()I
	public fun hashCode ()I
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/math/BigDecimal;
}

public final class org/jetbrains/exposed/v1/core/DecimalColumnType$Companion {
}

public final class org/jetbrains/exposed/v1/core/DenseRank : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> ()V
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/DivideOp : org/jetbrains/exposed/v1/core/CustomOperator {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/DivideOp$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/DivideOp$Companion {
	public final fun withScale (Lorg/jetbrains/exposed/v1/core/DivideOp;I)Lorg/jetbrains/exposed/v1/core/DivideOp;
}

public final class org/jetbrains/exposed/v1/core/DoubleColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun nonNullValueAsDefaultString (D)Ljava/lang/String;
	public synthetic fun nonNullValueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Double;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/EntityIDColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Column;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdColumn ()Lorg/jetbrains/exposed/v1/core/Column;
	public fun hashCode ()I
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;)Ljava/lang/String;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB (Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;)Ljava/lang/Object;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;
}

public final class org/jetbrains/exposed/v1/core/EnumerationColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKlass ()Lkotlin/reflect/KClass;
	public fun hashCode ()I
	public fun notNullValueToDB (Ljava/lang/Enum;)Ljava/lang/Integer;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Enum;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/EnumerationNameColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/EnumerationNameColumnType$Companion;
	public fun <init> (Lkotlin/reflect/KClass;I)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColLength ()I
	public final fun getKlass ()Lkotlin/reflect/KClass;
	public fun hashCode ()I
	public fun nonNullValueToString (Ljava/lang/Enum;)Ljava/lang/String;
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Enum;)Ljava/lang/Object;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Enum;)V
	public synthetic fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Enum;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/EnumerationNameColumnType$Companion {
}

public final class org/jetbrains/exposed/v1/core/EqOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/EqSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/Exists : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public final fun getQuery ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface annotation class org/jetbrains/exposed/v1/core/ExperimentalDatabaseMigrationApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class org/jetbrains/exposed/v1/core/ExperimentalKeywordApi : java/lang/annotation/Annotation {
}

public class org/jetbrains/exposed/v1/core/ExplainQuery : org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (ZLjava/lang/String;Lorg/jetbrains/exposed/v1/core/statements/Statement;)V
	public fun arguments ()Ljava/lang/Iterable;
	public final fun getAnalyze ()Z
	public final fun getOptions ()Ljava/lang/String;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/ExplainResultRow {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/ExplainResultRow$Companion;
	public fun <init> (Ljava/util/Map;[Ljava/lang/Object;)V
	public final fun getFieldIndex ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/ExplainResultRow$Companion {
	public final fun create (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;Ljava/util/Map;)Lorg/jetbrains/exposed/v1/core/ExplainResultRow;
}

public abstract class org/jetbrains/exposed/v1/core/Expression {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/Expression$Companion;
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public abstract fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/Expression$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Expression;
}

public final class org/jetbrains/exposed/v1/core/ExpressionAlias : org/jetbrains/exposed/v1/core/Expression, org/jetbrains/exposed/v1/core/IExpressionAlias {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)V
	public fun aliasOnlyExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun getAlias ()Ljava/lang/String;
	public fun getDelegate ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun queryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ExpressionKt {
	public static final fun append (Lorg/jetbrains/exposed/v1/core/QueryBuilder;[Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public static final fun appendTo (Ljava/lang/Iterable;Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public static synthetic fun appendTo$default (Ljava/lang/Iterable;Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
}

public abstract class org/jetbrains/exposed/v1/core/ExpressionWithColumnType : org/jetbrains/exposed/v1/core/Expression {
	public fun <init> ()V
	public abstract fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
}

public final class org/jetbrains/exposed/v1/core/ExpressionWithColumnTypeAlias : org/jetbrains/exposed/v1/core/ExpressionWithColumnType, org/jetbrains/exposed/v1/core/IExpressionAlias {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/String;)V
	public fun aliasOnlyExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun getAlias ()Ljava/lang/String;
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public synthetic fun getDelegate ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun getDelegate ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun queryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/FieldSet {
	public abstract fun getFields ()Ljava/util/List;
	public abstract fun getRealFields ()Ljava/util/List;
	public abstract fun getSource ()Lorg/jetbrains/exposed/v1/core/ColumnSet;
}

public final class org/jetbrains/exposed/v1/core/FieldSet$DefaultImpls {
	public static fun getRealFields (Lorg/jetbrains/exposed/v1/core/FieldSet;)Ljava/util/List;
}

public final class org/jetbrains/exposed/v1/core/FirstValue : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/FloatColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun nonNullValueAsDefaultString (F)Ljava/lang/String;
	public synthetic fun nonNullValueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Float;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/ForeignKeyConstraint : org/jetbrains/exposed/v1/core/DdlAware {
	public fun <init> (Ljava/util/Map;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;Ljava/util/Map;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;
	public fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustomFkName ()Ljava/lang/String;
	public fun getDdl ()Ljava/util/List;
	public final fun getDeleteRule ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public final fun getFkName ()Ljava/lang/String;
	public final fun getFrom ()Ljava/util/LinkedHashSet;
	public final fun getFromTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun getFromTableName ()Ljava/lang/String;
	public final fun getReferences ()Ljava/util/Map;
	public final fun getTarget ()Ljava/util/LinkedHashSet;
	public final fun getTargetTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun getTargetTableName ()Ljava/lang/String;
	public final fun getUpdateRule ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public final fun plus (Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;)Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;
	public final fun targetOf (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/Function : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
}

public final class org/jetbrains/exposed/v1/core/GreaterEqOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/GreaterEqSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/GreaterOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/GreaterSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/GroupConcat : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Z[Lkotlin/Pair;)V
	public final fun getDistinct ()Z
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getOrderBy ()[Lkotlin/Pair;
	public final fun getSeparator ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/IColumnType {
	public abstract fun getNullable ()Z
	public abstract fun nonNullValueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public abstract fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public abstract fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun parameterMarker (Ljava/lang/Object;)Ljava/lang/String;
	public abstract fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public abstract fun setNullable (Z)V
	public abstract fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public abstract fun sqlType ()Ljava/lang/String;
	public abstract fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public abstract fun valueAsDefaultString (Ljava/lang/Object;)Ljava/lang/String;
	public abstract fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/IColumnType$DefaultImpls {
	public static fun nonNullValueAsDefaultString (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
	public static fun nonNullValueToString (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
	public static fun notNullValueToDB (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun parameterMarker (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
	public static fun readObject (Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public static fun setParameter (Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public static fun validateValueBeforeUpdate (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)V
	public static fun valueAsDefaultString (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
	public static fun valueToDB (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun valueToString (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/v1/core/IDateColumnType {
	public abstract fun getHasTimePart ()Z
}

public abstract interface class org/jetbrains/exposed/v1/core/IExpressionAlias {
	public abstract fun aliasOnlyExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public abstract fun getAlias ()Ljava/lang/String;
	public abstract fun getDelegate ()Lorg/jetbrains/exposed/v1/core/Expression;
	public abstract fun queryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/IExpressionAlias$DefaultImpls {
	public static fun aliasOnlyExpression (Lorg/jetbrains/exposed/v1/core/IExpressionAlias;)Lorg/jetbrains/exposed/v1/core/Expression;
	public static fun queryBuilder (Lorg/jetbrains/exposed/v1/core/IExpressionAlias;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/ISqlExpressionBuilder {
	public abstract fun asLiteral (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public abstract fun between (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Between;
	public abstract fun between (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Between;
	public abstract fun bitwiseAnd (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/AndBitOp;
	public abstract fun bitwiseAnd (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/AndBitOp;
	public abstract fun bitwiseOr (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/OrBitOp;
	public abstract fun bitwiseOr (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/OrBitOp;
	public abstract fun bitwiseXor (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/XorBitOp;
	public abstract fun bitwiseXor (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/XorBitOp;
	public abstract fun case (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Case;
	public abstract fun coalesce (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Coalesce;
	public abstract fun concat (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/Concat;
	public abstract fun concat ([Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public abstract fun cumeDist ()Lorg/jetbrains/exposed/v1/core/CumeDist;
	public abstract fun denseRank ()Lorg/jetbrains/exposed/v1/core/DenseRank;
	public abstract fun div (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/DivideOp;
	public abstract fun div (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/DivideOp;
	public abstract fun eq (Lorg/jetbrains/exposed/v1/core/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun eqEntityIDValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun eqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/EqSubQueryOp;
	public abstract fun firstValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/FirstValue;
	public abstract fun greater (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public abstract fun greater (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public abstract fun greater (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public abstract fun greater (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public abstract fun greaterBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public abstract fun greaterEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public abstract fun greaterEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public abstract fun greaterEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public abstract fun greaterEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public abstract fun greaterEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public abstract fun greaterEqBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public abstract fun greaterEqEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public abstract fun greaterEqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/GreaterEqSubQueryOp;
	public abstract fun greaterSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/GreaterSubQueryOp;
	public abstract fun hasFlag (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/EqOp;
	public abstract fun hasFlag (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/EqOp;
	public abstract fun inList (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inList (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inListCompositeEntityIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inListCompositeIDs (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inListIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun inSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/InSubQueryOp;
	public abstract fun inTable (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/ops/InTableOp;
	public abstract fun intToDecimal (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/NoOpConversion;
	public abstract fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public abstract fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public abstract fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public abstract fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public abstract fun isDistinctFromEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public abstract fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public abstract fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public abstract fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public abstract fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public abstract fun isNotDistinctFromEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public abstract fun isNotNull (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun isNull (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun isNullOrEmpty (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun lag (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Lag;
	public abstract fun lastValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LastValue;
	public abstract fun lead (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Lead;
	public abstract fun less (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public abstract fun less (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public abstract fun less (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public abstract fun less (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public abstract fun lessBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public abstract fun lessEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public abstract fun lessEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public abstract fun lessEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public abstract fun lessEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public abstract fun lessEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public abstract fun lessEqBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public abstract fun lessEqEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public abstract fun lessEqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/LessEqSubQueryOp;
	public abstract fun lessSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/LessSubQueryOp;
	public abstract fun like (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun like (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun like (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun likeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun likeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun likeWithEntityIDAndExpression (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun match (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun match (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun minus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/MinusOp;
	public abstract fun minus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/MinusOp;
	public abstract fun mod (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public abstract fun mod (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public abstract fun modWithEntityId (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun modWithEntityId2 (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun modWithEntityId3 (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun neq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun neq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun neq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun neq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun neqEntityIDValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public abstract fun notEqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotEqSubQueryOp;
	public abstract fun notInList (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInList (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInListCompositeEntityIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInListCompositeIDs (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInListIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public abstract fun notInSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotInSubQueryOp;
	public abstract fun notInTable (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/ops/InTableOp;
	public abstract fun notLike (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun notLike (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun notLike (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun notLikeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun notLikeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun notLikeWithEntityIDAndExpression (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public abstract fun nthValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/NthValue;
	public abstract fun ntile (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Ntile;
	public abstract fun percentRank ()Lorg/jetbrains/exposed/v1/core/PercentRank;
	public abstract fun plus (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public abstract fun plus (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Concat;
	public abstract fun plus (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public abstract fun plus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/PlusOp;
	public abstract fun plus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/PlusOp;
	public abstract fun rank ()Lorg/jetbrains/exposed/v1/core/Rank;
	public abstract fun regexp (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public abstract fun regexp (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Z)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public abstract fun rem (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public abstract fun rem (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public abstract fun remWithEntityId (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun remWithEntityId2 (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun remWithEntityId3 (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun rowNumber ()Lorg/jetbrains/exposed/v1/core/RowNumber;
	public abstract fun times (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/TimesOp;
	public abstract fun times (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/TimesOp;
	public abstract fun wrap (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/QueryParameter;
}

public final class org/jetbrains/exposed/v1/core/ISqlExpressionBuilder$DefaultImpls {
	public static fun asLiteral (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static fun between (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Between;
	public static fun between (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Between;
	public static fun bitwiseAnd (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/AndBitOp;
	public static fun bitwiseAnd (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/AndBitOp;
	public static fun bitwiseOr (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/OrBitOp;
	public static fun bitwiseOr (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/OrBitOp;
	public static fun bitwiseXor (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/XorBitOp;
	public static fun bitwiseXor (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/XorBitOp;
	public static fun case (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Case;
	public static synthetic fun case$default (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Case;
	public static fun coalesce (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Coalesce;
	public static fun concat (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/Concat;
	public static fun concat (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public static synthetic fun concat$default (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Concat;
	public static fun cumeDist (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/v1/core/CumeDist;
	public static fun denseRank (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/v1/core/DenseRank;
	public static fun div (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/DivideOp;
	public static fun div (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/DivideOp;
	public static fun eq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun eq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun eq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun eq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun eq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun eqEntityIDValue (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun eqSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/EqSubQueryOp;
	public static fun firstValue (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/FirstValue;
	public static fun greater (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public static fun greater (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public static fun greater (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public static fun greater (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public static fun greaterBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public static fun greaterEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public static fun greaterEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public static fun greaterEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public static fun greaterEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public static fun greaterEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public static fun greaterEqBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public static fun greaterEqEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public static fun greaterEqSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/GreaterEqSubQueryOp;
	public static fun greaterSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/GreaterSubQueryOp;
	public static fun hasFlag (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/EqOp;
	public static fun hasFlag (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/EqOp;
	public static fun inList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inListCompositeEntityIds (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inListCompositeIDs (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inListIds (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun inSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/InSubQueryOp;
	public static fun inTable (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/ops/InTableOp;
	public static fun intToDecimal (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/NoOpConversion;
	public static fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public static fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public static fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public static fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public static fun isDistinctFromEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public static fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public static fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public static fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public static fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public static fun isNotDistinctFromEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public static fun isNotNull (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun isNull (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun isNullOrEmpty (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun lag (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Lag;
	public static synthetic fun lag$default (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Lag;
	public static fun lastValue (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LastValue;
	public static fun lead (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Lead;
	public static synthetic fun lead$default (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Lead;
	public static fun less (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public static fun less (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public static fun less (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public static fun less (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public static fun lessBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public static fun lessEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public static fun lessEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public static fun lessEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public static fun lessEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public static fun lessEq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public static fun lessEqBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public static fun lessEqEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public static fun lessEqSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/LessEqSubQueryOp;
	public static fun lessSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/LessSubQueryOp;
	public static fun like (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun like (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun like (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun likeWithEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun likeWithEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun likeWithEntityIDAndExpression (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun match (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun match (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun minus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/MinusOp;
	public static fun minus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/MinusOp;
	public static fun mod (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public static fun mod (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public static fun modWithEntityId (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun modWithEntityId2 (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun modWithEntityId3 (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun neq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun neq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun neq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun neq (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun neqEntityIDValue (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public static fun notEqSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotEqSubQueryOp;
	public static fun notInList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInList (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInListCompositeEntityIds (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInListCompositeIDs (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInListIds (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public static fun notInSubQuery (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotInSubQueryOp;
	public static fun notInTable (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/ops/InTableOp;
	public static fun notLike (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun notLike (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun notLike (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun notLikeWithEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun notLikeWithEntityID (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun notLikeWithEntityIDAndExpression (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public static fun nthValue (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/NthValue;
	public static fun ntile (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Ntile;
	public static fun percentRank (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/v1/core/PercentRank;
	public static fun plus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public static fun plus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Concat;
	public static fun plus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public static fun plus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/PlusOp;
	public static fun plus (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/PlusOp;
	public static fun rank (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/v1/core/Rank;
	public static fun regexp (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public static fun regexp (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Z)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public static synthetic fun regexp$default (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public static fun rem (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public static fun rem (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public static fun remWithEntityId (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun remWithEntityId2 (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun remWithEntityId3 (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun rowNumber (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/v1/core/RowNumber;
	public static fun times (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/TimesOp;
	public static fun times (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/TimesOp;
	public static fun wrap (Lorg/jetbrains/exposed/v1/core/ISqlExpressionBuilder;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/QueryParameter;
}

public final class org/jetbrains/exposed/v1/core/InSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/Index : org/jetbrains/exposed/v1/core/DdlAware {
	public fun <init> (Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Op;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Op;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun copy (Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Op;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/Index;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/Index;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Op;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Table;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Index;
	public fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColumns ()Ljava/util/List;
	public final fun getCustomName ()Ljava/lang/String;
	public fun getDdl ()Ljava/util/List;
	public final fun getFilterCondition ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun getFunctions ()Ljava/util/List;
	public final fun getFunctionsTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun getIndexName ()Ljava/lang/String;
	public final fun getIndexType ()Ljava/lang/String;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun getUnique ()Z
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public final fun onlyNameDiffer (Lorg/jetbrains/exposed/v1/core/Index;)Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/IntegerColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Integer;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface annotation class org/jetbrains/exposed/v1/core/InternalApi : java/lang/annotation/Annotation {
}

public final class org/jetbrains/exposed/v1/core/IsDistinctFromOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpression1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpression2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/IsNotDistinctFromOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpression1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpression2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/IsNotNullOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/IsNullOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Join : org/jetbrains/exposed/v1/core/ColumnSet {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun alreadyInJoin (Lorg/jetbrains/exposed/v1/core/Table;)Z
	public fun crossJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun describe (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun fullJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun getColumns ()Ljava/util/List;
	public fun getFields ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/ColumnSet;
	public fun innerJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun join (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun leftJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun rightJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
}

public final class org/jetbrains/exposed/v1/core/JoinType : java/lang/Enum {
	public static final field CROSS Lorg/jetbrains/exposed/v1/core/JoinType;
	public static final field FULL Lorg/jetbrains/exposed/v1/core/JoinType;
	public static final field INNER Lorg/jetbrains/exposed/v1/core/JoinType;
	public static final field LEFT Lorg/jetbrains/exposed/v1/core/JoinType;
	public static final field RIGHT Lorg/jetbrains/exposed/v1/core/JoinType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/JoinType;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/JoinType;
}

public abstract interface class org/jetbrains/exposed/v1/core/JsonColumnMarker {
	public abstract fun getUsesBinaryFormat ()Z
}

public final class org/jetbrains/exposed/v1/core/Key {
	public fun <init> ()V
}

public final class org/jetbrains/exposed/v1/core/Lag : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultValue ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun getOffset ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/LargeTextColumnType : org/jetbrains/exposed/v1/core/TextColumnType {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun preciseType ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/LastValue : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Lead : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultValue ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun getOffset ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/LessEqOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/LessEqSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/LessOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/LessSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/LikeEscapeOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLjava/lang/Character;)V
	public final fun getEscapeChar ()Ljava/lang/Character;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/LikePattern {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/LikePattern$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/Character;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Character;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Character;
	public final fun copy (Ljava/lang/String;Ljava/lang/Character;)Lorg/jetbrains/exposed/v1/core/LikePattern;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/LikePattern;Ljava/lang/String;Ljava/lang/Character;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/LikePattern;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEscapeChar ()Ljava/lang/Character;
	public final fun getPattern ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun plus (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikePattern;
	public final fun plus (Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikePattern;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/LikePattern$Companion {
	public final fun ofLiteral (Ljava/lang/String;C)Lorg/jetbrains/exposed/v1/core/LikePattern;
	public static synthetic fun ofLiteral$default (Lorg/jetbrains/exposed/v1/core/LikePattern$Companion;Ljava/lang/String;CILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/LikePattern;
}

public final class org/jetbrains/exposed/v1/core/LiteralOp : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getValue ()Ljava/lang/Object;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Locate : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getSubstring ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/LongColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Long;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/LowerCase : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Max : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/MediumTextColumnType : org/jetbrains/exposed/v1/core/TextColumnType {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun preciseType ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/Min : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/MinusOp : org/jetbrains/exposed/v1/core/CustomOperator {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/ModOp : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/ModOp$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ModOp$Companion {
}

public final class org/jetbrains/exposed/v1/core/NeqOp : org/jetbrains/exposed/v1/core/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public abstract class org/jetbrains/exposed/v1/core/NextVal : org/jetbrains/exposed/v1/core/Function {
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Sequence;Lorg/jetbrains/exposed/v1/core/IColumnType;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSeq ()Lorg/jetbrains/exposed/v1/core/Sequence;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/NextVal$IntNextVal : org/jetbrains/exposed/v1/core/NextVal {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Sequence;)V
}

public final class org/jetbrains/exposed/v1/core/NextVal$LongNextVal : org/jetbrains/exposed/v1/core/NextVal {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Sequence;)V
}

public final class org/jetbrains/exposed/v1/core/NoOpConversion : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/NotEqSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/NotExists : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public final fun getQuery ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/NotInSubQueryOp : org/jetbrains/exposed/v1/core/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/NotOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/NthValue : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun getN ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Ntile : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
	public final fun getNumBuckets ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/NullableColumnWithTransform : org/jetbrains/exposed/v1/core/ColumnWithTransform {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/ColumnTransformer;)V
	public fun unwrapRecursive (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/OffsetFollowingWindowFrameBound : org/jetbrains/exposed/v1/core/OffsetWindowFrameBound, org/jetbrains/exposed/v1/core/CurrentOrFollowing {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/OffsetPrecedingWindowFrameBound : org/jetbrains/exposed/v1/core/OffsetWindowFrameBound, org/jetbrains/exposed/v1/core/CurrentOrPreceding {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public class org/jetbrains/exposed/v1/core/OffsetWindowFrameBound : org/jetbrains/exposed/v1/core/WindowFrameBound {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/WindowFrameBoundDirection;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract class org/jetbrains/exposed/v1/core/Op : org/jetbrains/exposed/v1/core/Expression {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/Op$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/exposed/v1/core/Op$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public final fun nullOp ()Lorg/jetbrains/exposed/v1/core/Op;
}

public final class org/jetbrains/exposed/v1/core/Op$FALSE : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/Op$FALSE;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Op$TRUE : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/Op$TRUE;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/OpKt {
	public static final fun and (Lorg/jetbrains/exposed/v1/core/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun and (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun andIfNotNull (Lorg/jetbrains/exposed/v1/core/Op;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun andIfNotNull (Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun andNot (Lorg/jetbrains/exposed/v1/core/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun blobParam (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedBlob;Z)Lorg/jetbrains/exposed/v1/core/Expression;
	public static synthetic fun blobParam$default (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedBlob;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun booleanLiteral (Z)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun booleanParam (Z)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun byteLiteral (B)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun byteParam (B)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun compoundAnd (Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun compoundOr (Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun decimalLiteral (Ljava/math/BigDecimal;)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun decimalParam (Ljava/math/BigDecimal;)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun doubleLiteral (D)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun doubleParam (D)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun exists (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/Exists;
	public static final fun floatLiteral (F)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun floatParam (F)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun idParam (Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun intLiteral (I)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun intParam (I)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun longLiteral (J)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun longParam (J)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun not (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun notExists (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotExists;
	public static final fun or (Lorg/jetbrains/exposed/v1/core/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun or (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun orIfNotNull (Lorg/jetbrains/exposed/v1/core/Op;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun orIfNotNull (Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun orNot (Lorg/jetbrains/exposed/v1/core/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun shortLiteral (S)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun shortParam (S)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun stringLiteral (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun stringParam (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun ubyteLiteral-7apg3OU (B)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun ubyteParam-7apg3OU (B)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun uintLiteral-WZ4Q5Ns (I)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun uintParam-WZ4Q5Ns (I)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun ulongLiteral-VKZWuLQ (J)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun ulongParam-VKZWuLQ (J)Lorg/jetbrains/exposed/v1/core/Expression;
	public static final fun ushortLiteral-xj2QHRw (S)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public static final fun ushortParam-xj2QHRw (S)Lorg/jetbrains/exposed/v1/core/Expression;
}

public final class org/jetbrains/exposed/v1/core/OrBitOp : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/OrOp : org/jetbrains/exposed/v1/core/CompoundBooleanOp {
	public fun <init> (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/v1/core/PercentRank : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/PlusOp : org/jetbrains/exposed/v1/core/CustomOperator {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/QueryAlias : org/jetbrains/exposed/v1/core/ColumnSet {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/lang/String;)V
	public fun crossJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun describe (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun fullJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun get (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun get (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun get (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public final fun getAlias ()Ljava/lang/String;
	public fun getColumns ()Ljava/util/List;
	public fun getFields ()Ljava/util/List;
	public final fun getQuery ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun innerJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun join (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun leftJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public fun rightJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
}

public final class org/jetbrains/exposed/v1/core/QueryBuilder {
	public fun <init> (Z)V
	public final fun append (C)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public final fun append (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public final fun append (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public final fun appendTo (Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)V
	public final fun appendTo ([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)V
	public static synthetic fun appendTo$default (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static synthetic fun appendTo$default (Lorg/jetbrains/exposed/v1/core/QueryBuilder;[Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public final fun getArgs ()Ljava/util/List;
	public final fun getPrepared ()Z
	public final fun invoke (Lkotlin/jvm/functions/Function1;)V
	public final fun registerArgument (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public final fun registerArgument (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Object;)V
	public final fun registerArguments (Lorg/jetbrains/exposed/v1/core/IColumnType;Ljava/lang/Iterable;)V
	public fun toString ()Ljava/lang/String;
	public final fun unaryPlus (C)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public final fun unaryPlus (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
	public final fun unaryPlus (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/QueryBuilder;
}

public final class org/jetbrains/exposed/v1/core/QueryParameter : org/jetbrains/exposed/v1/core/Expression {
	public fun <init> (Ljava/lang/Object;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getSqlType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getValue ()Ljava/lang/Object;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Random : org/jetbrains/exposed/v1/core/Function {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSeed ()Ljava/lang/Integer;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Rank : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> ()V
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ReferenceOption : java/lang/Enum {
	public static final field CASCADE Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static final field NO_ACTION Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static final field RESTRICT Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static final field SET_DEFAULT Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static final field SET_NULL Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/ReferenceOption;
}

public final class org/jetbrains/exposed/v1/core/RegexpOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Z)V
	public final fun getCaseSensitive ()Z
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ResultRow {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/ResultRow$Companion;
	public fun <init> (Ljava/util/Map;[Ljava/lang/Object;)V
	public synthetic fun <init> (Ljava/util/Map;[Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun get (Lorg/jetbrains/exposed/v1/core/Expression;)Ljava/lang/Object;
	public final fun getFieldIndex ()Ljava/util/Map;
	public final fun getOrNull (Lorg/jetbrains/exposed/v1/core/Expression;)Ljava/lang/Object;
	public final fun hasValue (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public final fun set (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/ResultRow$Companion {
	public final fun create (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;Ljava/util/Map;)Lorg/jetbrains/exposed/v1/core/ResultRow;
	public final fun createAndFillDefaults (Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/ResultRow;
	public final fun createAndFillValues (Ljava/util/Map;)Lorg/jetbrains/exposed/v1/core/ResultRow;
}

public final class org/jetbrains/exposed/v1/core/RowNumber : org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> ()V
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/SQLExpressionBuilderKt {
	public static final fun CustomLongFunction (Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/CustomFunction;
	public static final fun CustomStringFunction (Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/CustomFunction;
	public static final fun allFrom (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun allFrom (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun allFrom (Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun anyFrom (Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun anyFrom (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun anyFrom (Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/Op;
	public static final fun avg (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/v1/core/Avg;
	public static synthetic fun avg$default (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Avg;
	public static final fun castTo (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static final fun charLength (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/CharLength;
	public static final fun count (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Count;
	public static final fun countDistinct (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Count;
	public static final fun function (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/CustomFunction;
	public static final fun get (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/v1/core/functions/array/ArrayGet;
	public static final fun groupConcat (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;ZLkotlin/Pair;)Lorg/jetbrains/exposed/v1/core/GroupConcat;
	public static final fun groupConcat (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Z[Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/core/GroupConcat;
	public static synthetic fun groupConcat$default (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;ZLkotlin/Pair;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/GroupConcat;
	public static synthetic fun groupConcat$default (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Z[Lkotlin/Pair;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/GroupConcat;
	public static final fun locate (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Locate;
	public static final fun lowerCase (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LowerCase;
	public static final fun max (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Max;
	public static final fun min (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Min;
	public static final fun nextIntVal (Lorg/jetbrains/exposed/v1/core/Sequence;)Lorg/jetbrains/exposed/v1/core/NextVal;
	public static final fun nextLongVal (Lorg/jetbrains/exposed/v1/core/Sequence;)Lorg/jetbrains/exposed/v1/core/NextVal;
	public static final fun slice (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Integer;Ljava/lang/Integer;)Lorg/jetbrains/exposed/v1/core/functions/array/ArraySlice;
	public static synthetic fun slice$default (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Integer;Ljava/lang/Integer;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/functions/array/ArraySlice;
	public static final fun stdDevPop (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/v1/core/StdDevPop;
	public static synthetic fun stdDevPop$default (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/StdDevPop;
	public static final fun stdDevSamp (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/v1/core/StdDevSamp;
	public static synthetic fun stdDevSamp$default (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/StdDevSamp;
	public static final fun substring (Lorg/jetbrains/exposed/v1/core/Expression;II)Lorg/jetbrains/exposed/v1/core/Substring;
	public static final fun sum (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Sum;
	public static final fun trim (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Trim;
	public static final fun upperCase (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/UpperCase;
	public static final fun varPop (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/v1/core/VarPop;
	public static synthetic fun varPop$default (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/VarPop;
	public static final fun varSamp (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/v1/core/VarSamp;
	public static synthetic fun varSamp$default (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/VarSamp;
}

public final class org/jetbrains/exposed/v1/core/SQLLogKt {
	public static final fun getExposedLogger ()Lorg/slf4j/Logger;
}

public final class org/jetbrains/exposed/v1/core/Schema {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Schema;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Schema;
	public final fun createStatement ()Ljava/util/List;
	public final fun dropStatement (Z)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAuthorization ()Ljava/lang/String;
	public final fun getDdl ()Ljava/util/List;
	public final fun getDefaultTablespace ()Ljava/lang/String;
	public final fun getIdentifier ()Ljava/lang/String;
	public final fun getOn ()Ljava/lang/String;
	public final fun getPassword ()Ljava/lang/String;
	public final fun getQuota ()Ljava/lang/String;
	public final fun getTemporaryTablespace ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setSchemaStatement ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/SchemaUtilityApi {
	public fun <init> ()V
	protected final fun createDdl (Lorg/jetbrains/exposed/v1/core/ForeignKeyConstraint;)Ljava/util/List;
	protected final fun filterAndLogExcessConstraints (Ljava/util/Map;Z)Ljava/util/List;
	protected final fun filterAndLogExcessIndices (Ljava/util/Map;Z)Ljava/util/List;
	protected final fun filterAndLogMissingAndUnmappedIndices (Ljava/util/Map;Ljava/util/Set;ZZ[Lorg/jetbrains/exposed/v1/core/Table;)Lkotlin/Pair;
	protected final fun getAlterTablesLogMessage ()Ljava/lang/String;
	protected final fun getColumnsLogMessage ()Ljava/lang/String;
	protected final fun getConstraintsLogMessage ()Ljava/lang/String;
	protected final fun getCreateSequencesLogMessage ()Ljava/lang/String;
	protected final fun getCreateTablesLogMessage ()Ljava/lang/String;
	protected final fun getExecuteAlterTablesLogMessage ()Ljava/lang/String;
	protected final fun getExecuteCreateTablesLogMessage ()Ljava/lang/String;
	protected final fun getMappingConsistenceLogMessage ()Ljava/lang/String;
	protected final fun getPrimaryKeysLogMessage ()Ljava/lang/String;
	protected final fun hasCycle (Ljava/util/List;)Z
	protected final fun log (Ljava/util/Collection;Ljava/lang/String;Z)V
	protected final fun logTimeSpent (Ljava/lang/String;ZLkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	protected final fun mapMissingColumnStatementsTo (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/Collection;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/vendors/PrimaryKeyMetadata;Z)Ljava/util/Collection;
	protected final fun mapMissingConstraintsTo (Ljava/util/Collection;Ljava/util/Map;[Lorg/jetbrains/exposed/v1/core/Table;)Ljava/util/Collection;
	protected final fun sortByReferences (Ljava/lang/Iterable;)Ljava/util/List;
	protected final fun tableDdlWithoutExistingSequence (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Sequence;)Lkotlin/Pair;
}

public final class org/jetbrains/exposed/v1/core/Sequence {
	public fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Boolean;Ljava/lang/Long;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Boolean;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun createStatement ()Ljava/util/List;
	public final fun dropStatement ()Ljava/util/List;
	public final fun getCache ()Ljava/lang/Long;
	public final fun getCycle ()Ljava/lang/Boolean;
	public final fun getDdl ()Ljava/util/List;
	public final fun getIdentifier ()Ljava/lang/String;
	public final fun getIncrementBy ()Ljava/lang/Long;
	public final fun getMaxValue ()Ljava/lang/Long;
	public final fun getMinValue ()Ljava/lang/Long;
	public final fun getName ()Ljava/lang/String;
	public final fun getStartWith ()Ljava/lang/Long;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/ShortColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Short;
}

public final class org/jetbrains/exposed/v1/core/Slf4jSqlDebugLogger : org/jetbrains/exposed/v1/core/SqlLogger {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/Slf4jSqlDebugLogger;
	public fun log (Lorg/jetbrains/exposed/v1/core/statements/StatementContext;Lorg/jetbrains/exposed/v1/core/Transaction;)V
}

public final class org/jetbrains/exposed/v1/core/Slice : org/jetbrains/exposed/v1/core/FieldSet {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Ljava/util/List;)V
	public fun getFields ()Ljava/util/List;
	public fun getRealFields ()Ljava/util/List;
	public fun getSource ()Lorg/jetbrains/exposed/v1/core/ColumnSet;
}

public final class org/jetbrains/exposed/v1/core/SortOrder : java/lang/Enum {
	public static final field ASC Lorg/jetbrains/exposed/v1/core/SortOrder;
	public static final field ASC_NULLS_FIRST Lorg/jetbrains/exposed/v1/core/SortOrder;
	public static final field ASC_NULLS_LAST Lorg/jetbrains/exposed/v1/core/SortOrder;
	public static final field DESC Lorg/jetbrains/exposed/v1/core/SortOrder;
	public static final field DESC_NULLS_FIRST Lorg/jetbrains/exposed/v1/core/SortOrder;
	public static final field DESC_NULLS_LAST Lorg/jetbrains/exposed/v1/core/SortOrder;
	public final fun getCode ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/SortOrder;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/SortOrder;
}

public final class org/jetbrains/exposed/v1/core/SqlExpressionBuilder : org/jetbrains/exposed/v1/core/ISqlExpressionBuilder {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/SqlExpressionBuilder;
	public fun asLiteral (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/LiteralOp;
	public fun between (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Between;
	public fun between (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Between;
	public fun bitwiseAnd (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/AndBitOp;
	public fun bitwiseAnd (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/AndBitOp;
	public fun bitwiseOr (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/OrBitOp;
	public fun bitwiseOr (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/OrBitOp;
	public fun bitwiseXor (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/XorBitOp;
	public fun bitwiseXor (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/XorBitOp;
	public fun case (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Case;
	public fun coalesce (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;[Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Coalesce;
	public fun concat (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/Concat;
	public fun concat ([Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public fun cumeDist ()Lorg/jetbrains/exposed/v1/core/CumeDist;
	public fun denseRank ()Lorg/jetbrains/exposed/v1/core/DenseRank;
	public fun div (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/DivideOp;
	public fun div (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/DivideOp;
	public fun eq (Lorg/jetbrains/exposed/v1/core/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun eq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun eq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun eq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun eq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun eqEntityIDValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun eqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/EqSubQueryOp;
	public fun firstValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/FirstValue;
	public fun greater (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public fun greater (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public fun greater (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public fun greater (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public fun greaterBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public fun greaterEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterOp;
	public fun greaterEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public fun greaterEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public fun greaterEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public fun greaterEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public fun greaterEqBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public fun greaterEqEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/GreaterEqOp;
	public fun greaterEqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/GreaterEqSubQueryOp;
	public fun greaterSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/GreaterSubQueryOp;
	public fun hasFlag (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/EqOp;
	public fun hasFlag (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/EqOp;
	public fun inList (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inList (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inListCompositeEntityIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inListCompositeIDs (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inListIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun inSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/InSubQueryOp;
	public fun inTable (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/ops/InTableOp;
	public fun intToDecimal (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/NoOpConversion;
	public fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public fun isDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public fun isDistinctFromEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/IsDistinctFromOp;
	public fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public fun isNotDistinctFrom (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public fun isNotDistinctFromEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/IsNotDistinctFromOp;
	public fun isNotNull (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun isNull (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun isNullOrEmpty (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun lag (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Lag;
	public fun lastValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LastValue;
	public fun lead (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Lead;
	public fun less (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public fun less (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public fun less (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public fun less (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public fun lessBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public fun lessEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessOp;
	public fun lessEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public fun lessEq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public fun lessEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public fun lessEq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public fun lessEqBetweenEntityIDs (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public fun lessEqEntityID (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/v1/core/LessEqOp;
	public fun lessEqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/LessEqSubQueryOp;
	public fun lessSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/LessSubQueryOp;
	public fun like (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun like (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun like (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun likeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun likeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun likeWithEntityIDAndExpression (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun match (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun match (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun minus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/MinusOp;
	public fun minus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/MinusOp;
	public fun mod (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public fun mod (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public fun modWithEntityId (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun modWithEntityId2 (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun modWithEntityId3 (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun neq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun neq (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun neq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun neq (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun neqEntityIDValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun notEqSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotEqSubQueryOp;
	public fun notInList (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInList (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInListCompositeEntityIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInListCompositeIDs (Ljava/util/List;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInListIds (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp;
	public fun notInSubQuery (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)Lorg/jetbrains/exposed/v1/core/NotInSubQueryOp;
	public fun notInTable (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/ops/InTableOp;
	public fun notLike (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun notLike (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun notLike (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun notLikeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun notLikeWithEntityID (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/LikePattern;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun notLikeWithEntityIDAndExpression (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/LikeEscapeOp;
	public fun nthValue (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/NthValue;
	public fun ntile (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/Ntile;
	public fun percentRank ()Lorg/jetbrains/exposed/v1/core/PercentRank;
	public fun plus (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public fun plus (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Concat;
	public fun plus (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Concat;
	public fun plus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/PlusOp;
	public fun plus (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/PlusOp;
	public fun rank ()Lorg/jetbrains/exposed/v1/core/Rank;
	public fun regexp (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public fun regexp (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Z)Lorg/jetbrains/exposed/v1/core/RegexpOp;
	public fun rem (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public fun rem (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ModOp;
	public fun remWithEntityId (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun remWithEntityId2 (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun remWithEntityId3 (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun rowNumber ()Lorg/jetbrains/exposed/v1/core/RowNumber;
	public fun times (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/TimesOp;
	public fun times (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/TimesOp;
	public fun wrap (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/QueryParameter;
}

public abstract interface class org/jetbrains/exposed/v1/core/SqlLogger {
	public abstract fun log (Lorg/jetbrains/exposed/v1/core/statements/StatementContext;Lorg/jetbrains/exposed/v1/core/Transaction;)V
}

public final class org/jetbrains/exposed/v1/core/StdDevPop : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/StdDevSamp : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/StdOutSqlLogger : org/jetbrains/exposed/v1/core/SqlLogger {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/StdOutSqlLogger;
	public fun log (Lorg/jetbrains/exposed/v1/core/statements/StatementContext;Lorg/jetbrains/exposed/v1/core/Transaction;)V
}

public abstract class org/jetbrains/exposed/v1/core/StringColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/StringColumnType$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	protected final fun escape (Ljava/lang/String;)Ljava/lang/String;
	protected final fun escapeAndQuote (Ljava/lang/String;)Ljava/lang/String;
	public final fun getCollate ()Ljava/lang/String;
	public fun hashCode ()I
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/StringColumnType$Companion {
}

public abstract class org/jetbrains/exposed/v1/core/SubQueryOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression, org/jetbrains/exposed/v1/core/Op$OpBoolean {
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getOperator ()Ljava/lang/String;
	public final fun getQuery ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Substring : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getLength ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/Sum : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/Table : org/jetbrains/exposed/v1/core/ColumnSet, org/jetbrains/exposed/v1/core/DdlAware {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun array (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/lang/Integer;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun array (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/util/List;I)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun array$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/lang/Integer;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun array$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/ColumnType;Ljava/util/List;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun autoGenerate (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun autoIncrement (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun autoIncrement (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Sequence;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun autoIncrement$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun autoinc (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun autoinc$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun binary (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun binary (Ljava/lang/String;I)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun blob (Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun blob$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun bool (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun byte (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun byte$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun char (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun char (Ljava/lang/String;ILjava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun char$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;ILjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun check (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun check (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun check$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun check$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun checkConstraints ()Ljava/util/List;
	public final fun clientDefault (Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun createStatement ()Ljava/util/List;
	public fun crossJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun customEnumeration (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun customEnumeration$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun databaseGenerated (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun decimal (Ljava/lang/String;II)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun default (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun default (Lorg/jetbrains/exposed/v1/core/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/CompositeColumn;
	public final fun defaultExpression (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun describe (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public final fun double (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun dropStatement ()Ljava/util/List;
	public final fun entityId (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun entityId (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun entityId (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun enumeration (Ljava/lang/String;Lkotlin/reflect/KClass;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun enumerationByName (Ljava/lang/String;ILkotlin/reflect/KClass;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun equals (Ljava/lang/Object;)Z
	public final fun float (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun foreignKey ([Lkotlin/Pair;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)V
	public final fun foreignKey ([Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)V
	public static synthetic fun foreignKey$default (Lorg/jetbrains/exposed/v1/core/Table;[Lkotlin/Pair;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun foreignKey$default (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)V
	public fun fullJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun getAutoIncColumn ()Lorg/jetbrains/exposed/v1/core/Column;
	public fun getColumns ()Ljava/util/List;
	public fun getDdl ()Ljava/util/List;
	public final fun getForeignKeys ()Ljava/util/List;
	public final fun getIndices ()Ljava/util/List;
	public fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
	public final fun getSchemaName ()Ljava/lang/String;
	public final fun getSequences ()Ljava/util/List;
	public fun getTableName ()Ljava/lang/String;
	public final fun getTableNameWithoutScheme ()Ljava/lang/String;
	public final fun getTableNameWithoutSchemeSanitized ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun index (Ljava/lang/String;Z[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun index (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun index (Z[Lorg/jetbrains/exposed/v1/core/Column;)V
	public static synthetic fun index$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Z[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun index$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun index$default (Lorg/jetbrains/exposed/v1/core/Table;Z[Lorg/jetbrains/exposed/v1/core/Column;ILjava/lang/Object;)V
	public fun innerJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun integer (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun integer$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun join (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/JoinType;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun largeText (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun largeText$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun leftJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun long (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun long$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun mediumText (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun mediumText$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun modifyStatement ()Ljava/util/List;
	public final fun nameInDatabaseCase ()Ljava/lang/String;
	public final fun nameInDatabaseCaseUnquoted ()Ljava/lang/String;
	public final fun nullTransform (Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun nullTransform (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnTransformer;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun nullable (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun nullable (Lorg/jetbrains/exposed/v1/core/CompositeColumn;)Lorg/jetbrains/exposed/v1/core/CompositeColumn;
	public final fun optReference (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun optReference (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun optReference$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun optReference$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun optReferenceByIdColumn (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun optReferenceByIdColumn$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun reference (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun reference (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun reference$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun reference$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun referenceByIdColumn (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun referenceByIdColumn$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun references (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun references (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun references$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun referencesById (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun referencesById$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Lorg/jetbrains/exposed/v1/core/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun registerColumn (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/IColumnType;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun registerCompositeColumn (Lorg/jetbrains/exposed/v1/core/CompositeColumn;)Lorg/jetbrains/exposed/v1/core/CompositeColumn;
	public final fun replaceColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/Column;
	public fun rightJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Lorg/jetbrains/exposed/v1/core/Join;
	public final fun short (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun short$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun text (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun text$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun transform (Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun transform (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnTransformer;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun transformNullable (Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun transformNullable (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnTransformer;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun ubyte (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun ubyte$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun uinteger (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun uinteger$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun ulong (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun uniqueIndex (Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function1;)V
	public final fun uniqueIndex (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun uniqueIndex ([Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun uniqueIndex$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun uniqueIndex$default (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun uniqueIndex$default (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun ushort (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun ushort$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun uuid (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun varchar (Ljava/lang/String;ILjava/lang/String;)Lorg/jetbrains/exposed/v1/core/Column;
	public static synthetic fun varchar$default (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;ILjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
	public final fun withDefinition (Lorg/jetbrains/exposed/v1/core/Column;[Ljava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Column;
}

public final class org/jetbrains/exposed/v1/core/Table$Dual : org/jetbrains/exposed/v1/core/Table {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/Table$Dual;
}

public final class org/jetbrains/exposed/v1/core/Table$PrimaryKey {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Column;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getColumns ()[Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getName ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/TableKt {
	public static final fun crossJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun crossJoin$default (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun fullJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun fullJoin$default (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun innerJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun innerJoin$default (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun leftJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun leftJoin$default (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun rightJoin (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/Join;
	public static synthetic fun rightJoin$default (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Join;
	public static final fun targetTables (Lorg/jetbrains/exposed/v1/core/ColumnSet;)Ljava/util/List;
}

public final class org/jetbrains/exposed/v1/core/TableUtils : org/jetbrains/exposed/v1/core/SchemaUtilityApi {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/TableUtils;
	public final fun sortTablesByReferences (Ljava/lang/Iterable;)Ljava/util/List;
}

public class org/jetbrains/exposed/v1/core/TextColumnType : org/jetbrains/exposed/v1/core/StringColumnType {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEagerLoading ()Z
	public fun preciseType ()Ljava/lang/String;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/TimesOp : org/jetbrains/exposed/v1/core/CustomOperator {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
}

public abstract class org/jetbrains/exposed/v1/core/Transaction : org/jetbrains/exposed/v1/core/UserDataHolder, org/jetbrains/exposed/v1/core/transactions/TransactionInterface {
	public fun <init> ()V
	public final fun fullIdentity (Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/String;
	public final fun getDebug ()Z
	public final fun getDuration ()J
	public final fun getId ()Ljava/lang/String;
	public final fun getQueryTimeout ()Ljava/lang/Integer;
	public final fun getStatementCount ()I
	public final fun getStatementStats ()Ljava/util/HashMap;
	public final fun getStatements ()Ljava/lang/StringBuilder;
	public final fun getWarnLongQueriesDuration ()Ljava/lang/Long;
	public final fun identity (Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/String;
	public final fun identity (Lorg/jetbrains/exposed/v1/core/Table;)Ljava/lang/String;
	public final fun setDebug (Z)V
	public final fun setDuration (J)V
	public final fun setQueryTimeout (Ljava/lang/Integer;)V
	public final fun setStatementCount (I)V
	public final fun setWarnLongQueriesDuration (Ljava/lang/Long;)V
}

public final class org/jetbrains/exposed/v1/core/Trim : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/UByteColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB-7apg3OU (B)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-Wa3L5BU (Ljava/lang/Object;)B
}

public final class org/jetbrains/exposed/v1/core/UIntegerColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB-WZ4Q5Ns (I)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-OGnWXxg (Ljava/lang/Object;)I
}

public final class org/jetbrains/exposed/v1/core/ULongColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB-VKZWuLQ (J)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-I7RO_PI (Ljava/lang/Object;)J
}

public final class org/jetbrains/exposed/v1/core/UShortColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public fun <init> ()V
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB-xj2QHRw (S)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-BwKQO78 (Ljava/lang/Object;)S
}

public final class org/jetbrains/exposed/v1/core/UUIDColumnType : org/jetbrains/exposed/v1/core/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/UUIDColumnType$Companion;
	public fun <init> ()V
	public synthetic fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun nonNullValueToString (Ljava/util/UUID;)Ljava/lang/String;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun notNullValueToDB (Ljava/util/UUID;)Ljava/lang/Object;
	public fun readObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/util/UUID;
}

public final class org/jetbrains/exposed/v1/core/UUIDColumnType$Companion {
}

public final class org/jetbrains/exposed/v1/core/UnboundedFollowingWindowFrameBound : org/jetbrains/exposed/v1/core/UnboundedWindowFrameBound, org/jetbrains/exposed/v1/core/CurrentOrFollowing {
	public fun <init> ()V
}

public final class org/jetbrains/exposed/v1/core/UnboundedPrecedingWindowFrameBound : org/jetbrains/exposed/v1/core/UnboundedWindowFrameBound, org/jetbrains/exposed/v1/core/CurrentOrPreceding {
	public fun <init> ()V
}

public class org/jetbrains/exposed/v1/core/UnboundedWindowFrameBound : org/jetbrains/exposed/v1/core/WindowFrameBound {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/WindowFrameBoundDirection;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/UpperCase : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public class org/jetbrains/exposed/v1/core/UserDataHolder {
	public fun <init> ()V
	public final fun getOrCreate (Lorg/jetbrains/exposed/v1/core/Key;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun getUserData (Lorg/jetbrains/exposed/v1/core/Key;)Ljava/lang/Object;
	protected final fun getUserdata ()Ljava/util/concurrent/ConcurrentHashMap;
	public final fun putUserData (Lorg/jetbrains/exposed/v1/core/Key;Ljava/lang/Object;)V
	public final fun removeUserData (Lorg/jetbrains/exposed/v1/core/Key;)Ljava/lang/Object;
}

public class org/jetbrains/exposed/v1/core/VarCharColumnType : org/jetbrains/exposed/v1/core/StringColumnType {
	public fun <init> ()V
	public fun <init> (ILjava/lang/String;)V
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColLength ()I
	public fun hashCode ()I
	public fun preciseType ()Ljava/lang/String;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun validateValueBeforeUpdate (Ljava/lang/String;)V
}

public final class org/jetbrains/exposed/v1/core/VarPop : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/VarSamp : org/jetbrains/exposed/v1/core/Function, org/jetbrains/exposed/v1/core/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/WindowFrameBound {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/WindowFrameBound$Companion;
	public abstract fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/WindowFrameBound$Companion {
	public final fun currentRow ()Lorg/jetbrains/exposed/v1/core/CurrentRowWindowFrameBound;
	public final fun offsetFollowing (I)Lorg/jetbrains/exposed/v1/core/OffsetFollowingWindowFrameBound;
	public final fun offsetFollowing (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/OffsetFollowingWindowFrameBound;
	public final fun offsetPreceding (I)Lorg/jetbrains/exposed/v1/core/OffsetPrecedingWindowFrameBound;
	public final fun offsetPreceding (Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/OffsetPrecedingWindowFrameBound;
	public final fun unboundedFollowing ()Lorg/jetbrains/exposed/v1/core/UnboundedFollowingWindowFrameBound;
	public final fun unboundedPreceding ()Lorg/jetbrains/exposed/v1/core/UnboundedPrecedingWindowFrameBound;
}

public final class org/jetbrains/exposed/v1/core/WindowFrameBoundDirection : java/lang/Enum {
	public static final field FOLLOWING Lorg/jetbrains/exposed/v1/core/WindowFrameBoundDirection;
	public static final field PRECEDING Lorg/jetbrains/exposed/v1/core/WindowFrameBoundDirection;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/WindowFrameBoundDirection;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/WindowFrameBoundDirection;
}

public final class org/jetbrains/exposed/v1/core/WindowFrameClause {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/WindowFrameUnit : java/lang/Enum {
	public static final field GROUPS Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;
	public static final field RANGE Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;
	public static final field ROWS Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/WindowFrameUnit;
}

public abstract interface class org/jetbrains/exposed/v1/core/WindowFunction {
	public abstract fun over ()Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public abstract fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/WindowFunctionDefinition : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/WindowFunction;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun groups (Lorg/jetbrains/exposed/v1/core/CurrentOrPreceding;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun groups (Lorg/jetbrains/exposed/v1/core/WindowFrameBound;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun orderBy (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public static synthetic fun orderBy$default (Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun partitionBy ([Lorg/jetbrains/exposed/v1/core/Expression;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun range (Lorg/jetbrains/exposed/v1/core/CurrentOrPreceding;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun range (Lorg/jetbrains/exposed/v1/core/WindowFrameBound;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun rows (Lorg/jetbrains/exposed/v1/core/CurrentOrPreceding;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public final fun rows (Lorg/jetbrains/exposed/v1/core/WindowFrameBound;Lorg/jetbrains/exposed/v1/core/WindowFrameBound;)Lorg/jetbrains/exposed/v1/core/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/XorBitOp : org/jetbrains/exposed/v1/core/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/v1/core/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/v1/core/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/dao/id/CompositeID {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/dao/id/CompositeID$Companion;
	public final fun contains (Lorg/jetbrains/exposed/v1/core/Column;)Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/Object;
	public fun hashCode ()I
	public final fun setWithEntityID (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;)V
	public final fun setWithEntityIdValue (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public final fun setWithNullableEntityIdValue (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/dao/id/CompositeID$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/dao/id/CompositeID;
}

public class org/jetbrains/exposed/v1/core/dao/id/CompositeIdTable : org/jetbrains/exposed/v1/core/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
}

public class org/jetbrains/exposed/v1/core/dao/id/EntityID {
	public fun <init> (Ljava/lang/Object;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;)V
	protected fun <init> (Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;Ljava/lang/Object;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;
	public final fun getValue ()Ljava/lang/Object;
	public final fun get_value ()Ljava/lang/Object;
	public fun hashCode ()I
	protected fun invokeOnNoValue ()V
	public final fun set_value (Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/v1/core/dao/id/EntityIDFactory {
	public abstract fun createEntityID (Ljava/lang/Object;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;)Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;
}

public final class org/jetbrains/exposed/v1/core/dao/id/EntityIDFunctionProvider {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/dao/id/EntityIDFunctionProvider;
	public final fun createEntityID (Ljava/lang/Object;Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;)Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;
}

public abstract class org/jetbrains/exposed/v1/core/dao/id/IdTable : org/jetbrains/exposed/v1/core/Table {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun addIdColumn (Lorg/jetbrains/exposed/v1/core/Column;)V
	public abstract fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getIdColumns ()Ljava/util/Set;
}

public class org/jetbrains/exposed/v1/core/dao/id/IntIdTable : org/jetbrains/exposed/v1/core/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
}

public class org/jetbrains/exposed/v1/core/dao/id/LongIdTable : org/jetbrains/exposed/v1/core/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
}

public class org/jetbrains/exposed/v1/core/dao/id/UIntIdTable : org/jetbrains/exposed/v1/core/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
}

public class org/jetbrains/exposed/v1/core/dao/id/ULongIdTable : org/jetbrains/exposed/v1/core/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
}

public class org/jetbrains/exposed/v1/core/dao/id/UUIDTable : org/jetbrains/exposed/v1/core/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/v1/core/Table$PrimaryKey;
}

public final class org/jetbrains/exposed/v1/core/functions/array/ArrayGet : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;ILorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getIndex ()I
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/functions/array/ArraySlice : org/jetbrains/exposed/v1/core/Function {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/Integer;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public final fun getExpression ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getLower ()Ljava/lang/Integer;
	public final fun getUpper ()Ljava/lang/Integer;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/ACosFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/ASinFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/ATanFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/AbsFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/CeilingFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/CosFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/CotFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/DegreesFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/ExpFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/FloorFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/PiFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/functions/math/PiFunction;
}

public final class org/jetbrains/exposed/v1/core/functions/math/PowerFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;II)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Lorg/jetbrains/exposed/v1/core/Expression;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/RadiansFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/RoundFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;I)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/SignFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/SinFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/SqrtFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/functions/math/TanFunction : org/jetbrains/exposed/v1/core/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/ops/AllAnyFromArrayOp : org/jetbrains/exposed/v1/core/ops/AllAnyFromBaseOp {
	public fun <init> (ZLjava/util/List;Lorg/jetbrains/exposed/v1/core/ColumnType;)V
	public synthetic fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/util/List;)V
}

public abstract class org/jetbrains/exposed/v1/core/ops/AllAnyFromBaseOp : org/jetbrains/exposed/v1/core/Op {
	public fun <init> (ZLjava/lang/Object;)V
	public final fun getSubSearch ()Ljava/lang/Object;
	public final fun isAny ()Z
	public abstract fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ops/AllAnyFromExpressionOp : org/jetbrains/exposed/v1/core/ops/AllAnyFromBaseOp {
	public fun <init> (ZLorg/jetbrains/exposed/v1/core/Expression;)V
	public synthetic fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public final class org/jetbrains/exposed/v1/core/ops/AllAnyFromSubQueryOp : org/jetbrains/exposed/v1/core/ops/AllAnyFromBaseOp {
	public fun <init> (ZLorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public synthetic fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
}

public final class org/jetbrains/exposed/v1/core/ops/AllAnyFromTableOp : org/jetbrains/exposed/v1/core/ops/AllAnyFromBaseOp {
	public fun <init> (ZLorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun registerSubSearchArgument (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Table;)V
}

public abstract class org/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected abstract fun getColumnTypes ()Ljava/util/List;
	public fun getExpr ()Ljava/lang/Object;
	public final fun getList ()Ljava/lang/Iterable;
	public final fun isInList ()Z
	protected abstract fun registerValues (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ops/InTableOp : org/jetbrains/exposed/v1/core/Op, org/jetbrains/exposed/v1/core/ComplexExpression {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Table;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Table;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/v1/core/Expression;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun isInTable ()Z
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ops/MultipleInListOp : org/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp {
	public fun <init> (Ljava/util/List;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Ljava/util/List;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getExpr ()Ljava/lang/Object;
	public fun getExpr ()Ljava/util/List;
	public synthetic fun registerValues (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public final class org/jetbrains/exposed/v1/core/ops/PairInListOp : org/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp {
	public fun <init> (Lkotlin/Pair;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Lkotlin/Pair;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getExpr ()Ljava/lang/Object;
	public fun getExpr ()Lkotlin/Pair;
	public synthetic fun registerValues (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/v1/core/ops/SingleValueInListOp : org/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getExpr ()Ljava/lang/Object;
	public fun getExpr ()Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
}

public final class org/jetbrains/exposed/v1/core/ops/TripleInListOp : org/jetbrains/exposed/v1/core/ops/InListOrNotInListBaseOp {
	public fun <init> (Lkotlin/Triple;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Lkotlin/Triple;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getExpr ()Ljava/lang/Object;
	public fun getExpr ()Lkotlin/Triple;
	public synthetic fun registerValues (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/Object;)V
}

public abstract class org/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement : org/jetbrains/exposed/v1/core/statements/InsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addBatch ()V
	public fun getArguments ()Ljava/util/List;
	public final fun getData ()Ljava/util/ArrayList;
	public final fun getShouldReturnGeneratedValues ()Z
	public final fun removeLastBatch ()V
	public fun set (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public fun setArguments (Ljava/util/List;)V
	public fun validateLastBatch ()V
}

public final class org/jetbrains/exposed/v1/core/statements/BatchDataInconsistentException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public class org/jetbrains/exposed/v1/core/statements/BatchInsertStatement : org/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public class org/jetbrains/exposed/v1/core/statements/BatchReplaceStatement : org/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/statements/BatchUpdateStatement : org/jetbrains/exposed/v1/core/statements/UpdateStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;)V
	public final fun addBatch (Lorg/jetbrains/exposed/v1/core/dao/id/EntityID;)V
	public fun arguments ()Ljava/lang/Iterable;
	public final fun getData ()Ljava/util/ArrayList;
	public fun getFirstDataSet ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/dao/id/IdTable;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public fun update (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Expression;)Ljava/lang/Void;
	public synthetic fun update (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public class org/jetbrains/exposed/v1/core/statements/BatchUpsertStatement : org/jetbrains/exposed/v1/core/statements/BaseBatchInsertStatement, org/jetbrains/exposed/v1/core/statements/UpsertBuilder {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Z)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	public final fun getKeys ()[Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getOnUpdate ()Ljava/util/List;
	public final fun getOnUpdateExclude ()Ljava/util/List;
	public final fun getWhere ()Lorg/jetbrains/exposed/v1/core/Op;
	public fun insertValue (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public fun storeUpdateValues (Lkotlin/jvm/functions/Function2;)V
}

public class org/jetbrains/exposed/v1/core/statements/DeleteStatement : org/jetbrains/exposed/v1/core/statements/Statement {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/Op;ZLjava/lang/Integer;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Lorg/jetbrains/exposed/v1/core/Op;ZLjava/lang/Integer;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Op;ZLjava/lang/Integer;Ljava/lang/Long;)V
	public fun arguments ()Ljava/lang/Iterable;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getOffset ()Ljava/lang/Long;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun getTargetTables ()Ljava/util/List;
	public final fun getTargetsSet ()Lorg/jetbrains/exposed/v1/core/ColumnSet;
	public final fun getWhere ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun isIgnore ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/statements/DeleteStatement$Companion {
	public final fun all (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/Table;)I
	public final fun where (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Op;ZLjava/lang/Integer;)I
	public static synthetic fun where$default (Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement$Companion;Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Op;ZLjava/lang/Integer;ILjava/lang/Object;)I
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor : org/jetbrains/exposed/v1/core/statements/StatementInterceptor {
}

public final class org/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor$DefaultImpls {
	public static fun afterCommit (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun afterExecution (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public static fun afterRollback (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun afterStatementPrepared (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public static fun beforeCommit (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun beforeExecution (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/StatementContext;)V
	public static fun beforeRollback (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun keepUserDataInTransactionStoreOnCommit (Lorg/jetbrains/exposed/v1/core/statements/GlobalStatementInterceptor;Ljava/util/Map;)Ljava/util/Map;
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/IStatementBuilder {
	public abstract fun batchInsert (Lorg/jetbrains/exposed/v1/core/Table;ZZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/BatchInsertStatement;
	public abstract fun batchReplace (Lorg/jetbrains/exposed/v1/core/Table;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/BatchReplaceStatement;
	public abstract fun batchUpsert (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Z[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/BatchUpsertStatement;
	public abstract fun delete (Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public abstract fun deleteAll (Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public abstract fun deleteIgnoreWhere (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public abstract fun deleteReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public abstract fun deleteWhere (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public abstract fun insert (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public abstract fun insert (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public abstract fun insertIgnore (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public abstract fun insertIgnore (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public abstract fun insertReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public abstract fun mergeFrom (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/QueryAlias;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeSelectStatement;
	public abstract fun mergeFrom (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public abstract fun replace (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReplaceStatement;
	public abstract fun replace (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/statements/ReplaceSelectStatement;
	public abstract fun update (Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public abstract fun update (Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public abstract fun updateReturning (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public abstract fun upsert (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;
	public abstract fun upsertReturning (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
}

public final class org/jetbrains/exposed/v1/core/statements/IStatementBuilder$DefaultImpls {
	public static fun batchInsert (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;ZZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/BatchInsertStatement;
	public static synthetic fun batchInsert$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/BatchInsertStatement;
	public static fun batchReplace (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/BatchReplaceStatement;
	public static synthetic fun batchReplace$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/BatchReplaceStatement;
	public static fun batchUpsert (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Z[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/BatchUpsertStatement;
	public static synthetic fun batchUpsert$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Z[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/BatchUpsertStatement;
	public static fun delete (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static synthetic fun delete$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Table;ZLjava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static fun deleteAll (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static fun deleteIgnoreWhere (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static synthetic fun deleteIgnoreWhere$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static fun deleteReturning (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static synthetic fun deleteReturning$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static fun deleteWhere (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static synthetic fun deleteWhere$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/DeleteStatement;
	public static fun insert (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public static fun insert (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public static synthetic fun insert$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public static fun insertIgnore (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;
	public static fun insertIgnore (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public static synthetic fun insertIgnore$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/InsertSelectStatement;
	public static fun insertReturning (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;ZLkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static synthetic fun insertReturning$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static fun mergeFrom (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/QueryAlias;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeSelectStatement;
	public static fun mergeFrom (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public static synthetic fun mergeFrom$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/MergeTableStatement;
	public static fun replace (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReplaceStatement;
	public static fun replace (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/statements/ReplaceSelectStatement;
	public static synthetic fun replace$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/ReplaceSelectStatement;
	public static fun update (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public static fun update (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public static synthetic fun update$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public static synthetic fun update$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/UpdateStatement;
	public static fun updateReturning (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static synthetic fun updateReturning$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static fun upsert (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;
	public static synthetic fun upsert$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/UpsertStatement;
	public static fun upsertReturning (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
	public static synthetic fun upsertReturning$default (Lorg/jetbrains/exposed/v1/core/statements/IStatementBuilder;Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lkotlin/jvm/functions/Function2;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/ReturningStatement;
}

public final class org/jetbrains/exposed/v1/core/statements/IStatementBuilderKt {
	public static final fun buildStatement (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public class org/jetbrains/exposed/v1/core/statements/InsertSelectStatement : org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (Ljava/util/List;Lorg/jetbrains/exposed/v1/core/AbstractQuery;Z)V
	public synthetic fun <init> (Ljava/util/List;Lorg/jetbrains/exposed/v1/core/AbstractQuery;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun arguments ()Ljava/lang/Iterable;
	public final fun getColumns ()Ljava/util/List;
	public final fun getSelectQuery ()Lorg/jetbrains/exposed/v1/core/AbstractQuery;
	public final fun isIgnore ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/statements/InsertStatement : org/jetbrains/exposed/v1/core/statements/UpdateBuilder {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	protected final fun clientDefaultColumns ()Ljava/util/List;
	public final fun columnsWithDatabaseDefaults ()Ljava/util/List;
	public final fun get (Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/Object;
	public final fun get (Lorg/jetbrains/exposed/v1/core/CompositeColumn;)Ljava/lang/Object;
	public fun getArguments ()Ljava/util/List;
	public final fun getInsertedCount ()I
	public final fun getOrNull (Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/Object;
	public final fun getResultedValues ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	protected fun isColumnValuePreferredFromResultSet (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)Z
	public final fun isIgnore ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public fun setArguments (Ljava/util/List;)V
	public final fun setInsertedCount (I)V
	public final fun setResultedValues (Ljava/util/List;)V
	protected final fun toSqlString (Ljava/util/List;Z)Ljava/lang/String;
	protected final fun valuesAndClientDefaults (Ljava/util/Map;)Ljava/util/Map;
	public static synthetic fun valuesAndClientDefaults$default (Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/Map;
	protected fun valuesAndDefaults (Ljava/util/Map;)Ljava/util/Map;
	public static synthetic fun valuesAndDefaults$default (Lorg/jetbrains/exposed/v1/core/statements/InsertStatement;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/Map;
}

public class org/jetbrains/exposed/v1/core/statements/MergeSelectStatement : org/jetbrains/exposed/v1/core/statements/MergeStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/QueryAlias;Lorg/jetbrains/exposed/v1/core/Op;)V
	public fun arguments ()Ljava/lang/Iterable;
	public final fun getOn ()Lorg/jetbrains/exposed/v1/core/Op;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/statements/MergeStatement : org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;)V
	public fun arguments ()Ljava/lang/Iterable;
	protected final fun getClauses ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public final fun whenMatchedDelete (Lorg/jetbrains/exposed/v1/core/Op;)V
	public static synthetic fun whenMatchedDelete$default (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;Lorg/jetbrains/exposed/v1/core/Op;ILjava/lang/Object;)V
	public final fun whenMatchedDoNothing (Lorg/jetbrains/exposed/v1/core/Op;)V
	public static synthetic fun whenMatchedDoNothing$default (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;Lorg/jetbrains/exposed/v1/core/Op;ILjava/lang/Object;)V
	public final fun whenMatchedUpdate (Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Op;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun whenMatchedUpdate$default (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Op;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun whenNotMatchedDoNothing (Lorg/jetbrains/exposed/v1/core/Op;)V
	public static synthetic fun whenNotMatchedDoNothing$default (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;Lorg/jetbrains/exposed/v1/core/Op;ILjava/lang/Object;)V
	public final fun whenNotMatchedInsert (Lorg/jetbrains/exposed/v1/core/Op;ZZLkotlin/jvm/functions/Function1;)V
	public static synthetic fun whenNotMatchedInsert$default (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement;Lorg/jetbrains/exposed/v1/core/Op;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class org/jetbrains/exposed/v1/core/statements/MergeStatement$Clause {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Op;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Op;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;
	public final fun component2 ()Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun component5 ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun copy (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Op;ZZ)Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$Clause;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$Clause;Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Op;ZZILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$Clause;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAction ()Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public final fun getAnd ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun getArguments ()Ljava/util/List;
	public final fun getDeleteWhere ()Lorg/jetbrains/exposed/v1/core/Op;
	public final fun getOverridingSystemValue ()Z
	public final fun getOverridingUserValue ()Z
	public final fun getType ()Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction : java/lang/Enum {
	public static final field DELETE Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public static final field DO_NOTHING Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public static final field INSERT Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public static final field UPDATE Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseAction;
}

public final class org/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition : java/lang/Enum {
	public static final field MATCHED Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;
	public static final field NOT_MATCHED Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/statements/MergeStatement$ClauseCondition;
}

public class org/jetbrains/exposed/v1/core/statements/MergeTableStatement : org/jetbrains/exposed/v1/core/statements/MergeStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Op;)V
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/statements/ReplaceSelectStatement : org/jetbrains/exposed/v1/core/statements/InsertSelectStatement {
	public fun <init> (Ljava/util/List;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/statements/ReplaceStatement : org/jetbrains/exposed/v1/core/statements/InsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;)V
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/statements/ReturningStatement : org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/statements/Statement;)V
	public fun arguments ()Ljava/lang/Iterable;
	public final fun getMainStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public final fun getReturningExpressions ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/v1/core/Table;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/statements/SQLServerBatchInsertStatement : org/jetbrains/exposed/v1/core/statements/BatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/Table;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	public final fun getColumnToReturnValue ()Lorg/jetbrains/exposed/v1/core/Column;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public fun validateLastBatch ()V
}

public abstract class org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/StatementType;Ljava/util/List;)V
	public abstract fun arguments ()Ljava/lang/Iterable;
	public final fun getTargets ()Ljava/util/List;
	public final fun getType ()Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public abstract fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public static synthetic fun prepareSQL$default (Lorg/jetbrains/exposed/v1/core/statements/Statement;Lorg/jetbrains/exposed/v1/core/Transaction;ZILjava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/statements/StatementContext {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/Statement;Ljava/lang/Iterable;)V
	public final fun getArgs ()Ljava/lang/Iterable;
	public final fun getStatement ()Lorg/jetbrains/exposed/v1/core/statements/Statement;
	public final fun sql (Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/statements/StatementGroup : java/lang/Enum {
	public static final field DDL Lorg/jetbrains/exposed/v1/core/statements/StatementGroup;
	public static final field DML Lorg/jetbrains/exposed/v1/core/statements/StatementGroup;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/StatementGroup;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/statements/StatementGroup;
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/StatementInterceptor {
	public abstract fun afterCommit (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public abstract fun afterExecution (Lorg/jetbrains/exposed/v1/core/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public abstract fun afterRollback (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public abstract fun afterStatementPrepared (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public abstract fun beforeCommit (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public abstract fun beforeExecution (Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/StatementContext;)V
	public abstract fun beforeRollback (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public abstract fun keepUserDataInTransactionStoreOnCommit (Ljava/util/Map;)Ljava/util/Map;
}

public final class org/jetbrains/exposed/v1/core/statements/StatementInterceptor$DefaultImpls {
	public static fun afterCommit (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun afterExecution (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public static fun afterRollback (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun afterStatementPrepared (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;)V
	public static fun beforeCommit (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun beforeExecution (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;Lorg/jetbrains/exposed/v1/core/statements/StatementContext;)V
	public static fun beforeRollback (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public static fun keepUserDataInTransactionStoreOnCommit (Lorg/jetbrains/exposed/v1/core/statements/StatementInterceptor;Ljava/util/Map;)Ljava/util/Map;
}

public final class org/jetbrains/exposed/v1/core/statements/StatementKt {
	public static final fun expandArgs (Lorg/jetbrains/exposed/v1/core/statements/StatementContext;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/statements/StatementResult {
}

public final class org/jetbrains/exposed/v1/core/statements/StatementResult$Count : org/jetbrains/exposed/v1/core/statements/StatementResult {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lorg/jetbrains/exposed/v1/core/statements/StatementResult$Count;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/statements/StatementResult$Count;IILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/StatementResult$Count;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/statements/StatementResult$Object : org/jetbrains/exposed/v1/core/statements/StatementResult {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;)V
	public final fun component1 ()Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;
	public final fun copy (Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;)Lorg/jetbrains/exposed/v1/core/statements/StatementResult$Object;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/statements/StatementResult$Object;Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/statements/StatementResult$Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getResultSet ()Lorg/jetbrains/exposed/v1/core/statements/api/ResultApi;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/statements/StatementType : java/lang/Enum {
	public static final field ALTER Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field CREATE Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field DELETE Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field DROP Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field EXEC Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field GRANT Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field INSERT Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field MERGE Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field MULTI Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field OTHER Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field PRAGMA Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field SELECT Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field SHOW Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field TRUNCATE Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static final field UPDATE Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getGroup ()Lorg/jetbrains/exposed/v1/core/statements/StatementGroup;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/StatementType;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/statements/StatementType;
}

public abstract class org/jetbrains/exposed/v1/core/statements/UpdateBuilder : org/jetbrains/exposed/v1/core/statements/Statement {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/StatementType;Ljava/util/List;)V
	public fun contains (Lorg/jetbrains/exposed/v1/core/Column;)Z
	protected final fun getHasBatchedValues ()Z
	public final fun getValues ()Ljava/util/Map;
	public fun set (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public fun set (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/AbstractQuery;)V
	public fun set (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public fun set (Lorg/jetbrains/exposed/v1/core/CompositeColumn;Ljava/lang/Object;)V
	protected final fun setHasBatchedValues (Z)V
	public final fun setWithEntityIdExpression (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Expression;)V
	public final fun setWithEntityIdValue (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public final fun setWithNullableEntityIdValue (Lorg/jetbrains/exposed/v1/core/Column;Ljava/lang/Object;)V
	public fun update (Lorg/jetbrains/exposed/v1/core/Column;Lkotlin/jvm/functions/Function1;)V
	public fun update (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/Expression;)V
}

public class org/jetbrains/exposed/v1/core/statements/UpdateStatement : org/jetbrains/exposed/v1/core/statements/UpdateBuilder {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/Op;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/ColumnSet;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/Op;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun arguments ()Ljava/lang/Iterable;
	public fun getFirstDataSet ()Ljava/util/List;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getTargetsSet ()Lorg/jetbrains/exposed/v1/core/ColumnSet;
	public final fun getWhere ()Lorg/jetbrains/exposed/v1/core/Op;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/UpsertBuilder {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/statements/UpsertBuilder$Companion;
	public abstract fun insertValue (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public abstract fun storeUpdateValues (Lkotlin/jvm/functions/Function2;)V
}

public final class org/jetbrains/exposed/v1/core/statements/UpsertBuilder$Companion {
	public final fun getFunctionProvider (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;
}

public final class org/jetbrains/exposed/v1/core/statements/UpsertBuilder$DefaultImpls {
	public static fun insertValue (Lorg/jetbrains/exposed/v1/core/statements/UpsertBuilder;Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public static fun storeUpdateValues (Lorg/jetbrains/exposed/v1/core/statements/UpsertBuilder;Lkotlin/jvm/functions/Function2;)V
}

public class org/jetbrains/exposed/v1/core/statements/UpsertStatement : org/jetbrains/exposed/v1/core/statements/InsertStatement, org/jetbrains/exposed/v1/core/statements/UpsertBuilder {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;)V
	public fun <init> (Lorg/jetbrains/exposed/v1/core/Table;[Lorg/jetbrains/exposed/v1/core/Column;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	public final fun getKeys ()[Lorg/jetbrains/exposed/v1/core/Column;
	public final fun getOnUpdate ()Ljava/util/List;
	public final fun getOnUpdateExclude ()Ljava/util/List;
	public final fun getWhere ()Lorg/jetbrains/exposed/v1/core/Op;
	public fun insertValue (Lorg/jetbrains/exposed/v1/core/Column;)Lorg/jetbrains/exposed/v1/core/ExpressionWithColumnType;
	public fun prepareSQL (Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public fun storeUpdateValues (Lkotlin/jvm/functions/Function2;)V
}

public final class org/jetbrains/exposed/v1/core/statements/api/ExposedBlob {
	public fun <init> (Ljava/io/InputStream;)V
	public fun <init> ([B)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBytes ()[B
	public final fun getInputStream ()Ljava/io/InputStream;
	public fun hashCode ()I
	public final fun hexString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/statements/api/ExposedDatabaseMetadata {
	public fun <init> (Ljava/lang/String;)V
	public abstract fun cleanCache ()V
	public final fun getDatabase ()Ljava/lang/String;
	public abstract fun getIdentifierManager ()Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi;
	protected final fun normalizedColumnType (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun resetCurrentScheme ()V
	public abstract fun resolveReferenceOption (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	protected final fun sanitizedDefault (Ljava/lang/String;)Ljava/lang/String;
}

protected final class org/jetbrains/exposed/v1/core/statements/api/ExposedDatabaseMetadata$CachableMapWithDefault : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedDatabaseMetadata;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/statements/api/ExposedDatabaseMetadata;Ljava/util/Map;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getDefault ()Lkotlin/jvm/functions/Function1;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public abstract class org/jetbrains/exposed/v1/core/statements/api/ExposedSavepoint {
	public fun <init> (Ljava/lang/String;)V
	public final fun getName ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi {
	public fun <init> ()V
	public final fun cutIfNecessaryAndQuote (Ljava/lang/String;)Ljava/lang/String;
	protected abstract fun dbKeywords ()Ljava/util/List;
	protected abstract fun getExtraNameCharacters ()Ljava/lang/String;
	protected final fun getIdentifierLengthLimit ()I
	public final fun getKeywords ()Ljava/util/Set;
	protected abstract fun getMaxColumnNameLength ()I
	protected abstract fun getOracleVersion ()Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
	public abstract fun getQuoteString ()Ljava/lang/String;
	protected abstract fun getSupportsMixedIdentifiers ()Z
	protected abstract fun getSupportsMixedQuotedIdentifiers ()Z
	public final fun inProperCase (Ljava/lang/String;)Ljava/lang/String;
	public final fun isDotPrefixedAndUnquoted (Ljava/lang/String;)Z
	protected abstract fun isLowerCaseIdentifiers ()Z
	protected abstract fun isLowerCaseQuotedIdentifiers ()Z
	protected abstract fun isUpperCaseIdentifiers ()Z
	protected abstract fun isUpperCaseQuotedIdentifiers ()Z
	public final fun needQuotes (Ljava/lang/String;)Z
	public final fun quoteIdentifierWhenWrongCaseOrNecessary (Ljava/lang/String;)Ljava/lang/String;
	public final fun quoteIfNecessary (Ljava/lang/String;)Ljava/lang/String;
	public final fun shouldQuoteIdentifier (Ljava/lang/String;)Z
}

protected final class org/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion : java/lang/Enum {
	public static final field NonOracle Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
	public static final field Oracle11g Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
	public static final field Oracle12_1g Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
	public static final field Oracle12plus Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi$OracleVersion;
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi {
	public abstract fun fillParameters (Ljava/lang/Iterable;)I
	public abstract fun getArrayColumnType (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ArrayColumnType;
	public abstract fun set (ILjava/lang/Object;)V
	public abstract fun set (ILjava/lang/Object;Lorg/jetbrains/exposed/v1/core/IColumnType;)V
	public abstract fun setArray (ILjava/lang/String;[Ljava/lang/Object;)V
	public abstract fun setArray (ILorg/jetbrains/exposed/v1/core/ArrayColumnType;[Ljava/lang/Object;)V
	public abstract fun setInputStream (ILjava/io/InputStream;Z)V
	public abstract fun setNull (ILorg/jetbrains/exposed/v1/core/IColumnType;)V
}

public final class org/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi$DefaultImpls {
	public static fun fillParameters (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;Ljava/lang/Iterable;)I
	public static fun getArrayColumnType (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/ArrayColumnType;
	public static fun set (Lorg/jetbrains/exposed/v1/core/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/api/ResultApi : java/lang/AutoCloseable {
	public abstract fun mapRows (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class org/jetbrains/exposed/v1/core/statements/api/RowApi {
	public abstract fun getObject (I)Ljava/lang/Object;
	public abstract fun getObject (ILjava/lang/Class;)Ljava/lang/Object;
	public abstract fun getObject (ILjava/lang/Class;Lorg/jetbrains/exposed/v1/core/ColumnType;)Ljava/lang/Object;
	public abstract fun getObject (Ljava/lang/String;)Ljava/lang/Object;
	public abstract fun getObject (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public abstract fun getObject (Ljava/lang/String;Ljava/lang/Class;Lorg/jetbrains/exposed/v1/core/ColumnType;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/statements/api/RowApi$DefaultImpls {
	public static fun getObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;ILjava/lang/Class;Lorg/jetbrains/exposed/v1/core/ColumnType;)Ljava/lang/Object;
	public static fun getObject (Lorg/jetbrains/exposed/v1/core/statements/api/RowApi;Ljava/lang/String;Ljava/lang/Class;Lorg/jetbrains/exposed/v1/core/ColumnType;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/v1/core/transactions/CoreTransactionManager {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/transactions/CoreTransactionManager;
	public final fun closeAndUnregisterDatabase (Lorg/jetbrains/exposed/v1/core/DatabaseApi;)V
	public final fun currentTransaction ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public final fun currentTransactionOrNull ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public final fun getCurrentThreadManager ()Lorg/jetbrains/exposed/v1/core/transactions/TransactionManagerApi;
	public final fun getDatabaseManager (Lorg/jetbrains/exposed/v1/core/DatabaseApi;)Lorg/jetbrains/exposed/v1/core/transactions/TransactionManagerApi;
	public final fun getDefaultDatabase ()Lorg/jetbrains/exposed/v1/core/DatabaseApi;
	public final fun getDefaultDatabaseOrFirst ()Lorg/jetbrains/exposed/v1/core/DatabaseApi;
	public final fun registerDatabaseManager (Lorg/jetbrains/exposed/v1/core/DatabaseApi;Lorg/jetbrains/exposed/v1/core/transactions/TransactionManagerApi;)V
	public final fun resetCurrentThreadManager (Lorg/jetbrains/exposed/v1/core/transactions/TransactionManagerApi;)V
	public final fun setDefaultDatabase (Lorg/jetbrains/exposed/v1/core/DatabaseApi;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/transactions/TransactionInterface {
	public abstract fun getDb ()Lorg/jetbrains/exposed/v1/core/DatabaseApi;
	public abstract fun getOuterTransaction ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public abstract fun getReadOnly ()Z
}

public abstract interface class org/jetbrains/exposed/v1/core/transactions/TransactionManagerApi {
	public abstract fun bindTransactionToThread (Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public abstract fun currentOrNull ()Lorg/jetbrains/exposed/v1/core/Transaction;
	public abstract fun getDefaultMaxAttempts ()I
	public abstract fun getDefaultMaxRetryDelay ()J
	public abstract fun getDefaultMinRetryDelay ()J
	public abstract fun getDefaultReadOnly ()Z
	public abstract fun setDefaultMaxAttempts (I)V
	public abstract fun setDefaultMaxRetryDelay (J)V
	public abstract fun setDefaultMinRetryDelay (J)V
	public abstract fun setDefaultReadOnly (Z)V
}

public final class org/jetbrains/exposed/v1/core/transactions/TransactionScopeKt {
	public static final fun nullableTransactionScope ()Lorg/jetbrains/exposed/v1/core/transactions/TransactionStore;
	public static final fun transactionScope (Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadWriteProperty;
}

public final class org/jetbrains/exposed/v1/core/transactions/TransactionStore : kotlin/properties/ReadWriteProperty {
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getInit ()Lkotlin/jvm/functions/Function1;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ColumnMetadata {
	public fun <init> (Ljava/lang/String;ILjava/lang/String;ZLjava/lang/Integer;Ljava/lang/Integer;ZLjava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun component5 ()Ljava/lang/Integer;
	public final fun component6 ()Ljava/lang/Integer;
	public final fun component7 ()Z
	public final fun component8 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;ILjava/lang/String;ZLjava/lang/Integer;Ljava/lang/Integer;ZLjava/lang/String;)Lorg/jetbrains/exposed/v1/core/vendors/ColumnMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/vendors/ColumnMetadata;Ljava/lang/String;ILjava/lang/String;ZLjava/lang/Integer;Ljava/lang/Integer;ZLjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/vendors/ColumnMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoIncrement ()Z
	public final fun getDefaultDbValue ()Ljava/lang/String;
	public final fun getJdbcType ()I
	public final fun getName ()Ljava/lang/String;
	public final fun getNullable ()Z
	public final fun getScale ()Ljava/lang/Integer;
	public final fun getSize ()Ljava/lang/Integer;
	public final fun getSqlType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/vendors/DataTypeProvider {
	public fun <init> ()V
	public abstract fun binaryType ()Ljava/lang/String;
	public fun binaryType (I)Ljava/lang/String;
	public fun blobType ()Ljava/lang/String;
	public fun booleanFromStringToBoolean (Ljava/lang/String;)Z
	public fun booleanToStatementString (Z)Ljava/lang/String;
	public fun booleanType ()Ljava/lang/String;
	public fun byteType ()Ljava/lang/String;
	public fun dateTimeType ()Ljava/lang/String;
	public fun dateType ()Ljava/lang/String;
	public fun doubleType ()Ljava/lang/String;
	public fun floatType ()Ljava/lang/String;
	public abstract fun hexToDb (Ljava/lang/String;)Ljava/lang/String;
	public fun integerAutoincType ()Ljava/lang/String;
	public fun integerType ()Ljava/lang/String;
	public fun jsonBType ()Ljava/lang/String;
	public fun jsonType ()Ljava/lang/String;
	public fun largeTextType ()Ljava/lang/String;
	public fun longAutoincType ()Ljava/lang/String;
	public fun longType ()Ljava/lang/String;
	public fun mediumTextType ()Ljava/lang/String;
	public fun precessOrderByClause (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/SortOrder;)V
	public fun processForDefaultValue (Lorg/jetbrains/exposed/v1/core/Expression;)Ljava/lang/String;
	public fun shortType ()Ljava/lang/String;
	public fun textType ()Ljava/lang/String;
	public fun timeType ()Ljava/lang/String;
	public fun timestampType ()Ljava/lang/String;
	public fun timestampWithTimeZoneType ()Ljava/lang/String;
	public fun ubyteType ()Ljava/lang/String;
	public fun uintegerAutoincType ()Ljava/lang/String;
	public fun uintegerType ()Ljava/lang/String;
	public fun ulongAutoincType ()Ljava/lang/String;
	public fun ulongType ()Ljava/lang/String;
	public fun ushortType ()Ljava/lang/String;
	public fun uuidToDB (Ljava/util/UUID;)Ljava/lang/Object;
	public fun uuidType ()Ljava/lang/String;
	public fun varcharType (I)Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/v1/core/vendors/DatabaseDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect$Companion;
	public abstract fun addPrimaryKey (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/String;
	public abstract fun areEquivalentColumnTypes (Ljava/lang/String;ILjava/lang/String;)Z
	public abstract fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	public abstract fun createSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
	public abstract fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public abstract fun dropSchema (Lorg/jetbrains/exposed/v1/core/Schema;Z)Ljava/lang/String;
	public abstract fun getDataTypeProvider ()Lorg/jetbrains/exposed/v1/core/vendors/DataTypeProvider;
	public abstract fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public abstract fun getFunctionProvider ()Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;
	public abstract fun getLikePatternSpecialChars ()Ljava/util/Map;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getNeedsQuotesWhenSymbolsInNames ()Z
	public abstract fun getNeedsSequenceToAutoInc ()Z
	public abstract fun getRequiresAutoCommitOnCreateDrop ()Z
	public abstract fun getSequenceMaxValue ()J
	public abstract fun getSupportsColumnTypeChange ()Z
	public abstract fun getSupportsCreateSchema ()Z
	public abstract fun getSupportsCreateSequence ()Z
	public abstract fun getSupportsDualTableConcept ()Z
	public abstract fun getSupportsIfNotExists ()Z
	public abstract fun getSupportsMultipleGeneratedKeys ()Z
	public abstract fun getSupportsOnUpdate ()Z
	public abstract fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public abstract fun getSupportsOrderByNullsFirstLast ()Z
	public abstract fun getSupportsRestrictReferenceOption ()Z
	public abstract fun getSupportsSelectForUpdate ()Z
	public abstract fun getSupportsSequenceAsGeneratedKeys ()Z
	public abstract fun getSupportsSetDefaultReferenceOption ()Z
	public abstract fun getSupportsSubqueryUnions ()Z
	public abstract fun getSupportsTernaryAffectedRowValues ()Z
	public abstract fun getSupportsWindowFrameGroupsMode ()Z
	public abstract fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public abstract fun listDatabases ()Ljava/lang/String;
	public abstract fun modifyColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public abstract fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/DatabaseDialect$Companion {
}

public final class org/jetbrains/exposed/v1/core/vendors/DatabaseDialect$DefaultImpls {
	public static fun areEquivalentColumnTypes (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Ljava/lang/String;ILjava/lang/String;)Z
	public static fun createDatabase (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Ljava/lang/String;)Ljava/lang/String;
	public static fun createSchema (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
	public static fun dropDatabase (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Ljava/lang/String;)Ljava/lang/String;
	public static fun dropSchema (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Lorg/jetbrains/exposed/v1/core/Schema;Z)Ljava/lang/String;
	public static fun getDefaultReferenceOption (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public static fun getLikePatternSpecialChars (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Ljava/util/Map;
	public static fun getNeedsQuotesWhenSymbolsInNames (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getNeedsSequenceToAutoInc (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getRequiresAutoCommitOnCreateDrop (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSequenceMaxValue (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)J
	public static fun getSupportsColumnTypeChange (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsCreateSchema (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsCreateSequence (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsDualTableConcept (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsIfNotExists (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsOnUpdate (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsOnlyIdentifiersInGeneratedKeys (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsOrderByNullsFirstLast (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsRestrictReferenceOption (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsSelectForUpdate (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsSequenceAsGeneratedKeys (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsSetDefaultReferenceOption (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsSubqueryUnions (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsTernaryAffectedRowValues (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun getSupportsWindowFrameGroupsMode (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Z
	public static fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public static fun listDatabases (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Ljava/lang/String;
	public static fun setSchema (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/DatabaseDialectKt {
	public static final fun getCurrentDialect ()Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;
}

public abstract class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getQuerySuffix ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdate : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdate;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateOrShareMode;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateOrShareMode;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getQuerySuffix ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateOrShareMode {
	public abstract fun getStatement ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MariaDB {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MariaDB;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MariaDB$LockInShareMode : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MariaDB$LockInShareMode;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL;
}

public class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$ForShare : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$ForShare$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$ForShare$Companion : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$ForShare {
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$ForUpdate : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$LockInShareMode : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$LockInShareMode;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE : java/lang/Enum, org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateOrShareMode {
	public static final field NO_WAIT Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;
	public static final field SKIP_LOCKED Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getStatement ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$MySQL$MODE;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$NoForUpdateOption : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$NoForUpdateOption;
	public fun equals (Ljava/lang/Object;)Z
	public fun getQuerySuffix ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$Oracle {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$Oracle;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$Oracle$ForUpdateNoWait : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$Oracle$ForUpdateNoWait;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$Oracle$ForUpdateWait : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption {
	public fun <init> (I)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL {
	public static final field INSTANCE Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL;
}

public class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForKeyShare : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForKeyShare$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForKeyShare$Companion : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForKeyShare {
}

public class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate$Companion : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate {
}

public class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForShare : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForShare$Companion;
	public fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForShare$Companion : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForShare {
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$ForUpdate : org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateBase {
	public fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/v1/core/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE : java/lang/Enum, org/jetbrains/exposed/v1/core/vendors/ForUpdateOption$ForUpdateOrShareMode {
	public static final field NO_WAIT Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;
	public static final field SKIP_LOCKED Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getStatement ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/vendors/ForUpdateOption$PostgreSQL$MODE;
}

public abstract class org/jetbrains/exposed/v1/core/vendors/FunctionProvider {
	public fun <init> ()V
	protected final fun appendJoinPart (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Transaction;Z)V
	public static synthetic fun appendJoinPart$default (Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Transaction;ZILjava/lang/Object;)V
	protected final fun appendJoinPartForUpdateClause (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Join;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	protected fun appendOptionsToExplain (Ljava/lang/StringBuilder;Ljava/lang/String;)V
	public fun arraySlice (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/Integer;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun cast (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun charLength (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun concat (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/QueryBuilder;[Lorg/jetbrains/exposed/v1/core/Expression;)V
	public fun date (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun day (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun delete (ZLorg/jetbrains/exposed/v1/core/Join;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun delete (ZLorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun explain (ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun getDEFAULT_VALUE_EXPRESSION ()Ljava/lang/String;
	public fun groupConcat (Lorg/jetbrains/exposed/v1/core/GroupConcat;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun hour (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun insert (ZLorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun insertValue (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun jsonContains (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun jsonExists (Lorg/jetbrains/exposed/v1/core/Expression;[Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun jsonExtract (Lorg/jetbrains/exposed/v1/core/Expression;[Ljava/lang/String;ZLorg/jetbrains/exposed/v1/core/IColumnType;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun locate (Lorg/jetbrains/exposed/v1/core/QueryBuilder;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;)V
	public fun match (Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/v1/core/Op;
	public static synthetic fun match$default (Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;Lorg/jetbrains/exposed/v1/core/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider$MatchMode;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/Op;
	public fun merge (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;)Ljava/lang/String;
	public fun mergeSelect (Lorg/jetbrains/exposed/v1/core/Table;Lorg/jetbrains/exposed/v1/core/QueryAlias;Lorg/jetbrains/exposed/v1/core/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Z)Ljava/lang/String;
	public fun minute (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun month (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun nextVal (Lorg/jetbrains/exposed/v1/core/Sequence;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun queryLimit (IJZ)Ljava/lang/String;
	public fun queryLimitAndOffset (Ljava/lang/Integer;JZ)Ljava/lang/String;
	public fun random (Ljava/lang/Integer;)Ljava/lang/String;
	public fun regexp (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;ZLorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun replace (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Transaction;Z)Ljava/lang/String;
	public static synthetic fun replace$default (Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/Transaction;ZILjava/lang/Object;)Ljava/lang/String;
	public fun returning (Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun second (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun stdDevPop (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun stdDevSamp (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun substring (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/String;)V
	public static synthetic fun substring$default (Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;Ljava/lang/String;ILjava/lang/Object;)V
	public fun time (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun update (Lorg/jetbrains/exposed/v1/core/Join;Ljava/util/List;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun update (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Ljava/lang/Integer;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun upsert (Lorg/jetbrains/exposed/v1/core/Table;Ljava/util/List;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Op;Lorg/jetbrains/exposed/v1/core/Transaction;)Ljava/lang/String;
	public fun varPop (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun varSamp (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
	public fun year (Lorg/jetbrains/exposed/v1/core/Expression;Lorg/jetbrains/exposed/v1/core/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/v1/core/vendors/FunctionProvider$MatchMode {
	public abstract fun mode ()Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/vendors/H2Dialect : org/jetbrains/exposed/v1/core/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$Companion;
	public fun <init> ()V
	public fun areEquivalentColumnTypes (Ljava/lang/String;ILjava/lang/String;)Z
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun getDataTypeProvider ()Lorg/jetbrains/exposed/v1/core/vendors/DataTypeProvider;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public final fun getDelegatedDialectNameProvider ()Lorg/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider;
	public fun getFunctionProvider ()Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;
	public final fun getH2Mode ()Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public final fun getMajorVersion ()Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2MajorVersion;
	public fun getName ()Ljava/lang/String;
	public fun getNeedsSequenceToAutoInc ()Z
	public final fun getOriginalDataTypeProvider ()Lorg/jetbrains/exposed/v1/core/vendors/DataTypeProvider;
	public final fun getOriginalFunctionProvider ()Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;
	public fun getSupportsColumnTypeChange ()Z
	public fun getSupportsCreateSchema ()Z
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsDualTableConcept ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsTernaryAffectedRowValues ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public final fun isSecondVersion ()Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/H2Dialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public final class org/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode : java/lang/Enum {
	public static final field MariaDB Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public static final field MySQL Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public static final field Oracle Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public static final field PostgreSQL Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public static final field SQLServer Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
}

public final class org/jetbrains/exposed/v1/core/vendors/H2Dialect$H2MajorVersion : java/lang/Enum {
	public static final field One Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2MajorVersion;
	public static final field Two Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2MajorVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2MajorVersion;
	public static fun values ()[Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2MajorVersion;
}

public final class org/jetbrains/exposed/v1/core/vendors/H2Kt {
	public static final fun getH2Mode (Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)Lorg/jetbrains/exposed/v1/core/vendors/H2Dialect$H2CompatibilityMode;
}

public final class org/jetbrains/exposed/v1/core/vendors/KeywordsKt {
	public static final fun getANSI_SQL_2003_KEYWORDS ()Ljava/util/Set;
	public static final fun getVENDORS_KEYWORDS ()Ljava/util/Map;
}

public class org/jetbrains/exposed/v1/core/vendors/MariaDBDialect : org/jetbrains/exposed/v1/core/vendors/MysqlDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/MariaDBDialect$Companion;
	public fun <init> ()V
	public fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	public fun getDataTypeProvider ()Lorg/jetbrains/exposed/v1/core/vendors/DataTypeProvider;
	public fun getFunctionProvider ()Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;
	public fun getName ()Ljava/lang/String;
	public fun getSequenceMaxValue ()J
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun isFractionDateTimeSupported ()Z
	public fun isTimeZoneOffsetSupported ()Z
}

public final class org/jetbrains/exposed/v1/core/vendors/MariaDBDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/v1/core/vendors/MysqlDialect : org/jetbrains/exposed/v1/core/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/MysqlDialect$Companion;
	public fun <init> ()V
	public fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/v1/core/Schema;Z)Ljava/lang/String;
	protected final fun getNotAcceptableDefaults ()Ljava/util/List;
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsTernaryAffectedRowValues ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun isFractionDateTimeSupported ()Z
	public fun isTimeZoneOffsetSupported ()Z
	public fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/MysqlDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/v1/core/vendors/OracleDialect : org/jetbrains/exposed/v1/core/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/OracleDialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/v1/core/Schema;Z)Ljava/lang/String;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public fun getNeedsQuotesWhenSymbolsInNames ()Z
	public fun getNeedsSequenceToAutoInc ()Z
	public fun getSupportsDualTableConcept ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsOnUpdate ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsRestrictReferenceOption ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/OracleDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/v1/core/vendors/PostgreSQLDialect : org/jetbrains/exposed/v1/core/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/PostgreSQLDialect$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	protected fun createIndexWithType (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getRequiresAutoCommitOnCreateDrop ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/PostgreSQLDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/v1/core/vendors/PostgreSQLNGDialect : org/jetbrains/exposed/v1/core/vendors/PostgreSQLDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/PostgreSQLNGDialect$Companion;
	public fun <init> ()V
	public fun getRequiresAutoCommitOnCreateDrop ()Z
}

public final class org/jetbrains/exposed/v1/core/vendors/PostgreSQLNGDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public final class org/jetbrains/exposed/v1/core/vendors/PrimaryKeyMetadata {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/vendors/PrimaryKeyMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/vendors/PrimaryKeyMetadata;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/vendors/PrimaryKeyMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColumnNames ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/exposed/v1/core/vendors/SQLServerDialect : org/jetbrains/exposed/v1/core/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/SQLServerDialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	protected fun createIndexWithType (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/v1/core/Schema;Z)Ljava/lang/String;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public fun getLikePatternSpecialChars ()Ljava/util/Map;
	public fun getNeedsQuotesWhenSymbolsInNames ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsRestrictReferenceOption ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/SQLServerDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/v1/core/vendors/SQLiteDialect : org/jetbrains/exposed/v1/core/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/v1/core/vendors/SQLiteDialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun getSupportsCreateSchema ()Z
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/core/vendors/SQLiteDialect$Companion : org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
}

public final class org/jetbrains/exposed/v1/core/vendors/SchemaMetadata {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/v1/core/vendors/SchemaMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/v1/core/vendors/SchemaMetadata;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/v1/core/vendors/SchemaMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSchemaName ()Ljava/lang/String;
	public final fun getTableNames ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/vendors/VendorDialect : org/jetbrains/exposed/v1/core/vendors/DatabaseDialect {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/DataTypeProvider;Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;)V
	public fun addPrimaryKey (Lorg/jetbrains/exposed/v1/core/Table;Ljava/lang/String;[Lorg/jetbrains/exposed/v1/core/Column;)Ljava/lang/String;
	public fun areEquivalentColumnTypes (Ljava/lang/String;ILjava/lang/String;)Z
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	protected fun createIndexWithType (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/v1/core/Schema;Z)Ljava/lang/String;
	public final fun filterCondition (Lorg/jetbrains/exposed/v1/core/Index;)Ljava/lang/String;
	public fun getDataTypeProvider ()Lorg/jetbrains/exposed/v1/core/vendors/DataTypeProvider;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/v1/core/ReferenceOption;
	public fun getFunctionProvider ()Lorg/jetbrains/exposed/v1/core/vendors/FunctionProvider;
	protected final fun getIdentifierManager ()Lorg/jetbrains/exposed/v1/core/statements/api/IdentifierManagerApi;
	public fun getLikePatternSpecialChars ()Ljava/util/Map;
	public fun getName ()Ljava/lang/String;
	public fun getNeedsQuotesWhenSymbolsInNames ()Z
	public fun getNeedsSequenceToAutoInc ()Z
	public fun getRequiresAutoCommitOnCreateDrop ()Z
	public fun getSequenceMaxValue ()J
	public fun getSupportsColumnTypeChange ()Z
	public fun getSupportsCreateSchema ()Z
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsDualTableConcept ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsOnUpdate ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsRestrictReferenceOption ()Z
	public fun getSupportsSelectForUpdate ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsTernaryAffectedRowValues ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/v1/core/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/v1/core/Column;Lorg/jetbrains/exposed/v1/core/ColumnDiff;)Ljava/util/List;
	public fun setSchema (Lorg/jetbrains/exposed/v1/core/Schema;)Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/v1/core/vendors/VendorDialect$DialectNameProvider {
	public fun <init> (Ljava/lang/String;)V
	public final fun getDialectName ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/exceptions/DuplicateColumnException : java/lang/ExceptionInInitializerError {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/exposed/v1/exceptions/ExposedSQLException : java/sql/SQLException {
	public fun <init> (Ljava/lang/Throwable;Ljava/util/List;Lorg/jetbrains/exposed/v1/core/Transaction;)V
	public final fun causedByQueries ()Ljava/util/List;
	public final fun getContexts ()Ljava/util/List;
	public fun getErrorCode ()I
	public fun getSQLState ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/v1/exceptions/LongQueryException : java/lang/RuntimeException {
	public fun <init> ()V
}

public final class org/jetbrains/exposed/v1/exceptions/UnsupportedByDialectException : java/lang/UnsupportedOperationException {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;)V
	public final fun getDialect ()Lorg/jetbrains/exposed/v1/core/vendors/DatabaseDialect;
}

