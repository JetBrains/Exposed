public class org/jetbrains/exposed/dao/id/EntityID : java/lang/Comparable {
	public fun <init> (Ljava/lang/Comparable;Lorg/jetbrains/exposed/dao/id/IdTable;)V
	protected fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;Ljava/lang/Comparable;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/exposed/dao/id/EntityID;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTable ()Lorg/jetbrains/exposed/dao/id/IdTable;
	public final fun getValue ()Ljava/lang/Comparable;
	public final fun get_value ()Ljava/lang/Object;
	public fun hashCode ()I
	protected fun invokeOnNoValue ()V
	public final fun set_value (Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/dao/id/EntityIDFactory {
	public abstract fun createEntityID (Ljava/lang/Comparable;Lorg/jetbrains/exposed/dao/id/IdTable;)Lorg/jetbrains/exposed/dao/id/EntityID;
}

public final class org/jetbrains/exposed/dao/id/EntityIDFunctionProvider {
	public static final field INSTANCE Lorg/jetbrains/exposed/dao/id/EntityIDFunctionProvider;
	public final fun createEntityID (Ljava/lang/Comparable;Lorg/jetbrains/exposed/dao/id/IdTable;)Lorg/jetbrains/exposed/dao/id/EntityID;
}

public abstract class org/jetbrains/exposed/dao/id/IdTable : org/jetbrains/exposed/sql/Table {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public abstract fun getId ()Lorg/jetbrains/exposed/sql/Column;
}

public class org/jetbrains/exposed/dao/id/IntIdTable : org/jetbrains/exposed/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/sql/Table$PrimaryKey;
}

public class org/jetbrains/exposed/dao/id/LongIdTable : org/jetbrains/exposed/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/sql/Table$PrimaryKey;
}

public class org/jetbrains/exposed/dao/id/UUIDTable : org/jetbrains/exposed/dao/id/IdTable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getId ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getPrimaryKey ()Lorg/jetbrains/exposed/sql/Table$PrimaryKey;
}

public final class org/jetbrains/exposed/exceptions/DuplicateColumnException : java/lang/ExceptionInInitializerError {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/exposed/exceptions/ExposedSQLException : java/sql/SQLException {
	public fun <init> (Ljava/lang/Throwable;Ljava/util/List;Lorg/jetbrains/exposed/sql/Transaction;)V
	public final fun causedByQueries ()Ljava/util/List;
	public final fun getContexts ()Ljava/util/List;
	public fun getErrorCode ()I
	public fun getSQLState ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/exceptions/LongQueryException : java/lang/RuntimeException {
	public fun <init> ()V
}

public final class org/jetbrains/exposed/exceptions/UnsupportedByDialectException : java/lang/UnsupportedOperationException {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)V
	public final fun getDialect ()Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;
}

public abstract class org/jetbrains/exposed/sql/AbstractQuery : org/jetbrains/exposed/sql/statements/Statement, org/jetbrains/exposed/sql/SizedIterable {
	public static final field Companion Lorg/jetbrains/exposed/sql/AbstractQuery$Companion;
	public fun <init> (Ljava/util/List;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	protected final fun copyTo (Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public final fun fetchSize (I)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	protected final fun getCount ()Z
	public final fun getFetchSize ()Ljava/lang/Integer;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getOffset ()J
	public final fun getOrderByExpressions ()Ljava/util/List;
	protected abstract fun getQueryToExecute ()Lorg/jetbrains/exposed/sql/statements/Statement;
	public abstract fun getSet ()Lorg/jetbrains/exposed/sql/FieldSet;
	protected final fun getTransaction ()Lorg/jetbrains/exposed/sql/Transaction;
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (IJ)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public synthetic fun limit (IJ)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun orderBy (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/SortOrder;)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public synthetic fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public static synthetic fun orderBy$default (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/SortOrder;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public abstract fun prepareSQL (Lorg/jetbrains/exposed/sql/QueryBuilder;)Ljava/lang/String;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
	protected final fun setCount (Z)V
	protected final fun setLimit (Ljava/lang/Integer;)V
	public abstract fun withDistinct (Z)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public static synthetic fun withDistinct$default (Lorg/jetbrains/exposed/sql/AbstractQuery;ZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/AbstractQuery;
}

public final class org/jetbrains/exposed/sql/AbstractQuery$Companion {
}

public final class org/jetbrains/exposed/sql/Alias : org/jetbrains/exposed/sql/Table {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;)V
	public fun createStatement ()Ljava/lang/Void;
	public synthetic fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/lang/Void;
	public synthetic fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun getAlias ()Ljava/lang/String;
	public fun getColumns ()Ljava/util/List;
	public final fun getDelegate ()Lorg/jetbrains/exposed/sql/Table;
	public fun getFields ()Ljava/util/List;
	public fun getTableName ()Ljava/lang/String;
	public final fun getTableNameWithAlias ()Ljava/lang/String;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/lang/Void;
	public synthetic fun modifyStatement ()Ljava/util/List;
	public final fun originalColumn (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
}

public final class org/jetbrains/exposed/sql/AliasKt {
	public static final fun alias (Lorg/jetbrains/exposed/sql/AbstractQuery;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/QueryAlias;
	public static final fun alias (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/ExpressionAlias;
	public static final fun alias (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Alias;
	public static final fun getLastQueryAlias (Lorg/jetbrains/exposed/sql/Join;)Lorg/jetbrains/exposed/sql/QueryAlias;
	public static final fun joinQuery (Lorg/jetbrains/exposed/sql/Join;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/sql/JoinType;Lkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun joinQuery (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/sql/JoinType;Lkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun joinQuery$default (Lorg/jetbrains/exposed/sql/Join;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/sql/JoinType;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun joinQuery$default (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function2;Lorg/jetbrains/exposed/sql/JoinType;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun wrapAsExpression (Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/Expression;
}

public final class org/jetbrains/exposed/sql/AndBitOp : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/AndOp : org/jetbrains/exposed/sql/CompoundBooleanOp {
	public fun <init> (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/sql/AutoIncColumnType : org/jetbrains/exposed/sql/IColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/ColumnType;Ljava/lang/String;Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoincSeq ()Ljava/lang/String;
	public final fun getDelegate ()Lorg/jetbrains/exposed/sql/ColumnType;
	public final fun getNextValExpression ()Lorg/jetbrains/exposed/sql/NextVal;
	public fun getNullable ()Z
	public fun hashCode ()I
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun setNullable (Z)V
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/Avg : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;I)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/BasicBinaryColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/Between : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getFrom ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getTo ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract class org/jetbrains/exposed/sql/BiCompositeColumn : org/jetbrains/exposed/sql/CompositeColumn {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	protected final fun getColumn1 ()Lorg/jetbrains/exposed/sql/Column;
	protected final fun getColumn2 ()Lorg/jetbrains/exposed/sql/Column;
	public fun getRealColumns ()Ljava/util/List;
	public fun getRealColumnsWithValues (Ljava/lang/Object;)Ljava/util/Map;
	public final fun getTransformFromValue ()Lkotlin/jvm/functions/Function1;
	public final fun getTransformToValue ()Lkotlin/jvm/functions/Function2;
	public fun restoreValueFromParts (Ljava/util/Map;)Ljava/lang/Object;
}

public class org/jetbrains/exposed/sql/BinaryColumnType : org/jetbrains/exposed/sql/BasicBinaryColumnType {
	public fun <init> (I)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLength ()I
	public fun hashCode ()I
	public fun sqlType ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/sql/BlobColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun readObject (Ljava/sql/ResultSet;I)Lorg/jetbrains/exposed/sql/statements/api/ExposedBlob;
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/statements/api/ExposedBlob;
}

public final class org/jetbrains/exposed/sql/BooleanColumnType : org/jetbrains/exposed/sql/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/sql/BooleanColumnType$Companion;
	public fun <init> ()V
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Boolean;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/BooleanColumnType$Companion {
}

public final class org/jetbrains/exposed/sql/ByteColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Byte;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/Case {
	public fun <init> ()V
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Expression;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun When (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/CaseWhen;
	public final fun getValue ()Lorg/jetbrains/exposed/sql/Expression;
}

public final class org/jetbrains/exposed/sql/CaseWhen {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun Else (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public final fun When (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/CaseWhen;
	public final fun getCases ()Ljava/util/List;
	public final fun getValue ()Lorg/jetbrains/exposed/sql/Expression;
}

public final class org/jetbrains/exposed/sql/CaseWhenElse : org/jetbrains/exposed/sql/ExpressionWithColumnType, org/jetbrains/exposed/sql/ComplexExpression {
	public fun <init> (Lorg/jetbrains/exposed/sql/CaseWhen;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getCaseWhen ()Lorg/jetbrains/exposed/sql/CaseWhen;
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getElseResult ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Cast : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/CharColumnType : org/jetbrains/exposed/sql/StringColumnType {
	public fun <init> ()V
	public fun <init> (ILjava/lang/String;)V
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColLength ()I
	public fun hashCode ()I
	public fun sqlType ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/sql/CharLength : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/CharacterColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Character;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/CheckConstraint : org/jetbrains/exposed/sql/DdlAware {
	public static final field Companion Lorg/jetbrains/exposed/sql/CheckConstraint$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/CheckConstraint;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/CheckConstraint;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/CheckConstraint;
	public fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCheckName ()Ljava/lang/String;
	public final fun getCheckOp ()Ljava/lang/String;
	public final fun getTableName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/CheckConstraint$Companion {
}

public final class org/jetbrains/exposed/sql/Coalesce : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;[Lorg/jetbrains/exposed/sql/Expression;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Column : org/jetbrains/exposed/sql/ExpressionWithColumnType, java/lang/Comparable, org/jetbrains/exposed/sql/DdlAware {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/exposed/sql/Column;)I
	public fun createStatement ()Ljava/util/List;
	public final fun defaultValueInDb ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun descriptionDdl (Z)Ljava/lang/String;
	public static synthetic fun descriptionDdl$default (Lorg/jetbrains/exposed/sql/Column;ZILjava/lang/Object;)Ljava/lang/String;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getDdl ()Ljava/util/List;
	public final fun getDefaultValueFun ()Lkotlin/jvm/functions/Function0;
	public final fun getForeignKey ()Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;
	public final fun getName ()Ljava/lang/String;
	public final fun getReferee ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getTable ()Lorg/jetbrains/exposed/sql/Table;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public final fun modifyStatements (Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	public final fun nameInDatabaseCase ()Ljava/lang/String;
	public final fun nameUnquoted ()Ljava/lang/String;
	public final fun referee ()Lorg/jetbrains/exposed/sql/Column;
	public final fun setDefaultValueFun (Lkotlin/jvm/functions/Function0;)V
	public final fun setForeignKey (Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun toString ()Ljava/lang/String;
	public final fun withColumnType (Lorg/jetbrains/exposed/sql/IColumnType;)Lorg/jetbrains/exposed/sql/Column;
}

public final class org/jetbrains/exposed/sql/ColumnDiff {
	public static final field Companion Lorg/jetbrains/exposed/sql/ColumnDiff$Companion;
	public fun <init> (ZZZZ)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun copy (ZZZZ)Lorg/jetbrains/exposed/sql/ColumnDiff;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/ColumnDiff;ZZZZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/ColumnDiff;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoInc ()Z
	public final fun getCaseSensitiveName ()Z
	public final fun getDefaults ()Z
	public final fun getNullability ()Z
	public final fun hasDifferences ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/ColumnDiff$Companion {
	public final fun getAllChanged ()Lorg/jetbrains/exposed/sql/ColumnDiff;
	public final fun getNoneChanged ()Lorg/jetbrains/exposed/sql/ColumnDiff;
}

public abstract class org/jetbrains/exposed/sql/ColumnSet : org/jetbrains/exposed/sql/FieldSet {
	public fun <init> ()V
	public abstract fun crossJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public abstract fun describe (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public abstract fun fullJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public abstract fun getColumns ()Ljava/util/List;
	public fun getFields ()Ljava/util/List;
	public fun getRealFields ()Ljava/util/List;
	public fun getSource ()Lorg/jetbrains/exposed/sql/ColumnSet;
	public abstract fun innerJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public abstract fun join (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun join$default (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public abstract fun leftJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public abstract fun rightJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun select (Ljava/util/List;)Lorg/jetbrains/exposed/sql/Query;
	public final fun select (Lorg/jetbrains/exposed/sql/Expression;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Query;
	public final fun slice (Ljava/util/List;)Lorg/jetbrains/exposed/sql/FieldSet;
	public final fun slice (Lorg/jetbrains/exposed/sql/Expression;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/FieldSet;
}

public abstract class org/jetbrains/exposed/sql/ColumnType : org/jetbrains/exposed/sql/IColumnType {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getNullable ()Z
	public fun hashCode ()I
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun setNullable (Z)V
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/ColumnTypeKt {
	public static final fun getAutoIncColumnType (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/AutoIncColumnType;
	public static final fun isAutoInc (Lorg/jetbrains/exposed/sql/IColumnType;)Z
}

public abstract class org/jetbrains/exposed/sql/ComparisonOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)V
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getOpSign ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/sql/ComplexExpression {
}

public abstract class org/jetbrains/exposed/sql/CompositeColumn : org/jetbrains/exposed/sql/Expression {
	public fun <init> ()V
	public abstract fun getRealColumns ()Ljava/util/List;
	public abstract fun getRealColumnsWithValues (Ljava/lang/Object;)Ljava/util/Map;
	public abstract fun restoreValueFromParts (Ljava/util/Map;)Ljava/lang/Object;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/CompositeSqlLogger : org/jetbrains/exposed/sql/SqlLogger, org/jetbrains/exposed/sql/statements/StatementInterceptor {
	public fun <init> ()V
	public final fun addLogger (Lorg/jetbrains/exposed/sql/SqlLogger;)V
	public fun afterCommit (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun afterExecution (Lorg/jetbrains/exposed/sql/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public fun afterRollback (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun afterStatementPrepared (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public fun beforeCommit (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun beforeExecution (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/StatementContext;)V
	public fun beforeRollback (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun keepUserDataInTransactionStoreOnCommit (Ljava/util/Map;)Ljava/util/Map;
	public fun log (Lorg/jetbrains/exposed/sql/statements/StatementContext;Lorg/jetbrains/exposed/sql/Transaction;)V
	public final fun removeLogger (Lorg/jetbrains/exposed/sql/SqlLogger;)V
}

public abstract class org/jetbrains/exposed/sql/CompoundBooleanOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Concat : org/jetbrains/exposed/sql/Function {
	public fun <init> (Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()[Lorg/jetbrains/exposed/sql/Expression;
	public final fun getSeparator ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Count : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Expression;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDistinct ()Z
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/CumeDist : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/sql/CurrentOrFollowing : org/jetbrains/exposed/sql/WindowFrameBound {
}

public abstract interface class org/jetbrains/exposed/sql/CurrentOrPreceding : org/jetbrains/exposed/sql/WindowFrameBound {
}

public final class org/jetbrains/exposed/sql/CurrentRowWindowFrameBound : org/jetbrains/exposed/sql/CurrentOrFollowing, org/jetbrains/exposed/sql/CurrentOrPreceding, org/jetbrains/exposed/sql/WindowFrameBound {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/CurrentRowWindowFrameBound;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/CustomEnumerationColumnType : org/jetbrains/exposed/sql/StringColumnType {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public final fun getFromDb ()Lkotlin/jvm/functions/Function1;
	public final fun getName ()Ljava/lang/String;
	public final fun getSql ()Ljava/lang/String;
	public final fun getToDb ()Lkotlin/jvm/functions/Function1;
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Enum;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public class org/jetbrains/exposed/sql/CustomFunction : org/jetbrains/exposed/sql/Function {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/IColumnType;[Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()[Lorg/jetbrains/exposed/sql/Expression;
	public final fun getFunctionName ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/CustomOperator : org/jetbrains/exposed/sql/Function {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getOperatorName ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Database {
	public static final field Companion Lorg/jetbrains/exposed/sql/Database$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun defaultFetchSize (I)Lorg/jetbrains/exposed/sql/Database;
	public final fun getConfig ()Lorg/jetbrains/exposed/sql/DatabaseConfig;
	public final fun getConnector ()Lkotlin/jvm/functions/Function0;
	public final fun getDefaultFetchSize ()Ljava/lang/Integer;
	public final fun getDialect ()Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;
	public final fun getIdentifierManager ()Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi;
	public final fun getSupportsAlterTableWithAddColumn ()Z
	public final fun getSupportsMultipleResultSets ()Z
	public final fun getUrl ()Ljava/lang/String;
	public final fun getUseNestedTransactions ()Z
	public final fun getVendor ()Ljava/lang/String;
	public final fun getVersion ()Ljava/math/BigDecimal;
	public final fun isVersionCovers (Ljava/math/BigDecimal;)Z
	public final fun setUseNestedTransactions (Z)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/Database$Companion {
	public final fun connect (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public final fun connect (Ljavax/sql/DataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public final fun connect (Lkotlin/jvm/functions/Function0;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/sql/Database$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/sql/Database$Companion;Ljavax/sql/DataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connect$default (Lorg/jetbrains/exposed/sql/Database$Companion;Lkotlin/jvm/functions/Function0;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public final fun connectPool (Ljavax/sql/ConnectionPoolDataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Database;
	public static synthetic fun connectPool$default (Lorg/jetbrains/exposed/sql/Database$Companion;Ljavax/sql/ConnectionPoolDataSource;Lkotlin/jvm/functions/Function1;Lorg/jetbrains/exposed/sql/DatabaseConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Database;
	public final fun getDefaultIsolationLevel (Lorg/jetbrains/exposed/sql/Database;)I
	public final fun getDialectName (Ljava/lang/String;)Ljava/lang/String;
	public final fun registerDialect (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public final fun registerJdbcDriver (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/exposed/sql/DatabaseConfig {
	public static final field Companion Lorg/jetbrains/exposed/sql/DatabaseConfig$Companion;
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/SqlLogger;ZLjava/lang/Integer;IIJJZLjava/lang/Long;IZLorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Schema;IZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultFetchSize ()Ljava/lang/Integer;
	public final fun getDefaultIsolationLevel ()I
	public final fun getDefaultMaxRepetitionDelay ()J
	public final fun getDefaultMinRepetitionDelay ()J
	public final fun getDefaultReadOnly ()Z
	public final fun getDefaultRepetitionAttempts ()I
	public final fun getDefaultSchema ()Lorg/jetbrains/exposed/sql/Schema;
	public final fun getExplicitDialect ()Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;
	public final fun getKeepLoadedReferencesOutOfTransaction ()Z
	public final fun getLogTooMuchResultSetsThreshold ()I
	public final fun getMaxEntitiesToStoreInCachePerEntity ()I
	public final fun getPreserveKeywordCasing ()Z
	public final fun getSqlLogger ()Lorg/jetbrains/exposed/sql/SqlLogger;
	public final fun getUseNestedTransactions ()Z
	public final fun getWarnLongQueriesDuration ()Ljava/lang/Long;
}

public final class org/jetbrains/exposed/sql/DatabaseConfig$Builder {
	public fun <init> ()V
	public fun <init> (Lorg/jetbrains/exposed/sql/SqlLogger;ZLjava/lang/Integer;IIJJZLjava/lang/Long;IZLorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Schema;IZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/SqlLogger;ZLjava/lang/Integer;IIJJZLjava/lang/Long;IZLorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Schema;IZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultFetchSize ()Ljava/lang/Integer;
	public final fun getDefaultIsolationLevel ()I
	public final fun getDefaultMaxRepetitionDelay ()J
	public final fun getDefaultMinRepetitionDelay ()J
	public final fun getDefaultReadOnly ()Z
	public final fun getDefaultRepetitionAttempts ()I
	public final fun getDefaultSchema ()Lorg/jetbrains/exposed/sql/Schema;
	public final fun getExplicitDialect ()Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;
	public final fun getKeepLoadedReferencesOutOfTransaction ()Z
	public final fun getLogTooMuchResultSetsThreshold ()I
	public final fun getMaxEntitiesToStoreInCachePerEntity ()I
	public final fun getPreserveKeywordCasing ()Z
	public final fun getSqlLogger ()Lorg/jetbrains/exposed/sql/SqlLogger;
	public final fun getUseNestedTransactions ()Z
	public final fun getWarnLongQueriesDuration ()Ljava/lang/Long;
	public final fun setDefaultFetchSize (Ljava/lang/Integer;)V
	public final fun setDefaultIsolationLevel (I)V
	public final fun setDefaultMaxRepetitionDelay (J)V
	public final fun setDefaultMinRepetitionDelay (J)V
	public final fun setDefaultReadOnly (Z)V
	public final fun setDefaultRepetitionAttempts (I)V
	public final fun setDefaultSchema (Lorg/jetbrains/exposed/sql/Schema;)V
	public final fun setExplicitDialect (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)V
	public final fun setKeepLoadedReferencesOutOfTransaction (Z)V
	public final fun setLogTooMuchResultSetsThreshold (I)V
	public final fun setMaxEntitiesToStoreInCachePerEntity (I)V
	public final fun setPreserveKeywordCasing (Z)V
	public final fun setSqlLogger (Lorg/jetbrains/exposed/sql/SqlLogger;)V
	public final fun setUseNestedTransactions (Z)V
	public final fun setWarnLongQueriesDuration (Ljava/lang/Long;)V
}

public final class org/jetbrains/exposed/sql/DatabaseConfig$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/DatabaseConfig;
	public static synthetic fun invoke$default (Lorg/jetbrains/exposed/sql/DatabaseConfig$Companion;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/DatabaseConfig;
}

public abstract interface class org/jetbrains/exposed/sql/DatabaseConnectionAutoRegistration : kotlin/jvm/functions/Function1 {
}

public final class org/jetbrains/exposed/sql/DatabaseKt {
	public static final fun getName (Lorg/jetbrains/exposed/sql/Database;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/sql/DdlAware {
	public abstract fun createStatement ()Ljava/util/List;
	public abstract fun dropStatement ()Ljava/util/List;
	public abstract fun modifyStatement ()Ljava/util/List;
}

public final class org/jetbrains/exposed/sql/DecimalColumnType : org/jetbrains/exposed/sql/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/sql/DecimalColumnType$Companion;
	public fun <init> (II)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPrecision ()I
	public final fun getScale ()I
	public fun hashCode ()I
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/math/BigDecimal;
}

public final class org/jetbrains/exposed/sql/DecimalColumnType$Companion {
}

public final class org/jetbrains/exposed/sql/DenseRank : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> ()V
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/DivideOp : org/jetbrains/exposed/sql/CustomOperator {
	public static final field Companion Lorg/jetbrains/exposed/sql/DivideOp$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
}

public final class org/jetbrains/exposed/sql/DivideOp$Companion {
	public final fun withScale (Lorg/jetbrains/exposed/sql/DivideOp;I)Lorg/jetbrains/exposed/sql/DivideOp;
}

public final class org/jetbrains/exposed/sql/DoubleColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Double;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/EmptySizedIterable : java/util/Iterator, kotlin/jvm/internal/markers/KMappedMarker, org/jetbrains/exposed/sql/SizedIterable {
	public fun <init> ()V
	public fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun hasNext ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (IJ)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun next ()Ljava/lang/Object;
	public fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun remove ()V
}

public final class org/jetbrains/exposed/sql/EntityIDColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIdColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun hashCode ()I
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Lorg/jetbrains/exposed/dao/id/EntityID;
}

public final class org/jetbrains/exposed/sql/EnumerationColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKlass ()Lkotlin/reflect/KClass;
	public fun hashCode ()I
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Integer;
	public synthetic fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Enum;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/EnumerationNameColumnType : org/jetbrains/exposed/sql/VarCharColumnType {
	public fun <init> (Lkotlin/reflect/KClass;I)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKlass ()Lkotlin/reflect/KClass;
	public fun hashCode ()I
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Enum;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/EqOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/EqSubQueryOp : org/jetbrains/exposed/sql/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
}

public final class org/jetbrains/exposed/sql/Except : org/jetbrains/exposed/sql/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public fun copy ()Lorg/jetbrains/exposed/sql/Intersect;
	public synthetic fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun getOperationName ()Ljava/lang/String;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/sql/SetOperation;
}

public final class org/jetbrains/exposed/sql/Exists : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public final fun getQuery ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract interface annotation class org/jetbrains/exposed/sql/ExperimentalKeywordApi : java/lang/annotation/Annotation {
}

public abstract class org/jetbrains/exposed/sql/Expression {
	public static final field Companion Lorg/jetbrains/exposed/sql/Expression$Companion;
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public abstract fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/Expression$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Expression;
}

public final class org/jetbrains/exposed/sql/ExpressionAlias : org/jetbrains/exposed/sql/Expression {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)V
	public final fun aliasOnlyExpression ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getAlias ()Ljava/lang/String;
	public final fun getDelegate ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/ExpressionKt {
	public static final fun append (Lorg/jetbrains/exposed/sql/QueryBuilder;[Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public static final fun appendTo (Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/QueryBuilder;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public static synthetic fun appendTo$default (Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/QueryBuilder;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/QueryBuilder;
}

public abstract class org/jetbrains/exposed/sql/ExpressionWithColumnType : org/jetbrains/exposed/sql/Expression {
	public fun <init> ()V
	public abstract fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
}

public abstract interface class org/jetbrains/exposed/sql/FieldSet {
	public abstract fun getFields ()Ljava/util/List;
	public abstract fun getRealFields ()Ljava/util/List;
	public abstract fun getSource ()Lorg/jetbrains/exposed/sql/ColumnSet;
}

public final class org/jetbrains/exposed/sql/FieldSet$DefaultImpls {
	public static fun getRealFields (Lorg/jetbrains/exposed/sql/FieldSet;)Ljava/util/List;
}

public final class org/jetbrains/exposed/sql/FirstValue : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/FloatColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Float;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/ForeignKeyConstraint : org/jetbrains/exposed/sql/DdlAware {
	public fun <init> (Ljava/util/Map;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)V
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;Ljava/util/Map;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;
	public fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustomFkName ()Ljava/lang/String;
	public final fun getDeleteRule ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public final fun getFkName ()Ljava/lang/String;
	public final fun getFrom ()Ljava/util/LinkedHashSet;
	public final fun getFromTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun getFromTableName ()Ljava/lang/String;
	public final fun getReferences ()Ljava/util/Map;
	public final fun getTarget ()Ljava/util/LinkedHashSet;
	public final fun getTargetTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun getTargetTableName ()Ljava/lang/String;
	public final fun getUpdateRule ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public final fun plus (Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;)Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;
	public final fun targetOf (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/sql/Function : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
}

public final class org/jetbrains/exposed/sql/GreaterEqOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/GreaterOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/GroupConcat : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Z[Lkotlin/Pair;)V
	public final fun getDistinct ()Z
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getOrderBy ()[Lkotlin/Pair;
	public final fun getSeparator ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/sql/IColumnType {
	public abstract fun getNullable ()Z
	public abstract fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public abstract fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public abstract fun setNullable (Z)V
	public abstract fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public abstract fun sqlType ()Ljava/lang/String;
	public abstract fun validateValueBeforeUpdate (Ljava/lang/Object;)V
	public abstract fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun valueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun valueToString (Ljava/lang/Object;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/IColumnType$DefaultImpls {
	public static fun nonNullValueToString (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
	public static fun notNullValueToDB (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun readObject (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public static fun setParameter (Lorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public static fun validateValueBeforeUpdate (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)V
	public static fun valueFromDB (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun valueToDB (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun valueToString (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/sql/IDateColumnType {
	public abstract fun getHasTimePart ()Z
}

public abstract interface class org/jetbrains/exposed/sql/ISqlExpressionBuilder {
	public abstract fun asLiteral (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/LiteralOp;
	public abstract fun between (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Between;
	public abstract fun bitwiseAnd (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/AndBitOp;
	public abstract fun bitwiseAnd (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/AndBitOp;
	public abstract fun bitwiseOr (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/OrBitOp;
	public abstract fun bitwiseOr (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/OrBitOp;
	public abstract fun bitwiseXor (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/XorBitOp;
	public abstract fun bitwiseXor (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/XorBitOp;
	public abstract fun case (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Case;
	public abstract fun coalesce (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Coalesce;
	public abstract fun concat (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/sql/Concat;
	public abstract fun concat ([Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Concat;
	public abstract fun cumeDist ()Lorg/jetbrains/exposed/sql/CumeDist;
	public abstract fun denseRank ()Lorg/jetbrains/exposed/sql/DenseRank;
	public abstract fun div (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/DivideOp;
	public abstract fun div (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/DivideOp;
	public abstract fun eq (Lorg/jetbrains/exposed/sql/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun eq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun eqSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/EqSubQueryOp;
	public abstract fun firstValue (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/FirstValue;
	public abstract fun greater (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public abstract fun greater (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public abstract fun greaterEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public abstract fun greaterEq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public abstract fun greaterEq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public abstract fun greaterEqEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public abstract fun hasFlag (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/EqOp;
	public abstract fun hasFlag (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/EqOp;
	public abstract fun inList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun inList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun inList (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun inListIds (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun inSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/InSubQueryOp;
	public abstract fun intToDecimal (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/NoOpConversion;
	public abstract fun isDistinctFrom (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public abstract fun isDistinctFrom (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public abstract fun isDistinctFromEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public abstract fun isNotDistinctFrom (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public abstract fun isNotDistinctFrom (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public abstract fun isNotDistinctFromEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public abstract fun isNotNull (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNotNullOp;
	public abstract fun isNull (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNullOp;
	public abstract fun lag (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Lag;
	public abstract fun lastValue (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LastValue;
	public abstract fun lead (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Lead;
	public abstract fun less (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LessOp;
	public abstract fun less (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessOp;
	public abstract fun lessEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessOp;
	public abstract fun lessEq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public abstract fun lessEq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public abstract fun lessEqEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public abstract fun like (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun like (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun like (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun likeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun likeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun likeWithEntityIDAndExpression (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun match (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun match (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun minus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/MinusOp;
	public abstract fun minus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/MinusOp;
	public abstract fun mod (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ModOp;
	public abstract fun mod (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ModOp;
	public abstract fun modWithEntityId (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public abstract fun modWithEntityId2 (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public abstract fun modWithEntityId3 (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public abstract fun neq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun neq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun neq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public abstract fun notEqSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotEqSubQueryOp;
	public abstract fun notInList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun notInList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun notInList (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun notInListIds (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public abstract fun notInSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotInSubQueryOp;
	public abstract fun notLike (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun notLike (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun notLike (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun notLikeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun notLikeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun notLikeWithEntityIDAndExpression (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public abstract fun nthValue (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/NthValue;
	public abstract fun ntile (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Ntile;
	public abstract fun percentRank ()Lorg/jetbrains/exposed/sql/PercentRank;
	public abstract fun plus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/PlusOp;
	public abstract fun plus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/PlusOp;
	public abstract fun rank ()Lorg/jetbrains/exposed/sql/Rank;
	public abstract fun regexp (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/RegexpOp;
	public abstract fun regexp (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Z)Lorg/jetbrains/exposed/sql/RegexpOp;
	public abstract fun rem (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ModOp;
	public abstract fun rem (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ModOp;
	public abstract fun remWithEntityId (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public abstract fun remWithEntityId2 (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public abstract fun remWithEntityId3 (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public abstract fun rowNumber ()Lorg/jetbrains/exposed/sql/RowNumber;
	public abstract fun times (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/TimesOp;
	public abstract fun times (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/TimesOp;
	public abstract fun wrap (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/QueryParameter;
}

public final class org/jetbrains/exposed/sql/ISqlExpressionBuilder$DefaultImpls {
	public static fun asLiteral (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static fun between (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Between;
	public static fun bitwiseAnd (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/AndBitOp;
	public static fun bitwiseAnd (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/AndBitOp;
	public static fun bitwiseOr (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/OrBitOp;
	public static fun bitwiseOr (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/OrBitOp;
	public static fun bitwiseXor (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/XorBitOp;
	public static fun bitwiseXor (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/XorBitOp;
	public static fun case (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Case;
	public static synthetic fun case$default (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Case;
	public static fun coalesce (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Coalesce;
	public static fun concat (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/sql/Concat;
	public static fun concat (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Concat;
	public static synthetic fun concat$default (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Concat;
	public static fun cumeDist (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/sql/CumeDist;
	public static fun denseRank (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/sql/DenseRank;
	public static fun div (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/DivideOp;
	public static fun div (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/DivideOp;
	public static fun eq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public static fun eq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static fun eq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/Op;
	public static fun eq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public static fun eqSubQuery (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/EqSubQueryOp;
	public static fun firstValue (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/FirstValue;
	public static fun greater (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public static fun greater (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public static fun greaterEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public static fun greaterEq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public static fun greaterEq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public static fun greaterEqEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public static fun hasFlag (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/EqOp;
	public static fun hasFlag (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/EqOp;
	public static fun inList (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun inList (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun inList (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun inListIds (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun inSubQuery (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/InSubQueryOp;
	public static fun intToDecimal (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/NoOpConversion;
	public static fun isDistinctFrom (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public static fun isDistinctFrom (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public static fun isDistinctFromEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public static fun isNotDistinctFrom (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public static fun isNotDistinctFrom (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public static fun isNotDistinctFromEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public static fun isNotNull (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNotNullOp;
	public static fun isNull (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNullOp;
	public static fun lag (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Lag;
	public static synthetic fun lag$default (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Lag;
	public static fun lastValue (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LastValue;
	public static fun lead (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Lead;
	public static synthetic fun lead$default (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Lead;
	public static fun less (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LessOp;
	public static fun less (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessOp;
	public static fun lessEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessOp;
	public static fun lessEq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public static fun lessEq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public static fun lessEqEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public static fun like (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun like (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun like (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun likeWithEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun likeWithEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun likeWithEntityIDAndExpression (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun match (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Op;
	public static fun match (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/sql/Op;
	public static fun minus (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/MinusOp;
	public static fun minus (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/MinusOp;
	public static fun mod (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ModOp;
	public static fun mod (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ModOp;
	public static fun modWithEntityId (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static fun modWithEntityId2 (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static fun modWithEntityId3 (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static fun neq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static fun neq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/Op;
	public static fun neq (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public static fun notEqSubQuery (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotEqSubQueryOp;
	public static fun notInList (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun notInList (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun notInList (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun notInListIds (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public static fun notInSubQuery (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotInSubQueryOp;
	public static fun notLike (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun notLike (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun notLike (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun notLikeWithEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun notLikeWithEntityID (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun notLikeWithEntityIDAndExpression (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public static fun nthValue (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/NthValue;
	public static fun ntile (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Ntile;
	public static fun percentRank (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/sql/PercentRank;
	public static fun plus (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/PlusOp;
	public static fun plus (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/PlusOp;
	public static fun rank (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/sql/Rank;
	public static fun regexp (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/RegexpOp;
	public static fun regexp (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Z)Lorg/jetbrains/exposed/sql/RegexpOp;
	public static synthetic fun regexp$default (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;ZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/RegexpOp;
	public static fun rem (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ModOp;
	public static fun rem (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ModOp;
	public static fun remWithEntityId (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static fun remWithEntityId2 (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static fun remWithEntityId3 (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static fun rowNumber (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;)Lorg/jetbrains/exposed/sql/RowNumber;
	public static fun times (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/TimesOp;
	public static fun times (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/TimesOp;
	public static fun wrap (Lorg/jetbrains/exposed/sql/ISqlExpressionBuilder;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/QueryParameter;
}

public final class org/jetbrains/exposed/sql/InSubQueryOp : org/jetbrains/exposed/sql/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
}

public final class org/jetbrains/exposed/sql/Index : org/jetbrains/exposed/sql/DdlAware {
	public fun <init> (Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Op;Ljava/util/List;Lorg/jetbrains/exposed/sql/Table;)V
	public synthetic fun <init> (Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Op;Ljava/util/List;Lorg/jetbrains/exposed/sql/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lorg/jetbrains/exposed/sql/Op;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Lorg/jetbrains/exposed/sql/Table;
	public final fun copy (Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Op;Ljava/util/List;Lorg/jetbrains/exposed/sql/Table;)Lorg/jetbrains/exposed/sql/Index;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/Index;Ljava/util/List;ZLjava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Op;Ljava/util/List;Lorg/jetbrains/exposed/sql/Table;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Index;
	public fun createStatement ()Ljava/util/List;
	public fun dropStatement ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColumns ()Ljava/util/List;
	public final fun getCustomName ()Ljava/lang/String;
	public final fun getFilterCondition ()Lorg/jetbrains/exposed/sql/Op;
	public final fun getFunctions ()Ljava/util/List;
	public final fun getFunctionsTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun getIndexName ()Ljava/lang/String;
	public final fun getIndexType ()Ljava/lang/String;
	public final fun getTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun getUnique ()Z
	public fun hashCode ()I
	public fun modifyStatement ()Ljava/util/List;
	public final fun onlyNameDiffer (Lorg/jetbrains/exposed/sql/Index;)Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/IntegerColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Integer;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/Intersect : org/jetbrains/exposed/sql/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public fun copy ()Lorg/jetbrains/exposed/sql/Intersect;
	public synthetic fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/sql/SetOperation;
}

public final class org/jetbrains/exposed/sql/IsDistinctFromOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpression1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpression2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/IsNotDistinctFromOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpression1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpression2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/IsNotNullOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/IsNullOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/IterableExKt {
	public static final fun emptySized ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public static final fun mapLazy (Lorg/jetbrains/exposed/sql/SizedIterable;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/sql/Join : org/jetbrains/exposed/sql/ColumnSet {
	public fun <init> (Lorg/jetbrains/exposed/sql/ColumnSet;)V
	public fun <init> (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun alreadyInJoin (Lorg/jetbrains/exposed/sql/Table;)Z
	public fun crossJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun describe (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun fullJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun getColumns ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/sql/ColumnSet;
	public fun innerJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun join (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public fun leftJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun rightJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
}

public final class org/jetbrains/exposed/sql/JoinType : java/lang/Enum {
	public static final field CROSS Lorg/jetbrains/exposed/sql/JoinType;
	public static final field FULL Lorg/jetbrains/exposed/sql/JoinType;
	public static final field INNER Lorg/jetbrains/exposed/sql/JoinType;
	public static final field LEFT Lorg/jetbrains/exposed/sql/JoinType;
	public static final field RIGHT Lorg/jetbrains/exposed/sql/JoinType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/JoinType;
	public static fun values ()[Lorg/jetbrains/exposed/sql/JoinType;
}

public abstract interface class org/jetbrains/exposed/sql/JsonColumnMarker {
	public abstract fun getUsesBinaryFormat ()Z
}

public final class org/jetbrains/exposed/sql/Key {
	public fun <init> ()V
}

public final class org/jetbrains/exposed/sql/Lag : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultValue ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public final fun getOffset ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/LargeTextColumnType : org/jetbrains/exposed/sql/TextColumnType {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun preciseType ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/LastValue : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/LazySizedCollection : org/jetbrains/exposed/sql/SizedIterable {
	public fun <init> (Lorg/jetbrains/exposed/sql/SizedIterable;)V
	public fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun getWrapper ()Ljava/util/List;
	public final fun isLoaded ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (IJ)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/sql/Lead : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDefaultValue ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public final fun getOffset ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/LessEqOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/LessOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/LikeEscapeOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;ZLjava/lang/Character;)V
	public final fun getEscapeChar ()Ljava/lang/Character;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/LikeOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/LikePattern {
	public static final field Companion Lorg/jetbrains/exposed/sql/LikePattern$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/Character;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Character;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Character;
	public final fun copy (Ljava/lang/String;Ljava/lang/Character;)Lorg/jetbrains/exposed/sql/LikePattern;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/LikePattern;Ljava/lang/String;Ljava/lang/Character;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/LikePattern;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEscapeChar ()Ljava/lang/Character;
	public final fun getPattern ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun plus (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikePattern;
	public final fun plus (Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikePattern;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/LikePattern$Companion {
	public final fun ofLiteral (Ljava/lang/String;C)Lorg/jetbrains/exposed/sql/LikePattern;
	public static synthetic fun ofLiteral$default (Lorg/jetbrains/exposed/sql/LikePattern$Companion;Ljava/lang/String;CILjava/lang/Object;)Lorg/jetbrains/exposed/sql/LikePattern;
}

public final class org/jetbrains/exposed/sql/LiteralOp : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getValue ()Ljava/lang/Object;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Locate : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getSubstring ()Ljava/lang/String;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/LongColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Long;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/LowerCase : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Max : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/MediumTextColumnType : org/jetbrains/exposed/sql/TextColumnType {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun preciseType ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/Min : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/MinusOp : org/jetbrains/exposed/sql/CustomOperator {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
}

public final class org/jetbrains/exposed/sql/ModOp : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public static final field Companion Lorg/jetbrains/exposed/sql/ModOp$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/ModOp$Companion {
}

public final class org/jetbrains/exposed/sql/NeqOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public abstract class org/jetbrains/exposed/sql/NextVal : org/jetbrains/exposed/sql/Function {
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Sequence;Lorg/jetbrains/exposed/sql/IColumnType;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSeq ()Lorg/jetbrains/exposed/sql/Sequence;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/NextVal$IntNextVal : org/jetbrains/exposed/sql/NextVal {
	public fun <init> (Lorg/jetbrains/exposed/sql/Sequence;)V
}

public final class org/jetbrains/exposed/sql/NextVal$LongNextVal : org/jetbrains/exposed/sql/NextVal {
	public fun <init> (Lorg/jetbrains/exposed/sql/Sequence;)V
}

public final class org/jetbrains/exposed/sql/NoOpConversion : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/NotEqSubQueryOp : org/jetbrains/exposed/sql/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
}

public final class org/jetbrains/exposed/sql/NotExists : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public final fun getQuery ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/NotInSubQueryOp : org/jetbrains/exposed/sql/SubQueryOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
}

public final class org/jetbrains/exposed/sql/NotLikeOp : org/jetbrains/exposed/sql/ComparisonOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/NotOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/NthValue : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public final fun getN ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Ntile : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
	public final fun getNumBuckets ()Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/OffsetFollowingWindowFrameBound : org/jetbrains/exposed/sql/OffsetWindowFrameBound, org/jetbrains/exposed/sql/CurrentOrFollowing {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
}

public final class org/jetbrains/exposed/sql/OffsetPrecedingWindowFrameBound : org/jetbrains/exposed/sql/OffsetWindowFrameBound, org/jetbrains/exposed/sql/CurrentOrPreceding {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
}

public class org/jetbrains/exposed/sql/OffsetWindowFrameBound : org/jetbrains/exposed/sql/WindowFrameBound {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/WindowFrameBoundDirection;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract class org/jetbrains/exposed/sql/Op : org/jetbrains/exposed/sql/Expression {
	public static final field Companion Lorg/jetbrains/exposed/sql/Op$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/exposed/sql/Op$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public final fun nullOp ()Lorg/jetbrains/exposed/sql/Op;
}

public final class org/jetbrains/exposed/sql/Op$FALSE : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/Op$OpBoolean {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/Op$FALSE;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Op$TRUE : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/Op$OpBoolean {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/Op$TRUE;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/OpKt {
	public static final fun and (Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun and (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun andIfNotNull (Lorg/jetbrains/exposed/sql/Op;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun andIfNotNull (Lorg/jetbrains/exposed/sql/Op;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun andNot (Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun blobParam (Lorg/jetbrains/exposed/sql/statements/api/ExposedBlob;)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun booleanLiteral (Z)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun booleanParam (Z)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun byteLiteral (B)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun byteParam (B)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun compoundAnd (Ljava/util/List;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun compoundOr (Ljava/util/List;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun decimalLiteral (Ljava/math/BigDecimal;)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun decimalParam (Ljava/math/BigDecimal;)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun doubleLiteral (D)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun doubleParam (D)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun exists (Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/Exists;
	public static final fun floatLiteral (F)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun floatParam (F)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun idParam (Lorg/jetbrains/exposed/dao/id/EntityID;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun intLiteral (I)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun intParam (I)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun longLiteral (J)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun longParam (J)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun not (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun notExists (Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotExists;
	public static final fun or (Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun or (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun orIfNotNull (Lorg/jetbrains/exposed/sql/Op;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun orIfNotNull (Lorg/jetbrains/exposed/sql/Op;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun orNot (Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Op;
	public static final fun shortLiteral (S)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun shortParam (S)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun stringLiteral (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun stringParam (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun ubyteLiteral-7apg3OU (B)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun ubyteParam-7apg3OU (B)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun uintLiteral-WZ4Q5Ns (I)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun uintParam-WZ4Q5Ns (I)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun ulongLiteral-VKZWuLQ (J)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun ulongParam-VKZWuLQ (J)Lorg/jetbrains/exposed/sql/Expression;
	public static final fun ushortLiteral-xj2QHRw (S)Lorg/jetbrains/exposed/sql/LiteralOp;
	public static final fun ushortParam-xj2QHRw (S)Lorg/jetbrains/exposed/sql/Expression;
}

public final class org/jetbrains/exposed/sql/OrBitOp : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/OrOp : org/jetbrains/exposed/sql/CompoundBooleanOp {
	public fun <init> (Ljava/util/List;)V
}

public final class org/jetbrains/exposed/sql/PercentRank : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/PlusOp : org/jetbrains/exposed/sql/CustomOperator {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
}

public final class org/jetbrains/exposed/sql/QueriesKt {
	public static final fun batchInsert (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Iterable;ZZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun batchInsert (Lorg/jetbrains/exposed/sql/Table;Lkotlin/sequences/Sequence;ZZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static synthetic fun batchInsert$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Iterable;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun batchInsert$default (Lorg/jetbrains/exposed/sql/Table;Lkotlin/sequences/Sequence;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static final fun batchReplace (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Iterable;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun batchReplace (Lorg/jetbrains/exposed/sql/Table;Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static synthetic fun batchReplace$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Iterable;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun batchReplace$default (Lorg/jetbrains/exposed/sql/Table;Lkotlin/sequences/Sequence;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static final fun batchUpsert (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Iterable;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static final fun batchUpsert (Lorg/jetbrains/exposed/sql/Table;Lkotlin/sequences/Sequence;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;ZLkotlin/jvm/functions/Function2;)Ljava/util/List;
	public static synthetic fun batchUpsert$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Iterable;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun batchUpsert$default (Lorg/jetbrains/exposed/sql/Table;Lkotlin/sequences/Sequence;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/util/List;
	public static final fun deleteAll (Lorg/jetbrains/exposed/sql/Table;)I
	public static final fun deleteIgnoreWhere (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Integer;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun deleteIgnoreWhere$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Integer;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun deleteWhere (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Integer;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun deleteWhere$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/Integer;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun exists (Lorg/jetbrains/exposed/sql/Table;)Z
	public static final fun insert (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/statements/InsertStatement;
	public static final fun insert (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/AbstractQuery;Ljava/util/List;)Ljava/lang/Integer;
	public static synthetic fun insert$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/Integer;
	public static final fun insertAndGetId (Lorg/jetbrains/exposed/dao/id/IdTable;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/dao/id/EntityID;
	public static final fun insertIgnore (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/statements/InsertStatement;
	public static final fun insertIgnore (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/AbstractQuery;Ljava/util/List;)Ljava/lang/Integer;
	public static synthetic fun insertIgnore$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/AbstractQuery;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/Integer;
	public static final fun insertIgnoreAndGetId (Lorg/jetbrains/exposed/dao/id/IdTable;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/dao/id/EntityID;
	public static final fun replace (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/statements/ReplaceStatement;
	public static final fun select (Lorg/jetbrains/exposed/sql/FieldSet;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun select (Lorg/jetbrains/exposed/sql/FieldSet;Lorg/jetbrains/exposed/sql/Op;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun select (Lorg/jetbrains/exposed/sql/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun select (Lorg/jetbrains/exposed/sql/Query;Lorg/jetbrains/exposed/sql/Op;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun selectAll (Lorg/jetbrains/exposed/sql/FieldSet;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun selectAllBatched (Lorg/jetbrains/exposed/sql/FieldSet;I)Ljava/lang/Iterable;
	public static final fun selectAllBatched (Lorg/jetbrains/exposed/sql/Query;I)Ljava/lang/Iterable;
	public static synthetic fun selectAllBatched$default (Lorg/jetbrains/exposed/sql/FieldSet;IILjava/lang/Object;)Ljava/lang/Iterable;
	public static synthetic fun selectAllBatched$default (Lorg/jetbrains/exposed/sql/Query;IILjava/lang/Object;)Ljava/lang/Iterable;
	public static final fun selectBatched (Lorg/jetbrains/exposed/sql/FieldSet;ILkotlin/jvm/functions/Function1;)Ljava/lang/Iterable;
	public static final fun selectBatched (Lorg/jetbrains/exposed/sql/Query;ILkotlin/jvm/functions/Function1;)Ljava/lang/Iterable;
	public static synthetic fun selectBatched$default (Lorg/jetbrains/exposed/sql/FieldSet;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Iterable;
	public static synthetic fun selectBatched$default (Lorg/jetbrains/exposed/sql/Query;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Iterable;
	public static final fun update (Lorg/jetbrains/exposed/sql/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)I
	public static final fun update (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;)I
	public static synthetic fun update$default (Lorg/jetbrains/exposed/sql/Join;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I
	public static synthetic fun update$default (Lorg/jetbrains/exposed/sql/Table;Lkotlin/jvm/functions/Function1;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)I
	public static final fun upsert (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/statements/UpsertStatement;
	public static synthetic fun upsert$default (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/statements/UpsertStatement;
}

public class org/jetbrains/exposed/sql/Query : org/jetbrains/exposed/sql/AbstractQuery {
	public fun <init> (Lorg/jetbrains/exposed/sql/FieldSet;Lorg/jetbrains/exposed/sql/Op;)V
	public final fun adjustColumnSet (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public final fun adjustHaving (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public final fun adjustSelect (Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/Query;
	public final fun adjustSlice (Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/Query;
	public final fun adjustWhere (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public fun copy ()Lorg/jetbrains/exposed/sql/Query;
	public synthetic fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/sql/ResultSet;
	public final fun fetchBatchedResults (I)Ljava/lang/Iterable;
	public static synthetic fun fetchBatchedResults$default (Lorg/jetbrains/exposed/sql/Query;IILjava/lang/Object;)Ljava/lang/Iterable;
	public fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/Query;
	public synthetic fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun getDistinct ()Z
	public final fun getGroupedByColumns ()Ljava/util/List;
	public final fun getHaving ()Lorg/jetbrains/exposed/sql/Op;
	protected fun getQueryToExecute ()Lorg/jetbrains/exposed/sql/statements/Statement;
	public fun getSet ()Lorg/jetbrains/exposed/sql/FieldSet;
	public final fun getWhere ()Lorg/jetbrains/exposed/sql/Op;
	public final fun groupBy ([Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Query;
	public final fun hasCustomForUpdateState ()Z
	public final fun having (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public final fun isForUpdate ()Z
	public fun notForUpdate ()Lorg/jetbrains/exposed/sql/Query;
	public synthetic fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/QueryBuilder;)Ljava/lang/String;
	protected final fun setDistinct (Z)V
	public fun setSet (Lorg/jetbrains/exposed/sql/FieldSet;)V
	public final fun where (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public final fun where (Lorg/jetbrains/exposed/sql/Op;)Lorg/jetbrains/exposed/sql/Query;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/sql/Query;
}

public final class org/jetbrains/exposed/sql/QueryAlias : org/jetbrains/exposed/sql/ColumnSet {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;Ljava/lang/String;)V
	public fun crossJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun describe (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun fullJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun get (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun get (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Expression;
	public final fun getAlias ()Ljava/lang/String;
	public fun getColumns ()Ljava/util/List;
	public fun getFields ()Ljava/util/List;
	public final fun getQuery ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun innerJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun join (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public fun leftJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public fun rightJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
}

public final class org/jetbrains/exposed/sql/QueryBuilder {
	public fun <init> (Z)V
	public final fun append (C)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public final fun append (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public final fun append (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public final fun appendTo (Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)V
	public final fun appendTo ([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;)V
	public static synthetic fun appendTo$default (Lorg/jetbrains/exposed/sql/QueryBuilder;Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static synthetic fun appendTo$default (Lorg/jetbrains/exposed/sql/QueryBuilder;[Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public final fun getArgs ()Ljava/util/List;
	public final fun getPrepared ()Z
	public final fun invoke (Lkotlin/jvm/functions/Function1;)V
	public final fun registerArgument (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)V
	public final fun registerArgument (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Object;)V
	public final fun registerArguments (Lorg/jetbrains/exposed/sql/IColumnType;Ljava/lang/Iterable;)V
	public fun toString ()Ljava/lang/String;
	public final fun unaryPlus (C)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public final fun unaryPlus (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/QueryBuilder;
	public final fun unaryPlus (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/QueryBuilder;
}

public final class org/jetbrains/exposed/sql/QueryKt {
	public static final fun andHaving (Lorg/jetbrains/exposed/sql/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun andWhere (Lorg/jetbrains/exposed/sql/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun orHaving (Lorg/jetbrains/exposed/sql/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
	public static final fun orWhere (Lorg/jetbrains/exposed/sql/Query;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Query;
}

public final class org/jetbrains/exposed/sql/QueryParameter : org/jetbrains/exposed/sql/Expression {
	public fun <init> (Ljava/lang/Object;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public final fun getSqlType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getValue ()Ljava/lang/Object;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Random : org/jetbrains/exposed/sql/Function {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSeed ()Ljava/lang/Integer;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Rank : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> ()V
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/ReferenceOption : java/lang/Enum {
	public static final field CASCADE Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static final field NO_ACTION Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static final field RESTRICT Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static final field SET_DEFAULT Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static final field SET_NULL Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static fun values ()[Lorg/jetbrains/exposed/sql/ReferenceOption;
}

public final class org/jetbrains/exposed/sql/RegexpOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Z)V
	public final fun getCaseSensitive ()Z
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/ResultRow {
	public static final field Companion Lorg/jetbrains/exposed/sql/ResultRow$Companion;
	public fun <init> (Ljava/util/Map;[Ljava/lang/Object;)V
	public synthetic fun <init> (Ljava/util/Map;[Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun get (Lorg/jetbrains/exposed/sql/Expression;)Ljava/lang/Object;
	public final fun getFieldIndex ()Ljava/util/Map;
	public final fun getOrNull (Lorg/jetbrains/exposed/sql/Expression;)Ljava/lang/Object;
	public final fun hasValue (Lorg/jetbrains/exposed/sql/Expression;)Z
	public final fun set (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/ResultRow$Companion {
	public final fun create (Ljava/sql/ResultSet;Ljava/util/Map;)Lorg/jetbrains/exposed/sql/ResultRow;
	public final fun createAndFillDefaults (Ljava/util/List;)Lorg/jetbrains/exposed/sql/ResultRow;
	public final fun createAndFillValues (Ljava/util/Map;)Lorg/jetbrains/exposed/sql/ResultRow;
}

public final class org/jetbrains/exposed/sql/RowNumber : org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> ()V
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/SQLExpressionBuilderKt {
	public static final fun CustomLongFunction (Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/CustomFunction;
	public static final fun CustomStringFunction (Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/CustomFunction;
	public static final fun avg (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/sql/Avg;
	public static synthetic fun avg$default (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Avg;
	public static final fun castTo (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public static final fun charLength (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/CharLength;
	public static final fun count (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Count;
	public static final fun countDistinct (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Count;
	public static final fun function (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/CustomFunction;
	public static final fun groupConcat (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;ZLkotlin/Pair;)Lorg/jetbrains/exposed/sql/GroupConcat;
	public static final fun groupConcat (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Z[Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/GroupConcat;
	public static synthetic fun groupConcat$default (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;ZLkotlin/Pair;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/GroupConcat;
	public static synthetic fun groupConcat$default (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Z[Lkotlin/Pair;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/GroupConcat;
	public static final fun locate (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Locate;
	public static final fun lowerCase (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LowerCase;
	public static final fun max (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Max;
	public static final fun min (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Min;
	public static final fun nextIntVal (Lorg/jetbrains/exposed/sql/Sequence;)Lorg/jetbrains/exposed/sql/NextVal;
	public static final fun nextLongVal (Lorg/jetbrains/exposed/sql/Sequence;)Lorg/jetbrains/exposed/sql/NextVal;
	public static final fun stdDevPop (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/sql/StdDevPop;
	public static synthetic fun stdDevPop$default (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/sql/StdDevPop;
	public static final fun stdDevSamp (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/sql/StdDevSamp;
	public static synthetic fun stdDevSamp$default (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/sql/StdDevSamp;
	public static final fun substring (Lorg/jetbrains/exposed/sql/Expression;II)Lorg/jetbrains/exposed/sql/Substring;
	public static final fun sum (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Sum;
	public static final fun trim (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Trim;
	public static final fun upperCase (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/UpperCase;
	public static final fun varPop (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/sql/VarPop;
	public static synthetic fun varPop$default (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/sql/VarPop;
	public static final fun varSamp (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;I)Lorg/jetbrains/exposed/sql/VarSamp;
	public static synthetic fun varSamp$default (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;IILjava/lang/Object;)Lorg/jetbrains/exposed/sql/VarSamp;
}

public final class org/jetbrains/exposed/sql/SQLLogKt {
	public static final fun addLogger (Lorg/jetbrains/exposed/sql/Transaction;[Lorg/jetbrains/exposed/sql/SqlLogger;)Lorg/jetbrains/exposed/sql/CompositeSqlLogger;
	public static final fun getExposedLogger ()Lorg/slf4j/Logger;
}

public final class org/jetbrains/exposed/sql/Schema {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Schema;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Schema;
	public final fun createStatement ()Ljava/util/List;
	public final fun dropStatement (Z)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun exists ()Z
	public final fun getAuthorization ()Ljava/lang/String;
	public final fun getDdl ()Ljava/util/List;
	public final fun getDefaultTablespace ()Ljava/lang/String;
	public final fun getIdentifier ()Ljava/lang/String;
	public final fun getOn ()Ljava/lang/String;
	public final fun getPassword ()Ljava/lang/String;
	public final fun getQuota ()Ljava/lang/String;
	public final fun getTemporaryTablespace ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setSchemaStatement ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/SchemaUtils {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/SchemaUtils;
	public final fun addMissingColumnsStatements ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public static synthetic fun addMissingColumnsStatements$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun checkCycle ([Lorg/jetbrains/exposed/sql/Table;)Z
	public final fun checkExcessiveIndices ([Lorg/jetbrains/exposed/sql/Table;)V
	public final fun checkMappingConsistence ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public static synthetic fun checkMappingConsistence$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun create ([Lorg/jetbrains/exposed/sql/Table;Z)V
	public static synthetic fun create$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)V
	public final fun createDatabase ([Ljava/lang/String;Z)V
	public static synthetic fun createDatabase$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun createFKey (Lorg/jetbrains/exposed/sql/ForeignKeyConstraint;)Ljava/util/List;
	public final fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/util/List;
	public final fun createMissingTablesAndColumns ([Lorg/jetbrains/exposed/sql/Table;ZZ)V
	public static synthetic fun createMissingTablesAndColumns$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZZILjava/lang/Object;)V
	public final fun createSchema ([Lorg/jetbrains/exposed/sql/Schema;Z)V
	public static synthetic fun createSchema$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Schema;ZILjava/lang/Object;)V
	public final fun createSequence ([Lorg/jetbrains/exposed/sql/Sequence;Z)V
	public static synthetic fun createSequence$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Sequence;ZILjava/lang/Object;)V
	public final fun createStatements ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/List;
	public final fun drop ([Lorg/jetbrains/exposed/sql/Table;Z)V
	public static synthetic fun drop$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)V
	public final fun dropDatabase ([Ljava/lang/String;Z)V
	public static synthetic fun dropDatabase$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun dropSchema ([Lorg/jetbrains/exposed/sql/Schema;ZZ)V
	public static synthetic fun dropSchema$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Schema;ZZILjava/lang/Object;)V
	public final fun dropSequence ([Lorg/jetbrains/exposed/sql/Sequence;Z)V
	public static synthetic fun dropSequence$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Sequence;ZILjava/lang/Object;)V
	public final fun listDatabases ()Ljava/util/List;
	public final fun listTables ()Ljava/util/List;
	public final fun setSchema (Lorg/jetbrains/exposed/sql/Schema;Z)V
	public static synthetic fun setSchema$default (Lorg/jetbrains/exposed/sql/SchemaUtils;Lorg/jetbrains/exposed/sql/Schema;ZILjava/lang/Object;)V
	public final fun sortTablesByReferences (Ljava/lang/Iterable;)Ljava/util/List;
	public final fun statementsRequiredToActualizeScheme ([Lorg/jetbrains/exposed/sql/Table;Z)Ljava/util/List;
	public static synthetic fun statementsRequiredToActualizeScheme$default (Lorg/jetbrains/exposed/sql/SchemaUtils;[Lorg/jetbrains/exposed/sql/Table;ZILjava/lang/Object;)Ljava/util/List;
	public final fun withDataBaseLock (Lorg/jetbrains/exposed/sql/Transaction;Lkotlin/jvm/functions/Function0;)V
}

public final class org/jetbrains/exposed/sql/Sequence {
	public fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Boolean;Ljava/lang/Long;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Boolean;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun createStatement ()Ljava/util/List;
	public final fun dropStatement ()Ljava/util/List;
	public final fun getCache ()Ljava/lang/Long;
	public final fun getCycle ()Ljava/lang/Boolean;
	public final fun getDdl ()Ljava/util/List;
	public final fun getIdentifier ()Ljava/lang/String;
	public final fun getIncrementBy ()Ljava/lang/Long;
	public final fun getMaxValue ()Ljava/lang/Long;
	public final fun getMinValue ()Ljava/lang/Long;
	public final fun getStartWith ()Ljava/lang/Long;
}

public abstract class org/jetbrains/exposed/sql/SetOperation : org/jetbrains/exposed/sql/AbstractQuery {
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/AbstractQuery;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun count ()J
	public fun empty ()Z
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/sql/ResultSet;
	public final fun getFirstStatement ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun getOperationName ()Ljava/lang/String;
	protected fun getQueryToExecute ()Lorg/jetbrains/exposed/sql/statements/Statement;
	public final fun getSecondStatement ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun getSet ()Lorg/jetbrains/exposed/sql/FieldSet;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/QueryBuilder;)Ljava/lang/String;
	protected fun prepareStatementSQL (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/SetOperationsKt {
	public static final fun except (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/Query;)Lorg/jetbrains/exposed/sql/Except;
	public static final fun intersect (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/Query;)Lorg/jetbrains/exposed/sql/Intersect;
	public static final fun union (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/Query;)Lorg/jetbrains/exposed/sql/Union;
	public static final fun unionAll (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/Query;)Lorg/jetbrains/exposed/sql/UnionAll;
}

public final class org/jetbrains/exposed/sql/ShortColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Short;
}

public final class org/jetbrains/exposed/sql/SizedCollection : org/jetbrains/exposed/sql/SizedIterable {
	public fun <init> (Ljava/util/Collection;)V
	public fun <init> ([Ljava/lang/Object;)V
	public fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun count ()J
	public fun empty ()Z
	public fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public final fun getDelegate ()Ljava/util/Collection;
	public fun iterator ()Ljava/util/Iterator;
	public fun limit (IJ)Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public abstract interface class org/jetbrains/exposed/sql/SizedIterable : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public abstract fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public abstract fun count ()J
	public abstract fun empty ()Z
	public abstract fun forUpdate (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public abstract fun limit (IJ)Lorg/jetbrains/exposed/sql/SizedIterable;
	public abstract fun notForUpdate ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public abstract fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/sql/SizedIterable$DefaultImpls {
	public static fun forUpdate (Lorg/jetbrains/exposed/sql/SizedIterable;Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public static synthetic fun forUpdate$default (Lorg/jetbrains/exposed/sql/SizedIterable;Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public static synthetic fun limit$default (Lorg/jetbrains/exposed/sql/SizedIterable;IJILjava/lang/Object;)Lorg/jetbrains/exposed/sql/SizedIterable;
	public static fun notForUpdate (Lorg/jetbrains/exposed/sql/SizedIterable;)Lorg/jetbrains/exposed/sql/SizedIterable;
}

public final class org/jetbrains/exposed/sql/Slf4jSqlDebugLogger : org/jetbrains/exposed/sql/SqlLogger {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/Slf4jSqlDebugLogger;
	public fun log (Lorg/jetbrains/exposed/sql/statements/StatementContext;Lorg/jetbrains/exposed/sql/Transaction;)V
}

public final class org/jetbrains/exposed/sql/Slice : org/jetbrains/exposed/sql/FieldSet {
	public fun <init> (Lorg/jetbrains/exposed/sql/ColumnSet;Ljava/util/List;)V
	public fun getFields ()Ljava/util/List;
	public fun getRealFields ()Ljava/util/List;
	public fun getSource ()Lorg/jetbrains/exposed/sql/ColumnSet;
}

public final class org/jetbrains/exposed/sql/SortOrder : java/lang/Enum {
	public static final field ASC Lorg/jetbrains/exposed/sql/SortOrder;
	public static final field ASC_NULLS_FIRST Lorg/jetbrains/exposed/sql/SortOrder;
	public static final field ASC_NULLS_LAST Lorg/jetbrains/exposed/sql/SortOrder;
	public static final field DESC Lorg/jetbrains/exposed/sql/SortOrder;
	public static final field DESC_NULLS_FIRST Lorg/jetbrains/exposed/sql/SortOrder;
	public static final field DESC_NULLS_LAST Lorg/jetbrains/exposed/sql/SortOrder;
	public final fun getCode ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/SortOrder;
	public static fun values ()[Lorg/jetbrains/exposed/sql/SortOrder;
}

public final class org/jetbrains/exposed/sql/SqlExpressionBuilder : org/jetbrains/exposed/sql/ISqlExpressionBuilder {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/SqlExpressionBuilder;
	public fun asLiteral (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/LiteralOp;
	public fun between (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Between;
	public fun bitwiseAnd (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/AndBitOp;
	public fun bitwiseAnd (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/AndBitOp;
	public fun bitwiseOr (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/OrBitOp;
	public fun bitwiseOr (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/OrBitOp;
	public fun bitwiseXor (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/XorBitOp;
	public fun bitwiseXor (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/XorBitOp;
	public fun case (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Case;
	public fun coalesce (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;[Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Coalesce;
	public fun concat (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/sql/Concat;
	public fun concat ([Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Concat;
	public fun cumeDist ()Lorg/jetbrains/exposed/sql/CumeDist;
	public fun denseRank ()Lorg/jetbrains/exposed/sql/DenseRank;
	public fun div (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/DivideOp;
	public fun div (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/DivideOp;
	public fun eq (Lorg/jetbrains/exposed/sql/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public fun eq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public fun eq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/Op;
	public fun eq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public fun eqSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/EqSubQueryOp;
	public fun firstValue (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/FirstValue;
	public fun greater (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public fun greater (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public fun greaterEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterOp;
	public fun greaterEq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public fun greaterEq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public fun greaterEqEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/GreaterEqOp;
	public fun hasFlag (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/EqOp;
	public fun hasFlag (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/EqOp;
	public fun inList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun inList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun inList (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun inListIds (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun inSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/InSubQueryOp;
	public fun intToDecimal (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/NoOpConversion;
	public fun isDistinctFrom (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public fun isDistinctFrom (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public fun isDistinctFromEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsDistinctFromOp;
	public fun isNotDistinctFrom (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public fun isNotDistinctFrom (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public fun isNotDistinctFromEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/IsNotDistinctFromOp;
	public fun isNotNull (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNotNullOp;
	public fun isNull (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/IsNullOp;
	public fun lag (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Lag;
	public fun lastValue (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LastValue;
	public fun lead (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Lead;
	public fun less (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LessOp;
	public fun less (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessOp;
	public fun lessEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessOp;
	public fun lessEq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public fun lessEq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public fun lessEqEntityID (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/LessEqOp;
	public fun like (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun like (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun like (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun likeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun likeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun likeWithEntityIDAndExpression (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun match (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Op;
	public fun match (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/sql/Op;
	public fun minus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/MinusOp;
	public fun minus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/MinusOp;
	public fun mod (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ModOp;
	public fun mod (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ModOp;
	public fun modWithEntityId (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun modWithEntityId2 (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun modWithEntityId3 (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun neq (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Op;
	public fun neq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Comparable;)Lorg/jetbrains/exposed/sql/Op;
	public fun neq (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public fun notEqSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotEqSubQueryOp;
	public fun notInList (Lkotlin/Pair;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun notInList (Lkotlin/Triple;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun notInList (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun notInListIds (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Iterable;)Lorg/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp;
	public fun notInSubQuery (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;)Lorg/jetbrains/exposed/sql/NotInSubQueryOp;
	public fun notLike (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun notLike (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun notLike (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun notLikeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun notLikeWithEntityID (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/LikePattern;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun notLikeWithEntityIDAndExpression (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/LikeEscapeOp;
	public fun nthValue (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/NthValue;
	public fun ntile (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/Ntile;
	public fun percentRank ()Lorg/jetbrains/exposed/sql/PercentRank;
	public fun plus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/PlusOp;
	public fun plus (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/PlusOp;
	public fun rank ()Lorg/jetbrains/exposed/sql/Rank;
	public fun regexp (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/RegexpOp;
	public fun regexp (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Z)Lorg/jetbrains/exposed/sql/RegexpOp;
	public fun rem (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ModOp;
	public fun rem (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ModOp;
	public fun remWithEntityId (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Number;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun remWithEntityId2 (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun remWithEntityId3 (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;
	public fun rowNumber ()Lorg/jetbrains/exposed/sql/RowNumber;
	public fun times (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/TimesOp;
	public fun times (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/TimesOp;
	public fun wrap (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/QueryParameter;
}

public abstract interface class org/jetbrains/exposed/sql/SqlLogger {
	public abstract fun log (Lorg/jetbrains/exposed/sql/statements/StatementContext;Lorg/jetbrains/exposed/sql/Transaction;)V
}

public final class org/jetbrains/exposed/sql/StdDevPop : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/StdDevSamp : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/StdOutSqlLogger : org/jetbrains/exposed/sql/SqlLogger {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/StdOutSqlLogger;
	public fun log (Lorg/jetbrains/exposed/sql/statements/StatementContext;Lorg/jetbrains/exposed/sql/Transaction;)V
}

public abstract class org/jetbrains/exposed/sql/StringColumnType : org/jetbrains/exposed/sql/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/sql/StringColumnType$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	protected final fun escape (Ljava/lang/String;)Ljava/lang/String;
	public final fun getCollate ()Ljava/lang/String;
	public fun hashCode ()I
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/StringColumnType$Companion {
}

public abstract class org/jetbrains/exposed/sql/SubQueryOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression, org/jetbrains/exposed/sql/Op$OpBoolean {
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/AbstractQuery;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getOperator ()Ljava/lang/String;
	public final fun getQuery ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Substring : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getLength ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Sum : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/Table : org/jetbrains/exposed/sql/ColumnSet, org/jetbrains/exposed/sql/DdlAware {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun autoGenerate (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun autoIncrement (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun autoIncrement$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun autoinc (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun autoinc$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun binary (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun binary (Ljava/lang/String;I)Lorg/jetbrains/exposed/sql/Column;
	public final fun blob (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun bool (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun byte (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun char (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun char (Ljava/lang/String;ILjava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun char$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;ILjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun check (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun check (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun check$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun check$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun clientDefault (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function0;)Lorg/jetbrains/exposed/sql/Column;
	public fun createStatement ()Ljava/util/List;
	public fun crossJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun customEnumeration (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun customEnumeration$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun databaseGenerated (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun decimal (Ljava/lang/String;II)Lorg/jetbrains/exposed/sql/Column;
	public final fun default (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun default (Lorg/jetbrains/exposed/sql/CompositeColumn;Ljava/lang/Object;)Lorg/jetbrains/exposed/sql/CompositeColumn;
	public final fun defaultExpression (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/Column;
	public fun describe (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public final fun double (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public fun dropStatement ()Ljava/util/List;
	public final fun entityId (Ljava/lang/String;Lorg/jetbrains/exposed/dao/id/IdTable;)Lorg/jetbrains/exposed/sql/Column;
	public final fun entityId (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun entityId (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun enumeration (Ljava/lang/String;Lkotlin/reflect/KClass;)Lorg/jetbrains/exposed/sql/Column;
	public final fun enumerationByName (Ljava/lang/String;ILkotlin/reflect/KClass;)Lorg/jetbrains/exposed/sql/Column;
	public fun equals (Ljava/lang/Object;)Z
	public final fun float (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun foreignKey ([Lkotlin/Pair;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)V
	public final fun foreignKey ([Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Table$PrimaryKey;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)V
	public static synthetic fun foreignKey$default (Lorg/jetbrains/exposed/sql/Table;[Lkotlin/Pair;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun foreignKey$default (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Table$PrimaryKey;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)V
	public fun fullJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun getAutoIncColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getColumns ()Ljava/util/List;
	public final fun getDdl ()Ljava/util/List;
	public final fun getForeignKeys ()Ljava/util/List;
	public final fun getIndices ()Ljava/util/List;
	public fun getPrimaryKey ()Lorg/jetbrains/exposed/sql/Table$PrimaryKey;
	public final fun getSchemaName ()Ljava/lang/String;
	public fun getTableName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun index (Ljava/lang/String;Z[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun index (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;Z)Lorg/jetbrains/exposed/sql/Column;
	public final fun index (Z[Lorg/jetbrains/exposed/sql/Column;)V
	public static synthetic fun index$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Z[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun index$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun index$default (Lorg/jetbrains/exposed/sql/Table;Z[Lorg/jetbrains/exposed/sql/Column;ILjava/lang/Object;)V
	public fun innerJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun integer (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public fun join (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/JoinType;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public final fun largeText (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun largeText$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public fun leftJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun long (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun mediumText (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun mediumText$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public fun modifyStatement ()Ljava/util/List;
	public final fun nameInDatabaseCase ()Ljava/lang/String;
	public final fun nameInDatabaseCaseUnquoted ()Ljava/lang/String;
	public final fun nullable (Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun nullable (Lorg/jetbrains/exposed/sql/CompositeColumn;)Lorg/jetbrains/exposed/sql/CompositeColumn;
	public final fun optReference (Ljava/lang/String;Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun optReference (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun optReference$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun optReference$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun optReferenceByIdColumn (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun optReferenceByIdColumn$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun reference (Ljava/lang/String;Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun reference (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun reference$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/dao/id/IdTable;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun reference$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun referenceByIdColumn (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun referenceByIdColumn$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun references (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public final fun references (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun references$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun referencesById (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun referencesById$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ReferenceOption;Lorg/jetbrains/exposed/sql/ReferenceOption;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun registerColumn (Ljava/lang/String;Lorg/jetbrains/exposed/sql/IColumnType;)Lorg/jetbrains/exposed/sql/Column;
	public final fun registerCompositeColumn (Lorg/jetbrains/exposed/sql/CompositeColumn;)Lorg/jetbrains/exposed/sql/CompositeColumn;
	public final fun replaceColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Lorg/jetbrains/exposed/sql/Column;
	public fun rightJoin (Lorg/jetbrains/exposed/sql/ColumnSet;)Lorg/jetbrains/exposed/sql/Join;
	public final fun short (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun text (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun text$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public final fun ubyte (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun uinteger (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun ulong (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun uniqueIndex (Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Lkotlin/jvm/functions/Function1;)V
	public final fun uniqueIndex (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun uniqueIndex ([Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun uniqueIndex$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun uniqueIndex$default (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun uniqueIndex$default (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun ushort (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun uuid (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public final fun varchar (Ljava/lang/String;ILjava/lang/String;)Lorg/jetbrains/exposed/sql/Column;
	public static synthetic fun varchar$default (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;ILjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Column;
}

public final class org/jetbrains/exposed/sql/Table$Dual : org/jetbrains/exposed/sql/Table {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/Table$Dual;
}

public final class org/jetbrains/exposed/sql/Table$PrimaryKey {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;[Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Column;[Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getColumns ()[Lorg/jetbrains/exposed/sql/Column;
	public final fun getName ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/TableKt {
	public static final fun crossJoin (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun crossJoin$default (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun fullJoin (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun fullJoin$default (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun innerJoin (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun innerJoin$default (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun leftJoin (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun leftJoin$default (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun rightJoin (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/exposed/sql/Join;
	public static synthetic fun rightJoin$default (Lorg/jetbrains/exposed/sql/ColumnSet;Lorg/jetbrains/exposed/sql/ColumnSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Join;
	public static final fun targetTables (Lorg/jetbrains/exposed/sql/ColumnSet;)Ljava/util/List;
}

public class org/jetbrains/exposed/sql/TextColumnType : org/jetbrains/exposed/sql/StringColumnType {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEagerLoading ()Z
	public fun preciseType ()Ljava/lang/String;
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/TimesOp : org/jetbrains/exposed/sql/CustomOperator {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
}

public class org/jetbrains/exposed/sql/Transaction : org/jetbrains/exposed/sql/UserDataHolder, org/jetbrains/exposed/sql/transactions/TransactionInterface {
	public static final field Companion Lorg/jetbrains/exposed/sql/Transaction$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/transactions/TransactionInterface;)V
	public fun close ()V
	public final fun closeExecutedStatements ()V
	public fun commit ()V
	public final fun exec (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;)Lkotlin/Unit;
	public final fun exec (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun exec (Lorg/jetbrains/exposed/sql/statements/Statement;)Ljava/lang/Object;
	public final fun exec (Lorg/jetbrains/exposed/sql/statements/Statement;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public static synthetic fun exec$default (Lorg/jetbrains/exposed/sql/Transaction;Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;ILjava/lang/Object;)Lkotlin/Unit;
	public static synthetic fun exec$default (Lorg/jetbrains/exposed/sql/Transaction;Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/exposed/sql/statements/StatementType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun execInBatch (Ljava/util/List;)V
	public final fun fullIdentity (Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/String;
	public fun getConnection ()Lorg/jetbrains/exposed/sql/statements/api/ExposedConnection;
	public final fun getCurrentStatement ()Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	public final fun getDb ()Lorg/jetbrains/exposed/sql/Database;
	public final fun getDebug ()Z
	public final fun getDuration ()J
	public final fun getId ()Ljava/lang/String;
	public final fun getMaxRepetitionDelay ()J
	public final fun getMinRepetitionDelay ()J
	public fun getOuterTransaction ()Lorg/jetbrains/exposed/sql/Transaction;
	public final fun getQueryTimeout ()Ljava/lang/Integer;
	public fun getReadOnly ()Z
	public final fun getRepetitionAttempts ()I
	public final fun getStatementCount ()I
	public final fun getStatementStats ()Ljava/util/HashMap;
	public final fun getStatements ()Ljava/lang/StringBuilder;
	public fun getTransactionIsolation ()I
	public final fun getWarnLongQueriesDuration ()Ljava/lang/Long;
	public final fun identity (Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/String;
	public final fun identity (Lorg/jetbrains/exposed/sql/Table;)Ljava/lang/String;
	public final fun registerInterceptor (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;)Z
	public fun rollback ()V
	public final fun setCurrentStatement (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public final fun setDebug (Z)V
	public final fun setDuration (J)V
	public final fun setMaxRepetitionDelay (J)V
	public final fun setMinRepetitionDelay (J)V
	public final fun setQueryTimeout (Ljava/lang/Integer;)V
	public final fun setRepetitionAttempts (I)V
	public final fun setStatementCount (I)V
	public final fun setWarnLongQueriesDuration (Ljava/lang/Long;)V
	public final fun unregisterInterceptor (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;)Z
}

public final class org/jetbrains/exposed/sql/Transaction$Companion {
}

public final class org/jetbrains/exposed/sql/Trim : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/UByteColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-Wa3L5BU (Ljava/lang/Object;)B
}

public final class org/jetbrains/exposed/sql/UIntegerColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-OGnWXxg (Ljava/lang/Object;)I
}

public final class org/jetbrains/exposed/sql/ULongColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-I7RO_PI (Ljava/lang/Object;)J
}

public final class org/jetbrains/exposed/sql/UShortColumnType : org/jetbrains/exposed/sql/ColumnType {
	public fun <init> ()V
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun setParameter (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;ILjava/lang/Object;)V
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB-BwKQO78 (Ljava/lang/Object;)S
}

public final class org/jetbrains/exposed/sql/UUIDColumnType : org/jetbrains/exposed/sql/ColumnType {
	public static final field Companion Lorg/jetbrains/exposed/sql/UUIDColumnType$Companion;
	public fun <init> ()V
	public fun nonNullValueToString (Ljava/lang/Object;)Ljava/lang/String;
	public fun notNullValueToDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun readObject (Ljava/sql/ResultSet;I)Ljava/lang/Object;
	public fun sqlType ()Ljava/lang/String;
	public synthetic fun valueFromDB (Ljava/lang/Object;)Ljava/lang/Object;
	public fun valueFromDB (Ljava/lang/Object;)Ljava/util/UUID;
}

public final class org/jetbrains/exposed/sql/UUIDColumnType$Companion {
}

public final class org/jetbrains/exposed/sql/UnboundedFollowingWindowFrameBound : org/jetbrains/exposed/sql/UnboundedWindowFrameBound, org/jetbrains/exposed/sql/CurrentOrFollowing {
	public fun <init> ()V
}

public final class org/jetbrains/exposed/sql/UnboundedPrecedingWindowFrameBound : org/jetbrains/exposed/sql/UnboundedWindowFrameBound, org/jetbrains/exposed/sql/CurrentOrPreceding {
	public fun <init> ()V
}

public class org/jetbrains/exposed/sql/UnboundedWindowFrameBound : org/jetbrains/exposed/sql/WindowFrameBound {
	public fun <init> (Lorg/jetbrains/exposed/sql/WindowFrameBoundDirection;)V
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/Union : org/jetbrains/exposed/sql/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public synthetic fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun copy ()Lorg/jetbrains/exposed/sql/Union;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/sql/SetOperation;
}

public final class org/jetbrains/exposed/sql/UnionAll : org/jetbrains/exposed/sql/SetOperation {
	public fun <init> (Lorg/jetbrains/exposed/sql/AbstractQuery;Lorg/jetbrains/exposed/sql/AbstractQuery;)V
	public synthetic fun copy ()Lorg/jetbrains/exposed/sql/SizedIterable;
	public fun copy ()Lorg/jetbrains/exposed/sql/UnionAll;
	public synthetic fun withDistinct (Z)Lorg/jetbrains/exposed/sql/AbstractQuery;
	public fun withDistinct (Z)Lorg/jetbrains/exposed/sql/SetOperation;
}

public final class org/jetbrains/exposed/sql/UpperCase : org/jetbrains/exposed/sql/Function {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun getExpr ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public class org/jetbrains/exposed/sql/UserDataHolder {
	public fun <init> ()V
	public final fun getOrCreate (Lorg/jetbrains/exposed/sql/Key;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun getUserData (Lorg/jetbrains/exposed/sql/Key;)Ljava/lang/Object;
	protected final fun getUserdata ()Ljava/util/concurrent/ConcurrentHashMap;
	public final fun putUserData (Lorg/jetbrains/exposed/sql/Key;Ljava/lang/Object;)V
	public final fun removeUserData (Lorg/jetbrains/exposed/sql/Key;)Ljava/lang/Object;
}

public class org/jetbrains/exposed/sql/VarCharColumnType : org/jetbrains/exposed/sql/StringColumnType {
	public fun <init> ()V
	public fun <init> (ILjava/lang/String;)V
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColLength ()I
	public fun hashCode ()I
	public fun preciseType ()Ljava/lang/String;
	public fun sqlType ()Ljava/lang/String;
	public fun validateValueBeforeUpdate (Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/sql/VarPop : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/VarSamp : org/jetbrains/exposed/sql/Function, org/jetbrains/exposed/sql/WindowFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;I)V
	public final fun getExpression ()Lorg/jetbrains/exposed/sql/Expression;
	public fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/sql/WindowFrameBound {
	public static final field Companion Lorg/jetbrains/exposed/sql/WindowFrameBound$Companion;
	public abstract fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/WindowFrameBound$Companion {
	public final fun currentRow ()Lorg/jetbrains/exposed/sql/CurrentRowWindowFrameBound;
	public final fun offsetFollowing (I)Lorg/jetbrains/exposed/sql/OffsetFollowingWindowFrameBound;
	public final fun offsetFollowing (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/OffsetFollowingWindowFrameBound;
	public final fun offsetPreceding (I)Lorg/jetbrains/exposed/sql/OffsetPrecedingWindowFrameBound;
	public final fun offsetPreceding (Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/OffsetPrecedingWindowFrameBound;
	public final fun unboundedFollowing ()Lorg/jetbrains/exposed/sql/UnboundedFollowingWindowFrameBound;
	public final fun unboundedPreceding ()Lorg/jetbrains/exposed/sql/UnboundedPrecedingWindowFrameBound;
}

public final class org/jetbrains/exposed/sql/WindowFrameBoundDirection : java/lang/Enum {
	public static final field FOLLOWING Lorg/jetbrains/exposed/sql/WindowFrameBoundDirection;
	public static final field PRECEDING Lorg/jetbrains/exposed/sql/WindowFrameBoundDirection;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/WindowFrameBoundDirection;
	public static fun values ()[Lorg/jetbrains/exposed/sql/WindowFrameBoundDirection;
}

public final class org/jetbrains/exposed/sql/WindowFrameClause {
	public fun <init> (Lorg/jetbrains/exposed/sql/WindowFrameUnit;Lorg/jetbrains/exposed/sql/WindowFrameBound;Lorg/jetbrains/exposed/sql/WindowFrameBound;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/WindowFrameUnit;Lorg/jetbrains/exposed/sql/WindowFrameBound;Lorg/jetbrains/exposed/sql/WindowFrameBound;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/WindowFrameUnit : java/lang/Enum {
	public static final field GROUPS Lorg/jetbrains/exposed/sql/WindowFrameUnit;
	public static final field RANGE Lorg/jetbrains/exposed/sql/WindowFrameUnit;
	public static final field ROWS Lorg/jetbrains/exposed/sql/WindowFrameUnit;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/WindowFrameUnit;
	public static fun values ()[Lorg/jetbrains/exposed/sql/WindowFrameUnit;
}

public abstract interface class org/jetbrains/exposed/sql/WindowFunction {
	public abstract fun over ()Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public abstract fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/WindowFunctionDefinition : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/WindowFunction;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun groups (Lorg/jetbrains/exposed/sql/CurrentOrPreceding;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun groups (Lorg/jetbrains/exposed/sql/WindowFrameBound;Lorg/jetbrains/exposed/sql/WindowFrameBound;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun orderBy (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/SortOrder;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun orderBy ([Lkotlin/Pair;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public static synthetic fun orderBy$default (Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/SortOrder;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun partitionBy ([Lorg/jetbrains/exposed/sql/Expression;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun range (Lorg/jetbrains/exposed/sql/CurrentOrPreceding;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun range (Lorg/jetbrains/exposed/sql/WindowFrameBound;Lorg/jetbrains/exposed/sql/WindowFrameBound;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun rows (Lorg/jetbrains/exposed/sql/CurrentOrPreceding;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public final fun rows (Lorg/jetbrains/exposed/sql/WindowFrameBound;Lorg/jetbrains/exposed/sql/WindowFrameBound;)Lorg/jetbrains/exposed/sql/WindowFunctionDefinition;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/XorBitOp : org/jetbrains/exposed/sql/ExpressionWithColumnType {
	public fun <init> (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;)V
	public fun getColumnType ()Lorg/jetbrains/exposed/sql/IColumnType;
	public final fun getExpr1 ()Lorg/jetbrains/exposed/sql/Expression;
	public final fun getExpr2 ()Lorg/jetbrains/exposed/sql/Expression;
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/functions/math/ACosFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/ASinFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/ATanFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/AbsFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/CeilingFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/CosFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/CotFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/DegreesFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/ExpFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/FloorFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/PiFunction : org/jetbrains/exposed/sql/CustomFunction {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/functions/math/PiFunction;
}

public final class org/jetbrains/exposed/sql/functions/math/PowerFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;II)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Lorg/jetbrains/exposed/sql/Expression;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/sql/functions/math/RadiansFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/RoundFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;I)V
}

public final class org/jetbrains/exposed/sql/functions/math/SignFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/SinFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/SqrtFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public final class org/jetbrains/exposed/sql/functions/math/TanFunction : org/jetbrains/exposed/sql/CustomFunction {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;)V
}

public abstract class org/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp : org/jetbrains/exposed/sql/Op, org/jetbrains/exposed/sql/ComplexExpression {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected abstract fun extractValues (Ljava/lang/Object;)Ljava/util/List;
	protected abstract fun getColumnTypes ()Ljava/util/List;
	public final fun getExpr ()Ljava/lang/Object;
	public final fun getList ()Ljava/lang/Iterable;
	public final fun isInList ()Z
	public fun toQueryBuilder (Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public final class org/jetbrains/exposed/sql/ops/PairInListOp : org/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp {
	public fun <init> (Lkotlin/Pair;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Lkotlin/Pair;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun extractValues (Ljava/lang/Object;)Ljava/util/List;
}

public final class org/jetbrains/exposed/sql/ops/SingleValueInListOp : org/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp {
	public fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/ExpressionWithColumnType;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/sql/ops/TripleInListOp : org/jetbrains/exposed/sql/ops/InListOrNotInListBaseOp {
	public fun <init> (Lkotlin/Triple;Ljava/lang/Iterable;Z)V
	public synthetic fun <init> (Lkotlin/Triple;Ljava/lang/Iterable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun extractValues (Ljava/lang/Object;)Ljava/util/List;
}

public abstract class org/jetbrains/exposed/sql/statements/BaseBatchInsertStatement : org/jetbrains/exposed/sql/statements/InsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addBatch ()V
	protected fun getArguments ()Ljava/util/List;
	protected final fun getShouldReturnGeneratedValues ()Z
	public fun isAlwaysBatch ()Z
	public fun prepared (Lorg/jetbrains/exposed/sql/Transaction;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	public fun set (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)V
	protected fun setArguments (Ljava/util/List;)V
	protected fun valuesAndDefaults (Ljava/util/Map;)Ljava/util/Map;
}

public final class org/jetbrains/exposed/sql/statements/BatchDataInconsistentException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public class org/jetbrains/exposed/sql/statements/BatchInsertStatement : org/jetbrains/exposed/sql/statements/BaseBatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public class org/jetbrains/exposed/sql/statements/BatchReplaceStatement : org/jetbrains/exposed/sql/statements/BaseBatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/statements/BatchUpdateStatement : org/jetbrains/exposed/sql/statements/UpdateStatement {
	public fun <init> (Lorg/jetbrains/exposed/dao/id/IdTable;)V
	public final fun addBatch (Lorg/jetbrains/exposed/dao/id/EntityID;)V
	public fun arguments ()Ljava/lang/Iterable;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public final fun getData ()Ljava/util/ArrayList;
	public fun getFirstDataSet ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/dao/id/IdTable;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
	public fun update (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Expression;)Ljava/lang/Void;
	public synthetic fun update (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Expression;)V
}

public class org/jetbrains/exposed/sql/statements/BatchUpsertStatement : org/jetbrains/exposed/sql/statements/BaseBatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getKeys ()[Lorg/jetbrains/exposed/sql/Column;
	public final fun getOnUpdate ()Ljava/util/List;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/statements/DeleteStatement : org/jetbrains/exposed/sql/statements/Statement {
	public static final field Companion Lorg/jetbrains/exposed/sql/statements/DeleteStatement$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Op;ZLjava/lang/Integer;Ljava/lang/Long;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Op;ZLjava/lang/Integer;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun arguments ()Ljava/lang/Iterable;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getOffset ()Ljava/lang/Long;
	public final fun getTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun getWhere ()Lorg/jetbrains/exposed/sql/Op;
	public final fun isIgnore ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/statements/DeleteStatement$Companion {
	public final fun all (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/Table;)I
	public final fun where (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Op;ZLjava/lang/Integer;Ljava/lang/Long;)I
	public static synthetic fun where$default (Lorg/jetbrains/exposed/sql/statements/DeleteStatement$Companion;Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Op;ZLjava/lang/Integer;Ljava/lang/Long;ILjava/lang/Object;)I
}

public abstract interface class org/jetbrains/exposed/sql/statements/GlobalStatementInterceptor : org/jetbrains/exposed/sql/statements/StatementInterceptor {
}

public final class org/jetbrains/exposed/sql/statements/GlobalStatementInterceptor$DefaultImpls {
	public static fun afterCommit (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun afterExecution (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public static fun afterRollback (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun afterStatementPrepared (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public static fun beforeCommit (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun beforeExecution (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/StatementContext;)V
	public static fun beforeRollback (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun keepUserDataInTransactionStoreOnCommit (Lorg/jetbrains/exposed/sql/statements/GlobalStatementInterceptor;Ljava/util/Map;)Ljava/util/Map;
}

public class org/jetbrains/exposed/sql/statements/InsertSelectStatement : org/jetbrains/exposed/sql/statements/Statement {
	public fun <init> (Ljava/util/List;Lorg/jetbrains/exposed/sql/AbstractQuery;Z)V
	public synthetic fun <init> (Ljava/util/List;Lorg/jetbrains/exposed/sql/AbstractQuery;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun arguments ()Ljava/lang/Iterable;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public final fun getColumns ()Ljava/util/List;
	public final fun getSelectQuery ()Lorg/jetbrains/exposed/sql/AbstractQuery;
	public final fun isIgnore ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/statements/InsertStatement : org/jetbrains/exposed/sql/statements/UpdateBuilder {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;Z)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	protected fun execInsertFunction (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)Lkotlin/Pair;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public final fun get (Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/Object;
	public final fun get (Lorg/jetbrains/exposed/sql/CompositeColumn;)Ljava/lang/Object;
	protected fun getArguments ()Ljava/util/List;
	protected final fun getAutoIncColumns ()Ljava/util/List;
	public final fun getInsertedCount ()I
	public final fun getOrNull (Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/Object;
	public final fun getResultedValues ()Ljava/util/List;
	public final fun getTable ()Lorg/jetbrains/exposed/sql/Table;
	public final fun isIgnore ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
	public fun prepared (Lorg/jetbrains/exposed/sql/Transaction;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	protected fun setArguments (Ljava/util/List;)V
	public final fun setInsertedCount (I)V
	protected final fun toSqlString (Ljava/util/List;Z)Ljava/lang/String;
	protected fun valuesAndDefaults (Ljava/util/Map;)Ljava/util/Map;
	public static synthetic fun valuesAndDefaults$default (Lorg/jetbrains/exposed/sql/statements/InsertStatement;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/Map;
}

public class org/jetbrains/exposed/sql/statements/ReplaceStatement : org/jetbrains/exposed/sql/statements/InsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;)V
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/statements/SQLServerBatchInsertStatement : org/jetbrains/exposed/sql/statements/BatchInsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;ZZ)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Table;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun arguments ()Ljava/lang/Iterable;
	public fun arguments ()Ljava/util/List;
	protected fun execInsertFunction (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)Lkotlin/Pair;
	public fun isAlwaysBatch ()Z
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/sql/statements/Statement {
	public fun <init> (Lorg/jetbrains/exposed/sql/statements/StatementType;Ljava/util/List;)V
	public abstract fun arguments ()Ljava/lang/Iterable;
	public final fun execute (Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public abstract fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public final fun getTargets ()Ljava/util/List;
	public final fun getType ()Lorg/jetbrains/exposed/sql/statements/StatementType;
	public fun isAlwaysBatch ()Z
	public abstract fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
	public static synthetic fun prepareSQL$default (Lorg/jetbrains/exposed/sql/statements/Statement;Lorg/jetbrains/exposed/sql/Transaction;ZILjava/lang/Object;)Ljava/lang/String;
	public fun prepared (Lorg/jetbrains/exposed/sql/Transaction;Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
}

public final class org/jetbrains/exposed/sql/statements/StatementContext {
	public fun <init> (Lorg/jetbrains/exposed/sql/statements/Statement;Ljava/lang/Iterable;)V
	public final fun getArgs ()Ljava/lang/Iterable;
	public final fun getStatement ()Lorg/jetbrains/exposed/sql/statements/Statement;
	public final fun sql (Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/statements/StatementGroup : java/lang/Enum {
	public static final field DDL Lorg/jetbrains/exposed/sql/statements/StatementGroup;
	public static final field DML Lorg/jetbrains/exposed/sql/statements/StatementGroup;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/StatementGroup;
	public static fun values ()[Lorg/jetbrains/exposed/sql/statements/StatementGroup;
}

public abstract interface class org/jetbrains/exposed/sql/statements/StatementInterceptor {
	public abstract fun afterCommit (Lorg/jetbrains/exposed/sql/Transaction;)V
	public abstract fun afterExecution (Lorg/jetbrains/exposed/sql/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public abstract fun afterRollback (Lorg/jetbrains/exposed/sql/Transaction;)V
	public abstract fun afterStatementPrepared (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public abstract fun beforeCommit (Lorg/jetbrains/exposed/sql/Transaction;)V
	public abstract fun beforeExecution (Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/StatementContext;)V
	public abstract fun beforeRollback (Lorg/jetbrains/exposed/sql/Transaction;)V
	public abstract fun keepUserDataInTransactionStoreOnCommit (Ljava/util/Map;)Ljava/util/Map;
}

public final class org/jetbrains/exposed/sql/statements/StatementInterceptor$DefaultImpls {
	public static fun afterCommit (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun afterExecution (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;Ljava/util/List;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public static fun afterRollback (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun afterStatementPrepared (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;)V
	public static fun beforeCommit (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun beforeExecution (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;Lorg/jetbrains/exposed/sql/statements/StatementContext;)V
	public static fun beforeRollback (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Lorg/jetbrains/exposed/sql/Transaction;)V
	public static fun keepUserDataInTransactionStoreOnCommit (Lorg/jetbrains/exposed/sql/statements/StatementInterceptor;Ljava/util/Map;)Ljava/util/Map;
}

public final class org/jetbrains/exposed/sql/statements/StatementKt {
	public static final fun expandArgs (Lorg/jetbrains/exposed/sql/statements/StatementContext;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/sql/statements/StatementResult {
}

public final class org/jetbrains/exposed/sql/statements/StatementResult$Count : org/jetbrains/exposed/sql/statements/StatementResult {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lorg/jetbrains/exposed/sql/statements/StatementResult$Count;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/statements/StatementResult$Count;IILjava/lang/Object;)Lorg/jetbrains/exposed/sql/statements/StatementResult$Count;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/statements/StatementResult$Object : org/jetbrains/exposed/sql/statements/StatementResult {
	public fun <init> (Ljava/sql/ResultSet;)V
	public final fun component1 ()Ljava/sql/ResultSet;
	public final fun copy (Ljava/sql/ResultSet;)Lorg/jetbrains/exposed/sql/statements/StatementResult$Object;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/statements/StatementResult$Object;Ljava/sql/ResultSet;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/statements/StatementResult$Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getResultSet ()Ljava/sql/ResultSet;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/statements/StatementType : java/lang/Enum {
	public static final field ALTER Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field CREATE Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field DELETE Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field DROP Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field EXEC Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field GRANT Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field INSERT Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field MULTI Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field OTHER Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field PRAGMA Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field SELECT Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field SHOW Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field TRUNCATE Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static final field UPDATE Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getGroup ()Lorg/jetbrains/exposed/sql/statements/StatementGroup;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/StatementType;
	public static fun values ()[Lorg/jetbrains/exposed/sql/statements/StatementType;
}

public abstract class org/jetbrains/exposed/sql/statements/UpdateBuilder : org/jetbrains/exposed/sql/statements/Statement {
	public fun <init> (Lorg/jetbrains/exposed/sql/statements/StatementType;Ljava/util/List;)V
	public fun contains (Lorg/jetbrains/exposed/sql/Column;)Z
	protected final fun getHasBatchedValues ()Z
	protected final fun getValues ()Ljava/util/Map;
	public fun set (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Object;)V
	public fun set (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Expression;)V
	public fun set (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Query;)V
	public fun set (Lorg/jetbrains/exposed/sql/CompositeColumn;Ljava/lang/Object;)V
	protected final fun setHasBatchedValues (Z)V
	public final fun setWithEntityIdExpression (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Expression;)V
	public final fun setWithEntityIdValue (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Comparable;)V
	public final fun setWithNullableEntityIdValue (Lorg/jetbrains/exposed/sql/Column;Ljava/lang/Comparable;)V
	public fun update (Lorg/jetbrains/exposed/sql/Column;Lkotlin/jvm/functions/Function1;)V
	public fun update (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Expression;)V
}

public class org/jetbrains/exposed/sql/statements/UpdateStatement : org/jetbrains/exposed/sql/statements/UpdateBuilder {
	public fun <init> (Lorg/jetbrains/exposed/sql/ColumnSet;Ljava/lang/Integer;Lorg/jetbrains/exposed/sql/Op;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/ColumnSet;Ljava/lang/Integer;Lorg/jetbrains/exposed/sql/Op;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun arguments ()Ljava/lang/Iterable;
	public fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Integer;
	public synthetic fun executeInternal (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/Object;
	public fun getFirstDataSet ()Ljava/util/List;
	public final fun getLimit ()Ljava/lang/Integer;
	public final fun getTargetsSet ()Lorg/jetbrains/exposed/sql/ColumnSet;
	public final fun getWhere ()Lorg/jetbrains/exposed/sql/Op;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/statements/UpsertStatement : org/jetbrains/exposed/sql/statements/InsertStatement {
	public fun <init> (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;Ljava/util/List;Lorg/jetbrains/exposed/sql/Op;)V
	public final fun getKeys ()[Lorg/jetbrains/exposed/sql/Column;
	public final fun getOnUpdate ()Ljava/util/List;
	public final fun getWhere ()Lorg/jetbrains/exposed/sql/Op;
	public fun prepareSQL (Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/statements/api/ExposedBlob {
	public fun <init> (Ljava/io/InputStream;)V
	public fun <init> ([B)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBytes ()[B
	public final fun getInputStream ()Ljava/io/InputStream;
	public fun hashCode ()I
	public final fun hexString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/sql/statements/api/ExposedConnection {
	public abstract fun close ()V
	public abstract fun commit ()V
	public abstract fun executeInBatch (Ljava/util/List;)V
	public abstract fun getAutoCommit ()Z
	public abstract fun getCatalog ()Ljava/lang/String;
	public abstract fun getConnection ()Ljava/lang/Object;
	public abstract fun getReadOnly ()Z
	public abstract fun getSchema ()Ljava/lang/String;
	public abstract fun getTransactionIsolation ()I
	public abstract fun isClosed ()Z
	public abstract fun metadata (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun prepareStatement (Ljava/lang/String;Z)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	public abstract fun prepareStatement (Ljava/lang/String;[Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;
	public abstract fun releaseSavepoint (Lorg/jetbrains/exposed/sql/statements/api/ExposedSavepoint;)V
	public abstract fun rollback ()V
	public abstract fun rollback (Lorg/jetbrains/exposed/sql/statements/api/ExposedSavepoint;)V
	public abstract fun setAutoCommit (Z)V
	public abstract fun setCatalog (Ljava/lang/String;)V
	public abstract fun setReadOnly (Z)V
	public abstract fun setSavepoint (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/ExposedSavepoint;
	public abstract fun setSchema (Ljava/lang/String;)V
	public abstract fun setTransactionIsolation (I)V
}

public abstract class org/jetbrains/exposed/sql/statements/api/ExposedDatabaseMetadata {
	public fun <init> (Ljava/lang/String;)V
	public abstract fun cleanCache ()V
	public abstract fun columns ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun existingIndices ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun existingPrimaryKeys ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun getCurrentScheme ()Ljava/lang/String;
	public final fun getDatabase ()Ljava/lang/String;
	public abstract fun getDatabaseDialectName ()Ljava/lang/String;
	public abstract fun getDatabaseProductVersion ()Ljava/lang/String;
	public abstract fun getDefaultIsolationLevel ()I
	public abstract fun getIdentifierManager ()Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi;
	public abstract fun getSchemaNames ()Ljava/util/List;
	public abstract fun getSupportsAlterTableWithAddColumn ()Z
	public abstract fun getSupportsMultipleResultSets ()Z
	public abstract fun getSupportsSelectForUpdate ()Z
	public abstract fun getTableNames ()Ljava/util/Map;
	public abstract fun getUrl ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/math/BigDecimal;
	public abstract fun resetCurrentScheme ()V
	public abstract fun tableConstraints (Ljava/util/List;)Ljava/util/Map;
	public abstract fun tableNamesByCurrentSchema (Ljava/util/Map;)Lorg/jetbrains/exposed/sql/vendors/SchemaMetadata;
}

public abstract class org/jetbrains/exposed/sql/statements/api/ExposedSavepoint {
	public fun <init> (Ljava/lang/String;)V
	public final fun getName ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/sql/statements/api/IdentifierManagerApi {
	public fun <init> ()V
	public final fun cutIfNecessaryAndQuote (Ljava/lang/String;)Ljava/lang/String;
	protected abstract fun dbKeywords ()Ljava/util/List;
	protected abstract fun getExtraNameCharacters ()Ljava/lang/String;
	protected final fun getIdentifierLengthLimit ()I
	public final fun getKeywords ()Ljava/util/Set;
	protected abstract fun getMaxColumnNameLength ()I
	protected abstract fun getOracleVersion ()Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
	public abstract fun getQuoteString ()Ljava/lang/String;
	protected abstract fun getSupportsMixedIdentifiers ()Z
	protected abstract fun getSupportsMixedQuotedIdentifiers ()Z
	public final fun inProperCase (Ljava/lang/String;)Ljava/lang/String;
	protected abstract fun isLowerCaseIdentifiers ()Z
	protected abstract fun isLowerCaseQuotedIdentifiers ()Z
	protected abstract fun isUpperCaseIdentifiers ()Z
	protected abstract fun isUpperCaseQuotedIdentifiers ()Z
	public final fun needQuotes (Ljava/lang/String;)Z
	public final fun quoteIdentifierWhenWrongCaseOrNecessary (Ljava/lang/String;)Ljava/lang/String;
	public final fun quoteIfNecessary (Ljava/lang/String;)Ljava/lang/String;
	public final fun shouldQuoteIdentifier (Ljava/lang/String;)Z
}

protected final class org/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion : java/lang/Enum {
	public static final field NonOracle Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
	public static final field Oracle11g Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
	public static final field Oracle12_1g Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
	public static final field Oracle12plus Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
	public static fun values ()[Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi$OracleVersion;
}

public abstract interface class org/jetbrains/exposed/sql/statements/api/PreparedStatementApi {
	public abstract fun addBatch ()V
	public abstract fun cancel ()V
	public abstract fun closeIfPossible ()V
	public abstract fun executeBatch ()Ljava/util/List;
	public abstract fun executeMultiple ()Ljava/util/List;
	public abstract fun executeQuery ()Ljava/sql/ResultSet;
	public abstract fun executeUpdate ()I
	public abstract fun fillParameters (Ljava/lang/Iterable;)I
	public abstract fun getFetchSize ()Ljava/lang/Integer;
	public abstract fun getResultSet ()Ljava/sql/ResultSet;
	public abstract fun getTimeout ()Ljava/lang/Integer;
	public abstract fun set (ILjava/lang/Object;)V
	public abstract fun setFetchSize (Ljava/lang/Integer;)V
	public abstract fun setInputStream (ILjava/io/InputStream;)V
	public abstract fun setNull (ILorg/jetbrains/exposed/sql/IColumnType;)V
	public abstract fun setTimeout (Ljava/lang/Integer;)V
}

public final class org/jetbrains/exposed/sql/statements/api/PreparedStatementApi$DefaultImpls {
	public static fun fillParameters (Lorg/jetbrains/exposed/sql/statements/api/PreparedStatementApi;Ljava/lang/Iterable;)I
}

public final class org/jetbrains/exposed/sql/transactions/ThreadLocalTransactionManager : org/jetbrains/exposed/sql/transactions/TransactionManager {
	public fun <init> (Lorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bindTransactionToThread (Lorg/jetbrains/exposed/sql/Transaction;)V
	public fun currentOrNull ()Lorg/jetbrains/exposed/sql/Transaction;
	public fun getDefaultIsolationLevel ()I
	public fun getDefaultMaxRepetitionDelay ()J
	public fun getDefaultMinRepetitionDelay ()J
	public fun getDefaultReadOnly ()Z
	public fun getDefaultRepetitionAttempts ()I
	public final fun getThreadLocal ()Ljava/lang/ThreadLocal;
	public fun newTransaction (IZLorg/jetbrains/exposed/sql/Transaction;)Lorg/jetbrains/exposed/sql/Transaction;
	public fun setDefaultIsolationLevel (I)V
	public fun setDefaultMaxRepetitionDelay (J)V
	public fun setDefaultMinRepetitionDelay (J)V
	public fun setDefaultReadOnly (Z)V
	public fun setDefaultRepetitionAttempts (I)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/transactions/ThreadLocalTransactionManagerKt {
	public static final fun inTopLevelTransaction (IZLorg/jetbrains/exposed/sql/Database;Lorg/jetbrains/exposed/sql/Transaction;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun inTopLevelTransaction$default (IZLorg/jetbrains/exposed/sql/Database;Lorg/jetbrains/exposed/sql/Transaction;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun transaction (IZLorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun transaction (Lorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun transaction$default (IZLorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun transaction$default (Lorg/jetbrains/exposed/sql/Database;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/transactions/TransactionApiKt {
	public static final fun getTransactionManager (Lorg/jetbrains/exposed/sql/Database;)Lorg/jetbrains/exposed/sql/transactions/TransactionManager;
}

public abstract interface class org/jetbrains/exposed/sql/transactions/TransactionInterface {
	public abstract fun close ()V
	public abstract fun commit ()V
	public abstract fun getConnection ()Lorg/jetbrains/exposed/sql/statements/api/ExposedConnection;
	public abstract fun getDb ()Lorg/jetbrains/exposed/sql/Database;
	public abstract fun getOuterTransaction ()Lorg/jetbrains/exposed/sql/Transaction;
	public abstract fun getReadOnly ()Z
	public abstract fun getTransactionIsolation ()I
	public abstract fun rollback ()V
}

public abstract interface class org/jetbrains/exposed/sql/transactions/TransactionManager {
	public static final field Companion Lorg/jetbrains/exposed/sql/transactions/TransactionManager$Companion;
	public abstract fun bindTransactionToThread (Lorg/jetbrains/exposed/sql/Transaction;)V
	public abstract fun currentOrNull ()Lorg/jetbrains/exposed/sql/Transaction;
	public abstract fun getDefaultIsolationLevel ()I
	public abstract fun getDefaultMaxRepetitionDelay ()J
	public abstract fun getDefaultMinRepetitionDelay ()J
	public abstract fun getDefaultReadOnly ()Z
	public abstract fun getDefaultRepetitionAttempts ()I
	public abstract fun newTransaction (IZLorg/jetbrains/exposed/sql/Transaction;)Lorg/jetbrains/exposed/sql/Transaction;
	public abstract fun setDefaultIsolationLevel (I)V
	public abstract fun setDefaultMaxRepetitionDelay (J)V
	public abstract fun setDefaultMinRepetitionDelay (J)V
	public abstract fun setDefaultReadOnly (Z)V
	public abstract fun setDefaultRepetitionAttempts (I)V
}

public final class org/jetbrains/exposed/sql/transactions/TransactionManager$Companion {
	public final fun closeAndUnregister (Lorg/jetbrains/exposed/sql/Database;)V
	public final fun current ()Lorg/jetbrains/exposed/sql/Transaction;
	public final fun currentOrNew (I)Lorg/jetbrains/exposed/sql/Transaction;
	public final fun currentOrNull ()Lorg/jetbrains/exposed/sql/Transaction;
	public final fun getDefaultDatabase ()Lorg/jetbrains/exposed/sql/Database;
	public final fun getManager ()Lorg/jetbrains/exposed/sql/transactions/TransactionManager;
	public final fun isInitialized ()Z
	public final fun managerFor (Lorg/jetbrains/exposed/sql/Database;)Lorg/jetbrains/exposed/sql/transactions/TransactionManager;
	public final fun registerManager (Lorg/jetbrains/exposed/sql/Database;Lorg/jetbrains/exposed/sql/transactions/TransactionManager;)V
	public final fun resetCurrent (Lorg/jetbrains/exposed/sql/transactions/TransactionManager;)V
	public final fun setDefaultDatabase (Lorg/jetbrains/exposed/sql/Database;)V
}

public final class org/jetbrains/exposed/sql/transactions/TransactionManager$DefaultImpls {
	public static synthetic fun newTransaction$default (Lorg/jetbrains/exposed/sql/transactions/TransactionManager;IZLorg/jetbrains/exposed/sql/Transaction;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Transaction;
}

public final class org/jetbrains/exposed/sql/transactions/TransactionScopeKt {
	public static final fun nullableTransactionScope ()Lorg/jetbrains/exposed/sql/transactions/TransactionStore;
	public static final fun transactionScope (Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadWriteProperty;
}

public final class org/jetbrains/exposed/sql/transactions/TransactionStore : kotlin/properties/ReadWriteProperty {
	public fun <init> ()V
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getInit ()Lkotlin/jvm/functions/Function1;
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class org/jetbrains/exposed/sql/transactions/experimental/SuspendedKt {
	public static final fun newSuspendedTransaction (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/sql/Database;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun newSuspendedTransaction$default (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/sql/Database;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun suspendedTransactionAsync (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/sql/Database;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun suspendedTransactionAsync$default (Lkotlin/coroutines/CoroutineContext;Lorg/jetbrains/exposed/sql/Database;Ljava/lang/Integer;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun withSuspendTransaction (Lorg/jetbrains/exposed/sql/Transaction;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun withSuspendTransaction$default (Lorg/jetbrains/exposed/sql/Transaction;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/exposed/sql/vendors/ColumnMetadata {
	public fun <init> (Ljava/lang/String;IZLjava/lang/Integer;ZLjava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()Z
	public final fun component4 ()Ljava/lang/Integer;
	public final fun component5 ()Z
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;IZLjava/lang/Integer;ZLjava/lang/String;)Lorg/jetbrains/exposed/sql/vendors/ColumnMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/vendors/ColumnMetadata;Ljava/lang/String;IZLjava/lang/Integer;ZLjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/vendors/ColumnMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoIncrement ()Z
	public final fun getDefaultDbValue ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getNullable ()Z
	public final fun getSize ()Ljava/lang/Integer;
	public final fun getType ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/sql/vendors/DataTypeProvider {
	public fun <init> ()V
	public abstract fun binaryType ()Ljava/lang/String;
	public fun binaryType (I)Ljava/lang/String;
	public fun blobType ()Ljava/lang/String;
	public fun booleanFromStringToBoolean (Ljava/lang/String;)Z
	public fun booleanToStatementString (Z)Ljava/lang/String;
	public fun booleanType ()Ljava/lang/String;
	public fun byteType ()Ljava/lang/String;
	public fun dateTimeType ()Ljava/lang/String;
	public fun dateType ()Ljava/lang/String;
	public fun doubleType ()Ljava/lang/String;
	public fun floatType ()Ljava/lang/String;
	public abstract fun hexToDb (Ljava/lang/String;)Ljava/lang/String;
	public fun integerAutoincType ()Ljava/lang/String;
	public fun integerType ()Ljava/lang/String;
	public fun jsonBType ()Ljava/lang/String;
	public fun jsonType ()Ljava/lang/String;
	public fun largeTextType ()Ljava/lang/String;
	public fun longAutoincType ()Ljava/lang/String;
	public fun longType ()Ljava/lang/String;
	public fun mediumTextType ()Ljava/lang/String;
	public fun precessOrderByClause (Lorg/jetbrains/exposed/sql/QueryBuilder;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/SortOrder;)V
	public fun processForDefaultValue (Lorg/jetbrains/exposed/sql/Expression;)Ljava/lang/String;
	public fun shortType ()Ljava/lang/String;
	public fun textType ()Ljava/lang/String;
	public fun timeType ()Ljava/lang/String;
	public fun timestampWithTimeZoneType ()Ljava/lang/String;
	public fun ubyteType ()Ljava/lang/String;
	public fun uintegerType ()Ljava/lang/String;
	public fun ulongType ()Ljava/lang/String;
	public fun ushortType ()Ljava/lang/String;
	public fun uuidToDB (Ljava/util/UUID;)Ljava/lang/Object;
	public fun uuidType ()Ljava/lang/String;
	public fun varcharType (I)Ljava/lang/String;
}

public abstract interface class org/jetbrains/exposed/sql/vendors/DatabaseDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect$Companion;
	public abstract fun addPrimaryKey (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/String;
	public abstract fun allTablesNames ()Ljava/util/List;
	public abstract fun catalog (Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public abstract fun checkTableMapping (Lorg/jetbrains/exposed/sql/Table;)Z
	public abstract fun columnConstraints ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	public abstract fun createSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public abstract fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public abstract fun dropSchema (Lorg/jetbrains/exposed/sql/Schema;Z)Ljava/lang/String;
	public abstract fun existingIndices ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun existingPrimaryKeys ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun getDataTypeProvider ()Lorg/jetbrains/exposed/sql/vendors/DataTypeProvider;
	public abstract fun getDatabase ()Ljava/lang/String;
	public abstract fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public abstract fun getFunctionProvider ()Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;
	public abstract fun getLikePatternSpecialChars ()Ljava/util/Map;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getNeedsQuotesWhenSymbolsInNames ()Z
	public abstract fun getNeedsSequenceToAutoInc ()Z
	public abstract fun getRequiresAutoCommitOnCreateDrop ()Z
	public abstract fun getSupportsCreateSchema ()Z
	public abstract fun getSupportsCreateSequence ()Z
	public abstract fun getSupportsDualTableConcept ()Z
	public abstract fun getSupportsIfNotExists ()Z
	public abstract fun getSupportsMultipleGeneratedKeys ()Z
	public abstract fun getSupportsOnUpdate ()Z
	public abstract fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public abstract fun getSupportsOrderByNullsFirstLast ()Z
	public abstract fun getSupportsRestrictReferenceOption ()Z
	public abstract fun getSupportsSequenceAsGeneratedKeys ()Z
	public abstract fun getSupportsSetDefaultReferenceOption ()Z
	public abstract fun getSupportsSubqueryUnions ()Z
	public abstract fun getSupportsTernaryAffectedRowValues ()Z
	public abstract fun getSupportsWindowFrameGroupsMode ()Z
	public abstract fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public abstract fun listDatabases ()Ljava/lang/String;
	public abstract fun modifyColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	public abstract fun resetCaches ()V
	public abstract fun resetSchemaCaches ()V
	public abstract fun resolveRefOptionFromJdbc (I)Lorg/jetbrains/exposed/sql/ReferenceOption;
	public abstract fun schemaExists (Lorg/jetbrains/exposed/sql/Schema;)Z
	public abstract fun setSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public abstract fun supportsSelectForUpdate ()Z
	public abstract fun tableColumns ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public abstract fun tableExists (Lorg/jetbrains/exposed/sql/Table;)Z
}

public final class org/jetbrains/exposed/sql/vendors/DatabaseDialect$Companion {
}

public final class org/jetbrains/exposed/sql/vendors/DatabaseDialect$DefaultImpls {
	public static fun catalog (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public static fun checkTableMapping (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Table;)Z
	public static fun columnConstraints (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;[Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public static fun createDatabase (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Ljava/lang/String;)Ljava/lang/String;
	public static fun createSchema (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public static fun dropDatabase (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Ljava/lang/String;)Ljava/lang/String;
	public static fun dropSchema (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Schema;Z)Ljava/lang/String;
	public static fun existingIndices (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;[Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public static fun existingPrimaryKeys (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;[Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public static fun getDefaultReferenceOption (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static fun getLikePatternSpecialChars (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Ljava/util/Map;
	public static fun getNeedsQuotesWhenSymbolsInNames (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getNeedsSequenceToAutoInc (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getRequiresAutoCommitOnCreateDrop (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsCreateSchema (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsCreateSequence (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsDualTableConcept (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsIfNotExists (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsOnUpdate (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsOnlyIdentifiersInGeneratedKeys (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsOrderByNullsFirstLast (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsRestrictReferenceOption (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsSequenceAsGeneratedKeys (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsSetDefaultReferenceOption (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsSubqueryUnions (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsTernaryAffectedRowValues (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun getSupportsWindowFrameGroupsMode (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Z
	public static fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Expression;)Z
	public static fun listDatabases (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Ljava/lang/String;
	public static fun resolveRefOptionFromJdbc (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;I)Lorg/jetbrains/exposed/sql/ReferenceOption;
	public static fun setSchema (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public static fun tableColumns (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;[Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
}

public final class org/jetbrains/exposed/sql/vendors/DatabaseDialectKt {
	public static final fun getCurrentDialect ()Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;
}

public abstract class org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getQuerySuffix ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$ForUpdate : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$ForUpdate;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$MariaDB {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$MariaDB;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$MariaDB$LockInShareMode : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$MariaDB$LockInShareMode;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$MySQL {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$MySQL;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$MySQL$ForShare : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$MySQL$ForShare;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$MySQL$LockInShareMode : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$MySQL$LockInShareMode;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$Oracle {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$Oracle;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$Oracle$ForUpdateNoWait : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$Oracle$ForUpdateNoWait;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$Oracle$ForUpdateWait : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public fun <init> (I)V
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL {
	public static final field INSTANCE Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL;
}

public class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForKeyShare : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForKeyShare$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForKeyShare$Companion : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForKeyShare {
}

public class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate$Companion : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForNoKeyUpdate {
}

public class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForShare : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForUpdateBase {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForShare$Companion;
	public fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForShare$Companion : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForShare {
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForUpdate : org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForUpdateBase {
	public fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;)V
	public synthetic fun <init> (Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$ForUpdateBase : org/jetbrains/exposed/sql/vendors/ForUpdateOption {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;[Lorg/jetbrains/exposed/sql/Table;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getQuerySuffix ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE : java/lang/Enum {
	public static final field NO_WAIT Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;
	public static final field SKIP_LOCKED Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getStatement ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;
	public static fun values ()[Lorg/jetbrains/exposed/sql/vendors/ForUpdateOption$PostgreSQL$MODE;
}

public abstract class org/jetbrains/exposed/sql/vendors/FunctionProvider {
	public fun <init> ()V
	protected final fun appendInsertToUpsertClause (Lorg/jetbrains/exposed/sql/QueryBuilder;Lorg/jetbrains/exposed/sql/Table;Ljava/util/List;Lorg/jetbrains/exposed/sql/Transaction;)V
	protected final fun appendJoinPartForUpdateClause (Lorg/jetbrains/exposed/sql/QueryBuilder;Lorg/jetbrains/exposed/sql/Table;Lorg/jetbrains/exposed/sql/Join;Lorg/jetbrains/exposed/sql/Transaction;)V
	protected final fun appendUpdateToUpsertClause (Lorg/jetbrains/exposed/sql/QueryBuilder;Lorg/jetbrains/exposed/sql/Table;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/exposed/sql/Transaction;Z)V
	public fun cast (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun charLength (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun concat (Ljava/lang/String;Lorg/jetbrains/exposed/sql/QueryBuilder;[Lorg/jetbrains/exposed/sql/Expression;)V
	public fun day (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun delete (ZLorg/jetbrains/exposed/sql/Table;Ljava/lang/String;Ljava/lang/Integer;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public fun getDEFAULT_VALUE_EXPRESSION ()Ljava/lang/String;
	protected final fun getKeyColumnsForUpsert (Lorg/jetbrains/exposed/sql/Table;[Lorg/jetbrains/exposed/sql/Column;)Ljava/util/List;
	public fun groupConcat (Lorg/jetbrains/exposed/sql/GroupConcat;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun hour (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun insert (ZLorg/jetbrains/exposed/sql/Table;Ljava/util/List;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public fun jsonContains (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun jsonExists (Lorg/jetbrains/exposed/sql/Expression;[Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun jsonExtract (Lorg/jetbrains/exposed/sql/Expression;[Ljava/lang/String;ZLorg/jetbrains/exposed/sql/IColumnType;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun locate (Lorg/jetbrains/exposed/sql/QueryBuilder;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;)V
	public fun match (Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/FunctionProvider$MatchMode;)Lorg/jetbrains/exposed/sql/Op;
	public static synthetic fun match$default (Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;Lorg/jetbrains/exposed/sql/Expression;Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/FunctionProvider$MatchMode;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/Op;
	public fun minute (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun month (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun nextVal (Lorg/jetbrains/exposed/sql/Sequence;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun queryLimit (IJZ)Ljava/lang/String;
	public fun random (Ljava/lang/Integer;)Ljava/lang/String;
	public fun regexp (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;ZLorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun replace (Lorg/jetbrains/exposed/sql/Table;Ljava/util/List;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Transaction;Z)Ljava/lang/String;
	public static synthetic fun replace$default (Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;Lorg/jetbrains/exposed/sql/Table;Ljava/util/List;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Transaction;ZILjava/lang/Object;)Ljava/lang/String;
	public fun second (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun stdDevPop (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun stdDevSamp (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun substring (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;Ljava/lang/String;)V
	public static synthetic fun substring$default (Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;Ljava/lang/String;ILjava/lang/Object;)V
	public fun update (Lorg/jetbrains/exposed/sql/Join;Ljava/util/List;Ljava/lang/Integer;Lorg/jetbrains/exposed/sql/Op;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public fun update (Lorg/jetbrains/exposed/sql/Table;Ljava/util/List;Ljava/lang/Integer;Lorg/jetbrains/exposed/sql/Op;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public fun upsert (Lorg/jetbrains/exposed/sql/Table;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/exposed/sql/Op;Lorg/jetbrains/exposed/sql/Transaction;[Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/String;
	public fun varPop (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun varSamp (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
	public fun year (Lorg/jetbrains/exposed/sql/Expression;Lorg/jetbrains/exposed/sql/QueryBuilder;)V
}

public abstract interface class org/jetbrains/exposed/sql/vendors/FunctionProvider$MatchMode {
	public abstract fun mode ()Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/vendors/H2Dialect : org/jetbrains/exposed/sql/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/H2Dialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun existingIndices ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun getDataTypeProvider ()Lorg/jetbrains/exposed/sql/vendors/DataTypeProvider;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public final fun getDelegatedDialectNameProvider ()Lorg/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider;
	public fun getFunctionProvider ()Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;
	public final fun getH2Mode ()Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public fun getName ()Ljava/lang/String;
	public fun getNeedsSequenceToAutoInc ()Z
	public final fun getOriginalDataTypeProvider ()Lorg/jetbrains/exposed/sql/vendors/DataTypeProvider;
	public final fun getOriginalFunctionProvider ()Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;
	public fun getSupportsCreateSchema ()Z
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsDualTableConcept ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsTernaryAffectedRowValues ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public final fun isSecondVersion ()Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/H2Dialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public final class org/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode : java/lang/Enum {
	public static final field MariaDB Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public static final field MySQL Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public static final field Oracle Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public static final field PostgreSQL Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public static final field SQLServer Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
	public static fun values ()[Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
}

public final class org/jetbrains/exposed/sql/vendors/H2Kt {
	public static final fun getH2Mode (Lorg/jetbrains/exposed/sql/vendors/DatabaseDialect;)Lorg/jetbrains/exposed/sql/vendors/H2Dialect$H2CompatibilityMode;
}

public final class org/jetbrains/exposed/sql/vendors/KeywordsKt {
	public static final fun getANSI_SQL_2003_KEYWORDS ()Ljava/util/Set;
	public static final fun getVENDORS_KEYWORDS ()Ljava/util/Map;
}

public final class org/jetbrains/exposed/sql/vendors/MariaDBDialect : org/jetbrains/exposed/sql/vendors/MysqlDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/MariaDBDialect$Companion;
	public fun <init> ()V
	public fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	public fun getFunctionProvider ()Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;
	public fun getName ()Ljava/lang/String;
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
}

public final class org/jetbrains/exposed/sql/vendors/MariaDBDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/sql/vendors/MysqlDialect : org/jetbrains/exposed/sql/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/MysqlDialect$Companion;
	public fun <init> ()V
	public fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/sql/Schema;Z)Ljava/lang/String;
	protected fun fillConstraintCacheForTables (Ljava/util/List;)V
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsTernaryAffectedRowValues ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public final fun isFractionDateTimeSupported ()Z
	public final fun isTimeZoneOffsetSupported ()Z
	protected fun metadataMatchesTable (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Table;)Z
	public fun setSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/MysqlDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/sql/vendors/OracleDialect : org/jetbrains/exposed/sql/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/OracleDialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/sql/Schema;Z)Ljava/lang/String;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public fun getNeedsQuotesWhenSymbolsInNames ()Z
	public fun getNeedsSequenceToAutoInc ()Z
	public fun getSupportsDualTableConcept ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsOnUpdate ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsRestrictReferenceOption ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	public fun resolveRefOptionFromJdbc (I)Lorg/jetbrains/exposed/sql/ReferenceOption;
	public fun setSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/OracleDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/sql/vendors/PostgreSQLDialect : org/jetbrains/exposed/sql/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/PostgreSQLDialect$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	protected fun createIndexWithType (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getRequiresAutoCommitOnCreateDrop ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	public fun setSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/PostgreSQLDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/sql/vendors/PostgreSQLNGDialect : org/jetbrains/exposed/sql/vendors/PostgreSQLDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/PostgreSQLNGDialect$Companion;
	public fun <init> ()V
	public fun getRequiresAutoCommitOnCreateDrop ()Z
}

public final class org/jetbrains/exposed/sql/vendors/PostgreSQLNGDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public final class org/jetbrains/exposed/sql/vendors/PrimaryKeyMetadata {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/sql/vendors/PrimaryKeyMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/vendors/PrimaryKeyMetadata;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/vendors/PrimaryKeyMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColumnNames ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/exposed/sql/vendors/SQLServerDialect : org/jetbrains/exposed/sql/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/SQLServerDialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	protected fun createIndexWithType (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/sql/Schema;Z)Ljava/lang/String;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public fun getLikePatternSpecialChars ()Ljava/util/Map;
	public fun getNeedsQuotesWhenSymbolsInNames ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsRestrictReferenceOption ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	public fun modifyColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	public fun setSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/SQLServerDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
}

public class org/jetbrains/exposed/sql/vendors/SQLiteDialect : org/jetbrains/exposed/sql/vendors/VendorDialect {
	public static final field Companion Lorg/jetbrains/exposed/sql/vendors/SQLiteDialect$Companion;
	public fun <init> ()V
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun getSupportsCreateSchema ()Z
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
}

public final class org/jetbrains/exposed/sql/vendors/SQLiteDialect$Companion : org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
	public final fun getENABLE_UPDATE_DELETE_LIMIT ()Z
}

public final class org/jetbrains/exposed/sql/vendors/SchemaMetadata {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/jetbrains/exposed/sql/vendors/SchemaMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/exposed/sql/vendors/SchemaMetadata;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/exposed/sql/vendors/SchemaMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getSchemaName ()Ljava/lang/String;
	public final fun getTableNames ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/exposed/sql/vendors/VendorDialect : org/jetbrains/exposed/sql/vendors/DatabaseDialect {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/exposed/sql/vendors/DataTypeProvider;Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;)V
	public fun addPrimaryKey (Lorg/jetbrains/exposed/sql/Table;Ljava/lang/String;[Lorg/jetbrains/exposed/sql/Column;)Ljava/lang/String;
	public fun allTablesNames ()Ljava/util/List;
	public fun catalog (Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public fun checkTableMapping (Lorg/jetbrains/exposed/sql/Table;)Z
	public fun columnConstraints ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun createDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun createIndex (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	protected fun createIndexWithType (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun createSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public fun dropDatabase (Ljava/lang/String;)Ljava/lang/String;
	public fun dropIndex (Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/lang/String;
	public fun dropSchema (Lorg/jetbrains/exposed/sql/Schema;Z)Ljava/lang/String;
	public fun existingIndices ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun existingPrimaryKeys ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	protected fun fillConstraintCacheForTables (Ljava/util/List;)V
	public final fun filterCondition (Lorg/jetbrains/exposed/sql/Index;)Ljava/lang/String;
	protected final fun getAllTableNamesCache ()Ljava/util/Map;
	public final fun getAllTablesNames ()Ljava/util/List;
	protected final fun getColumnConstraintsCache ()Ljava/util/Map;
	public fun getDataTypeProvider ()Lorg/jetbrains/exposed/sql/vendors/DataTypeProvider;
	public fun getDatabase ()Ljava/lang/String;
	public fun getDefaultReferenceOption ()Lorg/jetbrains/exposed/sql/ReferenceOption;
	public fun getFunctionProvider ()Lorg/jetbrains/exposed/sql/vendors/FunctionProvider;
	protected final fun getIdentifierManager ()Lorg/jetbrains/exposed/sql/statements/api/IdentifierManagerApi;
	public fun getLikePatternSpecialChars ()Ljava/util/Map;
	public fun getName ()Ljava/lang/String;
	public fun getNeedsQuotesWhenSymbolsInNames ()Z
	public fun getNeedsSequenceToAutoInc ()Z
	public fun getRequiresAutoCommitOnCreateDrop ()Z
	public fun getSupportsCreateSchema ()Z
	public fun getSupportsCreateSequence ()Z
	public fun getSupportsDualTableConcept ()Z
	public fun getSupportsIfNotExists ()Z
	public fun getSupportsMultipleGeneratedKeys ()Z
	public fun getSupportsOnUpdate ()Z
	public fun getSupportsOnlyIdentifiersInGeneratedKeys ()Z
	public fun getSupportsOrderByNullsFirstLast ()Z
	public fun getSupportsRestrictReferenceOption ()Z
	public fun getSupportsSequenceAsGeneratedKeys ()Z
	public fun getSupportsSetDefaultReferenceOption ()Z
	public fun getSupportsSubqueryUnions ()Z
	public fun getSupportsTernaryAffectedRowValues ()Z
	public fun getSupportsWindowFrameGroupsMode ()Z
	public fun isAllowedAsColumnDefault (Lorg/jetbrains/exposed/sql/Expression;)Z
	public fun listDatabases ()Ljava/lang/String;
	protected fun metadataMatchesTable (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/exposed/sql/Table;)Z
	public fun modifyColumn (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/ColumnDiff;)Ljava/util/List;
	protected final fun quoteIdentifierWhenWrongCaseOrNecessary (Ljava/lang/String;Lorg/jetbrains/exposed/sql/Transaction;)Ljava/lang/String;
	public fun resetCaches ()V
	public fun resetSchemaCaches ()V
	public fun resolveRefOptionFromJdbc (I)Lorg/jetbrains/exposed/sql/ReferenceOption;
	public fun schemaExists (Lorg/jetbrains/exposed/sql/Schema;)Z
	public fun setSchema (Lorg/jetbrains/exposed/sql/Schema;)Ljava/lang/String;
	public fun supportsSelectForUpdate ()Z
	public fun tableColumns ([Lorg/jetbrains/exposed/sql/Table;)Ljava/util/Map;
	public fun tableExists (Lorg/jetbrains/exposed/sql/Table;)Z
}

public abstract class org/jetbrains/exposed/sql/vendors/VendorDialect$DialectNameProvider {
	public fun <init> (Ljava/lang/String;)V
	public final fun getDialectName ()Ljava/lang/String;
}

