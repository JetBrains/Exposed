package org.jetbrains.exposed.sql.statements.api

/** Base class for wrapping data generated by executing a statement that queries the database. */
interface ResultApi {
    /** The actual data object returned by the database after statement execution. */
    val result: Any

    /**
     * Returns the value of the column, at the specified [index], from the [result] object.
     * using the database's default type mapping.
     */
    fun getObject(index: Int): Any?

    /**
     * Returns the value of the column, at the specified [index], from the [result] object,
     * converted from the column SQL type to the specified data [type].
     */
    fun <T> getObject(index: Int, type: Class<T>): T?

    /** Returns the count of columns from the [result] object. */
    fun metadataColumnCount(): Int

    /** Returns the name of the column, at the specified [index], from the [result] object. */
    fun metadataColumnName(index: Int): String

    /** Returns the index of the column, with the specified [label], from the [result] object. */
    fun metadataColumnIndex(label: String): Int

    /** Steps forward to the next row in the [result] object & returns `true` if the current row is valid. */
    fun next(): Boolean

    /** Closes the [result] object. */
    fun close()

    /** Closes the [result] object and releases the statement associated with it. */
    fun releaseResult()
}
