package org.jetbrains.exposed.sql.statements.api

/** Base class for wrapping data generated by executing a statement that queries the database. */
@Suppress("TooManyFunctions")
interface ResultApi {
    /**
     * Returns the value of the column, at the specified [index], from the result object.
     * using the database's default type mapping.
     */
    fun getObject(index: Int): Any?

    /**
     * Returns the value of the column, at the specified [index], from the result object,
     * converted from the column SQL type to the specified data [type].
     */
    fun <T> getObject(index: Int, type: Class<T>): T?

    /**
     * Returns the value of the column, with the specified [name], from the result object.
     * using the database's default type mapping.
     */
    fun getObject(name: String): Any?

    /**
     * Returns the value of the column, with the specified [name], from the result object,
     * converted from the column SQL type to the specified data [type].
     */
    fun <T> getObject(name: String, type: Class<T>): T?

    /** Steps forward to the next row in the result object & returns `true` if the current row is valid. */
    fun next(): Boolean

    /** Closes the result object. */
    fun close()

    /** Closes the result object and releases the statement associated with it. */
    fun releaseResult()
}
