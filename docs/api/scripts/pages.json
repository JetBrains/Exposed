[{"name":"class ExposedAotContribution : BeanFactoryInitializationAotProcessor","description":"org.jetbrains.exposed.v1.spring.boot.ExposedAotContribution","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-exposed-aot-contribution/index.html","searchKeys":["ExposedAotContribution","class ExposedAotContribution : BeanFactoryInitializationAotProcessor","org.jetbrains.exposed.v1.spring.boot.ExposedAotContribution"]},{"name":"const val DATABASE_INITIALIZER_ORDER: Int = 0","description":"org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.Companion.DATABASE_INITIALIZER_ORDER","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-database-initializer/-companion/-d-a-t-a-b-a-s-e_-i-n-i-t-i-a-l-i-z-e-r_-o-r-d-e-r.html","searchKeys":["DATABASE_INITIALIZER_ORDER","const val DATABASE_INITIALIZER_ORDER: Int = 0","org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.Companion.DATABASE_INITIALIZER_ORDER"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.spring.boot.ExposedAotContribution.ExposedAotContribution","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-exposed-aot-contribution/-exposed-aot-contribution.html","searchKeys":["ExposedAotContribution","constructor()","org.jetbrains.exposed.v1.spring.boot.ExposedAotContribution.ExposedAotContribution"]},{"name":"constructor(applicationContext: ApplicationContext)","description":"org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.ExposedAutoConfiguration","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot.autoconfigure/-exposed-auto-configuration/-exposed-auto-configuration.html","searchKeys":["ExposedAutoConfiguration","constructor(applicationContext: ApplicationContext)","org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.ExposedAutoConfiguration"]},{"name":"constructor(applicationContext: ApplicationContext, excludedPackages: List<String>)","description":"org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.DatabaseInitializer","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-database-initializer/-database-initializer.html","searchKeys":["DatabaseInitializer","constructor(applicationContext: ApplicationContext, excludedPackages: List<String>)","org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.DatabaseInitializer"]},{"name":"fun discoverExposedTables(applicationContext: ApplicationContext, excludedPackages: List<String>): List<Table>","description":"org.jetbrains.exposed.v1.spring.boot.discoverExposedTables","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/discover-exposed-tables.html","searchKeys":["discoverExposedTables","fun discoverExposedTables(applicationContext: ApplicationContext, excludedPackages: List<String>): List<Table>","org.jetbrains.exposed.v1.spring.boot.discoverExposedTables"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.Companion","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-database-initializer/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.Companion"]},{"name":"open class DatabaseInitializer(applicationContext: ApplicationContext, excludedPackages: List<String>) : ApplicationRunner, Ordered","description":"org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-database-initializer/index.html","searchKeys":["DatabaseInitializer","open class DatabaseInitializer(applicationContext: ApplicationContext, excludedPackages: List<String>) : ApplicationRunner, Ordered","org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer"]},{"name":"open class ExposedAutoConfiguration(applicationContext: ApplicationContext)","description":"org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot.autoconfigure/-exposed-auto-configuration/index.html","searchKeys":["ExposedAutoConfiguration","open class ExposedAutoConfiguration(applicationContext: ApplicationContext)","org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration"]},{"name":"open fun databaseConfig(): DatabaseConfig","description":"org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.databaseConfig","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot.autoconfigure/-exposed-auto-configuration/database-config.html","searchKeys":["databaseConfig","open fun databaseConfig(): DatabaseConfig","org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.databaseConfig"]},{"name":"open fun databaseInitializer(): DatabaseInitializer","description":"org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.databaseInitializer","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot.autoconfigure/-exposed-auto-configuration/database-initializer.html","searchKeys":["databaseInitializer","open fun databaseInitializer(): DatabaseInitializer","org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.databaseInitializer"]},{"name":"open fun exposedSpringTransactionAttributeSource(): ExposedSpringTransactionAttributeSource","description":"org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.exposedSpringTransactionAttributeSource","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot.autoconfigure/-exposed-auto-configuration/exposed-spring-transaction-attribute-source.html","searchKeys":["exposedSpringTransactionAttributeSource","open fun exposedSpringTransactionAttributeSource(): ExposedSpringTransactionAttributeSource","org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.exposedSpringTransactionAttributeSource"]},{"name":"open fun springTransactionManager(datasource: DataSource, databaseConfig: DatabaseConfig): SpringTransactionManager","description":"org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.springTransactionManager","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot.autoconfigure/-exposed-auto-configuration/spring-transaction-manager.html","searchKeys":["springTransactionManager","open fun springTransactionManager(datasource: DataSource, databaseConfig: DatabaseConfig): SpringTransactionManager","org.jetbrains.exposed.v1.spring.boot.autoconfigure.ExposedAutoConfiguration.springTransactionManager"]},{"name":"open override fun getOrder(): Int","description":"org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.getOrder","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-database-initializer/get-order.html","searchKeys":["getOrder","open override fun getOrder(): Int","org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.getOrder"]},{"name":"open override fun processAheadOfTime(beanFactory: ConfigurableListableBeanFactory): BeanFactoryInitializationAotContribution","description":"org.jetbrains.exposed.v1.spring.boot.ExposedAotContribution.processAheadOfTime","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-exposed-aot-contribution/process-ahead-of-time.html","searchKeys":["processAheadOfTime","open override fun processAheadOfTime(beanFactory: ConfigurableListableBeanFactory): BeanFactoryInitializationAotContribution","org.jetbrains.exposed.v1.spring.boot.ExposedAotContribution.processAheadOfTime"]},{"name":"open override fun run(args: ApplicationArguments?)","description":"org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.run","location":"exposed-spring-boot-starter/org.jetbrains.exposed.v1.spring.boot/-database-initializer/run.html","searchKeys":["run","open override fun run(args: ApplicationArguments?)","org.jetbrains.exposed.v1.spring.boot.DatabaseInitializer.run"]},{"name":"abstract class DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/index.html","searchKeys":["DatabaseDialectMetadata","abstract class DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata"]},{"name":"abstract class JdbcExposedDatabaseMetadata(database: String) : ExposedDatabaseMetadata","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/index.html","searchKeys":["JdbcExposedDatabaseMetadata","abstract class JdbcExposedDatabaseMetadata(database: String) : ExposedDatabaseMetadata","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata"]},{"name":"abstract fun <T> metadata(body: JdbcExposedDatabaseMetadata.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.metadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/metadata.html","searchKeys":["metadata","abstract fun <T> metadata(body: JdbcExposedDatabaseMetadata.() -> T): T","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.metadata"]},{"name":"abstract fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): T?","description":"org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-blocking-executable/execute-internal.html","searchKeys":["executeInternal","abstract fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): T?","org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.executeInternal"]},{"name":"abstract fun addBatch()","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.addBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/add-batch.html","searchKeys":["addBatch","abstract fun addBatch()","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.addBatch"]},{"name":"abstract fun cancel()","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.cancel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/cancel.html","searchKeys":["cancel","abstract fun cancel()","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.cancel"]},{"name":"abstract fun close()","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.close","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/close.html","searchKeys":["close","abstract fun close()","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.close"]},{"name":"abstract fun close()","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.close","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/close.html","searchKeys":["close","abstract fun close()","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.close"]},{"name":"abstract fun closeIfPossible()","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.closeIfPossible","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/close-if-possible.html","searchKeys":["closeIfPossible","abstract fun closeIfPossible()","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.closeIfPossible"]},{"name":"abstract fun columns(vararg tables: Table): Map<Table, List<ColumnMetadata>>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.columns","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/columns.html","searchKeys":["columns","abstract fun columns(vararg tables: Table): Map<Table, List<ColumnMetadata>>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.columns"]},{"name":"abstract fun commit()","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.commit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/commit.html","searchKeys":["commit","abstract fun commit()","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.commit"]},{"name":"abstract fun commit()","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.commit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/commit.html","searchKeys":["commit","abstract fun commit()","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.commit"]},{"name":"abstract fun copy(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/copy.html","searchKeys":["copy","abstract fun copy(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedIterable.copy"]},{"name":"abstract fun count(): Long","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.count","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/count.html","searchKeys":["count","abstract fun count(): Long","org.jetbrains.exposed.v1.jdbc.SizedIterable.count"]},{"name":"abstract fun empty(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.empty","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/empty.html","searchKeys":["empty","abstract fun empty(): Boolean","org.jetbrains.exposed.v1.jdbc.SizedIterable.empty"]},{"name":"abstract fun executeBatch(): List<Int>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/execute-batch.html","searchKeys":["executeBatch","abstract fun executeBatch(): List<Int>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeBatch"]},{"name":"abstract fun executeInBatch(sqls: List<String>)","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.executeInBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/execute-in-batch.html","searchKeys":["executeInBatch","abstract fun executeInBatch(sqls: List<String>)","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.executeInBatch"]},{"name":"abstract fun executeMultiple(): List<StatementResult>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeMultiple","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/execute-multiple.html","searchKeys":["executeMultiple","abstract fun executeMultiple(): List<StatementResult>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeMultiple"]},{"name":"abstract fun executeQuery(): JdbcResult","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeQuery","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/execute-query.html","searchKeys":["executeQuery","abstract fun executeQuery(): JdbcResult","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeQuery"]},{"name":"abstract fun executeUpdate(): Int","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/execute-update.html","searchKeys":["executeUpdate","abstract fun executeUpdate(): Int","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.executeUpdate"]},{"name":"abstract fun existingCheckConstraints(vararg tables: Table): Map<Table, List<CheckConstraint>>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingCheckConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/existing-check-constraints.html","searchKeys":["existingCheckConstraints","abstract fun existingCheckConstraints(vararg tables: Table): Map<Table, List<CheckConstraint>>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingCheckConstraints"]},{"name":"abstract fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingIndices","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/existing-indices.html","searchKeys":["existingIndices","abstract fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingIndices"]},{"name":"abstract fun existingPrimaryKeys(vararg tables: Table): Map<Table, PrimaryKeyMetadata?>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingPrimaryKeys","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/existing-primary-keys.html","searchKeys":["existingPrimaryKeys","abstract fun existingPrimaryKeys(vararg tables: Table): Map<Table, PrimaryKeyMetadata?>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingPrimaryKeys"]},{"name":"abstract fun existingSequences(vararg tables: Table): Map<Table, List<Sequence>>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingSequences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/existing-sequences.html","searchKeys":["existingSequences","abstract fun existingSequences(vararg tables: Table): Map<Table, List<Sequence>>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.existingSequences"]},{"name":"abstract fun limit(count: Int): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.limit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/limit.html","searchKeys":["limit","abstract fun limit(count: Int): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedIterable.limit"]},{"name":"abstract fun offset(start: Long): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.offset","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/offset.html","searchKeys":["offset","abstract fun offset(start: Long): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedIterable.offset"]},{"name":"abstract fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/order-by.html","searchKeys":["orderBy","abstract fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedIterable.orderBy"]},{"name":"abstract fun prepareStatement(sql: String, columns: Array<String>): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.prepareStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/prepare-statement.html","searchKeys":["prepareStatement","abstract fun prepareStatement(sql: String, columns: Array<String>): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.prepareStatement"]},{"name":"abstract fun prepareStatement(sql: String, returnKeys: Boolean): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.prepareStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/prepare-statement.html","searchKeys":["prepareStatement","abstract fun prepareStatement(sql: String, returnKeys: Boolean): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.prepareStatement"]},{"name":"abstract fun releaseSavepoint(savepoint: ExposedSavepoint)","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.releaseSavepoint","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/release-savepoint.html","searchKeys":["releaseSavepoint","abstract fun releaseSavepoint(savepoint: ExposedSavepoint)","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.releaseSavepoint"]},{"name":"abstract fun rollback()","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.rollback","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/rollback.html","searchKeys":["rollback","abstract fun rollback()","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.rollback"]},{"name":"abstract fun rollback()","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.rollback","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/rollback.html","searchKeys":["rollback","abstract fun rollback()","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.rollback"]},{"name":"abstract fun rollback(savepoint: ExposedSavepoint)","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.rollback","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/rollback.html","searchKeys":["rollback","abstract fun rollback(savepoint: ExposedSavepoint)","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.rollback"]},{"name":"abstract fun sequences(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.sequences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/sequences.html","searchKeys":["sequences","abstract fun sequences(): List<String>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.sequences"]},{"name":"abstract fun setSavepoint(name: String): ExposedSavepoint","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.setSavepoint","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/set-savepoint.html","searchKeys":["setSavepoint","abstract fun setSavepoint(name: String): ExposedSavepoint","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.setSavepoint"]},{"name":"abstract fun supportsLimitWithUpdateOrDelete(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsLimitWithUpdateOrDelete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/supports-limit-with-update-or-delete.html","searchKeys":["supportsLimitWithUpdateOrDelete","abstract fun supportsLimitWithUpdateOrDelete(): Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsLimitWithUpdateOrDelete"]},{"name":"abstract fun tableConstraints(tables: List<Table>): Map<String, List<ForeignKeyConstraint>>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.tableConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/table-constraints.html","searchKeys":["tableConstraints","abstract fun tableConstraints(tables: List<Table>): Map<String, List<ForeignKeyConstraint>>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.tableConstraints"]},{"name":"abstract fun tableNamesByCurrentSchema(tableNamesCache: Map<String, List<String>>?): SchemaMetadata","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.tableNamesByCurrentSchema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/table-names-by-current-schema.html","searchKeys":["tableNamesByCurrentSchema","abstract fun tableNamesByCurrentSchema(tableNamesCache: Map<String, List<String>>?): SchemaMetadata","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.tableNamesByCurrentSchema"]},{"name":"abstract override val db: Database","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.db","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/db.html","searchKeys":["db","abstract override val db: Database","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.db"]},{"name":"abstract override val outerTransaction: JdbcTransaction?","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.outerTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/outer-transaction.html","searchKeys":["outerTransaction","abstract override val outerTransaction: JdbcTransaction?","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.outerTransaction"]},{"name":"abstract val connection: ExposedConnection<*>","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.connection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/connection.html","searchKeys":["connection","abstract val connection: ExposedConnection<*>","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.connection"]},{"name":"abstract val connection: OriginalConnection","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.connection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/connection.html","searchKeys":["connection","abstract val connection: OriginalConnection","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.connection"]},{"name":"abstract val databaseDialectMode: String?","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.databaseDialectMode","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/database-dialect-mode.html","searchKeys":["databaseDialectMode","abstract val databaseDialectMode: String?","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.databaseDialectMode"]},{"name":"abstract val databaseDialectName: String","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.databaseDialectName","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/database-dialect-name.html","searchKeys":["databaseDialectName","abstract val databaseDialectName: String","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.databaseDialectName"]},{"name":"abstract val databaseProductVersion: String","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.databaseProductVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/database-product-version.html","searchKeys":["databaseProductVersion","abstract val databaseProductVersion: String","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.databaseProductVersion"]},{"name":"abstract val defaultIsolationLevel: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.defaultIsolationLevel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/default-isolation-level.html","searchKeys":["defaultIsolationLevel","abstract val defaultIsolationLevel: Int","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.defaultIsolationLevel"]},{"name":"abstract val isClosed: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.isClosed","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/is-closed.html","searchKeys":["isClosed","abstract val isClosed: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.isClosed"]},{"name":"abstract val majorVersion: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.majorVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/major-version.html","searchKeys":["majorVersion","abstract val majorVersion: Int","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.majorVersion"]},{"name":"abstract val minorVersion: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.minorVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/minor-version.html","searchKeys":["minorVersion","abstract val minorVersion: Int","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.minorVersion"]},{"name":"abstract val resultSet: JdbcResult?","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.resultSet","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/result-set.html","searchKeys":["resultSet","abstract val resultSet: JdbcResult?","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.resultSet"]},{"name":"abstract val schemaNames: List<String>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.schemaNames","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/schema-names.html","searchKeys":["schemaNames","abstract val schemaNames: List<String>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.schemaNames"]},{"name":"abstract val statement: S","description":"org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-blocking-executable/statement.html","searchKeys":["statement","abstract val statement: S","org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.statement"]},{"name":"abstract val supportsAlterTableWithAddColumn: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsAlterTableWithAddColumn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/supports-alter-table-with-add-column.html","searchKeys":["supportsAlterTableWithAddColumn","abstract val supportsAlterTableWithAddColumn: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsAlterTableWithAddColumn"]},{"name":"abstract val supportsAlterTableWithDropColumn: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsAlterTableWithDropColumn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/supports-alter-table-with-drop-column.html","searchKeys":["supportsAlterTableWithDropColumn","abstract val supportsAlterTableWithDropColumn: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsAlterTableWithDropColumn"]},{"name":"abstract val supportsMultipleResultSets: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsMultipleResultSets","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/supports-multiple-result-sets.html","searchKeys":["supportsMultipleResultSets","abstract val supportsMultipleResultSets: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsMultipleResultSets"]},{"name":"abstract val supportsSelectForUpdate: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsSelectForUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/supports-select-for-update.html","searchKeys":["supportsSelectForUpdate","abstract val supportsSelectForUpdate: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.supportsSelectForUpdate"]},{"name":"abstract val tableNames: Map<String, List<String>>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.tableNames","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/table-names.html","searchKeys":["tableNames","abstract val tableNames: Map<String, List<String>>","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.tableNames"]},{"name":"abstract val transactionIsolation: Int","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.transactionIsolation","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/transaction-isolation.html","searchKeys":["transactionIsolation","abstract val transactionIsolation: Int","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface.transactionIsolation"]},{"name":"abstract val url: String","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.url","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/url.html","searchKeys":["url","abstract val url: String","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.url"]},{"name":"abstract val version: BigDecimal","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.version","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/version.html","searchKeys":["version","abstract val version: BigDecimal","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.version"]},{"name":"abstract var autoCommit: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.autoCommit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/auto-commit.html","searchKeys":["autoCommit","abstract var autoCommit: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.autoCommit"]},{"name":"abstract var catalog: String","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.catalog","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/catalog.html","searchKeys":["catalog","abstract var catalog: String","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.catalog"]},{"name":"abstract var fetchSize: Int?","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.fetchSize","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/fetch-size.html","searchKeys":["fetchSize","abstract var fetchSize: Int?","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.fetchSize"]},{"name":"abstract var loadedResult: List<T>?","description":"org.jetbrains.exposed.v1.jdbc.LazySizedIterable.loadedResult","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-iterable/loaded-result.html","searchKeys":["loadedResult","abstract var loadedResult: List<T>?","org.jetbrains.exposed.v1.jdbc.LazySizedIterable.loadedResult"]},{"name":"abstract var readOnly: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.readOnly","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/read-only.html","searchKeys":["readOnly","abstract var readOnly: Boolean","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.readOnly"]},{"name":"abstract var schema: String","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.schema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/schema.html","searchKeys":["schema","abstract var schema: String","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.schema"]},{"name":"abstract var timeout: Int?","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.timeout","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/timeout.html","searchKeys":["timeout","abstract var timeout: Int?","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi.timeout"]},{"name":"abstract var transactionIsolation: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.transactionIsolation","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/transaction-isolation.html","searchKeys":["transactionIsolation","abstract var transactionIsolation: Int","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection.transactionIsolation"]},{"name":"class Database : DatabaseApi","description":"org.jetbrains.exposed.v1.jdbc.Database","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/index.html","searchKeys":["Database","class Database : DatabaseApi","org.jetbrains.exposed.v1.jdbc.Database"]},{"name":"class EmptySizedIterable<out T> : SizedIterable<T> , Iterator<T> ","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/index.html","searchKeys":["EmptySizedIterable","class EmptySizedIterable<out T> : SizedIterable<T> , Iterator<T> ","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable"]},{"name":"class Except(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","description":"org.jetbrains.exposed.v1.jdbc.Except","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-except/index.html","searchKeys":["Except","class Except(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","org.jetbrains.exposed.v1.jdbc.Except"]},{"name":"class ExposedConnectionImpl : DatabaseConnectionAutoRegistration","description":"org.jetbrains.exposed.v1.jdbc.ExposedConnectionImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-exposed-connection-impl/index.html","searchKeys":["ExposedConnectionImpl","class ExposedConnectionImpl : DatabaseConnectionAutoRegistration","org.jetbrains.exposed.v1.jdbc.ExposedConnectionImpl"]},{"name":"class Intersect(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","description":"org.jetbrains.exposed.v1.jdbc.Intersect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-intersect/index.html","searchKeys":["Intersect","class Intersect(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","org.jetbrains.exposed.v1.jdbc.Intersect"]},{"name":"class JdbcConnectionImpl(val connection: Connection) : ExposedConnection<Connection> ","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/index.html","searchKeys":["JdbcConnectionImpl","class JdbcConnectionImpl(val connection: Connection) : ExposedConnection<Connection> ","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl"]},{"name":"class JdbcDatabaseMetadataImpl(database: String, val metadata: DatabaseMetaData) : JdbcExposedDatabaseMetadata","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/index.html","searchKeys":["JdbcDatabaseMetadataImpl","class JdbcDatabaseMetadataImpl(database: String, val metadata: DatabaseMetaData) : JdbcExposedDatabaseMetadata","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl"]},{"name":"class JdbcPreparedStatementImpl(val statement: PreparedStatement, val wasGeneratedKeysRequested: Boolean) : JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/index.html","searchKeys":["JdbcPreparedStatementImpl","class JdbcPreparedStatementImpl(val statement: PreparedStatement, val wasGeneratedKeysRequested: Boolean) : JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl"]},{"name":"class JdbcResult(val result: ResultSet) : ResultApi, RowApi","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/index.html","searchKeys":["JdbcResult","class JdbcResult(val result: ResultSet) : ResultApi, RowApi","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult"]},{"name":"class JdbcSavepoint(name: String, savepoint: Savepoint) : ExposedSavepoint","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcSavepoint","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-savepoint/index.html","searchKeys":["JdbcSavepoint","class JdbcSavepoint(name: String, savepoint: Savepoint) : ExposedSavepoint","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcSavepoint"]},{"name":"class LazySizedCollection<out T>(_delegate: SizedIterable<T>) : SizedIterable<T> ","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/index.html","searchKeys":["LazySizedCollection","class LazySizedCollection<out T>(_delegate: SizedIterable<T>) : SizedIterable<T> ","org.jetbrains.exposed.v1.jdbc.LazySizedCollection"]},{"name":"class PostgreSQLNGDialectMetadata : PostgreSQLDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLNGDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-postgre-s-q-l-n-g-dialect-metadata/index.html","searchKeys":["PostgreSQLNGDialectMetadata","class PostgreSQLNGDialectMetadata : PostgreSQLDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLNGDialectMetadata"]},{"name":"class SizedCollection<out T>(val delegate: Collection<T>) : SizedIterable<T> ","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/index.html","searchKeys":["SizedCollection","class SizedCollection<out T>(val delegate: Collection<T>) : SizedIterable<T> ","org.jetbrains.exposed.v1.jdbc.SizedCollection"]},{"name":"class ThreadLocalTransactionManager(db: Database, setupTxConnection: (ExposedConnection<*>, TransactionInterface) -> Unit? = null) : TransactionManagerApi","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/index.html","searchKeys":["ThreadLocalTransactionManager","class ThreadLocalTransactionManager(db: Database, setupTxConnection: (ExposedConnection<*>, TransactionInterface) -> Unit? = null) : TransactionManagerApi","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager"]},{"name":"class TransactionManager(db: Database, setupTxConnection: (ExposedConnection<*>, JdbcTransactionInterface) -> Unit? = null) : TransactionManagerApi","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/index.html","searchKeys":["TransactionManager","class TransactionManager(db: Database, setupTxConnection: (ExposedConnection<*>, JdbcTransactionInterface) -> Unit? = null) : TransactionManagerApi","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager"]},{"name":"class Union(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","description":"org.jetbrains.exposed.v1.jdbc.Union","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union/index.html","searchKeys":["Union","class Union(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","org.jetbrains.exposed.v1.jdbc.Union"]},{"name":"class UnionAll(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","description":"org.jetbrains.exposed.v1.jdbc.UnionAll","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union-all/index.html","searchKeys":["UnionAll","class UnionAll(firstStatement: AbstractQuery<*>, val secondStatement: AbstractQuery<*>) : SetOperation","org.jetbrains.exposed.v1.jdbc.UnionAll"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.EmptySizedIterable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/-empty-sized-iterable.html","searchKeys":["EmptySizedIterable","constructor()","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.EmptySizedIterable"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.ExposedConnectionImpl.ExposedConnectionImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-exposed-connection-impl/-exposed-connection-impl.html","searchKeys":["ExposedConnectionImpl","constructor()","org.jetbrains.exposed.v1.jdbc.ExposedConnectionImpl.ExposedConnectionImpl"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.DatabaseDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/-database-dialect-metadata.html","searchKeys":["DatabaseDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.DatabaseDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.H2DialectMetadata.H2DialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-h2-dialect-metadata/-h2-dialect-metadata.html","searchKeys":["H2DialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.H2DialectMetadata.H2DialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.MariaDBDialectMetadata.MariaDBDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-maria-d-b-dialect-metadata/-maria-d-b-dialect-metadata.html","searchKeys":["MariaDBDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.MariaDBDialectMetadata.MariaDBDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.MysqlDialectMetadata.MysqlDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-mysql-dialect-metadata/-mysql-dialect-metadata.html","searchKeys":["MysqlDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.MysqlDialectMetadata.MysqlDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.OracleDialectMetadata.OracleDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-oracle-dialect-metadata/-oracle-dialect-metadata.html","searchKeys":["OracleDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.OracleDialectMetadata.OracleDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLDialectMetadata.PostgreSQLDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-postgre-s-q-l-dialect-metadata/-postgre-s-q-l-dialect-metadata.html","searchKeys":["PostgreSQLDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLDialectMetadata.PostgreSQLDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLNGDialectMetadata.PostgreSQLNGDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-postgre-s-q-l-n-g-dialect-metadata/-postgre-s-q-l-n-g-dialect-metadata.html","searchKeys":["PostgreSQLNGDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLNGDialectMetadata.PostgreSQLNGDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.SQLServerDialectMetadata.SQLServerDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-s-q-l-server-dialect-metadata/-s-q-l-server-dialect-metadata.html","searchKeys":["SQLServerDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.SQLServerDialectMetadata.SQLServerDialectMetadata"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jdbc.vendors.SQLiteDialectMetadata.SQLiteDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-s-q-lite-dialect-metadata/-s-q-lite-dialect-metadata.html","searchKeys":["SQLiteDialectMetadata","constructor()","org.jetbrains.exposed.v1.jdbc.vendors.SQLiteDialectMetadata.SQLiteDialectMetadata"]},{"name":"constructor(_delegate: SizedIterable<T>)","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.LazySizedCollection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/-lazy-sized-collection.html","searchKeys":["LazySizedCollection","constructor(_delegate: SizedIterable<T>)","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.LazySizedCollection"]},{"name":"constructor(connection: Connection)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.JdbcConnectionImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/-jdbc-connection-impl.html","searchKeys":["JdbcConnectionImpl","constructor(connection: Connection)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.JdbcConnectionImpl"]},{"name":"constructor(database: String)","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.JdbcExposedDatabaseMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-exposed-database-metadata/-jdbc-exposed-database-metadata.html","searchKeys":["JdbcExposedDatabaseMetadata","constructor(database: String)","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcExposedDatabaseMetadata.JdbcExposedDatabaseMetadata"]},{"name":"constructor(database: String, metadata: DatabaseMetaData)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.JdbcDatabaseMetadataImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/-jdbc-database-metadata-impl.html","searchKeys":["JdbcDatabaseMetadataImpl","constructor(database: String, metadata: DatabaseMetaData)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.JdbcDatabaseMetadataImpl"]},{"name":"constructor(db: Database, setupTxConnection: (ExposedConnection<*>, JdbcTransactionInterface) -> Unit? = null)","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.TransactionManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-transaction-manager.html","searchKeys":["TransactionManager","constructor(db: Database, setupTxConnection: (ExposedConnection<*>, JdbcTransactionInterface) -> Unit? = null)","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.TransactionManager"]},{"name":"constructor(db: Database, setupTxConnection: (ExposedConnection<*>, TransactionInterface) -> Unit? = null)","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.ThreadLocalTransactionManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/-thread-local-transaction-manager.html","searchKeys":["ThreadLocalTransactionManager","constructor(db: Database, setupTxConnection: (ExposedConnection<*>, TransactionInterface) -> Unit? = null)","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.ThreadLocalTransactionManager"]},{"name":"constructor(delegate: Collection<T>)","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.SizedCollection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/-sized-collection.html","searchKeys":["SizedCollection","constructor(delegate: Collection<T>)","org.jetbrains.exposed.v1.jdbc.SizedCollection.SizedCollection"]},{"name":"constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.jdbc.Except.Except","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-except/-except.html","searchKeys":["Except","constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","org.jetbrains.exposed.v1.jdbc.Except.Except"]},{"name":"constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.jdbc.Intersect.Intersect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-intersect/-intersect.html","searchKeys":["Intersect","constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","org.jetbrains.exposed.v1.jdbc.Intersect.Intersect"]},{"name":"constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.jdbc.Union.Union","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union/-union.html","searchKeys":["Union","constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","org.jetbrains.exposed.v1.jdbc.Union.Union"]},{"name":"constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.jdbc.UnionAll.UnionAll","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union-all/-union-all.html","searchKeys":["UnionAll","constructor(firstStatement: AbstractQuery<*>, secondStatement: AbstractQuery<*>)","org.jetbrains.exposed.v1.jdbc.UnionAll.UnionAll"]},{"name":"constructor(name: String, savepoint: Savepoint)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcSavepoint.JdbcSavepoint","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-savepoint/-jdbc-savepoint.html","searchKeys":["JdbcSavepoint","constructor(name: String, savepoint: Savepoint)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcSavepoint.JdbcSavepoint"]},{"name":"constructor(result: ResultSet)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.JdbcResult","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/-jdbc-result.html","searchKeys":["JdbcResult","constructor(result: ResultSet)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.JdbcResult"]},{"name":"constructor(set: FieldSet, where: Op<Boolean>?)","description":"org.jetbrains.exposed.v1.jdbc.Query.Query","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/-query.html","searchKeys":["Query","constructor(set: FieldSet, where: Op<Boolean>?)","org.jetbrains.exposed.v1.jdbc.Query.Query"]},{"name":"constructor(statement: BatchUpdateStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable.BatchUpdateBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-update-blocking-executable/-batch-update-blocking-executable.html","searchKeys":["BatchUpdateBlockingExecutable","constructor(statement: BatchUpdateStatement)","org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable.BatchUpdateBlockingExecutable"]},{"name":"constructor(statement: BatchUpsertStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable.BatchUpsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-upsert-blocking-executable/-batch-upsert-blocking-executable.html","searchKeys":["BatchUpsertBlockingExecutable","constructor(statement: BatchUpsertStatement)","org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable.BatchUpsertBlockingExecutable"]},{"name":"constructor(statement: DeleteStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable.DeleteBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-delete-blocking-executable/-delete-blocking-executable.html","searchKeys":["DeleteBlockingExecutable","constructor(statement: DeleteStatement)","org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable.DeleteBlockingExecutable"]},{"name":"constructor(statement: ExplainQuery)","description":"org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.ExplainBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-explain-blocking-executable/-explain-blocking-executable.html","searchKeys":["ExplainBlockingExecutable","constructor(statement: ExplainQuery)","org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.ExplainBlockingExecutable"]},{"name":"constructor(statement: InsertSelectStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable.InsertSelectBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-select-blocking-executable/-insert-select-blocking-executable.html","searchKeys":["InsertSelectBlockingExecutable","constructor(statement: InsertSelectStatement)","org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable.InsertSelectBlockingExecutable"]},{"name":"constructor(statement: PreparedStatement, wasGeneratedKeysRequested: Boolean)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.JdbcPreparedStatementImpl","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/-jdbc-prepared-statement-impl.html","searchKeys":["JdbcPreparedStatementImpl","constructor(statement: PreparedStatement, wasGeneratedKeysRequested: Boolean)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.JdbcPreparedStatementImpl"]},{"name":"constructor(statement: ReturningStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.ReturningBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-returning-blocking-executable/-returning-blocking-executable.html","searchKeys":["ReturningBlockingExecutable","constructor(statement: ReturningStatement)","org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.ReturningBlockingExecutable"]},{"name":"constructor(statement: S)","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.BatchInsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-insert-blocking-executable/-batch-insert-blocking-executable.html","searchKeys":["BatchInsertBlockingExecutable","constructor(statement: S)","org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.BatchInsertBlockingExecutable"]},{"name":"constructor(statement: S)","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.InsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-blocking-executable/-insert-blocking-executable.html","searchKeys":["InsertBlockingExecutable","constructor(statement: S)","org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.InsertBlockingExecutable"]},{"name":"constructor(statement: S)","description":"org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable.MergeBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-merge-blocking-executable/-merge-blocking-executable.html","searchKeys":["MergeBlockingExecutable","constructor(statement: S)","org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable.MergeBlockingExecutable"]},{"name":"constructor(statement: SQLServerBatchInsertStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable.SQLServerBatchInsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-s-q-l-server-batch-insert-blocking-executable/-s-q-l-server-batch-insert-blocking-executable.html","searchKeys":["SQLServerBatchInsertBlockingExecutable","constructor(statement: SQLServerBatchInsertStatement)","org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable.SQLServerBatchInsertBlockingExecutable"]},{"name":"constructor(statement: UpdateStatement)","description":"org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable.UpdateBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-update-blocking-executable/-update-blocking-executable.html","searchKeys":["UpdateBlockingExecutable","constructor(statement: UpdateStatement)","org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable.UpdateBlockingExecutable"]},{"name":"constructor(statement: UpsertStatement<Key>)","description":"org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable.UpsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-upsert-blocking-executable/-upsert-blocking-executable.html","searchKeys":["UpsertBlockingExecutable","constructor(statement: UpsertStatement<Key>)","org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable.UpsertBlockingExecutable"]},{"name":"constructor(transactionImpl: JdbcTransactionInterface)","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.JdbcTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/-jdbc-transaction.html","searchKeys":["JdbcTransaction","constructor(transactionImpl: JdbcTransactionInterface)","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.JdbcTransaction"]},{"name":"constructor(vararg values: T)","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.SizedCollection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/-sized-collection.html","searchKeys":["SizedCollection","constructor(vararg values: T)","org.jetbrains.exposed.v1.jdbc.SizedCollection.SizedCollection"]},{"name":"fun <D : Table, S : Table> D.mergeFrom(source: S, body: MergeTableStatement.() -> Unit): MergeTableStatement","description":"org.jetbrains.exposed.v1.jdbc.mergeFrom","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/merge-from.html","searchKeys":["mergeFrom","fun <D : Table, S : Table> D.mergeFrom(source: S, body: MergeTableStatement.() -> Unit): MergeTableStatement","org.jetbrains.exposed.v1.jdbc.mergeFrom"]},{"name":"fun <D : Table, S : Table> D.mergeFrom(source: S, on: SqlExpressionBuilder.() -> Op<Boolean>, body: MergeTableStatement.() -> Unit): MergeTableStatement","description":"org.jetbrains.exposed.v1.jdbc.mergeFrom","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/merge-from.html","searchKeys":["mergeFrom","fun <D : Table, S : Table> D.mergeFrom(source: S, on: SqlExpressionBuilder.() -> Op<Boolean>, body: MergeTableStatement.() -> Unit): MergeTableStatement","org.jetbrains.exposed.v1.jdbc.mergeFrom"]},{"name":"fun <D : Table, S : Table> D.mergeFrom(source: S, on: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: MergeTableStatement.() -> Unit): MergeTableStatement","description":"org.jetbrains.exposed.v1.jdbc.mergeFrom","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/merge-from.html","searchKeys":["mergeFrom","fun <D : Table, S : Table> D.mergeFrom(source: S, on: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: MergeTableStatement.() -> Unit): MergeTableStatement","org.jetbrains.exposed.v1.jdbc.mergeFrom"]},{"name":"fun <Key : Any, T : IdTable<Key>> T.insertAndGetId(body: T.(UpdateBuilder<*>) -> Unit): EntityID<Key>","description":"org.jetbrains.exposed.v1.jdbc.insertAndGetId","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert-and-get-id.html","searchKeys":["insertAndGetId","fun <Key : Any, T : IdTable<Key>> T.insertAndGetId(body: T.(UpdateBuilder<*>) -> Unit): EntityID<Key>","org.jetbrains.exposed.v1.jdbc.insertAndGetId"]},{"name":"fun <Key : Any, T : IdTable<Key>> T.insertIgnoreAndGetId(body: T.(UpdateBuilder<*>) -> Unit): EntityID<Key>?","description":"org.jetbrains.exposed.v1.jdbc.insertIgnoreAndGetId","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert-ignore-and-get-id.html","searchKeys":["insertIgnoreAndGetId","fun <Key : Any, T : IdTable<Key>> T.insertIgnoreAndGetId(body: T.(UpdateBuilder<*>) -> Unit): EntityID<Key>?","org.jetbrains.exposed.v1.jdbc.insertIgnoreAndGetId"]},{"name":"fun <T : Any> exec(stmt: String, args: Iterable<Pair<IColumnType<*>, Any?>> = emptyList(), explicitStatementType: StatementType? = null, transform: (ResultSet) -> T?): T?","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/exec.html","searchKeys":["exec","fun <T : Any> exec(stmt: String, args: Iterable<Pair<IColumnType<*>, Any?>> = emptyList(), explicitStatementType: StatementType? = null, transform: (ResultSet) -> T?): T?","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec"]},{"name":"fun <T : Table, E : Any> T.batchReplace(data: Iterable<E>, shouldReturnGeneratedValues: Boolean = true, body: BatchReplaceStatement.(E) -> Unit): List<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.batchReplace","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/batch-replace.html","searchKeys":["batchReplace","fun <T : Table, E : Any> T.batchReplace(data: Iterable<E>, shouldReturnGeneratedValues: Boolean = true, body: BatchReplaceStatement.(E) -> Unit): List<ResultRow>","org.jetbrains.exposed.v1.jdbc.batchReplace"]},{"name":"fun <T : Table, E : Any> T.batchReplace(data: Sequence<E>, shouldReturnGeneratedValues: Boolean = true, body: BatchReplaceStatement.(E) -> Unit): List<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.batchReplace","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/batch-replace.html","searchKeys":["batchReplace","fun <T : Table, E : Any> T.batchReplace(data: Sequence<E>, shouldReturnGeneratedValues: Boolean = true, body: BatchReplaceStatement.(E) -> Unit): List<ResultRow>","org.jetbrains.exposed.v1.jdbc.batchReplace"]},{"name":"fun <T : Table, E : Any> T.batchUpsert(data: Iterable<E>, vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, shouldReturnGeneratedValues: Boolean = true, body: BatchUpsertStatement.(E) -> Unit): List<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.batchUpsert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/batch-upsert.html","searchKeys":["batchUpsert","fun <T : Table, E : Any> T.batchUpsert(data: Iterable<E>, vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, shouldReturnGeneratedValues: Boolean = true, body: BatchUpsertStatement.(E) -> Unit): List<ResultRow>","org.jetbrains.exposed.v1.jdbc.batchUpsert"]},{"name":"fun <T : Table, E : Any> T.batchUpsert(data: Sequence<E>, vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, shouldReturnGeneratedValues: Boolean = true, body: BatchUpsertStatement.(E) -> Unit): List<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.batchUpsert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/batch-upsert.html","searchKeys":["batchUpsert","fun <T : Table, E : Any> T.batchUpsert(data: Sequence<E>, vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, shouldReturnGeneratedValues: Boolean = true, body: BatchUpsertStatement.(E) -> Unit): List<ResultRow>","org.jetbrains.exposed.v1.jdbc.batchUpsert"]},{"name":"fun <T : Table, E> T.batchInsert(data: Iterable<E>, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true, body: BatchInsertStatement.(E) -> Unit): List<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.batchInsert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/batch-insert.html","searchKeys":["batchInsert","fun <T : Table, E> T.batchInsert(data: Iterable<E>, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true, body: BatchInsertStatement.(E) -> Unit): List<ResultRow>","org.jetbrains.exposed.v1.jdbc.batchInsert"]},{"name":"fun <T : Table, E> T.batchInsert(data: Sequence<E>, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true, body: BatchInsertStatement.(E) -> Unit): List<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.batchInsert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/batch-insert.html","searchKeys":["batchInsert","fun <T : Table, E> T.batchInsert(data: Sequence<E>, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true, body: BatchInsertStatement.(E) -> Unit): List<ResultRow>","org.jetbrains.exposed.v1.jdbc.batchInsert"]},{"name":"fun <T : Table> T.deleteIgnoreWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): Int","description":"org.jetbrains.exposed.v1.jdbc.deleteIgnoreWhere","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete-ignore-where.html","searchKeys":["deleteIgnoreWhere","fun <T : Table> T.deleteIgnoreWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): Int","org.jetbrains.exposed.v1.jdbc.deleteIgnoreWhere"]},{"name":"fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.deleteReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete-returning.html","searchKeys":["deleteReturning","fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.deleteReturning"]},{"name":"fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.deleteReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete-returning.html","searchKeys":["deleteReturning","fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.deleteReturning"]},{"name":"fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.deleteReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete-returning.html","searchKeys":["deleteReturning","fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.deleteReturning"]},{"name":"fun <T : Table> T.deleteWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): Int","description":"org.jetbrains.exposed.v1.jdbc.deleteWhere","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete-where.html","searchKeys":["deleteWhere","fun <T : Table> T.deleteWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): Int","org.jetbrains.exposed.v1.jdbc.deleteWhere"]},{"name":"fun <T : Table> T.insert(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Number>","description":"org.jetbrains.exposed.v1.jdbc.insert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert.html","searchKeys":["insert","fun <T : Table> T.insert(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Number>","org.jetbrains.exposed.v1.jdbc.insert"]},{"name":"fun <T : Table> T.insert(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): Int?","description":"org.jetbrains.exposed.v1.jdbc.insert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert.html","searchKeys":["insert","fun <T : Table> T.insert(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): Int?","org.jetbrains.exposed.v1.jdbc.insert"]},{"name":"fun <T : Table> T.insertIgnore(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Long>","description":"org.jetbrains.exposed.v1.jdbc.insertIgnore","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert-ignore.html","searchKeys":["insertIgnore","fun <T : Table> T.insertIgnore(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Long>","org.jetbrains.exposed.v1.jdbc.insertIgnore"]},{"name":"fun <T : Table> T.insertIgnore(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): Int?","description":"org.jetbrains.exposed.v1.jdbc.insertIgnore","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert-ignore.html","searchKeys":["insertIgnore","fun <T : Table> T.insertIgnore(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): Int?","org.jetbrains.exposed.v1.jdbc.insertIgnore"]},{"name":"fun <T : Table> T.insertReturning(returning: List<Expression<*>> = columns, ignoreErrors: Boolean = false, body: T.(InsertStatement<Number>) -> Unit): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.insertReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/insert-returning.html","searchKeys":["insertReturning","fun <T : Table> T.insertReturning(returning: List<Expression<*>> = columns, ignoreErrors: Boolean = false, body: T.(InsertStatement<Number>) -> Unit): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.insertReturning"]},{"name":"fun <T : Table> T.mergeFrom(selectQuery: QueryAlias, on: SqlExpressionBuilder.() -> Op<Boolean>, body: MergeSelectStatement.() -> Unit): MergeSelectStatement","description":"org.jetbrains.exposed.v1.jdbc.mergeFrom","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/merge-from.html","searchKeys":["mergeFrom","fun <T : Table> T.mergeFrom(selectQuery: QueryAlias, on: SqlExpressionBuilder.() -> Op<Boolean>, body: MergeSelectStatement.() -> Unit): MergeSelectStatement","org.jetbrains.exposed.v1.jdbc.mergeFrom"]},{"name":"fun <T : Table> T.replace(body: T.(UpdateBuilder<*>) -> Unit): ReplaceStatement<Long>","description":"org.jetbrains.exposed.v1.jdbc.replace","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/replace.html","searchKeys":["replace","fun <T : Table> T.replace(body: T.(UpdateBuilder<*>) -> Unit): ReplaceStatement<Long>","org.jetbrains.exposed.v1.jdbc.replace"]},{"name":"fun <T : Table> T.replace(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): Int?","description":"org.jetbrains.exposed.v1.jdbc.replace","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/replace.html","searchKeys":["replace","fun <T : Table> T.replace(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): Int?","org.jetbrains.exposed.v1.jdbc.replace"]},{"name":"fun <T : Table> T.update(limit: Int? = null, body: T.(UpdateStatement) -> Unit): Int","description":"org.jetbrains.exposed.v1.jdbc.update","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update.html","searchKeys":["update","fun <T : Table> T.update(limit: Int? = null, body: T.(UpdateStatement) -> Unit): Int","org.jetbrains.exposed.v1.jdbc.update"]},{"name":"fun <T : Table> T.update(where: SqlExpressionBuilder.() -> Op<Boolean>, limit: Int? = null, body: T.(UpdateStatement) -> Unit): Int","description":"org.jetbrains.exposed.v1.jdbc.update","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update.html","searchKeys":["update","fun <T : Table> T.update(where: SqlExpressionBuilder.() -> Op<Boolean>, limit: Int? = null, body: T.(UpdateStatement) -> Unit): Int","org.jetbrains.exposed.v1.jdbc.update"]},{"name":"fun <T : Table> T.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: T.(UpdateStatement) -> Unit): Int","description":"org.jetbrains.exposed.v1.jdbc.update","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update.html","searchKeys":["update","fun <T : Table> T.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: T.(UpdateStatement) -> Unit): Int","org.jetbrains.exposed.v1.jdbc.update"]},{"name":"fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, body: T.(UpdateStatement) -> Unit): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.updateReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update-returning.html","searchKeys":["updateReturning","fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, body: T.(UpdateStatement) -> Unit): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.updateReturning"]},{"name":"fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>, body: T.(UpdateStatement) -> Unit): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.updateReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update-returning.html","searchKeys":["updateReturning","fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>, body: T.(UpdateStatement) -> Unit): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.updateReturning"]},{"name":"fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpdateStatement) -> Unit): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.updateReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update-returning.html","searchKeys":["updateReturning","fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpdateStatement) -> Unit): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.updateReturning"]},{"name":"fun <T : Table> T.upsert(vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): UpsertStatement<Long>","description":"org.jetbrains.exposed.v1.jdbc.upsert","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/upsert.html","searchKeys":["upsert","fun <T : Table> T.upsert(vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): UpsertStatement<Long>","org.jetbrains.exposed.v1.jdbc.upsert"]},{"name":"fun <T : Table> T.upsertReturning(vararg keys: Column<*>, returning: List<Expression<*>> = columns, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): ReturningBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.upsertReturning","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/upsert-returning.html","searchKeys":["upsertReturning","fun <T : Table> T.upsertReturning(vararg keys: Column<*>, returning: List<Expression<*>> = columns, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): ReturningBlockingExecutable","org.jetbrains.exposed.v1.jdbc.upsertReturning"]},{"name":"fun <T : Table> create(vararg tables: T, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.create","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create.html","searchKeys":["create","fun <T : Table> create(vararg tables: T, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.create"]},{"name":"fun <T, R> exec(stmt: BlockingExecutable<T, *>, body: Statement<T>.(T) -> R): R?","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/exec.html","searchKeys":["exec","fun <T, R> exec(stmt: BlockingExecutable<T, *>, body: Statement<T>.(T) -> R): R?","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec"]},{"name":"fun <T> JdbcTransaction.withDataBaseLock(body: () -> T)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.withDataBaseLock","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/with-data-base-lock.html","searchKeys":["withDataBaseLock","fun <T> JdbcTransaction.withDataBaseLock(body: () -> T)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.withDataBaseLock"]},{"name":"fun <T> emptySized(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.emptySized","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/empty-sized.html","searchKeys":["emptySized","fun <T> emptySized(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.emptySized"]},{"name":"fun <T> exec(stmt: BlockingExecutable<T, *>): T?","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/exec.html","searchKeys":["exec","fun <T> exec(stmt: BlockingExecutable<T, *>): T?","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec"]},{"name":"fun <T> inTopLevelTransaction(transactionIsolation: Int, readOnly: Boolean = false, db: Database? = null, outerTransaction: JdbcTransaction? = null, statement: JdbcTransaction.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.transactions.inTopLevelTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/in-top-level-transaction.html","searchKeys":["inTopLevelTransaction","fun <T> inTopLevelTransaction(transactionIsolation: Int, readOnly: Boolean = false, db: Database? = null, outerTransaction: JdbcTransaction? = null, statement: JdbcTransaction.() -> T): T","org.jetbrains.exposed.v1.jdbc.transactions.inTopLevelTransaction"]},{"name":"fun <T> transaction(db: Database? = null, statement: JdbcTransaction.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.transactions.transaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/transaction.html","searchKeys":["transaction","fun <T> transaction(db: Database? = null, statement: JdbcTransaction.() -> T): T","org.jetbrains.exposed.v1.jdbc.transactions.transaction"]},{"name":"fun <T> transaction(transactionIsolation: Int, readOnly: Boolean = false, db: Database? = null, statement: JdbcTransaction.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.transactions.transaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/transaction.html","searchKeys":["transaction","fun <T> transaction(transactionIsolation: Int, readOnly: Boolean = false, db: Database? = null, statement: JdbcTransaction.() -> T): T","org.jetbrains.exposed.v1.jdbc.transactions.transaction"]},{"name":"fun AbstractQuery<*>.except(other: Query): Except","description":"org.jetbrains.exposed.v1.jdbc.except","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/except.html","searchKeys":["except","fun AbstractQuery<*>.except(other: Query): Except","org.jetbrains.exposed.v1.jdbc.except"]},{"name":"fun AbstractQuery<*>.intersect(other: Query): Intersect","description":"org.jetbrains.exposed.v1.jdbc.intersect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/intersect.html","searchKeys":["intersect","fun AbstractQuery<*>.intersect(other: Query): Intersect","org.jetbrains.exposed.v1.jdbc.intersect"]},{"name":"fun AbstractQuery<*>.union(other: Query): Union","description":"org.jetbrains.exposed.v1.jdbc.union","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/union.html","searchKeys":["union","fun AbstractQuery<*>.union(other: Query): Union","org.jetbrains.exposed.v1.jdbc.union"]},{"name":"fun AbstractQuery<*>.unionAll(other: Query): UnionAll","description":"org.jetbrains.exposed.v1.jdbc.unionAll","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/union-all.html","searchKeys":["unionAll","fun AbstractQuery<*>.unionAll(other: Query): UnionAll","org.jetbrains.exposed.v1.jdbc.unionAll"]},{"name":"fun ColumnSet.select(column: Expression<*>, vararg columns: Expression<*>): Query","description":"org.jetbrains.exposed.v1.jdbc.select","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/select.html","searchKeys":["select","fun ColumnSet.select(column: Expression<*>, vararg columns: Expression<*>): Query","org.jetbrains.exposed.v1.jdbc.select"]},{"name":"fun ColumnSet.select(columns: List<Expression<*>>): Query","description":"org.jetbrains.exposed.v1.jdbc.select","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/select.html","searchKeys":["select","fun ColumnSet.select(columns: List<Expression<*>>): Query","org.jetbrains.exposed.v1.jdbc.select"]},{"name":"fun FieldSet.selectAll(): Query","description":"org.jetbrains.exposed.v1.jdbc.selectAll","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/select-all.html","searchKeys":["selectAll","fun FieldSet.selectAll(): Query","org.jetbrains.exposed.v1.jdbc.selectAll"]},{"name":"fun JdbcTransaction.addLogger(vararg logger: SqlLogger): CompositeSqlLogger","description":"org.jetbrains.exposed.v1.jdbc.addLogger","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/add-logger.html","searchKeys":["addLogger","fun JdbcTransaction.addLogger(vararg logger: SqlLogger): CompositeSqlLogger","org.jetbrains.exposed.v1.jdbc.addLogger"]},{"name":"fun JdbcTransaction.explain(analyze: Boolean = false, options: String? = null, body: IStatementBuilder.() -> Statement<*>): ExplainBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.explain","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/explain.html","searchKeys":["explain","fun JdbcTransaction.explain(analyze: Boolean = false, options: String? = null, body: IStatementBuilder.() -> Statement<*>): ExplainBlockingExecutable","org.jetbrains.exposed.v1.jdbc.explain"]},{"name":"fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null): Int","description":"org.jetbrains.exposed.v1.jdbc.delete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete.html","searchKeys":["delete","fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null): Int","org.jetbrains.exposed.v1.jdbc.delete"]},{"name":"fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null, where: SqlExpressionBuilder.() -> Op<Boolean>): Int","description":"org.jetbrains.exposed.v1.jdbc.delete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete.html","searchKeys":["delete","fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null, where: SqlExpressionBuilder.() -> Op<Boolean>): Int","org.jetbrains.exposed.v1.jdbc.delete"]},{"name":"fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): Int","description":"org.jetbrains.exposed.v1.jdbc.delete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete.html","searchKeys":["delete","fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): Int","org.jetbrains.exposed.v1.jdbc.delete"]},{"name":"fun Join.update(limit: Int? = null, body: (UpdateStatement) -> Unit): Int","description":"org.jetbrains.exposed.v1.jdbc.update","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update.html","searchKeys":["update","fun Join.update(limit: Int? = null, body: (UpdateStatement) -> Unit): Int","org.jetbrains.exposed.v1.jdbc.update"]},{"name":"fun Join.update(where: SqlExpressionBuilder.() -> Op<Boolean>, limit: Int? = null, body: (UpdateStatement) -> Unit): Int","description":"org.jetbrains.exposed.v1.jdbc.update","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update.html","searchKeys":["update","fun Join.update(where: SqlExpressionBuilder.() -> Op<Boolean>, limit: Int? = null, body: (UpdateStatement) -> Unit): Int","org.jetbrains.exposed.v1.jdbc.update"]},{"name":"fun Join.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: (UpdateStatement) -> Unit): Int","description":"org.jetbrains.exposed.v1.jdbc.update","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/update.html","searchKeys":["update","fun Join.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: (UpdateStatement) -> Unit): Int","org.jetbrains.exposed.v1.jdbc.update"]},{"name":"fun Query.andHaving(andPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.andHaving","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/and-having.html","searchKeys":["andHaving","fun Query.andHaving(andPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.andHaving"]},{"name":"fun Query.andWhere(andPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.andWhere","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/and-where.html","searchKeys":["andWhere","fun Query.andWhere(andPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.andWhere"]},{"name":"fun Query.orHaving(orPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.orHaving","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/or-having.html","searchKeys":["orHaving","fun Query.orHaving(orPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.orHaving"]},{"name":"fun Query.orWhere(orPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.orWhere","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/or-where.html","searchKeys":["orWhere","fun Query.orWhere(orPart: SqlExpressionBuilder.() -> Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.orWhere"]},{"name":"fun Schema.exists(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.exists","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/exists.html","searchKeys":["exists","fun Schema.exists(): Boolean","org.jetbrains.exposed.v1.jdbc.exists"]},{"name":"fun Sequence.exists(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.exists","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/exists.html","searchKeys":["exists","fun Sequence.exists(): Boolean","org.jetbrains.exposed.v1.jdbc.exists"]},{"name":"fun Table.deleteAll(): Int","description":"org.jetbrains.exposed.v1.jdbc.deleteAll","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/delete-all.html","searchKeys":["deleteAll","fun Table.deleteAll(): Int","org.jetbrains.exposed.v1.jdbc.deleteAll"]},{"name":"fun Table.exists(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.exists","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/exists.html","searchKeys":["exists","fun Table.exists(): Boolean","org.jetbrains.exposed.v1.jdbc.exists"]},{"name":"fun addMissingColumnsStatements(vararg tables: Table, withLogs: Boolean = true): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.addMissingColumnsStatements","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/add-missing-columns-statements.html","searchKeys":["addMissingColumnsStatements","fun addMissingColumnsStatements(vararg tables: Table, withLogs: Boolean = true): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.addMissingColumnsStatements"]},{"name":"fun adjustWhere(body: Op<Boolean>?.() -> Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.adjustWhere","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/adjust-where.html","searchKeys":["adjustWhere","fun adjustWhere(body: Op<Boolean>?.() -> Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.Query.adjustWhere"]},{"name":"fun allTablesNames(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.allTablesNames","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/all-tables-names.html","searchKeys":["allTablesNames","fun allTablesNames(): List<String>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.allTablesNames"]},{"name":"fun allTablesNamesInAllSchemas(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.allTablesNamesInAllSchemas","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/all-tables-names-in-all-schemas.html","searchKeys":["allTablesNamesInAllSchemas","fun allTablesNamesInAllSchemas(): List<String>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.allTablesNamesInAllSchemas"]},{"name":"fun catalog(transaction: JdbcTransaction): String","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.catalog","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/catalog.html","searchKeys":["catalog","fun catalog(transaction: JdbcTransaction): String","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.catalog"]},{"name":"fun checkCycle(vararg tables: Table): Boolean","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkCycle","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/check-cycle.html","searchKeys":["checkCycle","fun checkCycle(vararg tables: Table): Boolean","org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkCycle"]},{"name":"fun checkExcessiveForeignKeyConstraints(vararg tables: Table, withLogs: Boolean): List<ForeignKeyConstraint>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkExcessiveForeignKeyConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/check-excessive-foreign-key-constraints.html","searchKeys":["checkExcessiveForeignKeyConstraints","fun checkExcessiveForeignKeyConstraints(vararg tables: Table, withLogs: Boolean): List<ForeignKeyConstraint>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkExcessiveForeignKeyConstraints"]},{"name":"fun checkExcessiveIndices(vararg tables: Table, withLogs: Boolean): List<Index>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkExcessiveIndices","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/check-excessive-indices.html","searchKeys":["checkExcessiveIndices","fun checkExcessiveIndices(vararg tables: Table, withLogs: Boolean): List<Index>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkExcessiveIndices"]},{"name":"fun checkMappingConsistence(vararg tables: Table, withLogs: Boolean = true): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkMappingConsistence","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/check-mapping-consistence.html","searchKeys":["checkMappingConsistence","fun checkMappingConsistence(vararg tables: Table, withLogs: Boolean = true): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.checkMappingConsistence"]},{"name":"fun closeAndUnregister(database: Database)","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.closeAndUnregister","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/close-and-unregister.html","searchKeys":["closeAndUnregister","fun closeAndUnregister(database: Database)","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.closeAndUnregister"]},{"name":"fun closeExecutedStatements()","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.closeExecutedStatements","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/close-executed-statements.html","searchKeys":["closeExecutedStatements","fun closeExecutedStatements()","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.closeExecutedStatements"]},{"name":"fun columnConstraints(vararg tables: Table): Map<Pair<Table, LinkedHashSet<Column<*>>>, List<ForeignKeyConstraint>>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.columnConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/column-constraints.html","searchKeys":["columnConstraints","fun columnConstraints(vararg tables: Table): Map<Pair<Table, LinkedHashSet<Column<*>>>, List<ForeignKeyConstraint>>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.columnConstraints"]},{"name":"fun connect(datasource: DataSource, setupConnection: (Connection) -> Unit = {}, databaseConfig: DatabaseConfig? = null, connectionAutoRegistration: DatabaseConnectionAutoRegistration = connectionInstanceImpl, manager: (Database) -> TransactionManagerApi = { TransactionManager(it) }): Database","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.connect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/connect.html","searchKeys":["connect","fun connect(datasource: DataSource, setupConnection: (Connection) -> Unit = {}, databaseConfig: DatabaseConfig? = null, connectionAutoRegistration: DatabaseConnectionAutoRegistration = connectionInstanceImpl, manager: (Database) -> TransactionManagerApi = { TransactionManager(it) }): Database","org.jetbrains.exposed.v1.jdbc.Database.Companion.connect"]},{"name":"fun connect(getNewConnection: () -> Connection, databaseConfig: DatabaseConfig? = null, connectionAutoRegistration: DatabaseConnectionAutoRegistration = connectionInstanceImpl, manager: (Database) -> TransactionManagerApi = { TransactionManager(it) }): Database","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.connect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/connect.html","searchKeys":["connect","fun connect(getNewConnection: () -> Connection, databaseConfig: DatabaseConfig? = null, connectionAutoRegistration: DatabaseConnectionAutoRegistration = connectionInstanceImpl, manager: (Database) -> TransactionManagerApi = { TransactionManager(it) }): Database","org.jetbrains.exposed.v1.jdbc.Database.Companion.connect"]},{"name":"fun connect(url: String, driver: String = getDriver(url), user: String = \"\", password: String = \"\", setupConnection: (Connection) -> Unit = {}, databaseConfig: DatabaseConfig? = null, connectionAutoRegistration: DatabaseConnectionAutoRegistration = connectionInstanceImpl, manager: (Database) -> TransactionManagerApi = { TransactionManager(it) }): Database","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.connect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/connect.html","searchKeys":["connect","fun connect(url: String, driver: String = getDriver(url), user: String = \"\", password: String = \"\", setupConnection: (Connection) -> Unit = {}, databaseConfig: DatabaseConfig? = null, connectionAutoRegistration: DatabaseConnectionAutoRegistration = connectionInstanceImpl, manager: (Database) -> TransactionManagerApi = { TransactionManager(it) }): Database","org.jetbrains.exposed.v1.jdbc.Database.Companion.connect"]},{"name":"fun createDatabase(vararg databases: String, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createDatabase","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-database.html","searchKeys":["createDatabase","fun createDatabase(vararg databases: String, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createDatabase"]},{"name":"fun createFKey(foreignKey: ForeignKeyConstraint): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createFKey","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-f-key.html","searchKeys":["createFKey","fun createFKey(foreignKey: ForeignKeyConstraint): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createFKey"]},{"name":"fun createIndex(index: Index): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createIndex","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-index.html","searchKeys":["createIndex","fun createIndex(index: Index): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createIndex"]},{"name":"fun createMissingTablesAndColumns(vararg tables: Table, inBatch: Boolean = false, withLogs: Boolean = true)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createMissingTablesAndColumns","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-missing-tables-and-columns.html","searchKeys":["createMissingTablesAndColumns","fun createMissingTablesAndColumns(vararg tables: Table, inBatch: Boolean = false, withLogs: Boolean = true)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createMissingTablesAndColumns"]},{"name":"fun createSchema(vararg schemas: Schema, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createSchema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-schema.html","searchKeys":["createSchema","fun createSchema(vararg schemas: Schema, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createSchema"]},{"name":"fun createSequence(vararg seq: Sequence, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createSequence","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-sequence.html","searchKeys":["createSequence","fun createSequence(vararg seq: Sequence, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createSequence"]},{"name":"fun createStatements(vararg tables: Table): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.createStatements","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/create-statements.html","searchKeys":["createStatements","fun createStatements(vararg tables: Table): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.createStatements"]},{"name":"fun current(): JdbcTransaction","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.current","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/current.html","searchKeys":["current","fun current(): JdbcTransaction","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.current"]},{"name":"fun currentOrNew(isolation: Int): JdbcTransaction","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.currentOrNew","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/current-or-new.html","searchKeys":["currentOrNew","fun currentOrNew(isolation: Int): JdbcTransaction","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.currentOrNew"]},{"name":"fun currentOrNull(): JdbcTransaction?","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.currentOrNull","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/current-or-null.html","searchKeys":["currentOrNull","fun currentOrNull(): JdbcTransaction?","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.currentOrNull"]},{"name":"fun drop(vararg tables: Table, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.drop","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/drop.html","searchKeys":["drop","fun drop(vararg tables: Table, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.drop"]},{"name":"fun dropDatabase(vararg databases: String, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.dropDatabase","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/drop-database.html","searchKeys":["dropDatabase","fun dropDatabase(vararg databases: String, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.dropDatabase"]},{"name":"fun dropSchema(vararg schemas: Schema, cascade: Boolean = false, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.dropSchema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/drop-schema.html","searchKeys":["dropSchema","fun dropSchema(vararg schemas: Schema, cascade: Boolean = false, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.dropSchema"]},{"name":"fun dropSequence(vararg seq: Sequence, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.dropSequence","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/drop-sequence.html","searchKeys":["dropSequence","fun dropSequence(vararg seq: Sequence, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.dropSequence"]},{"name":"fun exec(stmt: String, args: Iterable<Pair<IColumnType<*>, Any?>> = emptyList(), explicitStatementType: StatementType? = null): Unit?","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/exec.html","searchKeys":["exec","fun exec(stmt: String, args: Iterable<Pair<IColumnType<*>, Any?>> = emptyList(), explicitStatementType: StatementType? = null): Unit?","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.exec"]},{"name":"fun execInBatch(stmts: List<String>)","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.execInBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/exec-in-batch.html","searchKeys":["execInBatch","fun execInBatch(stmts: List<String>)","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.execInBatch"]},{"name":"fun existingCheckConstraints(vararg tables: Table): Map<Table, List<CheckConstraint>>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingCheckConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/existing-check-constraints.html","searchKeys":["existingCheckConstraints","fun existingCheckConstraints(vararg tables: Table): Map<Table, List<CheckConstraint>>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingCheckConstraints"]},{"name":"fun existingPrimaryKeys(vararg tables: Table): Map<Table, PrimaryKeyMetadata?>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingPrimaryKeys","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/existing-primary-keys.html","searchKeys":["existingPrimaryKeys","fun existingPrimaryKeys(vararg tables: Table): Map<Table, PrimaryKeyMetadata?>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingPrimaryKeys"]},{"name":"fun existingSequences(vararg tables: Table): Map<Table, List<Sequence>>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingSequences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/existing-sequences.html","searchKeys":["existingSequences","fun existingSequences(vararg tables: Table): Map<Table, List<Sequence>>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingSequences"]},{"name":"fun fetchBatchedResults(batchSize: Int = 1000, sortOrder: SortOrder = SortOrder.ASC): Iterable<Iterable<ResultRow>>","description":"org.jetbrains.exposed.v1.jdbc.Query.fetchBatchedResults","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/fetch-batched-results.html","searchKeys":["fetchBatchedResults","fun fetchBatchedResults(batchSize: Int = 1000, sortOrder: SortOrder = SortOrder.ASC): Iterable<Iterable<ResultRow>>","org.jetbrains.exposed.v1.jdbc.Query.fetchBatchedResults"]},{"name":"fun getDatabase(): String","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.getDatabase","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/get-database.html","searchKeys":["getDatabase","fun getDatabase(): String","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.getDatabase"]},{"name":"fun getDefaultIsolationLevel(db: Database): Int","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.getDefaultIsolationLevel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/get-default-isolation-level.html","searchKeys":["getDefaultIsolationLevel","fun getDefaultIsolationLevel(db: Database): Int","org.jetbrains.exposed.v1.jdbc.Database.Companion.getDefaultIsolationLevel"]},{"name":"fun getDialectName(url: String): String?","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.getDialectName","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/get-dialect-name.html","searchKeys":["getDialectName","fun getDialectName(url: String): String?","org.jetbrains.exposed.v1.jdbc.Database.Companion.getDialectName"]},{"name":"fun isInitialized(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.isInitialized","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/is-initialized.html","searchKeys":["isInitialized","fun isInitialized(): Boolean","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.isInitialized"]},{"name":"fun isLoaded(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.isLoaded","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/is-loaded.html","searchKeys":["isLoaded","fun isLoaded(): Boolean","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.isLoaded"]},{"name":"fun listDatabases(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.listDatabases","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/list-databases.html","searchKeys":["listDatabases","fun listDatabases(): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.listDatabases"]},{"name":"fun listTables(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.listTables","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/list-tables.html","searchKeys":["listTables","fun listTables(): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.listTables"]},{"name":"fun listTablesInAllSchemas(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.listTablesInAllSchemas","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/list-tables-in-all-schemas.html","searchKeys":["listTablesInAllSchemas","fun listTablesInAllSchemas(): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.listTablesInAllSchemas"]},{"name":"fun managerFor(database: Database?): TransactionManager?","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.managerFor","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/manager-for.html","searchKeys":["managerFor","fun managerFor(database: Database?): TransactionManager?","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.managerFor"]},{"name":"fun newTransaction(isolation: Int = defaultIsolationLevel, readOnly: Boolean = defaultReadOnly, outerTransaction: JdbcTransaction? = null): JdbcTransaction","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.newTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/new-transaction.html","searchKeys":["newTransaction","fun newTransaction(isolation: Int = defaultIsolationLevel, readOnly: Boolean = defaultReadOnly, outerTransaction: JdbcTransaction? = null): JdbcTransaction","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.newTransaction"]},{"name":"fun newTransaction(isolation: Int = defaultIsolationLevel, readOnly: Boolean = defaultReadOnly, outerTransaction: JdbcTransaction? = null): JdbcTransaction","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.newTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/new-transaction.html","searchKeys":["newTransaction","fun newTransaction(isolation: Int = defaultIsolationLevel, readOnly: Boolean = defaultReadOnly, outerTransaction: JdbcTransaction? = null): JdbcTransaction","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.newTransaction"]},{"name":"fun next(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.next","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/next.html","searchKeys":["next","fun next(): Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.next"]},{"name":"fun orderBy(column: Expression<*>, order: SortOrder = SortOrder.ASC): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/order-by.html","searchKeys":["orderBy","fun orderBy(column: Expression<*>, order: SortOrder = SortOrder.ASC): Query","org.jetbrains.exposed.v1.jdbc.Query.orderBy"]},{"name":"fun orderBy(column: Expression<*>, order: SortOrder = SortOrder.ASC): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/order-by.html","searchKeys":["orderBy","fun orderBy(column: Expression<*>, order: SortOrder = SortOrder.ASC): SetOperation","org.jetbrains.exposed.v1.jdbc.SetOperation.orderBy"]},{"name":"fun registerDialectMetadata(prefix: String, metadata: () -> DatabaseDialectMetadata)","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.registerDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/register-dialect-metadata.html","searchKeys":["registerDialectMetadata","fun registerDialectMetadata(prefix: String, metadata: () -> DatabaseDialectMetadata)","org.jetbrains.exposed.v1.jdbc.Database.Companion.registerDialectMetadata"]},{"name":"fun registerInterceptor(interceptor: StatementInterceptor): Boolean","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.registerInterceptor","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/register-interceptor.html","searchKeys":["registerInterceptor","fun registerInterceptor(interceptor: StatementInterceptor): Boolean","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.registerInterceptor"]},{"name":"fun registerJdbcDriver(prefix: String, driverClassName: String, dialect: String)","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion.registerJdbcDriver","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/register-jdbc-driver.html","searchKeys":["registerJdbcDriver","fun registerJdbcDriver(prefix: String, driverClassName: String, dialect: String)","org.jetbrains.exposed.v1.jdbc.Database.Companion.registerJdbcDriver"]},{"name":"fun registerManager(database: Database, manager: TransactionManager)","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.registerManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/register-manager.html","searchKeys":["registerManager","fun registerManager(database: Database, manager: TransactionManager)","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.registerManager"]},{"name":"fun releaseResult()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.releaseResult","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/release-result.html","searchKeys":["releaseResult","fun releaseResult()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.releaseResult"]},{"name":"fun resetCaches()","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.resetCaches","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/reset-caches.html","searchKeys":["resetCaches","fun resetCaches()","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.resetCaches"]},{"name":"fun resetCurrent(manager: TransactionManager?)","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.resetCurrent","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/reset-current.html","searchKeys":["resetCurrent","fun resetCurrent(manager: TransactionManager?)","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.resetCurrent"]},{"name":"fun resetSchemaCaches()","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.resetSchemaCaches","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/reset-schema-caches.html","searchKeys":["resetSchemaCaches","fun resetSchemaCaches()","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.resetSchemaCaches"]},{"name":"fun schemaExists(schema: Schema): Boolean","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.schemaExists","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/schema-exists.html","searchKeys":["schemaExists","fun schemaExists(schema: Schema): Boolean","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.schemaExists"]},{"name":"fun sequenceExists(sequence: Sequence): Boolean","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.sequenceExists","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/sequence-exists.html","searchKeys":["sequenceExists","fun sequenceExists(sequence: Sequence): Boolean","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.sequenceExists"]},{"name":"fun sequences(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.sequences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/sequences.html","searchKeys":["sequences","fun sequences(): List<String>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.sequences"]},{"name":"fun setSchema(schema: Schema, inBatch: Boolean = false)","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.setSchema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/set-schema.html","searchKeys":["setSchema","fun setSchema(schema: Schema, inBatch: Boolean = false)","org.jetbrains.exposed.v1.jdbc.SchemaUtils.setSchema"]},{"name":"fun sortTablesByReferences(tables: Iterable<Table>): List<Table>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.sortTablesByReferences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/sort-tables-by-references.html","searchKeys":["sortTablesByReferences","fun sortTablesByReferences(tables: Iterable<Table>): List<Table>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.sortTablesByReferences"]},{"name":"fun statementsRequiredToActualizeScheme(vararg tables: Table, withLogs: Boolean = true): List<String>","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils.statementsRequiredToActualizeScheme","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/statements-required-to-actualize-scheme.html","searchKeys":["statementsRequiredToActualizeScheme","fun statementsRequiredToActualizeScheme(vararg tables: Table, withLogs: Boolean = true): List<String>","org.jetbrains.exposed.v1.jdbc.SchemaUtils.statementsRequiredToActualizeScheme"]},{"name":"fun tableColumns(vararg tables: Table): Map<Table, List<ColumnMetadata>>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.tableColumns","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/table-columns.html","searchKeys":["tableColumns","fun tableColumns(vararg tables: Table): Map<Table, List<ColumnMetadata>>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.tableColumns"]},{"name":"fun tableExists(table: Table): Boolean","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.tableExists","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/table-exists.html","searchKeys":["tableExists","fun tableExists(table: Table): Boolean","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.tableExists"]},{"name":"fun unregisterInterceptor(interceptor: StatementInterceptor): Boolean","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.unregisterInterceptor","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/unregister-interceptor.html","searchKeys":["unregisterInterceptor","fun unregisterInterceptor(interceptor: StatementInterceptor): Boolean","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.unregisterInterceptor"]},{"name":"fun where(predicate: Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.where","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/where.html","searchKeys":["where","fun where(predicate: Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.Query.where"]},{"name":"fun where(predicate: SqlExpressionBuilder.() -> Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.where","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/where.html","searchKeys":["where","fun where(predicate: SqlExpressionBuilder.() -> Op<Boolean>): Query","org.jetbrains.exposed.v1.jdbc.Query.where"]},{"name":"fun withDistinctOn(vararg columns: Pair<Column<*>, SortOrder>): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.withDistinctOn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/with-distinct-on.html","searchKeys":["withDistinctOn","fun withDistinctOn(vararg columns: Pair<Column<*>, SortOrder>): Query","org.jetbrains.exposed.v1.jdbc.Query.withDistinctOn"]},{"name":"infix fun <T, R> SizedIterable<T>.mapLazy(f: (T) -> R): SizedIterable<R>","description":"org.jetbrains.exposed.v1.jdbc.mapLazy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/map-lazy.html","searchKeys":["mapLazy","infix fun <T, R> SizedIterable<T>.mapLazy(f: (T) -> R): SizedIterable<R>","org.jetbrains.exposed.v1.jdbc.mapLazy"]},{"name":"inline fun adjustColumnSet(body: ColumnSet.() -> ColumnSet): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.adjustColumnSet","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/adjust-column-set.html","searchKeys":["adjustColumnSet","inline fun adjustColumnSet(body: ColumnSet.() -> ColumnSet): Query","org.jetbrains.exposed.v1.jdbc.Query.adjustColumnSet"]},{"name":"inline fun adjustSelect(body: ColumnSet.(FieldSet) -> Query): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.adjustSelect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/adjust-select.html","searchKeys":["adjustSelect","inline fun adjustSelect(body: ColumnSet.(FieldSet) -> Query): Query","org.jetbrains.exposed.v1.jdbc.Query.adjustSelect"]},{"name":"interface BlockingExecutable<out T, S : Statement<T>>","description":"org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-blocking-executable/index.html","searchKeys":["BlockingExecutable","interface BlockingExecutable<out T, S : Statement<T>>","org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable"]},{"name":"interface DatabaseConnectionAutoRegistration : Function1<Connection, ExposedConnection<*>> ","description":"org.jetbrains.exposed.v1.jdbc.DatabaseConnectionAutoRegistration","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database-connection-auto-registration/index.html","searchKeys":["DatabaseConnectionAutoRegistration","interface DatabaseConnectionAutoRegistration : Function1<Connection, ExposedConnection<*>> ","org.jetbrains.exposed.v1.jdbc.DatabaseConnectionAutoRegistration"]},{"name":"interface ExposedConnection<OriginalConnection : Any>","description":"org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-exposed-connection/index.html","searchKeys":["ExposedConnection","interface ExposedConnection<OriginalConnection : Any>","org.jetbrains.exposed.v1.jdbc.statements.api.ExposedConnection"]},{"name":"interface JdbcPreparedStatementApi : PreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.api/-jdbc-prepared-statement-api/index.html","searchKeys":["JdbcPreparedStatementApi","interface JdbcPreparedStatementApi : PreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.api.JdbcPreparedStatementApi"]},{"name":"interface JdbcTransactionInterface : TransactionInterface","description":"org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-jdbc-transaction-interface/index.html","searchKeys":["JdbcTransactionInterface","interface JdbcTransactionInterface : TransactionInterface","org.jetbrains.exposed.v1.jdbc.transactions.JdbcTransactionInterface"]},{"name":"interface LazySizedIterable<T> : SizedIterable<T> ","description":"org.jetbrains.exposed.v1.jdbc.LazySizedIterable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-iterable/index.html","searchKeys":["LazySizedIterable","interface LazySizedIterable<T> : SizedIterable<T> ","org.jetbrains.exposed.v1.jdbc.LazySizedIterable"]},{"name":"interface SizedIterable<out T> : Iterable<T> ","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/index.html","searchKeys":["SizedIterable","interface SizedIterable<out T> : Iterable<T> ","org.jetbrains.exposed.v1.jdbc.SizedIterable"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.jdbc.Database.Companion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.jdbc.Database.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.Companion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.jdbc.Query.Companion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.jdbc.Query.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.Companion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.jdbc.SetOperation.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.Companion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion"]},{"name":"object SchemaUtils : SchemaUtilityApi","description":"org.jetbrains.exposed.v1.jdbc.SchemaUtils","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-schema-utils/index.html","searchKeys":["SchemaUtils","object SchemaUtils : SchemaUtilityApi","org.jetbrains.exposed.v1.jdbc.SchemaUtils"]},{"name":"open class BatchInsertBlockingExecutable<S : BaseBatchInsertStatement>(val statement: S) : InsertBlockingExecutable<List<ResultRow>, S> ","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-insert-blocking-executable/index.html","searchKeys":["BatchInsertBlockingExecutable","open class BatchInsertBlockingExecutable<S : BaseBatchInsertStatement>(val statement: S) : InsertBlockingExecutable<List<ResultRow>, S> ","org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable"]},{"name":"open class BatchUpdateBlockingExecutable(val statement: BatchUpdateStatement) : UpdateBlockingExecutable","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-update-blocking-executable/index.html","searchKeys":["BatchUpdateBlockingExecutable","open class BatchUpdateBlockingExecutable(val statement: BatchUpdateStatement) : UpdateBlockingExecutable","org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable"]},{"name":"open class BatchUpsertBlockingExecutable(val statement: BatchUpsertStatement) : BatchInsertBlockingExecutable<BatchUpsertStatement> ","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-upsert-blocking-executable/index.html","searchKeys":["BatchUpsertBlockingExecutable","open class BatchUpsertBlockingExecutable(val statement: BatchUpsertStatement) : BatchInsertBlockingExecutable<BatchUpsertStatement> ","org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable"]},{"name":"open class DeleteBlockingExecutable(val statement: DeleteStatement) : BlockingExecutable<Int, DeleteStatement> ","description":"org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-delete-blocking-executable/index.html","searchKeys":["DeleteBlockingExecutable","open class DeleteBlockingExecutable(val statement: DeleteStatement) : BlockingExecutable<Int, DeleteStatement> ","org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable"]},{"name":"open class ExplainBlockingExecutable(val statement: ExplainQuery) : BlockingExecutable<ResultApi, ExplainQuery> , Iterable<ExplainResultRow> ","description":"org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-explain-blocking-executable/index.html","searchKeys":["ExplainBlockingExecutable","open class ExplainBlockingExecutable(val statement: ExplainQuery) : BlockingExecutable<ResultApi, ExplainQuery> , Iterable<ExplainResultRow> ","org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable"]},{"name":"open class H2DialectMetadata : DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.H2DialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-h2-dialect-metadata/index.html","searchKeys":["H2DialectMetadata","open class H2DialectMetadata : DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.H2DialectMetadata"]},{"name":"open class InsertBlockingExecutable<Key : Any, S : InsertStatement<Key>>(val statement: S) : BlockingExecutable<Int, S> ","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-blocking-executable/index.html","searchKeys":["InsertBlockingExecutable","open class InsertBlockingExecutable<Key : Any, S : InsertStatement<Key>>(val statement: S) : BlockingExecutable<Int, S> ","org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable"]},{"name":"open class InsertSelectBlockingExecutable(val statement: InsertSelectStatement) : BlockingExecutable<Int, InsertSelectStatement> ","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-select-blocking-executable/index.html","searchKeys":["InsertSelectBlockingExecutable","open class InsertSelectBlockingExecutable(val statement: InsertSelectStatement) : BlockingExecutable<Int, InsertSelectStatement> ","org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable"]},{"name":"open class JdbcTransaction(transactionImpl: JdbcTransactionInterface) : Transaction, JdbcTransactionInterface","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/index.html","searchKeys":["JdbcTransaction","open class JdbcTransaction(transactionImpl: JdbcTransactionInterface) : Transaction, JdbcTransactionInterface","org.jetbrains.exposed.v1.jdbc.JdbcTransaction"]},{"name":"open class MariaDBDialectMetadata : MysqlDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.MariaDBDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-maria-d-b-dialect-metadata/index.html","searchKeys":["MariaDBDialectMetadata","open class MariaDBDialectMetadata : MysqlDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.MariaDBDialectMetadata"]},{"name":"open class MergeBlockingExecutable<S : MergeStatement>(val statement: S) : BlockingExecutable<Int, S> ","description":"org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-merge-blocking-executable/index.html","searchKeys":["MergeBlockingExecutable","open class MergeBlockingExecutable<S : MergeStatement>(val statement: S) : BlockingExecutable<Int, S> ","org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable"]},{"name":"open class MysqlDialectMetadata : DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.MysqlDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-mysql-dialect-metadata/index.html","searchKeys":["MysqlDialectMetadata","open class MysqlDialectMetadata : DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.MysqlDialectMetadata"]},{"name":"open class OracleDialectMetadata : DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.OracleDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-oracle-dialect-metadata/index.html","searchKeys":["OracleDialectMetadata","open class OracleDialectMetadata : DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.OracleDialectMetadata"]},{"name":"open class PostgreSQLDialectMetadata : DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-postgre-s-q-l-dialect-metadata/index.html","searchKeys":["PostgreSQLDialectMetadata","open class PostgreSQLDialectMetadata : DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLDialectMetadata"]},{"name":"open class Query(var set: FieldSet, where: Op<Boolean>?) : AbstractQuery<Query> , BlockingExecutable<ResultApi, Query> , SizedIterable<ResultRow> ","description":"org.jetbrains.exposed.v1.jdbc.Query","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/index.html","searchKeys":["Query","open class Query(var set: FieldSet, where: Op<Boolean>?) : AbstractQuery<Query> , BlockingExecutable<ResultApi, Query> , SizedIterable<ResultRow> ","org.jetbrains.exposed.v1.jdbc.Query"]},{"name":"open class ReturningBlockingExecutable(val statement: ReturningStatement) : BlockingExecutable<ResultApi, ReturningStatement> , Iterable<ResultRow> ","description":"org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-returning-blocking-executable/index.html","searchKeys":["ReturningBlockingExecutable","open class ReturningBlockingExecutable(val statement: ReturningStatement) : BlockingExecutable<ResultApi, ReturningStatement> , Iterable<ResultRow> ","org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable"]},{"name":"open class SQLServerBatchInsertBlockingExecutable(val statement: SQLServerBatchInsertStatement) : BatchInsertBlockingExecutable<SQLServerBatchInsertStatement> ","description":"org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-s-q-l-server-batch-insert-blocking-executable/index.html","searchKeys":["SQLServerBatchInsertBlockingExecutable","open class SQLServerBatchInsertBlockingExecutable(val statement: SQLServerBatchInsertStatement) : BatchInsertBlockingExecutable<SQLServerBatchInsertStatement> ","org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable"]},{"name":"open class SQLServerDialectMetadata : DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.SQLServerDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-s-q-l-server-dialect-metadata/index.html","searchKeys":["SQLServerDialectMetadata","open class SQLServerDialectMetadata : DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.SQLServerDialectMetadata"]},{"name":"open class SQLiteDialectMetadata : DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.SQLiteDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-s-q-lite-dialect-metadata/index.html","searchKeys":["SQLiteDialectMetadata","open class SQLiteDialectMetadata : DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.SQLiteDialectMetadata"]},{"name":"open class UpdateBlockingExecutable(val statement: UpdateStatement) : BlockingExecutable<Int, UpdateStatement> ","description":"org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-update-blocking-executable/index.html","searchKeys":["UpdateBlockingExecutable","open class UpdateBlockingExecutable(val statement: UpdateStatement) : BlockingExecutable<Int, UpdateStatement> ","org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable"]},{"name":"open class UpsertBlockingExecutable<Key : Any>(val statement: UpsertStatement<Key>) : InsertBlockingExecutable<Key, UpsertStatement<Key>> ","description":"org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-upsert-blocking-executable/index.html","searchKeys":["UpsertBlockingExecutable","open class UpsertBlockingExecutable<Key : Any>(val statement: UpsertStatement<Key>) : InsertBlockingExecutable<Key, UpsertStatement<Key>> ","org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable"]},{"name":"open fun execute(transaction: JdbcTransaction): T?","description":"org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.execute","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-blocking-executable/execute.html","searchKeys":["execute","open fun execute(transaction: JdbcTransaction): T?","org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.execute"]},{"name":"open fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingIndices","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/existing-indices.html","searchKeys":["existingIndices","open fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.existingIndices"]},{"name":"open fun forUpdate(option: ForUpdateOption = ForUpdateOption.ForUpdate): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.forUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/for-update.html","searchKeys":["forUpdate","open fun forUpdate(option: ForUpdateOption = ForUpdateOption.ForUpdate): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedIterable.forUpdate"]},{"name":"open fun notForUpdate(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedIterable.notForUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-iterable/not-for-update.html","searchKeys":["notForUpdate","open fun notForUpdate(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedIterable.notForUpdate"]},{"name":"open fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.prepared","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-blocking-executable/prepared.html","searchKeys":["prepared","open fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.prepared"]},{"name":"open fun supportsLimitWithUpdateOrDelete(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.supportsLimitWithUpdateOrDelete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-database-dialect-metadata/supports-limit-with-update-or-delete.html","searchKeys":["supportsLimitWithUpdateOrDelete","open fun supportsLimitWithUpdateOrDelete(): Boolean","org.jetbrains.exposed.v1.jdbc.vendors.DatabaseDialectMetadata.supportsLimitWithUpdateOrDelete"]},{"name":"open operator override fun hasNext(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.hasNext","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.hasNext"]},{"name":"open operator override fun invoke(connection: Connection): JdbcConnectionImpl","description":"org.jetbrains.exposed.v1.jdbc.ExposedConnectionImpl.invoke","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-exposed-connection-impl/invoke.html","searchKeys":["invoke","open operator override fun invoke(connection: Connection): JdbcConnectionImpl","org.jetbrains.exposed.v1.jdbc.ExposedConnectionImpl.invoke"]},{"name":"open operator override fun iterator(): Iterator<ExplainResultRow>","description":"org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-explain-blocking-executable/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ExplainResultRow>","org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.iterator"]},{"name":"open operator override fun iterator(): Iterator<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.Query.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ResultRow>","org.jetbrains.exposed.v1.jdbc.Query.iterator"]},{"name":"open operator override fun iterator(): Iterator<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ResultRow>","org.jetbrains.exposed.v1.jdbc.SetOperation.iterator"]},{"name":"open operator override fun iterator(): Iterator<ResultRow>","description":"org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-returning-blocking-executable/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ResultRow>","org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.iterator","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","org.jetbrains.exposed.v1.jdbc.SizedCollection.iterator"]},{"name":"open operator override fun next(): T","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.next","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/next.html","searchKeys":["next","open operator override fun next(): T","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.next"]},{"name":"open operator override fun set(index: Int, value: Any)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.set","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Any)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.set"]},{"name":"open override fun <T> getObject(index: Int, type: Class<T>): T?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/get-object.html","searchKeys":["getObject","open override fun <T> getObject(index: Int, type: Class<T>): T?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject"]},{"name":"open override fun <T> getObject(name: String, type: Class<T>): T?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/get-object.html","searchKeys":["getObject","open override fun <T> getObject(name: String, type: Class<T>): T?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject"]},{"name":"open override fun <T> mapRows(block: (RowApi) -> T?): Flow<T?>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.mapRows","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/map-rows.html","searchKeys":["mapRows","open override fun <T> mapRows(block: (RowApi) -> T?): Flow<T?>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.mapRows"]},{"name":"open override fun <T> metadata(body: JdbcExposedDatabaseMetadata.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.metadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/metadata.html","searchKeys":["metadata","open override fun <T> metadata(body: JdbcExposedDatabaseMetadata.() -> T): T","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.metadata"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-update-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","description":"org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-delete-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","description":"org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-update-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int","org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int?","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-select-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int?","org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int?","description":"org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-merge-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): Int?","org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult","description":"org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-explain-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult","org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult","org.jetbrains.exposed.v1.jdbc.SetOperation.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult","description":"org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-returning-blocking-executable/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult","org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.executeInternal"]},{"name":"open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult?","description":"org.jetbrains.exposed.v1.jdbc.Query.executeInternal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/execute-internal.html","searchKeys":["executeInternal","open override fun JdbcPreparedStatementApi.executeInternal(transaction: JdbcTransaction): JdbcResult?","org.jetbrains.exposed.v1.jdbc.Query.executeInternal"]},{"name":"open override fun addBatch()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.addBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/add-batch.html","searchKeys":["addBatch","open override fun addBatch()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.addBatch"]},{"name":"open override fun bindTransactionToThread(transaction: Transaction?)","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.bindTransactionToThread","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/bind-transaction-to-thread.html","searchKeys":["bindTransactionToThread","open override fun bindTransactionToThread(transaction: Transaction?)","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.bindTransactionToThread"]},{"name":"open override fun bindTransactionToThread(transaction: Transaction?)","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.bindTransactionToThread","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/bind-transaction-to-thread.html","searchKeys":["bindTransactionToThread","open override fun bindTransactionToThread(transaction: Transaction?)","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.bindTransactionToThread"]},{"name":"open override fun cancel()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.cancel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/cancel.html","searchKeys":["cancel","open override fun cancel()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.cancel"]},{"name":"open override fun cleanCache()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.cleanCache","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/clean-cache.html","searchKeys":["cleanCache","open override fun cleanCache()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.cleanCache"]},{"name":"open override fun close()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.close","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/close.html","searchKeys":["close","open override fun close()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.close"]},{"name":"open override fun close()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.close","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/close.html","searchKeys":["close","open override fun close()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.close"]},{"name":"open override fun closeIfPossible()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.closeIfPossible","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/close-if-possible.html","searchKeys":["closeIfPossible","open override fun closeIfPossible()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.closeIfPossible"]},{"name":"open override fun columns(vararg tables: Table): Map<Table, List<ColumnMetadata>>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.columns","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/columns.html","searchKeys":["columns","open override fun columns(vararg tables: Table): Map<Table, List<ColumnMetadata>>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.columns"]},{"name":"open override fun commit()","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.commit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/commit.html","searchKeys":["commit","open override fun commit()","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.commit"]},{"name":"open override fun commit()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.commit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/commit.html","searchKeys":["commit","open override fun commit()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.commit"]},{"name":"open override fun copy(): Intersect","description":"org.jetbrains.exposed.v1.jdbc.Except.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-except/copy.html","searchKeys":["copy","open override fun copy(): Intersect","org.jetbrains.exposed.v1.jdbc.Except.copy"]},{"name":"open override fun copy(): Intersect","description":"org.jetbrains.exposed.v1.jdbc.Intersect.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-intersect/copy.html","searchKeys":["copy","open override fun copy(): Intersect","org.jetbrains.exposed.v1.jdbc.Intersect.copy"]},{"name":"open override fun copy(): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/copy.html","searchKeys":["copy","open override fun copy(): Query","org.jetbrains.exposed.v1.jdbc.Query.copy"]},{"name":"open override fun copy(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/copy.html","searchKeys":["copy","open override fun copy(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.copy"]},{"name":"open override fun copy(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/copy.html","searchKeys":["copy","open override fun copy(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.copy"]},{"name":"open override fun copy(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/copy.html","searchKeys":["copy","open override fun copy(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedCollection.copy"]},{"name":"open override fun copy(): Union","description":"org.jetbrains.exposed.v1.jdbc.Union.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union/copy.html","searchKeys":["copy","open override fun copy(): Union","org.jetbrains.exposed.v1.jdbc.Union.copy"]},{"name":"open override fun copy(): UnionAll","description":"org.jetbrains.exposed.v1.jdbc.UnionAll.copy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union-all/copy.html","searchKeys":["copy","open override fun copy(): UnionAll","org.jetbrains.exposed.v1.jdbc.UnionAll.copy"]},{"name":"open override fun count(): Long","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.count","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/count.html","searchKeys":["count","open override fun count(): Long","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.count"]},{"name":"open override fun count(): Long","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.count","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/count.html","searchKeys":["count","open override fun count(): Long","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.count"]},{"name":"open override fun count(): Long","description":"org.jetbrains.exposed.v1.jdbc.Query.count","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/count.html","searchKeys":["count","open override fun count(): Long","org.jetbrains.exposed.v1.jdbc.Query.count"]},{"name":"open override fun count(): Long","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.count","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/count.html","searchKeys":["count","open override fun count(): Long","org.jetbrains.exposed.v1.jdbc.SetOperation.count"]},{"name":"open override fun count(): Long","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.count","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/count.html","searchKeys":["count","open override fun count(): Long","org.jetbrains.exposed.v1.jdbc.SizedCollection.count"]},{"name":"open override fun currentOrNull(): JdbcTransaction?","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.currentOrNull","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/current-or-null.html","searchKeys":["currentOrNull","open override fun currentOrNull(): JdbcTransaction?","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.currentOrNull"]},{"name":"open override fun currentOrNull(): JdbcTransaction?","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.currentOrNull","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/current-or-null.html","searchKeys":["currentOrNull","open override fun currentOrNull(): JdbcTransaction?","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.currentOrNull"]},{"name":"open override fun empty(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.empty","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/empty.html","searchKeys":["empty","open override fun empty(): Boolean","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.empty"]},{"name":"open override fun empty(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.empty","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/empty.html","searchKeys":["empty","open override fun empty(): Boolean","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.empty"]},{"name":"open override fun empty(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.Query.empty","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/empty.html","searchKeys":["empty","open override fun empty(): Boolean","org.jetbrains.exposed.v1.jdbc.Query.empty"]},{"name":"open override fun empty(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.empty","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/empty.html","searchKeys":["empty","open override fun empty(): Boolean","org.jetbrains.exposed.v1.jdbc.SetOperation.empty"]},{"name":"open override fun empty(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.empty","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/empty.html","searchKeys":["empty","open override fun empty(): Boolean","org.jetbrains.exposed.v1.jdbc.SizedCollection.empty"]},{"name":"open override fun executeBatch(): List<Int>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/execute-batch.html","searchKeys":["executeBatch","open override fun executeBatch(): List<Int>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeBatch"]},{"name":"open override fun executeInBatch(sqls: List<String>)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.executeInBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/execute-in-batch.html","searchKeys":["executeInBatch","open override fun executeInBatch(sqls: List<String>)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.executeInBatch"]},{"name":"open override fun executeMultiple(): List<StatementResult>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeMultiple","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/execute-multiple.html","searchKeys":["executeMultiple","open override fun executeMultiple(): List<StatementResult>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeMultiple"]},{"name":"open override fun executeQuery(): JdbcResult","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeQuery","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/execute-query.html","searchKeys":["executeQuery","open override fun executeQuery(): JdbcResult","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeQuery"]},{"name":"open override fun executeUpdate(): Int","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/execute-update.html","searchKeys":["executeUpdate","open override fun executeUpdate(): Int","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.executeUpdate"]},{"name":"open override fun existingCheckConstraints(vararg tables: Table): Map<Table, List<CheckConstraint>>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingCheckConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/existing-check-constraints.html","searchKeys":["existingCheckConstraints","open override fun existingCheckConstraints(vararg tables: Table): Map<Table, List<CheckConstraint>>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingCheckConstraints"]},{"name":"open override fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingIndices","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/existing-indices.html","searchKeys":["existingIndices","open override fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingIndices"]},{"name":"open override fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","description":"org.jetbrains.exposed.v1.jdbc.vendors.H2DialectMetadata.existingIndices","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-h2-dialect-metadata/existing-indices.html","searchKeys":["existingIndices","open override fun existingIndices(vararg tables: Table): Map<Table, List<Index>>","org.jetbrains.exposed.v1.jdbc.vendors.H2DialectMetadata.existingIndices"]},{"name":"open override fun existingPrimaryKeys(vararg tables: Table): Map<Table, PrimaryKeyMetadata?>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingPrimaryKeys","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/existing-primary-keys.html","searchKeys":["existingPrimaryKeys","open override fun existingPrimaryKeys(vararg tables: Table): Map<Table, PrimaryKeyMetadata?>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingPrimaryKeys"]},{"name":"open override fun existingSequences(vararg tables: Table): Map<Table, List<Sequence>>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingSequences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/existing-sequences.html","searchKeys":["existingSequences","open override fun existingSequences(vararg tables: Table): Map<Table, List<Sequence>>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.existingSequences"]},{"name":"open override fun forUpdate(option: ForUpdateOption): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.forUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/for-update.html","searchKeys":["forUpdate","open override fun forUpdate(option: ForUpdateOption): Query","org.jetbrains.exposed.v1.jdbc.Query.forUpdate"]},{"name":"open override fun forUpdate(option: ForUpdateOption): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.forUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/for-update.html","searchKeys":["forUpdate","open override fun forUpdate(option: ForUpdateOption): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.forUpdate"]},{"name":"open override fun getObject(index: Int): Any?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/get-object.html","searchKeys":["getObject","open override fun getObject(index: Int): Any?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject"]},{"name":"open override fun getObject(name: String): Any?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/get-object.html","searchKeys":["getObject","open override fun getObject(name: String): Any?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.getObject"]},{"name":"open override fun isVersionCovers(majorVersion: Int, minorVersion: Int): Boolean","description":"org.jetbrains.exposed.v1.jdbc.Database.isVersionCovers","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/is-version-covers.html","searchKeys":["isVersionCovers","open override fun isVersionCovers(majorVersion: Int, minorVersion: Int): Boolean","org.jetbrains.exposed.v1.jdbc.Database.isVersionCovers"]},{"name":"open override fun isVersionCovers(version: BigDecimal): Boolean","description":"org.jetbrains.exposed.v1.jdbc.Database.isVersionCovers","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/is-version-covers.html","searchKeys":["isVersionCovers","open override fun isVersionCovers(version: BigDecimal): Boolean","org.jetbrains.exposed.v1.jdbc.Database.isVersionCovers"]},{"name":"open override fun limit(count: Int): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.limit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/limit.html","searchKeys":["limit","open override fun limit(count: Int): Query","org.jetbrains.exposed.v1.jdbc.Query.limit"]},{"name":"open override fun limit(count: Int): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.limit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/limit.html","searchKeys":["limit","open override fun limit(count: Int): SetOperation","org.jetbrains.exposed.v1.jdbc.SetOperation.limit"]},{"name":"open override fun limit(count: Int): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.limit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/limit.html","searchKeys":["limit","open override fun limit(count: Int): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.limit"]},{"name":"open override fun limit(count: Int): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.limit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/limit.html","searchKeys":["limit","open override fun limit(count: Int): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.limit"]},{"name":"open override fun limit(count: Int): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.limit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/limit.html","searchKeys":["limit","open override fun limit(count: Int): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedCollection.limit"]},{"name":"open override fun notForUpdate(): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.notForUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/not-for-update.html","searchKeys":["notForUpdate","open override fun notForUpdate(): Query","org.jetbrains.exposed.v1.jdbc.Query.notForUpdate"]},{"name":"open override fun notForUpdate(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.notForUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/not-for-update.html","searchKeys":["notForUpdate","open override fun notForUpdate(): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.notForUpdate"]},{"name":"open override fun offset(start: Long): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.offset","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/offset.html","searchKeys":["offset","open override fun offset(start: Long): Query","org.jetbrains.exposed.v1.jdbc.Query.offset"]},{"name":"open override fun offset(start: Long): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.offset","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/offset.html","searchKeys":["offset","open override fun offset(start: Long): SetOperation","org.jetbrains.exposed.v1.jdbc.SetOperation.offset"]},{"name":"open override fun offset(start: Long): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.offset","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/offset.html","searchKeys":["offset","open override fun offset(start: Long): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.offset"]},{"name":"open override fun offset(start: Long): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.offset","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/offset.html","searchKeys":["offset","open override fun offset(start: Long): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.offset"]},{"name":"open override fun offset(start: Long): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.offset","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/offset.html","searchKeys":["offset","open override fun offset(start: Long): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedCollection.offset"]},{"name":"open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): Query","description":"org.jetbrains.exposed.v1.jdbc.Query.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/order-by.html","searchKeys":["orderBy","open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): Query","org.jetbrains.exposed.v1.jdbc.Query.orderBy"]},{"name":"open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/order-by.html","searchKeys":["orderBy","open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SetOperation","org.jetbrains.exposed.v1.jdbc.SetOperation.orderBy"]},{"name":"open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-empty-sized-iterable/order-by.html","searchKeys":["orderBy","open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.EmptySizedIterable.orderBy"]},{"name":"open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/order-by.html","searchKeys":["orderBy","open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.orderBy"]},{"name":"open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.orderBy","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/order-by.html","searchKeys":["orderBy","open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<T>","org.jetbrains.exposed.v1.jdbc.SizedCollection.orderBy"]},{"name":"open override fun prepareSQL(builder: QueryBuilder): String","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.prepareSQL","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(builder: QueryBuilder): String","org.jetbrains.exposed.v1.jdbc.SetOperation.prepareSQL"]},{"name":"open override fun prepareStatement(sql: String, columns: Array<String>): JdbcPreparedStatementImpl","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.prepareStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/prepare-statement.html","searchKeys":["prepareStatement","open override fun prepareStatement(sql: String, columns: Array<String>): JdbcPreparedStatementImpl","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.prepareStatement"]},{"name":"open override fun prepareStatement(sql: String, returnKeys: Boolean): JdbcPreparedStatementImpl","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.prepareStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/prepare-statement.html","searchKeys":["prepareStatement","open override fun prepareStatement(sql: String, returnKeys: Boolean): JdbcPreparedStatementImpl","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.prepareStatement"]},{"name":"open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.prepared","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-insert-blocking-executable/prepared.html","searchKeys":["prepared","open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.prepared"]},{"name":"open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable.prepared","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-upsert-blocking-executable/prepared.html","searchKeys":["prepared","open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable.prepared"]},{"name":"open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.prepared","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-blocking-executable/prepared.html","searchKeys":["prepared","open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.prepared"]},{"name":"open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","description":"org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable.prepared","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-upsert-blocking-executable/prepared.html","searchKeys":["prepared","open override fun prepared(transaction: JdbcTransaction, sql: String): JdbcPreparedStatementApi","org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable.prepared"]},{"name":"open override fun releaseSavepoint(savepoint: ExposedSavepoint)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.releaseSavepoint","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/release-savepoint.html","searchKeys":["releaseSavepoint","open override fun releaseSavepoint(savepoint: ExposedSavepoint)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.releaseSavepoint"]},{"name":"open override fun resetCurrentScheme()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.resetCurrentScheme","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/reset-current-scheme.html","searchKeys":["resetCurrentScheme","open override fun resetCurrentScheme()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.resetCurrentScheme"]},{"name":"open override fun resolveReferenceOption(refOption: String): ReferenceOption?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.resolveReferenceOption","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/resolve-reference-option.html","searchKeys":["resolveReferenceOption","open override fun resolveReferenceOption(refOption: String): ReferenceOption?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.resolveReferenceOption"]},{"name":"open override fun rollback()","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.rollback","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/rollback.html","searchKeys":["rollback","open override fun rollback()","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.rollback"]},{"name":"open override fun rollback()","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.rollback","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/rollback.html","searchKeys":["rollback","open override fun rollback()","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.rollback"]},{"name":"open override fun rollback(savepoint: ExposedSavepoint)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.rollback","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/rollback.html","searchKeys":["rollback","open override fun rollback(savepoint: ExposedSavepoint)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.rollback"]},{"name":"open override fun sequences(): List<String>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.sequences","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/sequences.html","searchKeys":["sequences","open override fun sequences(): List<String>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.sequences"]},{"name":"open override fun setArray(index: Int, type: ArrayColumnType<*, *>, array: Array<*>)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.setArray","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/set-array.html","searchKeys":["setArray","open override fun setArray(index: Int, type: ArrayColumnType<*, *>, array: Array<*>)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.setArray"]},{"name":"open override fun setInputStream(index: Int, inputStream: InputStream, setAsBlobObject: Boolean)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.setInputStream","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/set-input-stream.html","searchKeys":["setInputStream","open override fun setInputStream(index: Int, inputStream: InputStream, setAsBlobObject: Boolean)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.setInputStream"]},{"name":"open override fun setNull(index: Int, columnType: IColumnType<*>)","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.setNull","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/set-null.html","searchKeys":["setNull","open override fun setNull(index: Int, columnType: IColumnType<*>)","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.setNull"]},{"name":"open override fun setSavepoint(name: String): ExposedSavepoint","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.setSavepoint","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/set-savepoint.html","searchKeys":["setSavepoint","open override fun setSavepoint(name: String): ExposedSavepoint","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.setSavepoint"]},{"name":"open override fun supportsLimitWithUpdateOrDelete(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsLimitWithUpdateOrDelete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/supports-limit-with-update-or-delete.html","searchKeys":["supportsLimitWithUpdateOrDelete","open override fun supportsLimitWithUpdateOrDelete(): Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsLimitWithUpdateOrDelete"]},{"name":"open override fun supportsLimitWithUpdateOrDelete(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLDialectMetadata.supportsLimitWithUpdateOrDelete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-postgre-s-q-l-dialect-metadata/supports-limit-with-update-or-delete.html","searchKeys":["supportsLimitWithUpdateOrDelete","open override fun supportsLimitWithUpdateOrDelete(): Boolean","org.jetbrains.exposed.v1.jdbc.vendors.PostgreSQLDialectMetadata.supportsLimitWithUpdateOrDelete"]},{"name":"open override fun supportsLimitWithUpdateOrDelete(): Boolean","description":"org.jetbrains.exposed.v1.jdbc.vendors.SQLiteDialectMetadata.supportsLimitWithUpdateOrDelete","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/-s-q-lite-dialect-metadata/supports-limit-with-update-or-delete.html","searchKeys":["supportsLimitWithUpdateOrDelete","open override fun supportsLimitWithUpdateOrDelete(): Boolean","org.jetbrains.exposed.v1.jdbc.vendors.SQLiteDialectMetadata.supportsLimitWithUpdateOrDelete"]},{"name":"open override fun tableConstraints(tables: List<Table>): Map<String, List<ForeignKeyConstraint>>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.tableConstraints","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/table-constraints.html","searchKeys":["tableConstraints","open override fun tableConstraints(tables: List<Table>): Map<String, List<ForeignKeyConstraint>>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.tableConstraints"]},{"name":"open override fun tableNamesByCurrentSchema(tableNamesCache: Map<String, List<String>>?): SchemaMetadata","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.tableNamesByCurrentSchema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/table-names-by-current-schema.html","searchKeys":["tableNamesByCurrentSchema","open override fun tableNamesByCurrentSchema(tableNamesCache: Map<String, List<String>>?): SchemaMetadata","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.tableNamesByCurrentSchema"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.toString","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.toString","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.toString","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.toString"]},{"name":"open override fun withDistinct(value: Boolean): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.Except.withDistinct","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-except/with-distinct.html","searchKeys":["withDistinct","open override fun withDistinct(value: Boolean): SetOperation","org.jetbrains.exposed.v1.jdbc.Except.withDistinct"]},{"name":"open override fun withDistinct(value: Boolean): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.Intersect.withDistinct","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-intersect/with-distinct.html","searchKeys":["withDistinct","open override fun withDistinct(value: Boolean): SetOperation","org.jetbrains.exposed.v1.jdbc.Intersect.withDistinct"]},{"name":"open override fun withDistinct(value: Boolean): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.Union.withDistinct","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union/with-distinct.html","searchKeys":["withDistinct","open override fun withDistinct(value: Boolean): SetOperation","org.jetbrains.exposed.v1.jdbc.Union.withDistinct"]},{"name":"open override fun withDistinct(value: Boolean): SetOperation","description":"org.jetbrains.exposed.v1.jdbc.UnionAll.withDistinct","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-union-all/with-distinct.html","searchKeys":["withDistinct","open override fun withDistinct(value: Boolean): SetOperation","org.jetbrains.exposed.v1.jdbc.UnionAll.withDistinct"]},{"name":"open override val connection: Connection","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.connection","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/connection.html","searchKeys":["connection","open override val connection: Connection","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.connection"]},{"name":"open override val databaseDialectMode: String?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.databaseDialectMode","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/database-dialect-mode.html","searchKeys":["databaseDialectMode","open override val databaseDialectMode: String?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.databaseDialectMode"]},{"name":"open override val databaseDialectName: String","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.databaseDialectName","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/database-dialect-name.html","searchKeys":["databaseDialectName","open override val databaseDialectName: String","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.databaseDialectName"]},{"name":"open override val databaseProductVersion: String","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.databaseProductVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/database-product-version.html","searchKeys":["databaseProductVersion","open override val databaseProductVersion: String","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.databaseProductVersion"]},{"name":"open override val defaultIsolationLevel: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.defaultIsolationLevel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/default-isolation-level.html","searchKeys":["defaultIsolationLevel","open override val defaultIsolationLevel: Int","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.defaultIsolationLevel"]},{"name":"open override val dialect: DatabaseDialect","description":"org.jetbrains.exposed.v1.jdbc.Database.dialect","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/dialect.html","searchKeys":["dialect","open override val dialect: DatabaseDialect","org.jetbrains.exposed.v1.jdbc.Database.dialect"]},{"name":"open override val dialectMode: String?","description":"org.jetbrains.exposed.v1.jdbc.Database.dialectMode","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/dialect-mode.html","searchKeys":["dialectMode","open override val dialectMode: String?","org.jetbrains.exposed.v1.jdbc.Database.dialectMode"]},{"name":"open override val fullVersion: String","description":"org.jetbrains.exposed.v1.jdbc.Database.fullVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/full-version.html","searchKeys":["fullVersion","open override val fullVersion: String","org.jetbrains.exposed.v1.jdbc.Database.fullVersion"]},{"name":"open override val identifierManager: IdentifierManagerApi","description":"org.jetbrains.exposed.v1.jdbc.Database.identifierManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/identifier-manager.html","searchKeys":["identifierManager","open override val identifierManager: IdentifierManagerApi","org.jetbrains.exposed.v1.jdbc.Database.identifierManager"]},{"name":"open override val identifierManager: IdentifierManagerApi","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.identifierManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/identifier-manager.html","searchKeys":["identifierManager","open override val identifierManager: IdentifierManagerApi","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.identifierManager"]},{"name":"open override val isAlwaysBatch: Boolean = false","description":"org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable.isAlwaysBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-s-q-l-server-batch-insert-blocking-executable/is-always-batch.html","searchKeys":["isAlwaysBatch","open override val isAlwaysBatch: Boolean = false","org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable.isAlwaysBatch"]},{"name":"open override val isAlwaysBatch: Boolean = true","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.isAlwaysBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-insert-blocking-executable/is-always-batch.html","searchKeys":["isAlwaysBatch","open override val isAlwaysBatch: Boolean = true","org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.isAlwaysBatch"]},{"name":"open override val isClosed: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.isClosed","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/is-closed.html","searchKeys":["isClosed","open override val isClosed: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.isClosed"]},{"name":"open override val majorVersion: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.majorVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/major-version.html","searchKeys":["majorVersion","open override val majorVersion: Int","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.majorVersion"]},{"name":"open override val minorVersion: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.minorVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/minor-version.html","searchKeys":["minorVersion","open override val minorVersion: Int","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.minorVersion"]},{"name":"open override val operationName: String","description":"org.jetbrains.exposed.v1.jdbc.Except.operationName","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-except/operation-name.html","searchKeys":["operationName","open override val operationName: String","org.jetbrains.exposed.v1.jdbc.Except.operationName"]},{"name":"open override val resultSet: JdbcResult?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.resultSet","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/result-set.html","searchKeys":["resultSet","open override val resultSet: JdbcResult?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.resultSet"]},{"name":"open override val schemaNames: List<String>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.schemaNames","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/schema-names.html","searchKeys":["schemaNames","open override val schemaNames: List<String>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.schemaNames"]},{"name":"open override val set: FieldSet","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.set","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/set.html","searchKeys":["set","open override val set: FieldSet","org.jetbrains.exposed.v1.jdbc.SetOperation.set"]},{"name":"open override val statement: BatchUpdateStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-update-blocking-executable/statement.html","searchKeys":["statement","open override val statement: BatchUpdateStatement","org.jetbrains.exposed.v1.jdbc.statements.BatchUpdateBlockingExecutable.statement"]},{"name":"open override val statement: BatchUpsertStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-upsert-blocking-executable/statement.html","searchKeys":["statement","open override val statement: BatchUpsertStatement","org.jetbrains.exposed.v1.jdbc.statements.BatchUpsertBlockingExecutable.statement"]},{"name":"open override val statement: DeleteStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-delete-blocking-executable/statement.html","searchKeys":["statement","open override val statement: DeleteStatement","org.jetbrains.exposed.v1.jdbc.statements.DeleteBlockingExecutable.statement"]},{"name":"open override val statement: ExplainQuery","description":"org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-explain-blocking-executable/statement.html","searchKeys":["statement","open override val statement: ExplainQuery","org.jetbrains.exposed.v1.jdbc.ExplainBlockingExecutable.statement"]},{"name":"open override val statement: InsertSelectStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-select-blocking-executable/statement.html","searchKeys":["statement","open override val statement: InsertSelectStatement","org.jetbrains.exposed.v1.jdbc.statements.InsertSelectBlockingExecutable.statement"]},{"name":"open override val statement: Query","description":"org.jetbrains.exposed.v1.jdbc.Query.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/statement.html","searchKeys":["statement","open override val statement: Query","org.jetbrains.exposed.v1.jdbc.Query.statement"]},{"name":"open override val statement: ReturningStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-returning-blocking-executable/statement.html","searchKeys":["statement","open override val statement: ReturningStatement","org.jetbrains.exposed.v1.jdbc.statements.ReturningBlockingExecutable.statement"]},{"name":"open override val statement: S","description":"org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-batch-insert-blocking-executable/statement.html","searchKeys":["statement","open override val statement: S","org.jetbrains.exposed.v1.jdbc.statements.BatchInsertBlockingExecutable.statement"]},{"name":"open override val statement: S","description":"org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-insert-blocking-executable/statement.html","searchKeys":["statement","open override val statement: S","org.jetbrains.exposed.v1.jdbc.statements.InsertBlockingExecutable.statement"]},{"name":"open override val statement: S","description":"org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-merge-blocking-executable/statement.html","searchKeys":["statement","open override val statement: S","org.jetbrains.exposed.v1.jdbc.statements.MergeBlockingExecutable.statement"]},{"name":"open override val statement: SQLServerBatchInsertStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-s-q-l-server-batch-insert-blocking-executable/statement.html","searchKeys":["statement","open override val statement: SQLServerBatchInsertStatement","org.jetbrains.exposed.v1.jdbc.statements.SQLServerBatchInsertBlockingExecutable.statement"]},{"name":"open override val statement: SetOperation","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/statement.html","searchKeys":["statement","open override val statement: SetOperation","org.jetbrains.exposed.v1.jdbc.SetOperation.statement"]},{"name":"open override val statement: UpdateStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-update-blocking-executable/statement.html","searchKeys":["statement","open override val statement: UpdateStatement","org.jetbrains.exposed.v1.jdbc.statements.UpdateBlockingExecutable.statement"]},{"name":"open override val statement: UpsertStatement<Key>","description":"org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-upsert-blocking-executable/statement.html","searchKeys":["statement","open override val statement: UpsertStatement<Key>","org.jetbrains.exposed.v1.jdbc.statements.UpsertBlockingExecutable.statement"]},{"name":"open override val supportsAlterTableWithAddColumn: Boolean","description":"org.jetbrains.exposed.v1.jdbc.Database.supportsAlterTableWithAddColumn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/supports-alter-table-with-add-column.html","searchKeys":["supportsAlterTableWithAddColumn","open override val supportsAlterTableWithAddColumn: Boolean","org.jetbrains.exposed.v1.jdbc.Database.supportsAlterTableWithAddColumn"]},{"name":"open override val supportsAlterTableWithAddColumn: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsAlterTableWithAddColumn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/supports-alter-table-with-add-column.html","searchKeys":["supportsAlterTableWithAddColumn","open override val supportsAlterTableWithAddColumn: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsAlterTableWithAddColumn"]},{"name":"open override val supportsAlterTableWithDropColumn: Boolean","description":"org.jetbrains.exposed.v1.jdbc.Database.supportsAlterTableWithDropColumn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/supports-alter-table-with-drop-column.html","searchKeys":["supportsAlterTableWithDropColumn","open override val supportsAlterTableWithDropColumn: Boolean","org.jetbrains.exposed.v1.jdbc.Database.supportsAlterTableWithDropColumn"]},{"name":"open override val supportsAlterTableWithDropColumn: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsAlterTableWithDropColumn","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/supports-alter-table-with-drop-column.html","searchKeys":["supportsAlterTableWithDropColumn","open override val supportsAlterTableWithDropColumn: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsAlterTableWithDropColumn"]},{"name":"open override val supportsMultipleResultSets: Boolean","description":"org.jetbrains.exposed.v1.jdbc.Database.supportsMultipleResultSets","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/supports-multiple-result-sets.html","searchKeys":["supportsMultipleResultSets","open override val supportsMultipleResultSets: Boolean","org.jetbrains.exposed.v1.jdbc.Database.supportsMultipleResultSets"]},{"name":"open override val supportsMultipleResultSets: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsMultipleResultSets","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/supports-multiple-result-sets.html","searchKeys":["supportsMultipleResultSets","open override val supportsMultipleResultSets: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsMultipleResultSets"]},{"name":"open override val supportsSelectForUpdate: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsSelectForUpdate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/supports-select-for-update.html","searchKeys":["supportsSelectForUpdate","open override val supportsSelectForUpdate: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.supportsSelectForUpdate"]},{"name":"open override val tableNames: Map<String, List<String>>","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.tableNames","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/table-names.html","searchKeys":["tableNames","open override val tableNames: Map<String, List<String>>","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.tableNames"]},{"name":"open override val url: String","description":"org.jetbrains.exposed.v1.jdbc.Database.url","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/url.html","searchKeys":["url","open override val url: String","org.jetbrains.exposed.v1.jdbc.Database.url"]},{"name":"open override val url: String","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.url","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/url.html","searchKeys":["url","open override val url: String","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.url"]},{"name":"open override val vendor: String","description":"org.jetbrains.exposed.v1.jdbc.Database.vendor","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/vendor.html","searchKeys":["vendor","open override val vendor: String","org.jetbrains.exposed.v1.jdbc.Database.vendor"]},{"name":"open override val version: BigDecimal","description":"org.jetbrains.exposed.v1.jdbc.Database.version","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/version.html","searchKeys":["version","open override val version: BigDecimal","org.jetbrains.exposed.v1.jdbc.Database.version"]},{"name":"open override val version: BigDecimal","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.version","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/version.html","searchKeys":["version","open override val version: BigDecimal","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.version"]},{"name":"open override var autoCommit: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.autoCommit","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/auto-commit.html","searchKeys":["autoCommit","open override var autoCommit: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.autoCommit"]},{"name":"open override var catalog: String","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.catalog","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/catalog.html","searchKeys":["catalog","open override var catalog: String","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.catalog"]},{"name":"open override var defaultMaxAttempts: Int","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultMaxAttempts","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/default-max-attempts.html","searchKeys":["defaultMaxAttempts","open override var defaultMaxAttempts: Int","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultMaxAttempts"]},{"name":"open override var defaultMaxAttempts: Int","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultMaxAttempts","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/default-max-attempts.html","searchKeys":["defaultMaxAttempts","open override var defaultMaxAttempts: Int","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultMaxAttempts"]},{"name":"open override var defaultMaxRetryDelay: Long","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultMaxRetryDelay","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/default-max-retry-delay.html","searchKeys":["defaultMaxRetryDelay","open override var defaultMaxRetryDelay: Long","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultMaxRetryDelay"]},{"name":"open override var defaultMaxRetryDelay: Long","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultMaxRetryDelay","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/default-max-retry-delay.html","searchKeys":["defaultMaxRetryDelay","open override var defaultMaxRetryDelay: Long","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultMaxRetryDelay"]},{"name":"open override var defaultMinRetryDelay: Long","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultMinRetryDelay","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/default-min-retry-delay.html","searchKeys":["defaultMinRetryDelay","open override var defaultMinRetryDelay: Long","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultMinRetryDelay"]},{"name":"open override var defaultMinRetryDelay: Long","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultMinRetryDelay","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/default-min-retry-delay.html","searchKeys":["defaultMinRetryDelay","open override var defaultMinRetryDelay: Long","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultMinRetryDelay"]},{"name":"open override var defaultReadOnly: Boolean","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultReadOnly","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/default-read-only.html","searchKeys":["defaultReadOnly","open override var defaultReadOnly: Boolean","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultReadOnly"]},{"name":"open override var defaultReadOnly: Boolean","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultReadOnly","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/default-read-only.html","searchKeys":["defaultReadOnly","open override var defaultReadOnly: Boolean","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultReadOnly"]},{"name":"open override var fetchSize: Int?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.fetchSize","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/fetch-size.html","searchKeys":["fetchSize","open override var fetchSize: Int?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.fetchSize"]},{"name":"open override var readOnly: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.readOnly","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/read-only.html","searchKeys":["readOnly","open override var readOnly: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.readOnly"]},{"name":"open override var schema: String","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.schema","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/schema.html","searchKeys":["schema","open override var schema: String","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.schema"]},{"name":"open override var set: FieldSet","description":"org.jetbrains.exposed.v1.jdbc.Query.set","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-query/set.html","searchKeys":["set","open override var set: FieldSet","org.jetbrains.exposed.v1.jdbc.Query.set"]},{"name":"open override var timeout: Int?","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.timeout","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/timeout.html","searchKeys":["timeout","open override var timeout: Int?","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.timeout"]},{"name":"open override var transactionIsolation: Int","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.transactionIsolation","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-connection-impl/transaction-isolation.html","searchKeys":["transactionIsolation","open override var transactionIsolation: Int","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcConnectionImpl.transactionIsolation"]},{"name":"open val isAlwaysBatch: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.isAlwaysBatch","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements/-blocking-executable/is-always-batch.html","searchKeys":["isAlwaysBatch","open val isAlwaysBatch: Boolean","org.jetbrains.exposed.v1.jdbc.statements.BlockingExecutable.isAlwaysBatch"]},{"name":"open val operationName: String","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.operationName","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/operation-name.html","searchKeys":["operationName","open val operationName: String","org.jetbrains.exposed.v1.jdbc.SetOperation.operationName"]},{"name":"override val db: Database","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.db","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/db.html","searchKeys":["db","override val db: Database","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.db"]},{"name":"sealed class SetOperation : AbstractQuery<SetOperation> , BlockingExecutable<ResultApi, SetOperation> , SizedIterable<ResultRow> ","description":"org.jetbrains.exposed.v1.jdbc.SetOperation","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/index.html","searchKeys":["SetOperation","sealed class SetOperation : AbstractQuery<SetOperation> , BlockingExecutable<ResultApi, SetOperation> , SizedIterable<ResultRow> ","org.jetbrains.exposed.v1.jdbc.SetOperation"]},{"name":"suspend fun <T> JdbcTransaction.withSuspendTransaction(context: CoroutineContext? = null, statement: suspend JdbcTransaction.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.transactions.experimental.withSuspendTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions.experimental/with-suspend-transaction.html","searchKeys":["withSuspendTransaction","suspend fun <T> JdbcTransaction.withSuspendTransaction(context: CoroutineContext? = null, statement: suspend JdbcTransaction.() -> T): T","org.jetbrains.exposed.v1.jdbc.transactions.experimental.withSuspendTransaction"]},{"name":"suspend fun <T> newSuspendedTransaction(context: CoroutineContext? = null, db: Database? = null, transactionIsolation: Int? = null, readOnly: Boolean? = null, statement: suspend JdbcTransaction.() -> T): T","description":"org.jetbrains.exposed.v1.jdbc.transactions.experimental.newSuspendedTransaction","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions.experimental/new-suspended-transaction.html","searchKeys":["newSuspendedTransaction","suspend fun <T> newSuspendedTransaction(context: CoroutineContext? = null, db: Database? = null, transactionIsolation: Int? = null, readOnly: Boolean? = null, statement: suspend JdbcTransaction.() -> T): T","org.jetbrains.exposed.v1.jdbc.transactions.experimental.newSuspendedTransaction"]},{"name":"suspend fun <T> suspendedTransactionAsync(context: CoroutineContext? = null, db: Database? = null, transactionIsolation: Int? = null, readOnly: Boolean? = null, statement: suspend JdbcTransaction.() -> T): Deferred<T>","description":"org.jetbrains.exposed.v1.jdbc.transactions.experimental.suspendedTransactionAsync","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions.experimental/suspended-transaction-async.html","searchKeys":["suspendedTransactionAsync","suspend fun <T> suspendedTransactionAsync(context: CoroutineContext? = null, db: Database? = null, transactionIsolation: Int? = null, readOnly: Boolean? = null, statement: suspend JdbcTransaction.() -> T): Deferred<T>","org.jetbrains.exposed.v1.jdbc.transactions.experimental.suspendedTransactionAsync"]},{"name":"val Database.name: String","description":"org.jetbrains.exposed.v1.jdbc.name","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/name.html","searchKeys":["name","val Database.name: String","org.jetbrains.exposed.v1.jdbc.name"]},{"name":"val Database?.transactionManager: TransactionManager","description":"org.jetbrains.exposed.v1.jdbc.transactions.transactionManager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/transaction-manager.html","searchKeys":["transactionManager","val Database?.transactionManager: TransactionManager","org.jetbrains.exposed.v1.jdbc.transactions.transactionManager"]},{"name":"val connector: () -> ExposedConnection<*>","description":"org.jetbrains.exposed.v1.jdbc.Database.connector","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/connector.html","searchKeys":["connector","val connector: () -> ExposedConnection<*>","org.jetbrains.exposed.v1.jdbc.Database.connector"]},{"name":"val currentDialectMetadata: DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.vendors.currentDialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.vendors/current-dialect-metadata.html","searchKeys":["currentDialectMetadata","val currentDialectMetadata: DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.vendors.currentDialectMetadata"]},{"name":"val delegate: Collection<T>","description":"org.jetbrains.exposed.v1.jdbc.SizedCollection.delegate","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-sized-collection/delegate.html","searchKeys":["delegate","val delegate: Collection<T>","org.jetbrains.exposed.v1.jdbc.SizedCollection.delegate"]},{"name":"val dialectMetadata: DatabaseDialectMetadata","description":"org.jetbrains.exposed.v1.jdbc.Database.dialectMetadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/dialect-metadata.html","searchKeys":["dialectMetadata","val dialectMetadata: DatabaseDialectMetadata","org.jetbrains.exposed.v1.jdbc.Database.dialectMetadata"]},{"name":"val firstStatement: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.firstStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/first-statement.html","searchKeys":["firstStatement","val firstStatement: AbstractQuery<*>","org.jetbrains.exposed.v1.jdbc.SetOperation.firstStatement"]},{"name":"val globalInterceptors: ArrayList<GlobalStatementInterceptor>","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.Companion.globalInterceptors","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/-companion/global-interceptors.html","searchKeys":["globalInterceptors","val globalInterceptors: ArrayList<GlobalStatementInterceptor>","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.Companion.globalInterceptors"]},{"name":"val majorVersion: Int","description":"org.jetbrains.exposed.v1.jdbc.Database.majorVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/major-version.html","searchKeys":["majorVersion","val majorVersion: Int","org.jetbrains.exposed.v1.jdbc.Database.majorVersion"]},{"name":"val manager: TransactionManager","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.manager","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/manager.html","searchKeys":["manager","val manager: TransactionManager","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.manager"]},{"name":"val metadata: DatabaseMetaData","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.metadata","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-database-metadata-impl/metadata.html","searchKeys":["metadata","val metadata: DatabaseMetaData","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcDatabaseMetadataImpl.metadata"]},{"name":"val minorVersion: Int","description":"org.jetbrains.exposed.v1.jdbc.Database.minorVersion","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-database/minor-version.html","searchKeys":["minorVersion","val minorVersion: Int","org.jetbrains.exposed.v1.jdbc.Database.minorVersion"]},{"name":"val result: ResultSet","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.result","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-result/result.html","searchKeys":["result","val result: ResultSet","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcResult.result"]},{"name":"val secondStatement: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.jdbc.SetOperation.secondStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-set-operation/second-statement.html","searchKeys":["secondStatement","val secondStatement: AbstractQuery<*>","org.jetbrains.exposed.v1.jdbc.SetOperation.secondStatement"]},{"name":"val statement: PreparedStatement","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.statement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/statement.html","searchKeys":["statement","val statement: PreparedStatement","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.statement"]},{"name":"val threadLocal: ThreadLocal<JdbcTransaction>","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.threadLocal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/thread-local.html","searchKeys":["threadLocal","val threadLocal: ThreadLocal<JdbcTransaction>","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.threadLocal"]},{"name":"val threadLocal: ThreadLocal<JdbcTransaction>","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.threadLocal","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/thread-local.html","searchKeys":["threadLocal","val threadLocal: ThreadLocal<JdbcTransaction>","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.threadLocal"]},{"name":"val wasGeneratedKeysRequested: Boolean","description":"org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.wasGeneratedKeysRequested","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.statements.jdbc/-jdbc-prepared-statement-impl/was-generated-keys-requested.html","searchKeys":["wasGeneratedKeysRequested","val wasGeneratedKeysRequested: Boolean","org.jetbrains.exposed.v1.jdbc.statements.jdbc.JdbcPreparedStatementImpl.wasGeneratedKeysRequested"]},{"name":"val wrapper: List<T>","description":"org.jetbrains.exposed.v1.jdbc.LazySizedCollection.wrapper","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-lazy-sized-collection/wrapper.html","searchKeys":["wrapper","val wrapper: List<T>","org.jetbrains.exposed.v1.jdbc.LazySizedCollection.wrapper"]},{"name":"var currentStatement: JdbcPreparedStatementApi?","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.currentStatement","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/current-statement.html","searchKeys":["currentStatement","var currentStatement: JdbcPreparedStatementApi?","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.currentStatement"]},{"name":"var defaultDatabase: Database?","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.defaultDatabase","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/-companion/default-database.html","searchKeys":["defaultDatabase","var defaultDatabase: Database?","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.Companion.defaultDatabase"]},{"name":"var defaultIsolationLevel: Int","description":"org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultIsolationLevel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-thread-local-transaction-manager/default-isolation-level.html","searchKeys":["defaultIsolationLevel","var defaultIsolationLevel: Int","org.jetbrains.exposed.v1.jdbc.transactions.ThreadLocalTransactionManager.defaultIsolationLevel"]},{"name":"var defaultIsolationLevel: Int","description":"org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultIsolationLevel","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc.transactions/-transaction-manager/default-isolation-level.html","searchKeys":["defaultIsolationLevel","var defaultIsolationLevel: Int","org.jetbrains.exposed.v1.jdbc.transactions.TransactionManager.defaultIsolationLevel"]},{"name":"var maxAttempts: Int","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.maxAttempts","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/max-attempts.html","searchKeys":["maxAttempts","var maxAttempts: Int","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.maxAttempts"]},{"name":"var maxRetryDelay: Long","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.maxRetryDelay","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/max-retry-delay.html","searchKeys":["maxRetryDelay","var maxRetryDelay: Long","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.maxRetryDelay"]},{"name":"var minRetryDelay: Long","description":"org.jetbrains.exposed.v1.jdbc.JdbcTransaction.minRetryDelay","location":"exposed-jdbc/org.jetbrains.exposed.v1.jdbc/-jdbc-transaction/min-retry-delay.html","searchKeys":["minRetryDelay","var minRetryDelay: Long","org.jetbrains.exposed.v1.jdbc.JdbcTransaction.minRetryDelay"]},{"name":"class CompositeMoneyColumn<T1 : BigDecimal?, T2 : CurrencyUnit?, R : MonetaryAmount?>(val amount: Column<T1>, val currency: Column<T2>, nullable: Boolean = false) : BiCompositeColumn<T1, T2, R> ","description":"org.jetbrains.exposed.v1.money.CompositeMoneyColumn","location":"exposed-money/org.jetbrains.exposed.v1.money/-composite-money-column/index.html","searchKeys":["CompositeMoneyColumn","class CompositeMoneyColumn<T1 : BigDecimal?, T2 : CurrencyUnit?, R : MonetaryAmount?>(val amount: Column<T1>, val currency: Column<T2>, nullable: Boolean = false) : BiCompositeColumn<T1, T2, R> ","org.jetbrains.exposed.v1.money.CompositeMoneyColumn"]},{"name":"class CurrencyColumnType : ColumnType<CurrencyUnit> ","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/index.html","searchKeys":["CurrencyColumnType","class CurrencyColumnType : ColumnType<CurrencyUnit> ","org.jetbrains.exposed.v1.money.CurrencyColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.CurrencyColumnType","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/-currency-column-type.html","searchKeys":["CurrencyColumnType","constructor()","org.jetbrains.exposed.v1.money.CurrencyColumnType.CurrencyColumnType"]},{"name":"constructor(amount: Column<T1>, currency: Column<T2>, nullable: Boolean = false)","description":"org.jetbrains.exposed.v1.money.CompositeMoneyColumn.CompositeMoneyColumn","location":"exposed-money/org.jetbrains.exposed.v1.money/-composite-money-column/-composite-money-column.html","searchKeys":["CompositeMoneyColumn","constructor(amount: Column<T1>, currency: Column<T2>, nullable: Boolean = false)","org.jetbrains.exposed.v1.money.CompositeMoneyColumn.CompositeMoneyColumn"]},{"name":"fun <T1 : BigDecimal, T2 : CurrencyUnit, R : MonetaryAmount> CompositeMoneyColumn<T1, T2, R>.nullable(): CompositeMoneyColumn<T1?, T2?, R?>","description":"org.jetbrains.exposed.v1.money.nullable","location":"exposed-money/org.jetbrains.exposed.v1.money/nullable.html","searchKeys":["nullable","fun <T1 : BigDecimal, T2 : CurrencyUnit, R : MonetaryAmount> CompositeMoneyColumn<T1, T2, R>.nullable(): CompositeMoneyColumn<T1?, T2?, R?>","org.jetbrains.exposed.v1.money.nullable"]},{"name":"fun CompositeMoneyColumn(table: Table, precision: Int, scale: Int, amountName: String, currencyName: String): CompositeMoneyColumn<BigDecimal, CurrencyUnit, MonetaryAmount>","description":"org.jetbrains.exposed.v1.money.CompositeMoneyColumn","location":"exposed-money/org.jetbrains.exposed.v1.money/-composite-money-column.html","searchKeys":["CompositeMoneyColumn","fun CompositeMoneyColumn(table: Table, precision: Int, scale: Int, amountName: String, currencyName: String): CompositeMoneyColumn<BigDecimal, CurrencyUnit, MonetaryAmount>","org.jetbrains.exposed.v1.money.CompositeMoneyColumn"]},{"name":"fun Table.compositeMoney(amountColumn: Column<BigDecimal>, currencyColumn: Column<CurrencyUnit>): CompositeMoneyColumn<BigDecimal, CurrencyUnit, MonetaryAmount>","description":"org.jetbrains.exposed.v1.money.compositeMoney","location":"exposed-money/org.jetbrains.exposed.v1.money/composite-money.html","searchKeys":["compositeMoney","fun Table.compositeMoney(amountColumn: Column<BigDecimal>, currencyColumn: Column<CurrencyUnit>): CompositeMoneyColumn<BigDecimal, CurrencyUnit, MonetaryAmount>","org.jetbrains.exposed.v1.money.compositeMoney"]},{"name":"fun Table.compositeMoney(amountColumn: Column<BigDecimal?>, currencyColumn: Column<CurrencyUnit?>): CompositeMoneyColumn<BigDecimal?, CurrencyUnit?, MonetaryAmount?>","description":"org.jetbrains.exposed.v1.money.compositeMoney","location":"exposed-money/org.jetbrains.exposed.v1.money/composite-money.html","searchKeys":["compositeMoney","fun Table.compositeMoney(amountColumn: Column<BigDecimal?>, currencyColumn: Column<CurrencyUnit?>): CompositeMoneyColumn<BigDecimal?, CurrencyUnit?, MonetaryAmount?>","org.jetbrains.exposed.v1.money.compositeMoney"]},{"name":"fun Table.compositeMoney(precision: Int, scale: Int, amountName: String, currencyName: String = amountName + \"_C\"): CompositeMoneyColumn<BigDecimal, CurrencyUnit, MonetaryAmount>","description":"org.jetbrains.exposed.v1.money.compositeMoney","location":"exposed-money/org.jetbrains.exposed.v1.money/composite-money.html","searchKeys":["compositeMoney","fun Table.compositeMoney(precision: Int, scale: Int, amountName: String, currencyName: String = amountName + \"_C\"): CompositeMoneyColumn<BigDecimal, CurrencyUnit, MonetaryAmount>","org.jetbrains.exposed.v1.money.compositeMoney"]},{"name":"fun Table.currency(name: String): Column<CurrencyUnit>","description":"org.jetbrains.exposed.v1.money.currency","location":"exposed-money/org.jetbrains.exposed.v1.money/currency.html","searchKeys":["currency","fun Table.currency(name: String): Column<CurrencyUnit>","org.jetbrains.exposed.v1.money.currency"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.Companion","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.money.CurrencyColumnType.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.equals","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.money.CurrencyColumnType.equals"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.hashCode","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.money.CurrencyColumnType.hashCode"]},{"name":"open override fun nonNullValueToString(value: CurrencyUnit): String","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.nonNullValueToString","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: CurrencyUnit): String","org.jetbrains.exposed.v1.money.CurrencyColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: CurrencyUnit): Any","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.notNullValueToDB","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: CurrencyUnit): Any","org.jetbrains.exposed.v1.money.CurrencyColumnType.notNullValueToDB"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.sqlType","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.money.CurrencyColumnType.sqlType"]},{"name":"open override fun validateValueBeforeUpdate(value: CurrencyUnit?)","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.validateValueBeforeUpdate","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open override fun validateValueBeforeUpdate(value: CurrencyUnit?)","org.jetbrains.exposed.v1.money.CurrencyColumnType.validateValueBeforeUpdate"]},{"name":"open override fun valueFromDB(value: Any): CurrencyUnit","description":"org.jetbrains.exposed.v1.money.CurrencyColumnType.valueFromDB","location":"exposed-money/org.jetbrains.exposed.v1.money/-currency-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): CurrencyUnit","org.jetbrains.exposed.v1.money.CurrencyColumnType.valueFromDB"]},{"name":"val amount: Column<T1>","description":"org.jetbrains.exposed.v1.money.CompositeMoneyColumn.amount","location":"exposed-money/org.jetbrains.exposed.v1.money/-composite-money-column/amount.html","searchKeys":["amount","val amount: Column<T1>","org.jetbrains.exposed.v1.money.CompositeMoneyColumn.amount"]},{"name":"val currency: Column<T2>","description":"org.jetbrains.exposed.v1.money.CompositeMoneyColumn.currency","location":"exposed-money/org.jetbrains.exposed.v1.money/-composite-money-column/currency.html","searchKeys":["currency","val currency: Column<T2>","org.jetbrains.exposed.v1.money.CompositeMoneyColumn.currency"]},{"name":"AFTER_SELECT","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.AFTER_SELECT","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/-a-f-t-e-r_-s-e-l-e-c-t/index.html","searchKeys":["AFTER_SELECT","AFTER_SELECT","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.AFTER_SELECT"]},{"name":"ALTER","description":"org.jetbrains.exposed.v1.core.statements.StatementType.ALTER","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-a-l-t-e-r/index.html","searchKeys":["ALTER","ALTER","org.jetbrains.exposed.v1.core.statements.StatementType.ALTER"]},{"name":"ASC","description":"org.jetbrains.exposed.v1.core.SortOrder.ASC","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/-a-s-c/index.html","searchKeys":["ASC","ASC","org.jetbrains.exposed.v1.core.SortOrder.ASC"]},{"name":"ASC_NULLS_FIRST","description":"org.jetbrains.exposed.v1.core.SortOrder.ASC_NULLS_FIRST","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/-a-s-c_-n-u-l-l-s_-f-i-r-s-t/index.html","searchKeys":["ASC_NULLS_FIRST","ASC_NULLS_FIRST","org.jetbrains.exposed.v1.core.SortOrder.ASC_NULLS_FIRST"]},{"name":"ASC_NULLS_LAST","description":"org.jetbrains.exposed.v1.core.SortOrder.ASC_NULLS_LAST","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/-a-s-c_-n-u-l-l-s_-l-a-s-t/index.html","searchKeys":["ASC_NULLS_LAST","ASC_NULLS_LAST","org.jetbrains.exposed.v1.core.SortOrder.ASC_NULLS_LAST"]},{"name":"BACK","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.BACK","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/-b-a-c-k/index.html","searchKeys":["BACK","BACK","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.BACK"]},{"name":"CASCADE","description":"org.jetbrains.exposed.v1.core.ReferenceOption.CASCADE","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/-c-a-s-c-a-d-e/index.html","searchKeys":["CASCADE","CASCADE","org.jetbrains.exposed.v1.core.ReferenceOption.CASCADE"]},{"name":"CREATE","description":"org.jetbrains.exposed.v1.core.statements.StatementType.CREATE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-c-r-e-a-t-e/index.html","searchKeys":["CREATE","CREATE","org.jetbrains.exposed.v1.core.statements.StatementType.CREATE"]},{"name":"CROSS","description":"org.jetbrains.exposed.v1.core.JoinType.CROSS","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/-c-r-o-s-s/index.html","searchKeys":["CROSS","CROSS","org.jetbrains.exposed.v1.core.JoinType.CROSS"]},{"name":"DDL","description":"org.jetbrains.exposed.v1.core.statements.StatementGroup.DDL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-group/-d-d-l/index.html","searchKeys":["DDL","DDL","org.jetbrains.exposed.v1.core.statements.StatementGroup.DDL"]},{"name":"DELETE","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.DELETE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.DELETE"]},{"name":"DELETE","description":"org.jetbrains.exposed.v1.core.statements.StatementType.DELETE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","org.jetbrains.exposed.v1.core.statements.StatementType.DELETE"]},{"name":"DESC","description":"org.jetbrains.exposed.v1.core.SortOrder.DESC","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/-d-e-s-c/index.html","searchKeys":["DESC","DESC","org.jetbrains.exposed.v1.core.SortOrder.DESC"]},{"name":"DESC_NULLS_FIRST","description":"org.jetbrains.exposed.v1.core.SortOrder.DESC_NULLS_FIRST","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/-d-e-s-c_-n-u-l-l-s_-f-i-r-s-t/index.html","searchKeys":["DESC_NULLS_FIRST","DESC_NULLS_FIRST","org.jetbrains.exposed.v1.core.SortOrder.DESC_NULLS_FIRST"]},{"name":"DESC_NULLS_LAST","description":"org.jetbrains.exposed.v1.core.SortOrder.DESC_NULLS_LAST","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/-d-e-s-c_-n-u-l-l-s_-l-a-s-t/index.html","searchKeys":["DESC_NULLS_LAST","DESC_NULLS_LAST","org.jetbrains.exposed.v1.core.SortOrder.DESC_NULLS_LAST"]},{"name":"DML","description":"org.jetbrains.exposed.v1.core.statements.StatementGroup.DML","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-group/-d-m-l/index.html","searchKeys":["DML","DML","org.jetbrains.exposed.v1.core.statements.StatementGroup.DML"]},{"name":"DO_NOTHING","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.DO_NOTHING","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/-d-o_-n-o-t-h-i-n-g/index.html","searchKeys":["DO_NOTHING","DO_NOTHING","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.DO_NOTHING"]},{"name":"DROP","description":"org.jetbrains.exposed.v1.core.statements.StatementType.DROP","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-d-r-o-p/index.html","searchKeys":["DROP","DROP","org.jetbrains.exposed.v1.core.statements.StatementType.DROP"]},{"name":"EXEC","description":"org.jetbrains.exposed.v1.core.statements.StatementType.EXEC","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-e-x-e-c/index.html","searchKeys":["EXEC","EXEC","org.jetbrains.exposed.v1.core.statements.StatementType.EXEC"]},{"name":"FOLLOWING","description":"org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.FOLLOWING","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound-direction/-f-o-l-l-o-w-i-n-g/index.html","searchKeys":["FOLLOWING","FOLLOWING","org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.FOLLOWING"]},{"name":"FRONT","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.FRONT","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/-f-r-o-n-t/index.html","searchKeys":["FRONT","FRONT","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.FRONT"]},{"name":"FULL","description":"org.jetbrains.exposed.v1.core.JoinType.FULL","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/-f-u-l-l/index.html","searchKeys":["FULL","FULL","org.jetbrains.exposed.v1.core.JoinType.FULL"]},{"name":"GRANT","description":"org.jetbrains.exposed.v1.core.statements.StatementType.GRANT","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-g-r-a-n-t/index.html","searchKeys":["GRANT","GRANT","org.jetbrains.exposed.v1.core.statements.StatementType.GRANT"]},{"name":"GROUPS","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit.GROUPS","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/-g-r-o-u-p-s/index.html","searchKeys":["GROUPS","GROUPS","org.jetbrains.exposed.v1.core.WindowFrameUnit.GROUPS"]},{"name":"INNER","description":"org.jetbrains.exposed.v1.core.JoinType.INNER","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/-i-n-n-e-r/index.html","searchKeys":["INNER","INNER","org.jetbrains.exposed.v1.core.JoinType.INNER"]},{"name":"INSERT","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.INSERT","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/-i-n-s-e-r-t/index.html","searchKeys":["INSERT","INSERT","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.INSERT"]},{"name":"INSERT","description":"org.jetbrains.exposed.v1.core.statements.StatementType.INSERT","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-i-n-s-e-r-t/index.html","searchKeys":["INSERT","INSERT","org.jetbrains.exposed.v1.core.statements.StatementType.INSERT"]},{"name":"LEFT","description":"org.jetbrains.exposed.v1.core.JoinType.LEFT","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/-l-e-f-t/index.html","searchKeys":["LEFT","LEFT","org.jetbrains.exposed.v1.core.JoinType.LEFT"]},{"name":"MATCHED","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.MATCHED","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-condition/-m-a-t-c-h-e-d/index.html","searchKeys":["MATCHED","MATCHED","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.MATCHED"]},{"name":"MERGE","description":"org.jetbrains.exposed.v1.core.statements.StatementType.MERGE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-m-e-r-g-e/index.html","searchKeys":["MERGE","MERGE","org.jetbrains.exposed.v1.core.statements.StatementType.MERGE"]},{"name":"MULTI","description":"org.jetbrains.exposed.v1.core.statements.StatementType.MULTI","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-m-u-l-t-i/index.html","searchKeys":["MULTI","MULTI","org.jetbrains.exposed.v1.core.statements.StatementType.MULTI"]},{"name":"MariaDB","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.MariaDB","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/-maria-d-b/index.html","searchKeys":["MariaDB","MariaDB","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.MariaDB"]},{"name":"MySQL","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.MySQL","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/-my-s-q-l/index.html","searchKeys":["MySQL","MySQL","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.MySQL"]},{"name":"NOT_MATCHED","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.NOT_MATCHED","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-condition/-n-o-t_-m-a-t-c-h-e-d/index.html","searchKeys":["NOT_MATCHED","NOT_MATCHED","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.NOT_MATCHED"]},{"name":"NO_ACTION","description":"org.jetbrains.exposed.v1.core.ReferenceOption.NO_ACTION","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/-n-o_-a-c-t-i-o-n/index.html","searchKeys":["NO_ACTION","NO_ACTION","org.jetbrains.exposed.v1.core.ReferenceOption.NO_ACTION"]},{"name":"NO_WAIT","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.NO_WAIT","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/-n-o_-w-a-i-t/index.html","searchKeys":["NO_WAIT","NO_WAIT","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.NO_WAIT"]},{"name":"NO_WAIT","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.NO_WAIT","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/-n-o_-w-a-i-t/index.html","searchKeys":["NO_WAIT","NO_WAIT","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.NO_WAIT"]},{"name":"OTHER","description":"org.jetbrains.exposed.v1.core.statements.StatementType.OTHER","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-o-t-h-e-r/index.html","searchKeys":["OTHER","OTHER","org.jetbrains.exposed.v1.core.statements.StatementType.OTHER"]},{"name":"One","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.One","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-major-version/-one/index.html","searchKeys":["One","One","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.One"]},{"name":"Oracle","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.Oracle","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/-oracle/index.html","searchKeys":["Oracle","Oracle","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.Oracle"]},{"name":"PRAGMA","description":"org.jetbrains.exposed.v1.core.statements.StatementType.PRAGMA","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-p-r-a-g-m-a/index.html","searchKeys":["PRAGMA","PRAGMA","org.jetbrains.exposed.v1.core.statements.StatementType.PRAGMA"]},{"name":"PRECEDING","description":"org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.PRECEDING","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound-direction/-p-r-e-c-e-d-i-n-g/index.html","searchKeys":["PRECEDING","PRECEDING","org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.PRECEDING"]},{"name":"PostgreSQL","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.PostgreSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/-postgre-s-q-l/index.html","searchKeys":["PostgreSQL","PostgreSQL","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.PostgreSQL"]},{"name":"RANGE","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit.RANGE","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/-r-a-n-g-e/index.html","searchKeys":["RANGE","RANGE","org.jetbrains.exposed.v1.core.WindowFrameUnit.RANGE"]},{"name":"RESTRICT","description":"org.jetbrains.exposed.v1.core.ReferenceOption.RESTRICT","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/-r-e-s-t-r-i-c-t/index.html","searchKeys":["RESTRICT","RESTRICT","org.jetbrains.exposed.v1.core.ReferenceOption.RESTRICT"]},{"name":"RIGHT","description":"org.jetbrains.exposed.v1.core.JoinType.RIGHT","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/-r-i-g-h-t/index.html","searchKeys":["RIGHT","RIGHT","org.jetbrains.exposed.v1.core.JoinType.RIGHT"]},{"name":"ROWS","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit.ROWS","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/-r-o-w-s/index.html","searchKeys":["ROWS","ROWS","org.jetbrains.exposed.v1.core.WindowFrameUnit.ROWS"]},{"name":"SELECT","description":"org.jetbrains.exposed.v1.core.statements.StatementType.SELECT","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-s-e-l-e-c-t/index.html","searchKeys":["SELECT","SELECT","org.jetbrains.exposed.v1.core.statements.StatementType.SELECT"]},{"name":"SET_DEFAULT","description":"org.jetbrains.exposed.v1.core.ReferenceOption.SET_DEFAULT","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/-s-e-t_-d-e-f-a-u-l-t/index.html","searchKeys":["SET_DEFAULT","SET_DEFAULT","org.jetbrains.exposed.v1.core.ReferenceOption.SET_DEFAULT"]},{"name":"SET_NULL","description":"org.jetbrains.exposed.v1.core.ReferenceOption.SET_NULL","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/-s-e-t_-n-u-l-l/index.html","searchKeys":["SET_NULL","SET_NULL","org.jetbrains.exposed.v1.core.ReferenceOption.SET_NULL"]},{"name":"SHOW","description":"org.jetbrains.exposed.v1.core.statements.StatementType.SHOW","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-s-h-o-w/index.html","searchKeys":["SHOW","SHOW","org.jetbrains.exposed.v1.core.statements.StatementType.SHOW"]},{"name":"SKIP_LOCKED","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.SKIP_LOCKED","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/-s-k-i-p_-l-o-c-k-e-d/index.html","searchKeys":["SKIP_LOCKED","SKIP_LOCKED","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.SKIP_LOCKED"]},{"name":"SKIP_LOCKED","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.SKIP_LOCKED","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/-s-k-i-p_-l-o-c-k-e-d/index.html","searchKeys":["SKIP_LOCKED","SKIP_LOCKED","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.SKIP_LOCKED"]},{"name":"SQLServer","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.SQLServer","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/-s-q-l-server/index.html","searchKeys":["SQLServer","SQLServer","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.SQLServer"]},{"name":"TRUNCATE","description":"org.jetbrains.exposed.v1.core.statements.StatementType.TRUNCATE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-t-r-u-n-c-a-t-e/index.html","searchKeys":["TRUNCATE","TRUNCATE","org.jetbrains.exposed.v1.core.statements.StatementType.TRUNCATE"]},{"name":"Two","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.Two","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-major-version/-two/index.html","searchKeys":["Two","Two","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.Two"]},{"name":"UPDATE","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.UPDATE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/-u-p-d-a-t-e/index.html","searchKeys":["UPDATE","UPDATE","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.UPDATE"]},{"name":"UPDATE","description":"org.jetbrains.exposed.v1.core.statements.StatementType.UPDATE","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/-u-p-d-a-t-e/index.html","searchKeys":["UPDATE","UPDATE","org.jetbrains.exposed.v1.core.statements.StatementType.UPDATE"]},{"name":"abstract class AbstractQuery<T : AbstractQuery<T>>(targets: List<Table>) : Statement<ResultApi> ","description":"org.jetbrains.exposed.v1.core.AbstractQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/index.html","searchKeys":["AbstractQuery","abstract class AbstractQuery<T : AbstractQuery<T>>(targets: List<Table>) : Statement<ResultApi> ","org.jetbrains.exposed.v1.core.AbstractQuery"]},{"name":"abstract class AllAnyFromBaseOp<T, SubSearch>(val isAny: Boolean, val subSearch: SubSearch) : Op<T> ","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-base-op/index.html","searchKeys":["AllAnyFromBaseOp","abstract class AllAnyFromBaseOp<T, SubSearch>(val isAny: Boolean, val subSearch: SubSearch) : Op<T> ","org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp"]},{"name":"abstract class BaseBatchInsertStatement(table: Table, ignore: Boolean, val shouldReturnGeneratedValues: Boolean = true) : InsertStatement<List<ResultRow>> ","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/index.html","searchKeys":["BaseBatchInsertStatement","abstract class BaseBatchInsertStatement(table: Table, ignore: Boolean, val shouldReturnGeneratedValues: Boolean = true) : InsertStatement<List<ResultRow>> ","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement"]},{"name":"abstract class BiCompositeColumn<C1, C2, T>(column1: Column<C1>, column2: Column<C2>, val transformFromValue: (T) -> Pair<C1?, C2?>, val transformToValue: (Any?, Any?) -> T, nullable: Boolean = false) : CompositeColumn<T> ","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/index.html","searchKeys":["BiCompositeColumn","abstract class BiCompositeColumn<C1, C2, T>(column1: Column<C1>, column2: Column<C2>, val transformFromValue: (T) -> Pair<C1?, C2?>, val transformToValue: (Any?, Any?) -> T, nullable: Boolean = false) : CompositeColumn<T> ","org.jetbrains.exposed.v1.core.BiCompositeColumn"]},{"name":"abstract class ColumnSet : FieldSet","description":"org.jetbrains.exposed.v1.core.ColumnSet","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/index.html","searchKeys":["ColumnSet","abstract class ColumnSet : FieldSet","org.jetbrains.exposed.v1.core.ColumnSet"]},{"name":"abstract class ColumnType<T>(var nullable: Boolean = false) : IColumnType<T> ","description":"org.jetbrains.exposed.v1.core.ColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-type/index.html","searchKeys":["ColumnType","abstract class ColumnType<T>(var nullable: Boolean = false) : IColumnType<T> ","org.jetbrains.exposed.v1.core.ColumnType"]},{"name":"abstract class ComparisonOp(val expr1: Expression<*>, val expr2: Expression<*>, val opSign: String) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.ComparisonOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-comparison-op/index.html","searchKeys":["ComparisonOp","abstract class ComparisonOp(val expr1: Expression<*>, val expr2: Expression<*>, val opSign: String) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.ComparisonOp"]},{"name":"abstract class CompositeColumn<T> : Expression<T> ","description":"org.jetbrains.exposed.v1.core.CompositeColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-column/index.html","searchKeys":["CompositeColumn","abstract class CompositeColumn<T> : Expression<T> ","org.jetbrains.exposed.v1.core.CompositeColumn"]},{"name":"abstract class DataTypeProvider","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/index.html","searchKeys":["DataTypeProvider","abstract class DataTypeProvider","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider"]},{"name":"abstract class DatabaseApi","description":"org.jetbrains.exposed.v1.core.DatabaseApi","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/index.html","searchKeys":["DatabaseApi","abstract class DatabaseApi","org.jetbrains.exposed.v1.core.DatabaseApi"]},{"name":"abstract class DialectNameProvider(val dialectName: String)","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.DialectNameProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/-dialect-name-provider/index.html","searchKeys":["DialectNameProvider","abstract class DialectNameProvider(val dialectName: String)","org.jetbrains.exposed.v1.core.vendors.VendorDialect.DialectNameProvider"]},{"name":"abstract class ExposedDatabaseMetadata(val database: String)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/index.html","searchKeys":["ExposedDatabaseMetadata","abstract class ExposedDatabaseMetadata(val database: String)","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata"]},{"name":"abstract class ExposedSavepoint(val name: String)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedSavepoint","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-savepoint/index.html","searchKeys":["ExposedSavepoint","abstract class ExposedSavepoint(val name: String)","org.jetbrains.exposed.v1.core.statements.api.ExposedSavepoint"]},{"name":"abstract class Expression<T>","description":"org.jetbrains.exposed.v1.core.Expression","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/index.html","searchKeys":["Expression","abstract class Expression<T>","org.jetbrains.exposed.v1.core.Expression"]},{"name":"abstract class ExpressionWithColumnType<T> : Expression<T> ","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type/index.html","searchKeys":["ExpressionWithColumnType","abstract class ExpressionWithColumnType<T> : Expression<T> ","org.jetbrains.exposed.v1.core.ExpressionWithColumnType"]},{"name":"abstract class ForUpdateBase(querySuffix: String, mode: ForUpdateOption.ForUpdateOrShareMode? = null, ofTables: Table) : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateBase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-for-update-base/index.html","searchKeys":["ForUpdateBase","abstract class ForUpdateBase(querySuffix: String, mode: ForUpdateOption.ForUpdateOrShareMode? = null, ofTables: Table) : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateBase"]},{"name":"abstract class Function<T>(val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","description":"org.jetbrains.exposed.v1.core.Function","location":"exposed-core/org.jetbrains.exposed.v1.core/-function/index.html","searchKeys":["Function","abstract class Function<T>(val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","org.jetbrains.exposed.v1.core.Function"]},{"name":"abstract class FunctionProvider","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/index.html","searchKeys":["FunctionProvider","abstract class FunctionProvider","org.jetbrains.exposed.v1.core.vendors.FunctionProvider"]},{"name":"abstract class IdTable<T : Any>(name: String = \"\") : Table","description":"org.jetbrains.exposed.v1.core.dao.id.IdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-id-table/index.html","searchKeys":["IdTable","abstract class IdTable<T : Any>(name: String = \"\") : Table","org.jetbrains.exposed.v1.core.dao.id.IdTable"]},{"name":"abstract class IdentifierManagerApi","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/index.html","searchKeys":["IdentifierManagerApi","abstract class IdentifierManagerApi","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi"]},{"name":"abstract class InListOrNotInListBaseOp<V>(val expr: Any, val list: Iterable<V>, val isInList: Boolean = true) : Op<Boolean> , ComplexExpression","description":"org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-list-or-not-in-list-base-op/index.html","searchKeys":["InListOrNotInListBaseOp","abstract class InListOrNotInListBaseOp<V>(val expr: Any, val list: Iterable<V>, val isInList: Boolean = true) : Op<Boolean> , ComplexExpression","org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp"]},{"name":"abstract class MergeStatement(val table: Table) : Statement<Int> ","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/index.html","searchKeys":["MergeStatement","abstract class MergeStatement(val table: Table) : Statement<Int> ","org.jetbrains.exposed.v1.core.statements.MergeStatement"]},{"name":"abstract class Op<T> : Expression<T> ","description":"org.jetbrains.exposed.v1.core.Op","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/index.html","searchKeys":["Op","abstract class Op<T> : Expression<T> ","org.jetbrains.exposed.v1.core.Op"]},{"name":"abstract class SchemaUtilityApi","description":"org.jetbrains.exposed.v1.core.SchemaUtilityApi","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema-utility-api/index.html","searchKeys":["SchemaUtilityApi","abstract class SchemaUtilityApi","org.jetbrains.exposed.v1.core.SchemaUtilityApi"]},{"name":"abstract class Statement<out T>(val type: StatementType, val targets: List<Table>)","description":"org.jetbrains.exposed.v1.core.statements.Statement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement/index.html","searchKeys":["Statement","abstract class Statement<out T>(val type: StatementType, val targets: List<Table>)","org.jetbrains.exposed.v1.core.statements.Statement"]},{"name":"abstract class StringColumnType(val collate: String? = null) : ColumnType<String> ","description":"org.jetbrains.exposed.v1.core.StringColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/index.html","searchKeys":["StringColumnType","abstract class StringColumnType(val collate: String? = null) : ColumnType<String> ","org.jetbrains.exposed.v1.core.StringColumnType"]},{"name":"abstract class Transaction : UserDataHolder, TransactionInterface","description":"org.jetbrains.exposed.v1.core.Transaction","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/index.html","searchKeys":["Transaction","abstract class Transaction : UserDataHolder, TransactionInterface","org.jetbrains.exposed.v1.core.Transaction"]},{"name":"abstract class UpdateBuilder<out T>(type: StatementType, targets: List<Table>) : Statement<T> ","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/index.html","searchKeys":["UpdateBuilder","abstract class UpdateBuilder<out T>(type: StatementType, targets: List<Table>) : Statement<T> ","org.jetbrains.exposed.v1.core.statements.UpdateBuilder"]},{"name":"abstract class VendorDialect(val name: String, val dataTypeProvider: DataTypeProvider, val functionProvider: FunctionProvider) : DatabaseDialect","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/index.html","searchKeys":["VendorDialect","abstract class VendorDialect(val name: String, val dataTypeProvider: DataTypeProvider, val functionProvider: FunctionProvider) : DatabaseDialect","org.jetbrains.exposed.v1.core.vendors.VendorDialect"]},{"name":"abstract fun <T : Any> createEntityID(value: T, table: IdTable<T>): EntityID<T>","description":"org.jetbrains.exposed.v1.core.dao.id.EntityIDFactory.createEntityID","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d-factory/create-entity-i-d.html","searchKeys":["createEntityID","abstract fun <T : Any> createEntityID(value: T, table: IdTable<T>): EntityID<T>","org.jetbrains.exposed.v1.core.dao.id.EntityIDFactory.createEntityID"]},{"name":"abstract fun <T> getObject(index: Int, type: Class<T>): T?","description":"org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-row-api/get-object.html","searchKeys":["getObject","abstract fun <T> getObject(index: Int, type: Class<T>): T?","org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject"]},{"name":"abstract fun <T> getObject(name: String, type: Class<T>): T?","description":"org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-row-api/get-object.html","searchKeys":["getObject","abstract fun <T> getObject(name: String, type: Class<T>): T?","org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject"]},{"name":"abstract fun <T> mapRows(block: (row: RowApi) -> T?): Flow<T?>","description":"org.jetbrains.exposed.v1.core.statements.api.ResultApi.mapRows","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-result-api/map-rows.html","searchKeys":["mapRows","abstract fun <T> mapRows(block: (row: RowApi) -> T?): Flow<T?>","org.jetbrains.exposed.v1.core.statements.api.ResultApi.mapRows"]},{"name":"abstract fun QueryBuilder.registerSubSearchArgument(subSearch: SubSearch)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.registerSubSearchArgument","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-base-op/register-sub-search-argument.html","searchKeys":["registerSubSearchArgument","abstract fun QueryBuilder.registerSubSearchArgument(subSearch: SubSearch)","org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.registerSubSearchArgument"]},{"name":"abstract fun addPrimaryKey(table: Table, pkName: String?, vararg pkColumns: Column<*>): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.addPrimaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/add-primary-key.html","searchKeys":["addPrimaryKey","abstract fun addPrimaryKey(table: Table, pkName: String?, vararg pkColumns: Column<*>): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.addPrimaryKey"]},{"name":"abstract fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.Statement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement/arguments.html","searchKeys":["arguments","abstract fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.Statement.arguments"]},{"name":"abstract fun binaryType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.binaryType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/binary-type.html","searchKeys":["binaryType","abstract fun binaryType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.binaryType"]},{"name":"abstract fun bindTransactionToThread(transaction: Transaction?)","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.bindTransactionToThread","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/bind-transaction-to-thread.html","searchKeys":["bindTransactionToThread","abstract fun bindTransactionToThread(transaction: Transaction?)","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.bindTransactionToThread"]},{"name":"abstract fun cleanCache()","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.cleanCache","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/clean-cache.html","searchKeys":["cleanCache","abstract fun cleanCache()","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.cleanCache"]},{"name":"abstract fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/create-index.html","searchKeys":["createIndex","abstract fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.createIndex"]},{"name":"abstract fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.DdlAware.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-ddl-aware/create-statement.html","searchKeys":["createStatement","abstract fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.DdlAware.createStatement"]},{"name":"abstract fun crossJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.ColumnSet.crossJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/cross-join.html","searchKeys":["crossJoin","abstract fun crossJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.ColumnSet.crossJoin"]},{"name":"abstract fun currentOrNull(): Transaction?","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.currentOrNull","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/current-or-null.html","searchKeys":["currentOrNull","abstract fun currentOrNull(): Transaction?","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.currentOrNull"]},{"name":"abstract fun describe(s: Transaction, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ColumnSet.describe","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/describe.html","searchKeys":["describe","abstract fun describe(s: Transaction, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ColumnSet.describe"]},{"name":"abstract fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/drop-index.html","searchKeys":["dropIndex","abstract fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dropIndex"]},{"name":"abstract fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.DdlAware.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-ddl-aware/drop-statement.html","searchKeys":["dropStatement","abstract fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.DdlAware.dropStatement"]},{"name":"abstract fun fullJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.ColumnSet.fullJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/full-join.html","searchKeys":["fullJoin","abstract fun fullJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.ColumnSet.fullJoin"]},{"name":"abstract fun getObject(index: Int): Any?","description":"org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-row-api/get-object.html","searchKeys":["getObject","abstract fun getObject(index: Int): Any?","org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject"]},{"name":"abstract fun getObject(name: String): Any?","description":"org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-row-api/get-object.html","searchKeys":["getObject","abstract fun getObject(name: String): Any?","org.jetbrains.exposed.v1.core.statements.api.RowApi.getObject"]},{"name":"abstract fun getRealColumns(): List<Column<*>>","description":"org.jetbrains.exposed.v1.core.CompositeColumn.getRealColumns","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-column/get-real-columns.html","searchKeys":["getRealColumns","abstract fun getRealColumns(): List<Column<*>>","org.jetbrains.exposed.v1.core.CompositeColumn.getRealColumns"]},{"name":"abstract fun getRealColumnsWithValues(compositeValue: T): Map<Column<*>, Any?>","description":"org.jetbrains.exposed.v1.core.CompositeColumn.getRealColumnsWithValues","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-column/get-real-columns-with-values.html","searchKeys":["getRealColumnsWithValues","abstract fun getRealColumnsWithValues(compositeValue: T): Map<Column<*>, Any?>","org.jetbrains.exposed.v1.core.CompositeColumn.getRealColumnsWithValues"]},{"name":"abstract fun hexToDb(hexString: String): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.hexToDb","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/hex-to-db.html","searchKeys":["hexToDb","abstract fun hexToDb(hexString: String): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.hexToDb"]},{"name":"abstract fun innerJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.ColumnSet.innerJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/inner-join.html","searchKeys":["innerJoin","abstract fun innerJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.ColumnSet.innerJoin"]},{"name":"abstract fun isVersionCovers(majorVersion: Int, minorVersion: Int): Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseApi.isVersionCovers","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/is-version-covers.html","searchKeys":["isVersionCovers","abstract fun isVersionCovers(majorVersion: Int, minorVersion: Int): Boolean","org.jetbrains.exposed.v1.core.DatabaseApi.isVersionCovers"]},{"name":"abstract fun isVersionCovers(version: BigDecimal): Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseApi.isVersionCovers","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/is-version-covers.html","searchKeys":["isVersionCovers","abstract fun isVersionCovers(version: BigDecimal): Boolean","org.jetbrains.exposed.v1.core.DatabaseApi.isVersionCovers"]},{"name":"abstract fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>? = null, otherColumn: Expression<*>? = null, lateral: Boolean = false, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","description":"org.jetbrains.exposed.v1.core.ColumnSet.join","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/join.html","searchKeys":["join","abstract fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>? = null, otherColumn: Expression<*>? = null, lateral: Boolean = false, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","org.jetbrains.exposed.v1.core.ColumnSet.join"]},{"name":"abstract fun leftJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.ColumnSet.leftJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/left-join.html","searchKeys":["leftJoin","abstract fun leftJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.ColumnSet.leftJoin"]},{"name":"abstract fun log(context: StatementContext, transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.SqlLogger.log","location":"exposed-core/org.jetbrains.exposed.v1.core/-sql-logger/log.html","searchKeys":["log","abstract fun log(context: StatementContext, transaction: Transaction)","org.jetbrains.exposed.v1.core.SqlLogger.log"]},{"name":"abstract fun mode(): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.MatchMode.mode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/-match-mode/mode.html","searchKeys":["mode","abstract fun mode(): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.MatchMode.mode"]},{"name":"abstract fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.modifyColumn","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/modify-column.html","searchKeys":["modifyColumn","abstract fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.modifyColumn"]},{"name":"abstract fun modifyStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.DdlAware.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-ddl-aware/modify-statement.html","searchKeys":["modifyStatement","abstract fun modifyStatement(): List<String>","org.jetbrains.exposed.v1.core.DdlAware.modifyStatement"]},{"name":"abstract fun over(): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunction.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function/over.html","searchKeys":["over","abstract fun over(): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunction.over"]},{"name":"abstract fun prepareSQL(transaction: Transaction, prepared: Boolean = true): String","description":"org.jetbrains.exposed.v1.core.statements.Statement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","abstract fun prepareSQL(transaction: Transaction, prepared: Boolean = true): String","org.jetbrains.exposed.v1.core.statements.Statement.prepareSQL"]},{"name":"abstract fun resetCurrentScheme()","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.resetCurrentScheme","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/reset-current-scheme.html","searchKeys":["resetCurrentScheme","abstract fun resetCurrentScheme()","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.resetCurrentScheme"]},{"name":"abstract fun resolveReferenceOption(refOption: String): ReferenceOption?","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.resolveReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/resolve-reference-option.html","searchKeys":["resolveReferenceOption","abstract fun resolveReferenceOption(refOption: String): ReferenceOption?","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.resolveReferenceOption"]},{"name":"abstract fun restoreValueFromParts(parts: Map<Column<*>, Any?>): T","description":"org.jetbrains.exposed.v1.core.CompositeColumn.restoreValueFromParts","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-column/restore-value-from-parts.html","searchKeys":["restoreValueFromParts","abstract fun restoreValueFromParts(parts: Map<Column<*>, Any?>): T","org.jetbrains.exposed.v1.core.CompositeColumn.restoreValueFromParts"]},{"name":"abstract fun rightJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.ColumnSet.rightJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/right-join.html","searchKeys":["rightJoin","abstract fun rightJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.ColumnSet.rightJoin"]},{"name":"abstract fun setArray(index: Int, type: ArrayColumnType<*, *>, array: Array<*>)","description":"org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.setArray","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-prepared-statement-api/set-array.html","searchKeys":["setArray","abstract fun setArray(index: Int, type: ArrayColumnType<*, *>, array: Array<*>)","org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.setArray"]},{"name":"abstract fun setInputStream(index: Int, inputStream: InputStream, setAsBlobObject: Boolean)","description":"org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.setInputStream","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-prepared-statement-api/set-input-stream.html","searchKeys":["setInputStream","abstract fun setInputStream(index: Int, inputStream: InputStream, setAsBlobObject: Boolean)","org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.setInputStream"]},{"name":"abstract fun setNull(index: Int, columnType: IColumnType<*>)","description":"org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.setNull","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-prepared-statement-api/set-null.html","searchKeys":["setNull","abstract fun setNull(index: Int, columnType: IColumnType<*>)","org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.setNull"]},{"name":"abstract fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.IColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/sql-type.html","searchKeys":["sqlType","abstract fun sqlType(): String","org.jetbrains.exposed.v1.core.IColumnType.sqlType"]},{"name":"abstract fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Expression.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/to-query-builder.html","searchKeys":["toQueryBuilder","abstract fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Expression.toQueryBuilder"]},{"name":"abstract fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/to-query-builder.html","searchKeys":["toQueryBuilder","abstract fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.WindowFrameBound.toQueryBuilder"]},{"name":"abstract fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.WindowFunction.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function/to-query-builder.html","searchKeys":["toQueryBuilder","abstract fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.WindowFunction.toQueryBuilder"]},{"name":"abstract fun unwrap(value: Wrapped): Unwrapped","description":"org.jetbrains.exposed.v1.core.ColumnTransformer.unwrap","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-transformer/unwrap.html","searchKeys":["unwrap","abstract fun unwrap(value: Wrapped): Unwrapped","org.jetbrains.exposed.v1.core.ColumnTransformer.unwrap"]},{"name":"abstract fun valueFromDB(value: Any): T?","description":"org.jetbrains.exposed.v1.core.IColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/value-from-d-b.html","searchKeys":["valueFromDB","abstract fun valueFromDB(value: Any): T?","org.jetbrains.exposed.v1.core.IColumnType.valueFromDB"]},{"name":"abstract fun wrap(value: Unwrapped): Wrapped","description":"org.jetbrains.exposed.v1.core.ColumnTransformer.wrap","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-transformer/wrap.html","searchKeys":["wrap","abstract fun wrap(value: Unwrapped): Wrapped","org.jetbrains.exposed.v1.core.ColumnTransformer.wrap"]},{"name":"abstract operator fun set(index: Int, value: Any)","description":"org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-prepared-statement-api/set.html","searchKeys":["set","abstract operator fun set(index: Int, value: Any)","org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.set"]},{"name":"abstract val alias: String","description":"org.jetbrains.exposed.v1.core.IExpressionAlias.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-expression-alias/alias.html","searchKeys":["alias","abstract val alias: String","org.jetbrains.exposed.v1.core.IExpressionAlias.alias"]},{"name":"abstract val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnType.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type/column-type.html","searchKeys":["columnType","abstract val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.ExpressionWithColumnType.columnType"]},{"name":"abstract val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.ColumnSet.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/columns.html","searchKeys":["columns","abstract val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.ColumnSet.columns"]},{"name":"abstract val dataTypeProvider: DataTypeProvider","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/data-type-provider.html","searchKeys":["dataTypeProvider","abstract val dataTypeProvider: DataTypeProvider","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dataTypeProvider"]},{"name":"abstract val db: DatabaseApi","description":"org.jetbrains.exposed.v1.core.transactions.TransactionInterface.db","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-interface/db.html","searchKeys":["db","abstract val db: DatabaseApi","org.jetbrains.exposed.v1.core.transactions.TransactionInterface.db"]},{"name":"abstract val defaultFetchSize: Int?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultFetchSize","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-fetch-size.html","searchKeys":["defaultFetchSize","abstract val defaultFetchSize: Int?","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultFetchSize"]},{"name":"abstract val defaultIsolationLevel: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultIsolationLevel","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-isolation-level.html","searchKeys":["defaultIsolationLevel","abstract val defaultIsolationLevel: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultIsolationLevel"]},{"name":"abstract val defaultMaxAttempts: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultMaxAttempts","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-max-attempts.html","searchKeys":["defaultMaxAttempts","abstract val defaultMaxAttempts: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultMaxAttempts"]},{"name":"abstract val defaultMaxRetryDelay: Long","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultMaxRetryDelay","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-max-retry-delay.html","searchKeys":["defaultMaxRetryDelay","abstract val defaultMaxRetryDelay: Long","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultMaxRetryDelay"]},{"name":"abstract val defaultMinRetryDelay: Long","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultMinRetryDelay","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-min-retry-delay.html","searchKeys":["defaultMinRetryDelay","abstract val defaultMinRetryDelay: Long","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultMinRetryDelay"]},{"name":"abstract val defaultReadOnly: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultReadOnly","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-read-only.html","searchKeys":["defaultReadOnly","abstract val defaultReadOnly: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultReadOnly"]},{"name":"abstract val defaultSchema: Schema?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.defaultSchema","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/default-schema.html","searchKeys":["defaultSchema","abstract val defaultSchema: Schema?","org.jetbrains.exposed.v1.core.DatabaseConfig.defaultSchema"]},{"name":"abstract val delegate: Expression<T>","description":"org.jetbrains.exposed.v1.core.IExpressionAlias.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-expression-alias/delegate.html","searchKeys":["delegate","abstract val delegate: Expression<T>","org.jetbrains.exposed.v1.core.IExpressionAlias.delegate"]},{"name":"abstract val dialect: DatabaseDialect","description":"org.jetbrains.exposed.v1.core.DatabaseApi.dialect","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/dialect.html","searchKeys":["dialect","abstract val dialect: DatabaseDialect","org.jetbrains.exposed.v1.core.DatabaseApi.dialect"]},{"name":"abstract val dialectMode: String?","description":"org.jetbrains.exposed.v1.core.DatabaseApi.dialectMode","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/dialect-mode.html","searchKeys":["dialectMode","abstract val dialectMode: String?","org.jetbrains.exposed.v1.core.DatabaseApi.dialectMode"]},{"name":"abstract val explicitDialect: DatabaseDialect?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.explicitDialect","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/explicit-dialect.html","searchKeys":["explicitDialect","abstract val explicitDialect: DatabaseDialect?","org.jetbrains.exposed.v1.core.DatabaseConfig.explicitDialect"]},{"name":"abstract val fields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.FieldSet.fields","location":"exposed-core/org.jetbrains.exposed.v1.core/-field-set/fields.html","searchKeys":["fields","abstract val fields: List<Expression<*>>","org.jetbrains.exposed.v1.core.FieldSet.fields"]},{"name":"abstract val fullVersion: String","description":"org.jetbrains.exposed.v1.core.DatabaseApi.fullVersion","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/full-version.html","searchKeys":["fullVersion","abstract val fullVersion: String","org.jetbrains.exposed.v1.core.DatabaseApi.fullVersion"]},{"name":"abstract val functionProvider: FunctionProvider","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.functionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/function-provider.html","searchKeys":["functionProvider","abstract val functionProvider: FunctionProvider","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.functionProvider"]},{"name":"abstract val hasTimePart: Boolean","description":"org.jetbrains.exposed.v1.core.IDateColumnType.hasTimePart","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-date-column-type/has-time-part.html","searchKeys":["hasTimePart","abstract val hasTimePart: Boolean","org.jetbrains.exposed.v1.core.IDateColumnType.hasTimePart"]},{"name":"abstract val id: Column<EntityID<T>>","description":"org.jetbrains.exposed.v1.core.dao.id.IdTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-id-table/id.html","searchKeys":["id","abstract val id: Column<EntityID<T>>","org.jetbrains.exposed.v1.core.dao.id.IdTable.id"]},{"name":"abstract val identifierManager: IdentifierManagerApi","description":"org.jetbrains.exposed.v1.core.DatabaseApi.identifierManager","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/identifier-manager.html","searchKeys":["identifierManager","abstract val identifierManager: IdentifierManagerApi","org.jetbrains.exposed.v1.core.DatabaseApi.identifierManager"]},{"name":"abstract val identifierManager: IdentifierManagerApi","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.identifierManager","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/identifier-manager.html","searchKeys":["identifierManager","abstract val identifierManager: IdentifierManagerApi","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.identifierManager"]},{"name":"abstract val keepLoadedReferencesOutOfTransaction: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.keepLoadedReferencesOutOfTransaction","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/keep-loaded-references-out-of-transaction.html","searchKeys":["keepLoadedReferencesOutOfTransaction","abstract val keepLoadedReferencesOutOfTransaction: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.keepLoadedReferencesOutOfTransaction"]},{"name":"abstract val logTooMuchResultSetsThreshold: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.logTooMuchResultSetsThreshold","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/log-too-much-result-sets-threshold.html","searchKeys":["logTooMuchResultSetsThreshold","abstract val logTooMuchResultSetsThreshold: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.logTooMuchResultSetsThreshold"]},{"name":"abstract val maxEntitiesToStoreInCachePerEntity: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.maxEntitiesToStoreInCachePerEntity","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/max-entities-to-store-in-cache-per-entity.html","searchKeys":["maxEntitiesToStoreInCachePerEntity","abstract val maxEntitiesToStoreInCachePerEntity: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.maxEntitiesToStoreInCachePerEntity"]},{"name":"abstract val name: String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/name.html","searchKeys":["name","abstract val name: String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.name"]},{"name":"abstract val outerTransaction: Transaction?","description":"org.jetbrains.exposed.v1.core.transactions.TransactionInterface.outerTransaction","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-interface/outer-transaction.html","searchKeys":["outerTransaction","abstract val outerTransaction: Transaction?","org.jetbrains.exposed.v1.core.transactions.TransactionInterface.outerTransaction"]},{"name":"abstract val preserveKeywordCasing: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.preserveKeywordCasing","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/preserve-keyword-casing.html","searchKeys":["preserveKeywordCasing","abstract val preserveKeywordCasing: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.preserveKeywordCasing"]},{"name":"abstract val quoteString: String","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.quoteString","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/quote-string.html","searchKeys":["quoteString","abstract val quoteString: String","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.quoteString"]},{"name":"abstract val readOnly: Boolean","description":"org.jetbrains.exposed.v1.core.transactions.TransactionInterface.readOnly","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-interface/read-only.html","searchKeys":["readOnly","abstract val readOnly: Boolean","org.jetbrains.exposed.v1.core.transactions.TransactionInterface.readOnly"]},{"name":"abstract val set: FieldSet","description":"org.jetbrains.exposed.v1.core.AbstractQuery.set","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/set.html","searchKeys":["set","abstract val set: FieldSet","org.jetbrains.exposed.v1.core.AbstractQuery.set"]},{"name":"abstract val source: ColumnSet","description":"org.jetbrains.exposed.v1.core.FieldSet.source","location":"exposed-core/org.jetbrains.exposed.v1.core/-field-set/source.html","searchKeys":["source","abstract val source: ColumnSet","org.jetbrains.exposed.v1.core.FieldSet.source"]},{"name":"abstract val sqlLogger: SqlLogger","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.sqlLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/sql-logger.html","searchKeys":["sqlLogger","abstract val sqlLogger: SqlLogger","org.jetbrains.exposed.v1.core.DatabaseConfig.sqlLogger"]},{"name":"abstract val statement: String","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateOrShareMode.statement","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-for-update-or-share-mode/statement.html","searchKeys":["statement","abstract val statement: String","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateOrShareMode.statement"]},{"name":"abstract val supportsAlterTableWithAddColumn: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseApi.supportsAlterTableWithAddColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/supports-alter-table-with-add-column.html","searchKeys":["supportsAlterTableWithAddColumn","abstract val supportsAlterTableWithAddColumn: Boolean","org.jetbrains.exposed.v1.core.DatabaseApi.supportsAlterTableWithAddColumn"]},{"name":"abstract val supportsAlterTableWithDropColumn: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseApi.supportsAlterTableWithDropColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/supports-alter-table-with-drop-column.html","searchKeys":["supportsAlterTableWithDropColumn","abstract val supportsAlterTableWithDropColumn: Boolean","org.jetbrains.exposed.v1.core.DatabaseApi.supportsAlterTableWithDropColumn"]},{"name":"abstract val supportsMultipleGeneratedKeys: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsMultipleGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-multiple-generated-keys.html","searchKeys":["supportsMultipleGeneratedKeys","abstract val supportsMultipleGeneratedKeys: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsMultipleGeneratedKeys"]},{"name":"abstract val supportsMultipleResultSets: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseApi.supportsMultipleResultSets","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/supports-multiple-result-sets.html","searchKeys":["supportsMultipleResultSets","abstract val supportsMultipleResultSets: Boolean","org.jetbrains.exposed.v1.core.DatabaseApi.supportsMultipleResultSets"]},{"name":"abstract val url: String","description":"org.jetbrains.exposed.v1.core.DatabaseApi.url","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/url.html","searchKeys":["url","abstract val url: String","org.jetbrains.exposed.v1.core.DatabaseApi.url"]},{"name":"abstract val useNestedTransactions: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.useNestedTransactions","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/use-nested-transactions.html","searchKeys":["useNestedTransactions","abstract val useNestedTransactions: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.useNestedTransactions"]},{"name":"abstract val usesBinaryFormat: Boolean","description":"org.jetbrains.exposed.v1.core.JsonColumnMarker.usesBinaryFormat","location":"exposed-core/org.jetbrains.exposed.v1.core/-json-column-marker/uses-binary-format.html","searchKeys":["usesBinaryFormat","abstract val usesBinaryFormat: Boolean","org.jetbrains.exposed.v1.core.JsonColumnMarker.usesBinaryFormat"]},{"name":"abstract val vendor: String","description":"org.jetbrains.exposed.v1.core.DatabaseApi.vendor","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/vendor.html","searchKeys":["vendor","abstract val vendor: String","org.jetbrains.exposed.v1.core.DatabaseApi.vendor"]},{"name":"abstract val version: BigDecimal","description":"org.jetbrains.exposed.v1.core.DatabaseApi.version","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/version.html","searchKeys":["version","abstract val version: BigDecimal","org.jetbrains.exposed.v1.core.DatabaseApi.version"]},{"name":"abstract val warnLongQueriesDuration: Long?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.warnLongQueriesDuration","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/warn-long-queries-duration.html","searchKeys":["warnLongQueriesDuration","abstract val warnLongQueriesDuration: Long?","org.jetbrains.exposed.v1.core.DatabaseConfig.warnLongQueriesDuration"]},{"name":"abstract var defaultMaxAttempts: Int","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultMaxAttempts","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/default-max-attempts.html","searchKeys":["defaultMaxAttempts","abstract var defaultMaxAttempts: Int","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultMaxAttempts"]},{"name":"abstract var defaultMaxRetryDelay: Long","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultMaxRetryDelay","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/default-max-retry-delay.html","searchKeys":["defaultMaxRetryDelay","abstract var defaultMaxRetryDelay: Long","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultMaxRetryDelay"]},{"name":"abstract var defaultMinRetryDelay: Long","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultMinRetryDelay","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/default-min-retry-delay.html","searchKeys":["defaultMinRetryDelay","abstract var defaultMinRetryDelay: Long","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultMinRetryDelay"]},{"name":"abstract var defaultReadOnly: Boolean","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultReadOnly","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/default-read-only.html","searchKeys":["defaultReadOnly","abstract var defaultReadOnly: Boolean","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi.defaultReadOnly"]},{"name":"abstract var nullable: Boolean","description":"org.jetbrains.exposed.v1.core.IColumnType.nullable","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/nullable.html","searchKeys":["nullable","abstract var nullable: Boolean","org.jetbrains.exposed.v1.core.IColumnType.nullable"]},{"name":"annotation class ExperimentalDatabaseMigrationApi","description":"org.jetbrains.exposed.v1.core.ExperimentalDatabaseMigrationApi","location":"exposed-core/org.jetbrains.exposed.v1.core/-experimental-database-migration-api/index.html","searchKeys":["ExperimentalDatabaseMigrationApi","annotation class ExperimentalDatabaseMigrationApi","org.jetbrains.exposed.v1.core.ExperimentalDatabaseMigrationApi"]},{"name":"annotation class ExperimentalKeywordApi","description":"org.jetbrains.exposed.v1.core.ExperimentalKeywordApi","location":"exposed-core/org.jetbrains.exposed.v1.core/-experimental-keyword-api/index.html","searchKeys":["ExperimentalKeywordApi","annotation class ExperimentalKeywordApi","org.jetbrains.exposed.v1.core.ExperimentalKeywordApi"]},{"name":"annotation class InternalApi","description":"org.jetbrains.exposed.v1.core.InternalApi","location":"exposed-core/org.jetbrains.exposed.v1.core/-internal-api/index.html","searchKeys":["InternalApi","annotation class InternalApi","org.jetbrains.exposed.v1.core.InternalApi"]},{"name":"class ACosFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.ACosFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-a-cos-function/index.html","searchKeys":["ACosFunction","class ACosFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.ACosFunction"]},{"name":"class ASinFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.ASinFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-a-sin-function/index.html","searchKeys":["ASinFunction","class ASinFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.ASinFunction"]},{"name":"class ATanFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.ATanFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-a-tan-function/index.html","searchKeys":["ATanFunction","class ATanFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.ATanFunction"]},{"name":"class AbsFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<T> ","description":"org.jetbrains.exposed.v1.core.functions.math.AbsFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-abs-function/index.html","searchKeys":["AbsFunction","class AbsFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<T> ","org.jetbrains.exposed.v1.core.functions.math.AbsFunction"]},{"name":"class Alias<out T : Table>(val delegate: T, val alias: String) : Table","description":"org.jetbrains.exposed.v1.core.Alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/index.html","searchKeys":["Alias","class Alias<out T : Table>(val delegate: T, val alias: String) : Table","org.jetbrains.exposed.v1.core.Alias"]},{"name":"class AllAnyFromArrayOp<T : Any>(isAny: Boolean, array: List<T>, delegateType: ColumnType<T>) : AllAnyFromBaseOp<T, List<T>> ","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromArrayOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-array-op/index.html","searchKeys":["AllAnyFromArrayOp","class AllAnyFromArrayOp<T : Any>(isAny: Boolean, array: List<T>, delegateType: ColumnType<T>) : AllAnyFromBaseOp<T, List<T>> ","org.jetbrains.exposed.v1.core.ops.AllAnyFromArrayOp"]},{"name":"class AllAnyFromExpressionOp<E, T : List<E>?>(isAny: Boolean, expression: Expression<T>) : AllAnyFromBaseOp<E, Expression<T>> ","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromExpressionOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-expression-op/index.html","searchKeys":["AllAnyFromExpressionOp","class AllAnyFromExpressionOp<E, T : List<E>?>(isAny: Boolean, expression: Expression<T>) : AllAnyFromBaseOp<E, Expression<T>> ","org.jetbrains.exposed.v1.core.ops.AllAnyFromExpressionOp"]},{"name":"class AllAnyFromSubQueryOp<T>(isAny: Boolean, subQuery: AbstractQuery<*>) : AllAnyFromBaseOp<T, AbstractQuery<*>> ","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-sub-query-op/index.html","searchKeys":["AllAnyFromSubQueryOp","class AllAnyFromSubQueryOp<T>(isAny: Boolean, subQuery: AbstractQuery<*>) : AllAnyFromBaseOp<T, AbstractQuery<*>> ","org.jetbrains.exposed.v1.core.ops.AllAnyFromSubQueryOp"]},{"name":"class AllAnyFromTableOp<T>(isAny: Boolean, table: Table) : AllAnyFromBaseOp<T, Table> ","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromTableOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-table-op/index.html","searchKeys":["AllAnyFromTableOp","class AllAnyFromTableOp<T>(isAny: Boolean, table: Table) : AllAnyFromBaseOp<T, Table> ","org.jetbrains.exposed.v1.core.ops.AllAnyFromTableOp"]},{"name":"class AndBitOp<T, S : T>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","description":"org.jetbrains.exposed.v1.core.AndBitOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-bit-op/index.html","searchKeys":["AndBitOp","class AndBitOp<T, S : T>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","org.jetbrains.exposed.v1.core.AndBitOp"]},{"name":"class AndOp(expressions: List<Expression<Boolean>>) : CompoundBooleanOp","description":"org.jetbrains.exposed.v1.core.AndOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-op/index.html","searchKeys":["AndOp","class AndOp(expressions: List<Expression<Boolean>>) : CompoundBooleanOp","org.jetbrains.exposed.v1.core.AndOp"]},{"name":"class ArrayColumnType<T, R : List<Any?>>(val delegate: IColumnType<T & Any>, val maximumCardinality: List<Int>? = null, val dimensions: Int = 1) : ColumnType<R> ","description":"org.jetbrains.exposed.v1.core.ArrayColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/index.html","searchKeys":["ArrayColumnType","class ArrayColumnType<T, R : List<Any?>>(val delegate: IColumnType<T & Any>, val maximumCardinality: List<Int>? = null, val dimensions: Int = 1) : ColumnType<R> ","org.jetbrains.exposed.v1.core.ArrayColumnType"]},{"name":"class ArrayGet<E, T : List<E>?>(val expression: Expression<T>, val index: Int, columnType: IColumnType<E & Any>) : Function<E?> ","description":"org.jetbrains.exposed.v1.core.functions.array.ArrayGet","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-get/index.html","searchKeys":["ArrayGet","class ArrayGet<E, T : List<E>?>(val expression: Expression<T>, val index: Int, columnType: IColumnType<E & Any>) : Function<E?> ","org.jetbrains.exposed.v1.core.functions.array.ArrayGet"]},{"name":"class ArraySlice<E, T : List<E>?>(val expression: Expression<T>, val lower: Int?, val upper: Int?, columnType: IColumnType<T & Any>) : Function<T> ","description":"org.jetbrains.exposed.v1.core.functions.array.ArraySlice","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-slice/index.html","searchKeys":["ArraySlice","class ArraySlice<E, T : List<E>?>(val expression: Expression<T>, val lower: Int?, val upper: Int?, columnType: IColumnType<T & Any>) : Function<T> ","org.jetbrains.exposed.v1.core.functions.array.ArraySlice"]},{"name":"class AutoIncColumnType<T>(val delegate: ColumnType<T>, _autoincSeq: String?, fallbackSeqName: String) : IColumnType<T> ","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/index.html","searchKeys":["AutoIncColumnType","class AutoIncColumnType<T>(val delegate: ColumnType<T>, _autoincSeq: String?, fallbackSeqName: String) : IColumnType<T> ","org.jetbrains.exposed.v1.core.AutoIncColumnType"]},{"name":"class Avg<T : Comparable<T>, S : T?>(val expr: Expression<S>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.Avg","location":"exposed-core/org.jetbrains.exposed.v1.core/-avg/index.html","searchKeys":["Avg","class Avg<T : Comparable<T>, S : T?>(val expr: Expression<S>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.Avg"]},{"name":"class BatchDataInconsistentException(message: String) : Exception","description":"org.jetbrains.exposed.v1.core.statements.BatchDataInconsistentException","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-data-inconsistent-exception/index.html","searchKeys":["BatchDataInconsistentException","class BatchDataInconsistentException(message: String) : Exception","org.jetbrains.exposed.v1.core.statements.BatchDataInconsistentException"]},{"name":"class Between(val expr: Expression<*>, val from: Expression<*>, val to: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.Between","location":"exposed-core/org.jetbrains.exposed.v1.core/-between/index.html","searchKeys":["Between","class Between(val expr: Expression<*>, val from: Expression<*>, val to: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.Between"]},{"name":"class BlobColumnType(val useObjectIdentifier: Boolean = false) : ColumnType<ExposedBlob> ","description":"org.jetbrains.exposed.v1.core.BlobColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/index.html","searchKeys":["BlobColumnType","class BlobColumnType(val useObjectIdentifier: Boolean = false) : ColumnType<ExposedBlob> ","org.jetbrains.exposed.v1.core.BlobColumnType"]},{"name":"class BooleanColumnType : ColumnType<Boolean> ","description":"org.jetbrains.exposed.v1.core.BooleanColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/index.html","searchKeys":["BooleanColumnType","class BooleanColumnType : ColumnType<Boolean> ","org.jetbrains.exposed.v1.core.BooleanColumnType"]},{"name":"class ByteColumnType : ColumnType<Byte> ","description":"org.jetbrains.exposed.v1.core.ByteColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-byte-column-type/index.html","searchKeys":["ByteColumnType","class ByteColumnType : ColumnType<Byte> ","org.jetbrains.exposed.v1.core.ByteColumnType"]},{"name":"class Case(val value: Expression<*>? = null)","description":"org.jetbrains.exposed.v1.core.Case","location":"exposed-core/org.jetbrains.exposed.v1.core/-case/index.html","searchKeys":["Case","class Case(val value: Expression<*>? = null)","org.jetbrains.exposed.v1.core.Case"]},{"name":"class CaseWhen<T>(val value: Expression<*>?)","description":"org.jetbrains.exposed.v1.core.CaseWhen","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when/index.html","searchKeys":["CaseWhen","class CaseWhen<T>(val value: Expression<*>?)","org.jetbrains.exposed.v1.core.CaseWhen"]},{"name":"class CaseWhenElse<T>(val caseWhen: CaseWhen<T>, val elseResult: Expression<T>) : ExpressionWithColumnType<T> , ComplexExpression","description":"org.jetbrains.exposed.v1.core.CaseWhenElse","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when-else/index.html","searchKeys":["CaseWhenElse","class CaseWhenElse<T>(val caseWhen: CaseWhen<T>, val elseResult: Expression<T>) : ExpressionWithColumnType<T> , ComplexExpression","org.jetbrains.exposed.v1.core.CaseWhenElse"]},{"name":"class Cast<T>(val expr: Expression<*>, columnType: IColumnType<T & Any>) : Function<T> ","description":"org.jetbrains.exposed.v1.core.Cast","location":"exposed-core/org.jetbrains.exposed.v1.core/-cast/index.html","searchKeys":["Cast","class Cast<T>(val expr: Expression<*>, columnType: IColumnType<T & Any>) : Function<T> ","org.jetbrains.exposed.v1.core.Cast"]},{"name":"class CeilingFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<Long?> ","description":"org.jetbrains.exposed.v1.core.functions.math.CeilingFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-ceiling-function/index.html","searchKeys":["CeilingFunction","class CeilingFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<Long?> ","org.jetbrains.exposed.v1.core.functions.math.CeilingFunction"]},{"name":"class CharLength<T : String?>(val expr: Expression<T>) : Function<Int?> ","description":"org.jetbrains.exposed.v1.core.CharLength","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-length/index.html","searchKeys":["CharLength","class CharLength<T : String?>(val expr: Expression<T>) : Function<Int?> ","org.jetbrains.exposed.v1.core.CharLength"]},{"name":"class CharacterColumnType : ColumnType<Char> ","description":"org.jetbrains.exposed.v1.core.CharacterColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-character-column-type/index.html","searchKeys":["CharacterColumnType","class CharacterColumnType : ColumnType<Char> ","org.jetbrains.exposed.v1.core.CharacterColumnType"]},{"name":"class Coalesce<T, S : T?>(expr: ExpressionWithColumnType<S>, alternate: Expression<out T>, others: Expression<out T>) : Function<T> ","description":"org.jetbrains.exposed.v1.core.Coalesce","location":"exposed-core/org.jetbrains.exposed.v1.core/-coalesce/index.html","searchKeys":["Coalesce","class Coalesce<T, S : T?>(expr: ExpressionWithColumnType<S>, alternate: Expression<out T>, others: Expression<out T>) : Function<T> ","org.jetbrains.exposed.v1.core.Coalesce"]},{"name":"class Column<T>(val table: Table, val name: String, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> , DdlAware, Comparable<Column<*>> ","description":"org.jetbrains.exposed.v1.core.Column","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/index.html","searchKeys":["Column","class Column<T>(val table: Table, val name: String, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> , DdlAware, Comparable<Column<*>> ","org.jetbrains.exposed.v1.core.Column"]},{"name":"class CompositeID","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/index.html","searchKeys":["CompositeID","class CompositeID","org.jetbrains.exposed.v1.core.dao.id.CompositeID"]},{"name":"class CompositeSqlLogger : SqlLogger, StatementInterceptor","description":"org.jetbrains.exposed.v1.core.CompositeSqlLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-sql-logger/index.html","searchKeys":["CompositeSqlLogger","class CompositeSqlLogger : SqlLogger, StatementInterceptor","org.jetbrains.exposed.v1.core.CompositeSqlLogger"]},{"name":"class Concat(val separator: String, val expr: Expression<*>) : Function<String> ","description":"org.jetbrains.exposed.v1.core.Concat","location":"exposed-core/org.jetbrains.exposed.v1.core/-concat/index.html","searchKeys":["Concat","class Concat(val separator: String, val expr: Expression<*>) : Function<String> ","org.jetbrains.exposed.v1.core.Concat"]},{"name":"class CosFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.CosFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-cos-function/index.html","searchKeys":["CosFunction","class CosFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.CosFunction"]},{"name":"class CotFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.CotFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-cot-function/index.html","searchKeys":["CotFunction","class CotFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.CotFunction"]},{"name":"class Count(val expr: Expression<*>, val distinct: Boolean = false) : Function<Long> , WindowFunction<Long> ","description":"org.jetbrains.exposed.v1.core.Count","location":"exposed-core/org.jetbrains.exposed.v1.core/-count/index.html","searchKeys":["Count","class Count(val expr: Expression<*>, val distinct: Boolean = false) : Function<Long> , WindowFunction<Long> ","org.jetbrains.exposed.v1.core.Count"]},{"name":"class CumeDist(scale: Int = 2) : WindowFunction<BigDecimal> ","description":"org.jetbrains.exposed.v1.core.CumeDist","location":"exposed-core/org.jetbrains.exposed.v1.core/-cume-dist/index.html","searchKeys":["CumeDist","class CumeDist(scale: Int = 2) : WindowFunction<BigDecimal> ","org.jetbrains.exposed.v1.core.CumeDist"]},{"name":"class CustomEnumerationColumnType<T : Enum<T>>(val name: String, val sql: String?, val fromDb: (Any) -> T, val toDb: (T) -> Any) : ColumnType<T> ","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/index.html","searchKeys":["CustomEnumerationColumnType","class CustomEnumerationColumnType<T : Enum<T>>(val name: String, val sql: String?, val fromDb: (Any) -> T, val toDb: (T) -> Any) : ColumnType<T> ","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType"]},{"name":"class DecimalColumnType(val precision: Int, val scale: Int) : ColumnType<BigDecimal> ","description":"org.jetbrains.exposed.v1.core.DecimalColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/index.html","searchKeys":["DecimalColumnType","class DecimalColumnType(val precision: Int, val scale: Int) : ColumnType<BigDecimal> ","org.jetbrains.exposed.v1.core.DecimalColumnType"]},{"name":"class DegreesFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.DegreesFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-degrees-function/index.html","searchKeys":["DegreesFunction","class DegreesFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.DegreesFunction"]},{"name":"class DenseRank : WindowFunction<Long> ","description":"org.jetbrains.exposed.v1.core.DenseRank","location":"exposed-core/org.jetbrains.exposed.v1.core/-dense-rank/index.html","searchKeys":["DenseRank","class DenseRank : WindowFunction<Long> ","org.jetbrains.exposed.v1.core.DenseRank"]},{"name":"class DivideOp<T, S : T>(dividend: Expression<T>, divisor: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","description":"org.jetbrains.exposed.v1.core.DivideOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-divide-op/index.html","searchKeys":["DivideOp","class DivideOp<T, S : T>(dividend: Expression<T>, divisor: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","org.jetbrains.exposed.v1.core.DivideOp"]},{"name":"class DoubleColumnType : ColumnType<Double> ","description":"org.jetbrains.exposed.v1.core.DoubleColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-double-column-type/index.html","searchKeys":["DoubleColumnType","class DoubleColumnType : ColumnType<Double> ","org.jetbrains.exposed.v1.core.DoubleColumnType"]},{"name":"class DuplicateColumnException(columnName: String, tableName: String) : ExceptionInInitializerError","description":"org.jetbrains.exposed.v1.exceptions.DuplicateColumnException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-duplicate-column-exception/index.html","searchKeys":["DuplicateColumnException","class DuplicateColumnException(columnName: String, tableName: String) : ExceptionInInitializerError","org.jetbrains.exposed.v1.exceptions.DuplicateColumnException"]},{"name":"class EntityIDColumnType<T : Any>(val idColumn: Column<T>) : ColumnType<EntityID<T>> ","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/index.html","searchKeys":["EntityIDColumnType","class EntityIDColumnType<T : Any>(val idColumn: Column<T>) : ColumnType<EntityID<T>> ","org.jetbrains.exposed.v1.core.EntityIDColumnType"]},{"name":"class EnumerationColumnType<T : Enum<T>>(val klass: KClass<T>) : ColumnType<T> ","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/index.html","searchKeys":["EnumerationColumnType","class EnumerationColumnType<T : Enum<T>>(val klass: KClass<T>) : ColumnType<T> ","org.jetbrains.exposed.v1.core.EnumerationColumnType"]},{"name":"class EnumerationNameColumnType<T : Enum<T>>(val klass: KClass<T>, val colLength: Int) : ColumnType<T> ","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/index.html","searchKeys":["EnumerationNameColumnType","class EnumerationNameColumnType<T : Enum<T>>(val klass: KClass<T>, val colLength: Int) : ColumnType<T> ","org.jetbrains.exposed.v1.core.EnumerationNameColumnType"]},{"name":"class EqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.EqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-eq-op/index.html","searchKeys":["EqOp","class EqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","org.jetbrains.exposed.v1.core.EqOp"]},{"name":"class EqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.EqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-eq-sub-query-op/index.html","searchKeys":["EqSubQueryOp","class EqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.EqSubQueryOp"]},{"name":"class Exists(val query: AbstractQuery<*>) : Op<Boolean> , Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.Exists","location":"exposed-core/org.jetbrains.exposed.v1.core/-exists/index.html","searchKeys":["Exists","class Exists(val query: AbstractQuery<*>) : Op<Boolean> , Op.OpBoolean","org.jetbrains.exposed.v1.core.Exists"]},{"name":"class ExpFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.ExpFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-exp-function/index.html","searchKeys":["ExpFunction","class ExpFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.ExpFunction"]},{"name":"class ExplainResultRow(val fieldIndex: Map<String, Int>, data: Array<Any?>)","description":"org.jetbrains.exposed.v1.core.ExplainResultRow","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-result-row/index.html","searchKeys":["ExplainResultRow","class ExplainResultRow(val fieldIndex: Map<String, Int>, data: Array<Any?>)","org.jetbrains.exposed.v1.core.ExplainResultRow"]},{"name":"class ExposedBlob(inputStream: InputStream)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/index.html","searchKeys":["ExposedBlob","class ExposedBlob(inputStream: InputStream)","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob"]},{"name":"class ExposedSQLException(cause: Throwable?, val contexts: List<StatementContext>, transaction: Transaction) : SQLException","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/index.html","searchKeys":["ExposedSQLException","class ExposedSQLException(cause: Throwable?, val contexts: List<StatementContext>, transaction: Transaction) : SQLException","org.jetbrains.exposed.v1.exceptions.ExposedSQLException"]},{"name":"class ExpressionAlias<T>(val delegate: Expression<T>, val alias: String) : Expression<T> , IExpressionAlias<T> ","description":"org.jetbrains.exposed.v1.core.ExpressionAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-alias/index.html","searchKeys":["ExpressionAlias","class ExpressionAlias<T>(val delegate: Expression<T>, val alias: String) : Expression<T> , IExpressionAlias<T> ","org.jetbrains.exposed.v1.core.ExpressionAlias"]},{"name":"class ExpressionWithColumnTypeAlias<T>(val delegate: ExpressionWithColumnType<T>, val alias: String) : ExpressionWithColumnType<T> , IExpressionAlias<T> ","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type-alias/index.html","searchKeys":["ExpressionWithColumnTypeAlias","class ExpressionWithColumnTypeAlias<T>(val delegate: ExpressionWithColumnType<T>, val alias: String) : ExpressionWithColumnType<T> , IExpressionAlias<T> ","org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias"]},{"name":"class FirstValue<T>(val expr: ExpressionWithColumnType<T>) : WindowFunction<T> ","description":"org.jetbrains.exposed.v1.core.FirstValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-first-value/index.html","searchKeys":["FirstValue","class FirstValue<T>(val expr: ExpressionWithColumnType<T>) : WindowFunction<T> ","org.jetbrains.exposed.v1.core.FirstValue"]},{"name":"class FloatColumnType : ColumnType<Float> ","description":"org.jetbrains.exposed.v1.core.FloatColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-float-column-type/index.html","searchKeys":["FloatColumnType","class FloatColumnType : ColumnType<Float> ","org.jetbrains.exposed.v1.core.FloatColumnType"]},{"name":"class FloorFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<Long?> ","description":"org.jetbrains.exposed.v1.core.functions.math.FloorFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-floor-function/index.html","searchKeys":["FloorFunction","class FloorFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<Long?> ","org.jetbrains.exposed.v1.core.functions.math.FloorFunction"]},{"name":"class ForUpdate(mode: ForUpdateOption.MySQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-for-update/index.html","searchKeys":["ForUpdate","class ForUpdate(mode: ForUpdateOption.MySQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForUpdate"]},{"name":"class ForUpdate(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-update/index.html","searchKeys":["ForUpdate","class ForUpdate(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForUpdate"]},{"name":"class ForUpdateWait(timeout: Int) : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle.ForUpdateWait","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-oracle/-for-update-wait/index.html","searchKeys":["ForUpdateWait","class ForUpdateWait(timeout: Int) : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle.ForUpdateWait"]},{"name":"class GreaterEqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.GreaterEqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-eq-op/index.html","searchKeys":["GreaterEqOp","class GreaterEqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","org.jetbrains.exposed.v1.core.GreaterEqOp"]},{"name":"class GreaterEqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.GreaterEqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-eq-sub-query-op/index.html","searchKeys":["GreaterEqSubQueryOp","class GreaterEqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.GreaterEqSubQueryOp"]},{"name":"class GreaterOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.GreaterOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-op/index.html","searchKeys":["GreaterOp","class GreaterOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","org.jetbrains.exposed.v1.core.GreaterOp"]},{"name":"class GreaterSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.GreaterSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-sub-query-op/index.html","searchKeys":["GreaterSubQueryOp","class GreaterSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.GreaterSubQueryOp"]},{"name":"class GroupConcat<T : String?>(val expr: Expression<T>, val separator: String?, val distinct: Boolean, val orderBy: Pair<Expression<*>, SortOrder>) : Function<String> ","description":"org.jetbrains.exposed.v1.core.GroupConcat","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/index.html","searchKeys":["GroupConcat","class GroupConcat<T : String?>(val expr: Expression<T>, val separator: String?, val distinct: Boolean, val orderBy: Pair<Expression<*>, SortOrder>) : Function<String> ","org.jetbrains.exposed.v1.core.GroupConcat"]},{"name":"class InSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.InSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-in-sub-query-op/index.html","searchKeys":["InSubQueryOp","class InSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.InSubQueryOp"]},{"name":"class InTableOp(val expr: Expression<*>, val table: Table, val isInTable: Boolean = true) : Op<Boolean> , ComplexExpression","description":"org.jetbrains.exposed.v1.core.ops.InTableOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-table-op/index.html","searchKeys":["InTableOp","class InTableOp(val expr: Expression<*>, val table: Table, val isInTable: Boolean = true) : Op<Boolean> , ComplexExpression","org.jetbrains.exposed.v1.core.ops.InTableOp"]},{"name":"class IntNextVal(seq: Sequence) : NextVal<Int> ","description":"org.jetbrains.exposed.v1.core.NextVal.IntNextVal","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/-int-next-val/index.html","searchKeys":["IntNextVal","class IntNextVal(seq: Sequence) : NextVal<Int> ","org.jetbrains.exposed.v1.core.NextVal.IntNextVal"]},{"name":"class IntegerColumnType : ColumnType<Int> ","description":"org.jetbrains.exposed.v1.core.IntegerColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-integer-column-type/index.html","searchKeys":["IntegerColumnType","class IntegerColumnType : ColumnType<Int> ","org.jetbrains.exposed.v1.core.IntegerColumnType"]},{"name":"class IsDistinctFromOp(val expression1: Expression<*>, val expression2: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.IsDistinctFromOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-distinct-from-op/index.html","searchKeys":["IsDistinctFromOp","class IsDistinctFromOp(val expression1: Expression<*>, val expression2: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.IsDistinctFromOp"]},{"name":"class IsNotDistinctFromOp(val expression1: Expression<*>, val expression2: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.IsNotDistinctFromOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-distinct-from-op/index.html","searchKeys":["IsNotDistinctFromOp","class IsNotDistinctFromOp(val expression1: Expression<*>, val expression2: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.IsNotDistinctFromOp"]},{"name":"class IsNotNullOp(val expr: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.IsNotNullOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-null-op/index.html","searchKeys":["IsNotNullOp","class IsNotNullOp(val expr: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.IsNotNullOp"]},{"name":"class IsNullOp(val expr: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.IsNullOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-null-op/index.html","searchKeys":["IsNullOp","class IsNullOp(val expr: Expression<*>) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.IsNullOp"]},{"name":"class Join(val table: ColumnSet) : ColumnSet","description":"org.jetbrains.exposed.v1.core.Join","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/index.html","searchKeys":["Join","class Join(val table: ColumnSet) : ColumnSet","org.jetbrains.exposed.v1.core.Join"]},{"name":"class Key<T>","description":"org.jetbrains.exposed.v1.core.Key","location":"exposed-core/org.jetbrains.exposed.v1.core/-key/index.html","searchKeys":["Key","class Key<T>","org.jetbrains.exposed.v1.core.Key"]},{"name":"class Lag<T>(val expr: ExpressionWithColumnType<T>, val offset: ExpressionWithColumnType<Int> = intLiteral(1), val defaultValue: ExpressionWithColumnType<T>? = null) : WindowFunction<T?> ","description":"org.jetbrains.exposed.v1.core.Lag","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/index.html","searchKeys":["Lag","class Lag<T>(val expr: ExpressionWithColumnType<T>, val offset: ExpressionWithColumnType<Int> = intLiteral(1), val defaultValue: ExpressionWithColumnType<T>? = null) : WindowFunction<T?> ","org.jetbrains.exposed.v1.core.Lag"]},{"name":"class LastValue<T>(val expr: ExpressionWithColumnType<T>) : WindowFunction<T> ","description":"org.jetbrains.exposed.v1.core.LastValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-last-value/index.html","searchKeys":["LastValue","class LastValue<T>(val expr: ExpressionWithColumnType<T>) : WindowFunction<T> ","org.jetbrains.exposed.v1.core.LastValue"]},{"name":"class Lead<T>(val expr: ExpressionWithColumnType<T>, val offset: ExpressionWithColumnType<Int> = intLiteral(1), val defaultValue: ExpressionWithColumnType<T>? = null) : WindowFunction<T?> ","description":"org.jetbrains.exposed.v1.core.Lead","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/index.html","searchKeys":["Lead","class Lead<T>(val expr: ExpressionWithColumnType<T>, val offset: ExpressionWithColumnType<Int> = intLiteral(1), val defaultValue: ExpressionWithColumnType<T>? = null) : WindowFunction<T?> ","org.jetbrains.exposed.v1.core.Lead"]},{"name":"class LessEqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.LessEqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-eq-op/index.html","searchKeys":["LessEqOp","class LessEqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","org.jetbrains.exposed.v1.core.LessEqOp"]},{"name":"class LessEqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.LessEqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-eq-sub-query-op/index.html","searchKeys":["LessEqSubQueryOp","class LessEqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.LessEqSubQueryOp"]},{"name":"class LessOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.LessOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-op/index.html","searchKeys":["LessOp","class LessOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","org.jetbrains.exposed.v1.core.LessOp"]},{"name":"class LessSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.LessSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-sub-query-op/index.html","searchKeys":["LessSubQueryOp","class LessSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.LessSubQueryOp"]},{"name":"class LikeEscapeOp(val expr1: Expression<*>, val expr2: Expression<*>, like: Boolean, val escapeChar: Char?) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.LikeEscapeOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-escape-op/index.html","searchKeys":["LikeEscapeOp","class LikeEscapeOp(val expr1: Expression<*>, val expr2: Expression<*>, like: Boolean, val escapeChar: Char?) : ComparisonOp","org.jetbrains.exposed.v1.core.LikeEscapeOp"]},{"name":"class LiteralOp<T>(val columnType: IColumnType<T & Any>, val value: T) : ExpressionWithColumnType<T> ","description":"org.jetbrains.exposed.v1.core.LiteralOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-literal-op/index.html","searchKeys":["LiteralOp","class LiteralOp<T>(val columnType: IColumnType<T & Any>, val value: T) : ExpressionWithColumnType<T> ","org.jetbrains.exposed.v1.core.LiteralOp"]},{"name":"class Locate<T : String?>(val expr: Expression<T>, val substring: String) : Function<Int> ","description":"org.jetbrains.exposed.v1.core.Locate","location":"exposed-core/org.jetbrains.exposed.v1.core/-locate/index.html","searchKeys":["Locate","class Locate<T : String?>(val expr: Expression<T>, val substring: String) : Function<Int> ","org.jetbrains.exposed.v1.core.Locate"]},{"name":"class LongColumnType : ColumnType<Long> ","description":"org.jetbrains.exposed.v1.core.LongColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-long-column-type/index.html","searchKeys":["LongColumnType","class LongColumnType : ColumnType<Long> ","org.jetbrains.exposed.v1.core.LongColumnType"]},{"name":"class LongNextVal(seq: Sequence) : NextVal<Long> ","description":"org.jetbrains.exposed.v1.core.NextVal.LongNextVal","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/-long-next-val/index.html","searchKeys":["LongNextVal","class LongNextVal(seq: Sequence) : NextVal<Long> ","org.jetbrains.exposed.v1.core.NextVal.LongNextVal"]},{"name":"class LongQueryException : RuntimeException","description":"org.jetbrains.exposed.v1.exceptions.LongQueryException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-long-query-exception/index.html","searchKeys":["LongQueryException","class LongQueryException : RuntimeException","org.jetbrains.exposed.v1.exceptions.LongQueryException"]},{"name":"class LowerCase<T : String?>(val expr: Expression<T>) : Function<String> ","description":"org.jetbrains.exposed.v1.core.LowerCase","location":"exposed-core/org.jetbrains.exposed.v1.core/-lower-case/index.html","searchKeys":["LowerCase","class LowerCase<T : String?>(val expr: Expression<T>) : Function<String> ","org.jetbrains.exposed.v1.core.LowerCase"]},{"name":"class Max<T : Any, in S : T?>(val expr: Expression<in S>, columnType: IColumnType<T>) : Function<T?> , WindowFunction<T?> ","description":"org.jetbrains.exposed.v1.core.Max","location":"exposed-core/org.jetbrains.exposed.v1.core/-max/index.html","searchKeys":["Max","class Max<T : Any, in S : T?>(val expr: Expression<in S>, columnType: IColumnType<T>) : Function<T?> , WindowFunction<T?> ","org.jetbrains.exposed.v1.core.Max"]},{"name":"class Min<T : Any, in S : T?>(val expr: Expression<in S>, columnType: IColumnType<T>) : Function<T?> , WindowFunction<T?> ","description":"org.jetbrains.exposed.v1.core.Min","location":"exposed-core/org.jetbrains.exposed.v1.core/-min/index.html","searchKeys":["Min","class Min<T : Any, in S : T?>(val expr: Expression<in S>, columnType: IColumnType<T>) : Function<T?> , WindowFunction<T?> ","org.jetbrains.exposed.v1.core.Min"]},{"name":"class MinusOp<T, S : T>(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","description":"org.jetbrains.exposed.v1.core.MinusOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-minus-op/index.html","searchKeys":["MinusOp","class MinusOp<T, S : T>(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","org.jetbrains.exposed.v1.core.MinusOp"]},{"name":"class ModOp<T : Number?, S : Number?, R : Number?>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<R & Any>) : ExpressionWithColumnType<R> ","description":"org.jetbrains.exposed.v1.core.ModOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/index.html","searchKeys":["ModOp","class ModOp<T : Number?, S : Number?, R : Number?>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<R & Any>) : ExpressionWithColumnType<R> ","org.jetbrains.exposed.v1.core.ModOp"]},{"name":"class MultipleInListOp(val expr: List<Column<*>>, list: Iterable<List<*>>, isInList: Boolean = true) : InListOrNotInListBaseOp<List<*>> ","description":"org.jetbrains.exposed.v1.core.ops.MultipleInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-multiple-in-list-op/index.html","searchKeys":["MultipleInListOp","class MultipleInListOp(val expr: List<Column<*>>, list: Iterable<List<*>>, isInList: Boolean = true) : InListOrNotInListBaseOp<List<*>> ","org.jetbrains.exposed.v1.core.ops.MultipleInListOp"]},{"name":"class NeqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","description":"org.jetbrains.exposed.v1.core.NeqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-neq-op/index.html","searchKeys":["NeqOp","class NeqOp(val expr1: Expression<*>, val expr2: Expression<*>) : ComparisonOp","org.jetbrains.exposed.v1.core.NeqOp"]},{"name":"class NoOpConversion<T, S>(val expr: Expression<T>, val columnType: IColumnType<S & Any>) : ExpressionWithColumnType<S> ","description":"org.jetbrains.exposed.v1.core.NoOpConversion","location":"exposed-core/org.jetbrains.exposed.v1.core/-no-op-conversion/index.html","searchKeys":["NoOpConversion","class NoOpConversion<T, S>(val expr: Expression<T>, val columnType: IColumnType<S & Any>) : ExpressionWithColumnType<S> ","org.jetbrains.exposed.v1.core.NoOpConversion"]},{"name":"class NotEqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.NotEqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-eq-sub-query-op/index.html","searchKeys":["NotEqSubQueryOp","class NotEqSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.NotEqSubQueryOp"]},{"name":"class NotExists(val query: AbstractQuery<*>) : Op<Boolean> , Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.NotExists","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-exists/index.html","searchKeys":["NotExists","class NotExists(val query: AbstractQuery<*>) : Op<Boolean> , Op.OpBoolean","org.jetbrains.exposed.v1.core.NotExists"]},{"name":"class NotInSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","description":"org.jetbrains.exposed.v1.core.NotInSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-in-sub-query-op/index.html","searchKeys":["NotInSubQueryOp","class NotInSubQueryOp<T>(expr: Expression<T>, query: AbstractQuery<*>) : SubQueryOp<T> ","org.jetbrains.exposed.v1.core.NotInSubQueryOp"]},{"name":"class NotOp<T>(val expr: Expression<T>) : Op<Boolean> , Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.NotOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-op/index.html","searchKeys":["NotOp","class NotOp<T>(val expr: Expression<T>) : Op<Boolean> , Op.OpBoolean","org.jetbrains.exposed.v1.core.NotOp"]},{"name":"class NthValue<T>(val expr: ExpressionWithColumnType<T>, val n: ExpressionWithColumnType<Int>) : WindowFunction<T?> ","description":"org.jetbrains.exposed.v1.core.NthValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-nth-value/index.html","searchKeys":["NthValue","class NthValue<T>(val expr: ExpressionWithColumnType<T>, val n: ExpressionWithColumnType<Int>) : WindowFunction<T?> ","org.jetbrains.exposed.v1.core.NthValue"]},{"name":"class Ntile(val numBuckets: ExpressionWithColumnType<Int>) : WindowFunction<Int> ","description":"org.jetbrains.exposed.v1.core.Ntile","location":"exposed-core/org.jetbrains.exposed.v1.core/-ntile/index.html","searchKeys":["Ntile","class Ntile(val numBuckets: ExpressionWithColumnType<Int>) : WindowFunction<Int> ","org.jetbrains.exposed.v1.core.Ntile"]},{"name":"class OffsetFollowingWindowFrameBound(offset: Expression<Int>) : OffsetWindowFrameBound, CurrentOrFollowing","description":"org.jetbrains.exposed.v1.core.OffsetFollowingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-following-window-frame-bound/index.html","searchKeys":["OffsetFollowingWindowFrameBound","class OffsetFollowingWindowFrameBound(offset: Expression<Int>) : OffsetWindowFrameBound, CurrentOrFollowing","org.jetbrains.exposed.v1.core.OffsetFollowingWindowFrameBound"]},{"name":"class OffsetPrecedingWindowFrameBound(offset: Expression<Int>) : OffsetWindowFrameBound, CurrentOrPreceding","description":"org.jetbrains.exposed.v1.core.OffsetPrecedingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-preceding-window-frame-bound/index.html","searchKeys":["OffsetPrecedingWindowFrameBound","class OffsetPrecedingWindowFrameBound(offset: Expression<Int>) : OffsetWindowFrameBound, CurrentOrPreceding","org.jetbrains.exposed.v1.core.OffsetPrecedingWindowFrameBound"]},{"name":"class OrBitOp<T, S : T>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","description":"org.jetbrains.exposed.v1.core.OrBitOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-bit-op/index.html","searchKeys":["OrBitOp","class OrBitOp<T, S : T>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","org.jetbrains.exposed.v1.core.OrBitOp"]},{"name":"class OrOp(expressions: List<Expression<Boolean>>) : CompoundBooleanOp","description":"org.jetbrains.exposed.v1.core.OrOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-op/index.html","searchKeys":["OrOp","class OrOp(expressions: List<Expression<Boolean>>) : CompoundBooleanOp","org.jetbrains.exposed.v1.core.OrOp"]},{"name":"class PairInListOp<T1, T2>(val expr: Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>, list: Iterable<Pair<T1, T2>>, isInList: Boolean = true) : InListOrNotInListBaseOp<Pair<T1, T2>> ","description":"org.jetbrains.exposed.v1.core.ops.PairInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-pair-in-list-op/index.html","searchKeys":["PairInListOp","class PairInListOp<T1, T2>(val expr: Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>, list: Iterable<Pair<T1, T2>>, isInList: Boolean = true) : InListOrNotInListBaseOp<Pair<T1, T2>> ","org.jetbrains.exposed.v1.core.ops.PairInListOp"]},{"name":"class PercentRank(scale: Int = 2) : WindowFunction<BigDecimal> ","description":"org.jetbrains.exposed.v1.core.PercentRank","location":"exposed-core/org.jetbrains.exposed.v1.core/-percent-rank/index.html","searchKeys":["PercentRank","class PercentRank(scale: Int = 2) : WindowFunction<BigDecimal> ","org.jetbrains.exposed.v1.core.PercentRank"]},{"name":"class PlusOp<T, S : T>(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","description":"org.jetbrains.exposed.v1.core.PlusOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-plus-op/index.html","searchKeys":["PlusOp","class PlusOp<T, S : T>(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","org.jetbrains.exposed.v1.core.PlusOp"]},{"name":"class PowerFunction<B : Number?, E : Number?>(base: ExpressionWithColumnType<B>, exponent: Expression<E>, precision: Int = MathContext.DECIMAL64.precision, scale: Int = 10) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.PowerFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-power-function/index.html","searchKeys":["PowerFunction","class PowerFunction<B : Number?, E : Number?>(base: ExpressionWithColumnType<B>, exponent: Expression<E>, precision: Int = MathContext.DECIMAL64.precision, scale: Int = 10) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.PowerFunction"]},{"name":"class QueryAlias(val query: AbstractQuery<*>, val alias: String) : ColumnSet","description":"org.jetbrains.exposed.v1.core.QueryAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/index.html","searchKeys":["QueryAlias","class QueryAlias(val query: AbstractQuery<*>, val alias: String) : ColumnSet","org.jetbrains.exposed.v1.core.QueryAlias"]},{"name":"class QueryBuilder(val prepared: Boolean)","description":"org.jetbrains.exposed.v1.core.QueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/index.html","searchKeys":["QueryBuilder","class QueryBuilder(val prepared: Boolean)","org.jetbrains.exposed.v1.core.QueryBuilder"]},{"name":"class QueryParameter<T>(val value: T, val sqlType: IColumnType<T & Any>) : Expression<T> ","description":"org.jetbrains.exposed.v1.core.QueryParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-parameter/index.html","searchKeys":["QueryParameter","class QueryParameter<T>(val value: T, val sqlType: IColumnType<T & Any>) : Expression<T> ","org.jetbrains.exposed.v1.core.QueryParameter"]},{"name":"class RadiansFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.RadiansFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-radians-function/index.html","searchKeys":["RadiansFunction","class RadiansFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.RadiansFunction"]},{"name":"class Random(val seed: Int? = null) : Function<BigDecimal> ","description":"org.jetbrains.exposed.v1.core.Random","location":"exposed-core/org.jetbrains.exposed.v1.core/-random/index.html","searchKeys":["Random","class Random(val seed: Int? = null) : Function<BigDecimal> ","org.jetbrains.exposed.v1.core.Random"]},{"name":"class Rank : WindowFunction<Long> ","description":"org.jetbrains.exposed.v1.core.Rank","location":"exposed-core/org.jetbrains.exposed.v1.core/-rank/index.html","searchKeys":["Rank","class Rank : WindowFunction<Long> ","org.jetbrains.exposed.v1.core.Rank"]},{"name":"class RegexpOp<T : String?>(val expr1: Expression<T>, val expr2: Expression<String>, val caseSensitive: Boolean) : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.RegexpOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-regexp-op/index.html","searchKeys":["RegexpOp","class RegexpOp<T : String?>(val expr1: Expression<T>, val expr2: Expression<String>, val caseSensitive: Boolean) : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.RegexpOp"]},{"name":"class ResultRow(val fieldIndex: Map<Expression<*>, Int>, data: Array<Any?> = arrayOfNulls<Any?>(fieldIndex.size))","description":"org.jetbrains.exposed.v1.core.ResultRow","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/index.html","searchKeys":["ResultRow","class ResultRow(val fieldIndex: Map<Expression<*>, Int>, data: Array<Any?> = arrayOfNulls<Any?>(fieldIndex.size))","org.jetbrains.exposed.v1.core.ResultRow"]},{"name":"class RoundFunction<T : Number?>(expression: ExpressionWithColumnType<T>, scale: Int) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.RoundFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-round-function/index.html","searchKeys":["RoundFunction","class RoundFunction<T : Number?>(expression: ExpressionWithColumnType<T>, scale: Int) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.RoundFunction"]},{"name":"class RowNumber : WindowFunction<Long> ","description":"org.jetbrains.exposed.v1.core.RowNumber","location":"exposed-core/org.jetbrains.exposed.v1.core/-row-number/index.html","searchKeys":["RowNumber","class RowNumber : WindowFunction<Long> ","org.jetbrains.exposed.v1.core.RowNumber"]},{"name":"class Sequence(val name: String, val startWith: Long? = null, val incrementBy: Long? = null, val minValue: Long? = null, val maxValue: Long? = null, val cycle: Boolean? = null, val cache: Long? = null)","description":"org.jetbrains.exposed.v1.core.Sequence","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/index.html","searchKeys":["Sequence","class Sequence(val name: String, val startWith: Long? = null, val incrementBy: Long? = null, val minValue: Long? = null, val maxValue: Long? = null, val cycle: Boolean? = null, val cache: Long? = null)","org.jetbrains.exposed.v1.core.Sequence"]},{"name":"class ShortColumnType : ColumnType<Short> ","description":"org.jetbrains.exposed.v1.core.ShortColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-short-column-type/index.html","searchKeys":["ShortColumnType","class ShortColumnType : ColumnType<Short> ","org.jetbrains.exposed.v1.core.ShortColumnType"]},{"name":"class SignFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<Int?> ","description":"org.jetbrains.exposed.v1.core.functions.math.SignFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-sign-function/index.html","searchKeys":["SignFunction","class SignFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<Int?> ","org.jetbrains.exposed.v1.core.functions.math.SignFunction"]},{"name":"class SinFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.SinFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-sin-function/index.html","searchKeys":["SinFunction","class SinFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.SinFunction"]},{"name":"class SingleValueInListOp<T>(val expr: ExpressionWithColumnType<out T>, list: Iterable<T>, isInList: Boolean = true) : InListOrNotInListBaseOp<T> ","description":"org.jetbrains.exposed.v1.core.ops.SingleValueInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-single-value-in-list-op/index.html","searchKeys":["SingleValueInListOp","class SingleValueInListOp<T>(val expr: ExpressionWithColumnType<out T>, list: Iterable<T>, isInList: Boolean = true) : InListOrNotInListBaseOp<T> ","org.jetbrains.exposed.v1.core.ops.SingleValueInListOp"]},{"name":"class Slice(val source: ColumnSet, val fields: List<Expression<*>>) : FieldSet","description":"org.jetbrains.exposed.v1.core.Slice","location":"exposed-core/org.jetbrains.exposed.v1.core/-slice/index.html","searchKeys":["Slice","class Slice(val source: ColumnSet, val fields: List<Expression<*>>) : FieldSet","org.jetbrains.exposed.v1.core.Slice"]},{"name":"class SqrtFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.SqrtFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-sqrt-function/index.html","searchKeys":["SqrtFunction","class SqrtFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.SqrtFunction"]},{"name":"class StatementContext(val statement: Statement<*>, val args: Iterable<Pair<IColumnType<*>, Any?>>)","description":"org.jetbrains.exposed.v1.core.statements.StatementContext","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-context/index.html","searchKeys":["StatementContext","class StatementContext(val statement: Statement<*>, val args: Iterable<Pair<IColumnType<*>, Any?>>)","org.jetbrains.exposed.v1.core.statements.StatementContext"]},{"name":"class StdDevPop<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.StdDevPop","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-pop/index.html","searchKeys":["StdDevPop","class StdDevPop<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.StdDevPop"]},{"name":"class StdDevSamp<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.StdDevSamp","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-samp/index.html","searchKeys":["StdDevSamp","class StdDevSamp<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.StdDevSamp"]},{"name":"class Substring<T : String?>(expr: Expression<T>, start: Expression<Int>, val length: Expression<Int>) : Function<String> ","description":"org.jetbrains.exposed.v1.core.Substring","location":"exposed-core/org.jetbrains.exposed.v1.core/-substring/index.html","searchKeys":["Substring","class Substring<T : String?>(expr: Expression<T>, start: Expression<Int>, val length: Expression<Int>) : Function<String> ","org.jetbrains.exposed.v1.core.Substring"]},{"name":"class Sum<T>(val expr: Expression<T>, columnType: IColumnType<T & Any>) : Function<T?> , WindowFunction<T?> ","description":"org.jetbrains.exposed.v1.core.Sum","location":"exposed-core/org.jetbrains.exposed.v1.core/-sum/index.html","searchKeys":["Sum","class Sum<T>(val expr: Expression<T>, columnType: IColumnType<T & Any>) : Function<T?> , WindowFunction<T?> ","org.jetbrains.exposed.v1.core.Sum"]},{"name":"class TanFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.functions.math.TanFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-tan-function/index.html","searchKeys":["TanFunction","class TanFunction<T : Number?>(expression: ExpressionWithColumnType<T>) : CustomFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.functions.math.TanFunction"]},{"name":"class TimesOp<T, S : T>(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","description":"org.jetbrains.exposed.v1.core.TimesOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-times-op/index.html","searchKeys":["TimesOp","class TimesOp<T, S : T>(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>) : CustomOperator<T> ","org.jetbrains.exposed.v1.core.TimesOp"]},{"name":"class TransactionStore<T : Any>(val init: Transaction.() -> T? = null) : ReadWriteProperty<Any?, T?> ","description":"org.jetbrains.exposed.v1.core.transactions.TransactionStore","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-store/index.html","searchKeys":["TransactionStore","class TransactionStore<T : Any>(val init: Transaction.() -> T? = null) : ReadWriteProperty<Any?, T?> ","org.jetbrains.exposed.v1.core.transactions.TransactionStore"]},{"name":"class Trim<T : String?>(val expr: Expression<T>) : Function<String> ","description":"org.jetbrains.exposed.v1.core.Trim","location":"exposed-core/org.jetbrains.exposed.v1.core/-trim/index.html","searchKeys":["Trim","class Trim<T : String?>(val expr: Expression<T>) : Function<String> ","org.jetbrains.exposed.v1.core.Trim"]},{"name":"class TripleInListOp<T1, T2, T3>(val expr: Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>, list: Iterable<Triple<T1, T2, T3>>, isInList: Boolean = true) : InListOrNotInListBaseOp<Triple<T1, T2, T3>> ","description":"org.jetbrains.exposed.v1.core.ops.TripleInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-triple-in-list-op/index.html","searchKeys":["TripleInListOp","class TripleInListOp<T1, T2, T3>(val expr: Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>, list: Iterable<Triple<T1, T2, T3>>, isInList: Boolean = true) : InListOrNotInListBaseOp<Triple<T1, T2, T3>> ","org.jetbrains.exposed.v1.core.ops.TripleInListOp"]},{"name":"class UByteColumnType : ColumnType<UByte> ","description":"org.jetbrains.exposed.v1.core.UByteColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-byte-column-type/index.html","searchKeys":["UByteColumnType","class UByteColumnType : ColumnType<UByte> ","org.jetbrains.exposed.v1.core.UByteColumnType"]},{"name":"class UIntegerColumnType : ColumnType<UInt> ","description":"org.jetbrains.exposed.v1.core.UIntegerColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-integer-column-type/index.html","searchKeys":["UIntegerColumnType","class UIntegerColumnType : ColumnType<UInt> ","org.jetbrains.exposed.v1.core.UIntegerColumnType"]},{"name":"class ULongColumnType : ColumnType<ULong> ","description":"org.jetbrains.exposed.v1.core.ULongColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-long-column-type/index.html","searchKeys":["ULongColumnType","class ULongColumnType : ColumnType<ULong> ","org.jetbrains.exposed.v1.core.ULongColumnType"]},{"name":"class UShortColumnType : ColumnType<UShort> ","description":"org.jetbrains.exposed.v1.core.UShortColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-short-column-type/index.html","searchKeys":["UShortColumnType","class UShortColumnType : ColumnType<UShort> ","org.jetbrains.exposed.v1.core.UShortColumnType"]},{"name":"class UUIDColumnType : ColumnType<UUID> ","description":"org.jetbrains.exposed.v1.core.UUIDColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/index.html","searchKeys":["UUIDColumnType","class UUIDColumnType : ColumnType<UUID> ","org.jetbrains.exposed.v1.core.UUIDColumnType"]},{"name":"class UnboundedFollowingWindowFrameBound : UnboundedWindowFrameBound, CurrentOrFollowing","description":"org.jetbrains.exposed.v1.core.UnboundedFollowingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-following-window-frame-bound/index.html","searchKeys":["UnboundedFollowingWindowFrameBound","class UnboundedFollowingWindowFrameBound : UnboundedWindowFrameBound, CurrentOrFollowing","org.jetbrains.exposed.v1.core.UnboundedFollowingWindowFrameBound"]},{"name":"class UnboundedPrecedingWindowFrameBound : UnboundedWindowFrameBound, CurrentOrPreceding","description":"org.jetbrains.exposed.v1.core.UnboundedPrecedingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-preceding-window-frame-bound/index.html","searchKeys":["UnboundedPrecedingWindowFrameBound","class UnboundedPrecedingWindowFrameBound : UnboundedWindowFrameBound, CurrentOrPreceding","org.jetbrains.exposed.v1.core.UnboundedPrecedingWindowFrameBound"]},{"name":"class UnsupportedByDialectException(baseMessage: String, val dialect: DatabaseDialect) : UnsupportedOperationException","description":"org.jetbrains.exposed.v1.exceptions.UnsupportedByDialectException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-unsupported-by-dialect-exception/index.html","searchKeys":["UnsupportedByDialectException","class UnsupportedByDialectException(baseMessage: String, val dialect: DatabaseDialect) : UnsupportedOperationException","org.jetbrains.exposed.v1.exceptions.UnsupportedByDialectException"]},{"name":"class UpperCase<T : String?>(val expr: Expression<T>) : Function<String> ","description":"org.jetbrains.exposed.v1.core.UpperCase","location":"exposed-core/org.jetbrains.exposed.v1.core/-upper-case/index.html","searchKeys":["UpperCase","class UpperCase<T : String?>(val expr: Expression<T>) : Function<String> ","org.jetbrains.exposed.v1.core.UpperCase"]},{"name":"class VarPop<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.VarPop","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-pop/index.html","searchKeys":["VarPop","class VarPop<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.VarPop"]},{"name":"class VarSamp<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","description":"org.jetbrains.exposed.v1.core.VarSamp","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-samp/index.html","searchKeys":["VarSamp","class VarSamp<T>(val expression: Expression<T>, scale: Int) : Function<BigDecimal?> , WindowFunction<BigDecimal?> ","org.jetbrains.exposed.v1.core.VarSamp"]},{"name":"class WindowFrameClause(unit: WindowFrameUnit, start: WindowFrameBound, end: WindowFrameBound? = null)","description":"org.jetbrains.exposed.v1.core.WindowFrameClause","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-clause/index.html","searchKeys":["WindowFrameClause","class WindowFrameClause(unit: WindowFrameUnit, start: WindowFrameBound, end: WindowFrameBound? = null)","org.jetbrains.exposed.v1.core.WindowFrameClause"]},{"name":"class WindowFunctionDefinition<T>(val columnType: IColumnType<T & Any>, function: WindowFunction<T>) : ExpressionWithColumnType<T> ","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/index.html","searchKeys":["WindowFunctionDefinition","class WindowFunctionDefinition<T>(val columnType: IColumnType<T & Any>, function: WindowFunction<T>) : ExpressionWithColumnType<T> ","org.jetbrains.exposed.v1.core.WindowFunctionDefinition"]},{"name":"class XorBitOp<T, S : T>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","description":"org.jetbrains.exposed.v1.core.XorBitOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-xor-bit-op/index.html","searchKeys":["XorBitOp","class XorBitOp<T, S : T>(val expr1: Expression<T>, val expr2: Expression<S>, val columnType: IColumnType<T & Any>) : ExpressionWithColumnType<T> ","org.jetbrains.exposed.v1.core.XorBitOp"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.BasicBinaryColumnType.BasicBinaryColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-basic-binary-column-type/-basic-binary-column-type.html","searchKeys":["BasicBinaryColumnType","constructor()","org.jetbrains.exposed.v1.core.BasicBinaryColumnType.BasicBinaryColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.BooleanColumnType.BooleanColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/-boolean-column-type.html","searchKeys":["BooleanColumnType","constructor()","org.jetbrains.exposed.v1.core.BooleanColumnType.BooleanColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.ByteColumnType.ByteColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-byte-column-type/-byte-column-type.html","searchKeys":["ByteColumnType","constructor()","org.jetbrains.exposed.v1.core.ByteColumnType.ByteColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.CharacterColumnType.CharacterColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-character-column-type/-character-column-type.html","searchKeys":["CharacterColumnType","constructor()","org.jetbrains.exposed.v1.core.CharacterColumnType.CharacterColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.ColumnSet.ColumnSet","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/-column-set.html","searchKeys":["ColumnSet","constructor()","org.jetbrains.exposed.v1.core.ColumnSet.ColumnSet"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.CompositeColumn.CompositeColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-column/-composite-column.html","searchKeys":["CompositeColumn","constructor()","org.jetbrains.exposed.v1.core.CompositeColumn.CompositeColumn"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.CompositeSqlLogger.CompositeSqlLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-sql-logger/-composite-sql-logger.html","searchKeys":["CompositeSqlLogger","constructor()","org.jetbrains.exposed.v1.core.CompositeSqlLogger.CompositeSqlLogger"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.Builder","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/-builder.html","searchKeys":["Builder","constructor()","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.Builder"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.DenseRank.DenseRank","location":"exposed-core/org.jetbrains.exposed.v1.core/-dense-rank/-dense-rank.html","searchKeys":["DenseRank","constructor()","org.jetbrains.exposed.v1.core.DenseRank.DenseRank"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.DoubleColumnType.DoubleColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-double-column-type/-double-column-type.html","searchKeys":["DoubleColumnType","constructor()","org.jetbrains.exposed.v1.core.DoubleColumnType.DoubleColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.Expression.Expression","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/-expression.html","searchKeys":["Expression","constructor()","org.jetbrains.exposed.v1.core.Expression.Expression"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnType.ExpressionWithColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type/-expression-with-column-type.html","searchKeys":["ExpressionWithColumnType","constructor()","org.jetbrains.exposed.v1.core.ExpressionWithColumnType.ExpressionWithColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.FloatColumnType.FloatColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-float-column-type/-float-column-type.html","searchKeys":["FloatColumnType","constructor()","org.jetbrains.exposed.v1.core.FloatColumnType.FloatColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.IntegerColumnType.IntegerColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-integer-column-type/-integer-column-type.html","searchKeys":["IntegerColumnType","constructor()","org.jetbrains.exposed.v1.core.IntegerColumnType.IntegerColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.Key.Key","location":"exposed-core/org.jetbrains.exposed.v1.core/-key/-key.html","searchKeys":["Key","constructor()","org.jetbrains.exposed.v1.core.Key.Key"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.LongColumnType.LongColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-long-column-type/-long-column-type.html","searchKeys":["LongColumnType","constructor()","org.jetbrains.exposed.v1.core.LongColumnType.LongColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.Op.Op","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-op.html","searchKeys":["Op","constructor()","org.jetbrains.exposed.v1.core.Op.Op"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.Rank.Rank","location":"exposed-core/org.jetbrains.exposed.v1.core/-rank/-rank.html","searchKeys":["Rank","constructor()","org.jetbrains.exposed.v1.core.Rank.Rank"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.RowNumber.RowNumber","location":"exposed-core/org.jetbrains.exposed.v1.core/-row-number/-row-number.html","searchKeys":["RowNumber","constructor()","org.jetbrains.exposed.v1.core.RowNumber.RowNumber"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.SchemaUtilityApi.SchemaUtilityApi","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema-utility-api/-schema-utility-api.html","searchKeys":["SchemaUtilityApi","constructor()","org.jetbrains.exposed.v1.core.SchemaUtilityApi.SchemaUtilityApi"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.ShortColumnType.ShortColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-short-column-type/-short-column-type.html","searchKeys":["ShortColumnType","constructor()","org.jetbrains.exposed.v1.core.ShortColumnType.ShortColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.Transaction.Transaction","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/-transaction.html","searchKeys":["Transaction","constructor()","org.jetbrains.exposed.v1.core.Transaction.Transaction"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UByteColumnType.UByteColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-byte-column-type/-u-byte-column-type.html","searchKeys":["UByteColumnType","constructor()","org.jetbrains.exposed.v1.core.UByteColumnType.UByteColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UIntegerColumnType.UIntegerColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-integer-column-type/-u-integer-column-type.html","searchKeys":["UIntegerColumnType","constructor()","org.jetbrains.exposed.v1.core.UIntegerColumnType.UIntegerColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.ULongColumnType.ULongColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-long-column-type/-u-long-column-type.html","searchKeys":["ULongColumnType","constructor()","org.jetbrains.exposed.v1.core.ULongColumnType.ULongColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UShortColumnType.UShortColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-short-column-type/-u-short-column-type.html","searchKeys":["UShortColumnType","constructor()","org.jetbrains.exposed.v1.core.UShortColumnType.UShortColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.UUIDColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/-u-u-i-d-column-type.html","searchKeys":["UUIDColumnType","constructor()","org.jetbrains.exposed.v1.core.UUIDColumnType.UUIDColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UnboundedFollowingWindowFrameBound.UnboundedFollowingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-following-window-frame-bound/-unbounded-following-window-frame-bound.html","searchKeys":["UnboundedFollowingWindowFrameBound","constructor()","org.jetbrains.exposed.v1.core.UnboundedFollowingWindowFrameBound.UnboundedFollowingWindowFrameBound"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UnboundedPrecedingWindowFrameBound.UnboundedPrecedingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-preceding-window-frame-bound/-unbounded-preceding-window-frame-bound.html","searchKeys":["UnboundedPrecedingWindowFrameBound","constructor()","org.jetbrains.exposed.v1.core.UnboundedPrecedingWindowFrameBound.UnboundedPrecedingWindowFrameBound"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.UserDataHolder.UserDataHolder","location":"exposed-core/org.jetbrains.exposed.v1.core/-user-data-holder/-user-data-holder.html","searchKeys":["UserDataHolder","constructor()","org.jetbrains.exposed.v1.core.UserDataHolder.UserDataHolder"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.IdentifierManagerApi","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/-identifier-manager-api.html","searchKeys":["IdentifierManagerApi","constructor()","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.IdentifierManagerApi"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.DataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/-data-type-provider.html","searchKeys":["DataTypeProvider","constructor()","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.DataTypeProvider"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.FunctionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/-function-provider.html","searchKeys":["FunctionProvider","constructor()","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.FunctionProvider"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2Dialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-dialect.html","searchKeys":["H2Dialect","constructor()","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2Dialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.MariaDBDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/-maria-d-b-dialect.html","searchKeys":["MariaDBDialect","constructor()","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.MariaDBDialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.MysqlDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/-mysql-dialect.html","searchKeys":["MysqlDialect","constructor()","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.MysqlDialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.OracleDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/-oracle-dialect.html","searchKeys":["OracleDialect","constructor()","org.jetbrains.exposed.v1.core.vendors.OracleDialect.OracleDialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect.PostgreSQLNGDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-n-g-dialect/-postgre-s-q-l-n-g-dialect.html","searchKeys":["PostgreSQLNGDialect","constructor()","org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect.PostgreSQLNGDialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.SQLServerDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/-s-q-l-server-dialect.html","searchKeys":["SQLServerDialect","constructor()","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.SQLServerDialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.SQLiteDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/-s-q-lite-dialect.html","searchKeys":["SQLiteDialect","constructor()","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.SQLiteDialect"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.exceptions.LongQueryException.LongQueryException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-long-query-exception/-long-query-exception.html","searchKeys":["LongQueryException","constructor()","org.jetbrains.exposed.v1.exceptions.LongQueryException.LongQueryException"]},{"name":"constructor(analyze: Boolean, options: String?, internalStatement: Statement<*>)","description":"org.jetbrains.exposed.v1.core.ExplainQuery.ExplainQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-query/-explain-query.html","searchKeys":["ExplainQuery","constructor(analyze: Boolean, options: String?, internalStatement: Statement<*>)","org.jetbrains.exposed.v1.core.ExplainQuery.ExplainQuery"]},{"name":"constructor(base: ExpressionWithColumnType<B>, exponent: Expression<E>, precision: Int = MathContext.DECIMAL64.precision, scale: Int = 10)","description":"org.jetbrains.exposed.v1.core.functions.math.PowerFunction.PowerFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-power-function/-power-function.html","searchKeys":["PowerFunction","constructor(base: ExpressionWithColumnType<B>, exponent: Expression<E>, precision: Int = MathContext.DECIMAL64.precision, scale: Int = 10)","org.jetbrains.exposed.v1.core.functions.math.PowerFunction.PowerFunction"]},{"name":"constructor(baseMessage: String, dialect: DatabaseDialect)","description":"org.jetbrains.exposed.v1.exceptions.UnsupportedByDialectException.UnsupportedByDialectException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-unsupported-by-dialect-exception/-unsupported-by-dialect-exception.html","searchKeys":["UnsupportedByDialectException","constructor(baseMessage: String, dialect: DatabaseDialect)","org.jetbrains.exposed.v1.exceptions.UnsupportedByDialectException.UnsupportedByDialectException"]},{"name":"constructor(bytes: ByteArray)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.ExposedBlob","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/-exposed-blob.html","searchKeys":["ExposedBlob","constructor(bytes: ByteArray)","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.ExposedBlob"]},{"name":"constructor(caseWhen: CaseWhen<T>, elseResult: Expression<T>)","description":"org.jetbrains.exposed.v1.core.CaseWhenElse.CaseWhenElse","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when-else/-case-when-else.html","searchKeys":["CaseWhenElse","constructor(caseWhen: CaseWhen<T>, elseResult: Expression<T>)","org.jetbrains.exposed.v1.core.CaseWhenElse.CaseWhenElse"]},{"name":"constructor(cause: Throwable?, contexts: List<StatementContext>, transaction: Transaction)","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException.ExposedSQLException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/-exposed-s-q-l-exception.html","searchKeys":["ExposedSQLException","constructor(cause: Throwable?, contexts: List<StatementContext>, transaction: Transaction)","org.jetbrains.exposed.v1.exceptions.ExposedSQLException.ExposedSQLException"]},{"name":"constructor(colLength: Int = 255, collate: String? = null)","description":"org.jetbrains.exposed.v1.core.CharColumnType.CharColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/-char-column-type.html","searchKeys":["CharColumnType","constructor(colLength: Int = 255, collate: String? = null)","org.jetbrains.exposed.v1.core.CharColumnType.CharColumnType"]},{"name":"constructor(colLength: Int = 255, collate: String? = null)","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.VarCharColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/-var-char-column-type.html","searchKeys":["VarCharColumnType","constructor(colLength: Int = 255, collate: String? = null)","org.jetbrains.exposed.v1.core.VarCharColumnType.VarCharColumnType"]},{"name":"constructor(collate: String? = null)","description":"org.jetbrains.exposed.v1.core.StringColumnType.StringColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/-string-column-type.html","searchKeys":["StringColumnType","constructor(collate: String? = null)","org.jetbrains.exposed.v1.core.StringColumnType.StringColumnType"]},{"name":"constructor(collate: String? = null, eagerLoading: Boolean = false)","description":"org.jetbrains.exposed.v1.core.LargeTextColumnType.LargeTextColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-large-text-column-type/-large-text-column-type.html","searchKeys":["LargeTextColumnType","constructor(collate: String? = null, eagerLoading: Boolean = false)","org.jetbrains.exposed.v1.core.LargeTextColumnType.LargeTextColumnType"]},{"name":"constructor(collate: String? = null, eagerLoading: Boolean = false)","description":"org.jetbrains.exposed.v1.core.MediumTextColumnType.MediumTextColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-medium-text-column-type/-medium-text-column-type.html","searchKeys":["MediumTextColumnType","constructor(collate: String? = null, eagerLoading: Boolean = false)","org.jetbrains.exposed.v1.core.MediumTextColumnType.MediumTextColumnType"]},{"name":"constructor(collate: String? = null, eagerLoading: Boolean = false)","description":"org.jetbrains.exposed.v1.core.TextColumnType.TextColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-text-column-type/-text-column-type.html","searchKeys":["TextColumnType","constructor(collate: String? = null, eagerLoading: Boolean = false)","org.jetbrains.exposed.v1.core.TextColumnType.TextColumnType"]},{"name":"constructor(column1: Column<C1>, column2: Column<C2>, transformFromValue: (T) -> Pair<C1?, C2?>, transformToValue: (Any?, Any?) -> T, nullable: Boolean = false)","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn.BiCompositeColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/-bi-composite-column.html","searchKeys":["BiCompositeColumn","constructor(column1: Column<C1>, column2: Column<C2>, transformFromValue: (T) -> Pair<C1?, C2?>, transformToValue: (Any?, Any?) -> T, nullable: Boolean = false)","org.jetbrains.exposed.v1.core.BiCompositeColumn.BiCompositeColumn"]},{"name":"constructor(columnName: String, tableName: String)","description":"org.jetbrains.exposed.v1.exceptions.DuplicateColumnException.DuplicateColumnException","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-duplicate-column-exception/-duplicate-column-exception.html","searchKeys":["DuplicateColumnException","constructor(columnName: String, tableName: String)","org.jetbrains.exposed.v1.exceptions.DuplicateColumnException.DuplicateColumnException"]},{"name":"constructor(columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.Function.Function","location":"exposed-core/org.jetbrains.exposed.v1.core/-function/-function.html","searchKeys":["Function","constructor(columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.Function.Function"]},{"name":"constructor(columnType: IColumnType<T & Any>, function: WindowFunction<T>)","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.WindowFunctionDefinition","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/-window-function-definition.html","searchKeys":["WindowFunctionDefinition","constructor(columnType: IColumnType<T & Any>, function: WindowFunction<T>)","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.WindowFunctionDefinition"]},{"name":"constructor(columnType: IColumnType<T & Any>, value: T)","description":"org.jetbrains.exposed.v1.core.LiteralOp.LiteralOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-literal-op/-literal-op.html","searchKeys":["LiteralOp","constructor(columnType: IColumnType<T & Any>, value: T)","org.jetbrains.exposed.v1.core.LiteralOp.LiteralOp"]},{"name":"constructor(columns: Array<Column<*>>, name: String? = null)","description":"org.jetbrains.exposed.v1.core.Table.PrimaryKey.PrimaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-primary-key/-primary-key.html","searchKeys":["PrimaryKey","constructor(columns: Array<Column<*>>, name: String? = null)","org.jetbrains.exposed.v1.core.Table.PrimaryKey.PrimaryKey"]},{"name":"constructor(columns: List<Column<*>>, selectQuery: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.statements.ReplaceSelectStatement.ReplaceSelectStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-replace-select-statement/-replace-select-statement.html","searchKeys":["ReplaceSelectStatement","constructor(columns: List<Column<*>>, selectQuery: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.statements.ReplaceSelectStatement.ReplaceSelectStatement"]},{"name":"constructor(columns: List<Column<*>>, selectQuery: AbstractQuery<*>, isIgnore: Boolean = false)","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.InsertSelectStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/-insert-select-statement.html","searchKeys":["InsertSelectStatement","constructor(columns: List<Column<*>>, selectQuery: AbstractQuery<*>, isIgnore: Boolean = false)","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.InsertSelectStatement"]},{"name":"constructor(columns: List<Column<*>>, unique: Boolean, customName: String? = null, indexType: String? = null, filterCondition: Op<Boolean>? = null, functions: List<ExpressionWithColumnType<*>>? = null, functionsTable: Table? = null)","description":"org.jetbrains.exposed.v1.core.Index.Index","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/-index.html","searchKeys":["Index","constructor(columns: List<Column<*>>, unique: Boolean, customName: String? = null, indexType: String? = null, filterCondition: Op<Boolean>? = null, functions: List<ExpressionWithColumnType<*>>? = null, functionsTable: Table? = null)","org.jetbrains.exposed.v1.core.Index.Index"]},{"name":"constructor(count: Int)","description":"org.jetbrains.exposed.v1.core.statements.StatementResult.Count.Count","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/-count/-count.html","searchKeys":["Count","constructor(count: Int)","org.jetbrains.exposed.v1.core.statements.StatementResult.Count.Count"]},{"name":"constructor(database: String)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.ExposedDatabaseMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/-exposed-database-metadata.html","searchKeys":["ExposedDatabaseMetadata","constructor(database: String)","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.ExposedDatabaseMetadata"]},{"name":"constructor(delegate: ColumnType<T & Any>, maximumCardinality: Int? = null)","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.ArrayColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/-array-column-type.html","searchKeys":["ArrayColumnType","constructor(delegate: ColumnType<T & Any>, maximumCardinality: Int? = null)","org.jetbrains.exposed.v1.core.ArrayColumnType.ArrayColumnType"]},{"name":"constructor(delegate: ColumnType<T>, _autoincSeq: String?, fallbackSeqName: String)","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.AutoIncColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/-auto-inc-column-type.html","searchKeys":["AutoIncColumnType","constructor(delegate: ColumnType<T>, _autoincSeq: String?, fallbackSeqName: String)","org.jetbrains.exposed.v1.core.AutoIncColumnType.AutoIncColumnType"]},{"name":"constructor(delegate: ColumnType<T>, sequence: Sequence)","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.AutoIncColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/-auto-inc-column-type.html","searchKeys":["AutoIncColumnType","constructor(delegate: ColumnType<T>, sequence: Sequence)","org.jetbrains.exposed.v1.core.AutoIncColumnType.AutoIncColumnType"]},{"name":"constructor(delegate: Expression<T>, alias: String)","description":"org.jetbrains.exposed.v1.core.ExpressionAlias.ExpressionAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-alias/-expression-alias.html","searchKeys":["ExpressionAlias","constructor(delegate: Expression<T>, alias: String)","org.jetbrains.exposed.v1.core.ExpressionAlias.ExpressionAlias"]},{"name":"constructor(delegate: ExpressionWithColumnType<T>, alias: String)","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.ExpressionWithColumnTypeAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type-alias/-expression-with-column-type-alias.html","searchKeys":["ExpressionWithColumnTypeAlias","constructor(delegate: ExpressionWithColumnType<T>, alias: String)","org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.ExpressionWithColumnTypeAlias"]},{"name":"constructor(delegate: IColumnType<T & Any>, maximumCardinality: List<Int>? = null, dimensions: Int = 1)","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.ArrayColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/-array-column-type.html","searchKeys":["ArrayColumnType","constructor(delegate: IColumnType<T & Any>, maximumCardinality: List<Int>? = null, dimensions: Int = 1)","org.jetbrains.exposed.v1.core.ArrayColumnType.ArrayColumnType"]},{"name":"constructor(delegate: IColumnType<Unwrapped & Any>, transformer: ColumnTransformer<Unwrapped, Wrapped>)","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.ColumnWithTransform","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/-column-with-transform.html","searchKeys":["ColumnWithTransform","constructor(delegate: IColumnType<Unwrapped & Any>, transformer: ColumnTransformer<Unwrapped, Wrapped>)","org.jetbrains.exposed.v1.core.ColumnWithTransform.ColumnWithTransform"]},{"name":"constructor(delegate: IColumnType<Unwrapped & Any>, transformer: ColumnTransformer<Unwrapped, Wrapped>)","description":"org.jetbrains.exposed.v1.core.NullableColumnWithTransform.NullableColumnWithTransform","location":"exposed-core/org.jetbrains.exposed.v1.core/-nullable-column-with-transform/-nullable-column-with-transform.html","searchKeys":["NullableColumnWithTransform","constructor(delegate: IColumnType<Unwrapped & Any>, transformer: ColumnTransformer<Unwrapped, Wrapped>)","org.jetbrains.exposed.v1.core.NullableColumnWithTransform.NullableColumnWithTransform"]},{"name":"constructor(delegate: T, alias: String)","description":"org.jetbrains.exposed.v1.core.Alias.Alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/-alias.html","searchKeys":["Alias","constructor(delegate: T, alias: String)","org.jetbrains.exposed.v1.core.Alias.Alias"]},{"name":"constructor(dest: Table, selectQuery: QueryAlias, on: Op<Boolean>)","description":"org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.MergeSelectStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-select-statement/-merge-select-statement.html","searchKeys":["MergeSelectStatement","constructor(dest: Table, selectQuery: QueryAlias, on: Op<Boolean>)","org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.MergeSelectStatement"]},{"name":"constructor(dest: Table, source: Table, on: Op<Boolean>?)","description":"org.jetbrains.exposed.v1.core.statements.MergeTableStatement.MergeTableStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-table-statement/-merge-table-statement.html","searchKeys":["MergeTableStatement","constructor(dest: Table, source: Table, on: Op<Boolean>?)","org.jetbrains.exposed.v1.core.statements.MergeTableStatement.MergeTableStatement"]},{"name":"constructor(dialectName: String)","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.DialectNameProvider.DialectNameProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/-dialect-name-provider/-dialect-name-provider.html","searchKeys":["DialectNameProvider","constructor(dialectName: String)","org.jetbrains.exposed.v1.core.vendors.VendorDialect.DialectNameProvider.DialectNameProvider"]},{"name":"constructor(direction: WindowFrameBoundDirection)","description":"org.jetbrains.exposed.v1.core.UnboundedWindowFrameBound.UnboundedWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-window-frame-bound/-unbounded-window-frame-bound.html","searchKeys":["UnboundedWindowFrameBound","constructor(direction: WindowFrameBoundDirection)","org.jetbrains.exposed.v1.core.UnboundedWindowFrameBound.UnboundedWindowFrameBound"]},{"name":"constructor(dividend: Expression<T>, divisor: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.DivideOp.DivideOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-divide-op/-divide-op.html","searchKeys":["DivideOp","constructor(dividend: Expression<T>, divisor: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.DivideOp.DivideOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.EqOp.EqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-eq-op/-eq-op.html","searchKeys":["EqOp","constructor(expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.EqOp.EqOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.GreaterEqOp.GreaterEqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-eq-op/-greater-eq-op.html","searchKeys":["GreaterEqOp","constructor(expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.GreaterEqOp.GreaterEqOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.GreaterOp.GreaterOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-op/-greater-op.html","searchKeys":["GreaterOp","constructor(expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.GreaterOp.GreaterOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.LessEqOp.LessEqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-eq-op/-less-eq-op.html","searchKeys":["LessEqOp","constructor(expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.LessEqOp.LessEqOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.LessOp.LessOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-op/-less-op.html","searchKeys":["LessOp","constructor(expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.LessOp.LessOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.NeqOp.NeqOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-neq-op/-neq-op.html","searchKeys":["NeqOp","constructor(expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.NeqOp.NeqOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>, like: Boolean, escapeChar: Char?)","description":"org.jetbrains.exposed.v1.core.LikeEscapeOp.LikeEscapeOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-escape-op/-like-escape-op.html","searchKeys":["LikeEscapeOp","constructor(expr1: Expression<*>, expr2: Expression<*>, like: Boolean, escapeChar: Char?)","org.jetbrains.exposed.v1.core.LikeEscapeOp.LikeEscapeOp"]},{"name":"constructor(expr1: Expression<*>, expr2: Expression<*>, opSign: String)","description":"org.jetbrains.exposed.v1.core.ComparisonOp.ComparisonOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-comparison-op/-comparison-op.html","searchKeys":["ComparisonOp","constructor(expr1: Expression<*>, expr2: Expression<*>, opSign: String)","org.jetbrains.exposed.v1.core.ComparisonOp.ComparisonOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<R & Any>)","description":"org.jetbrains.exposed.v1.core.ModOp.ModOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/-mod-op.html","searchKeys":["ModOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<R & Any>)","org.jetbrains.exposed.v1.core.ModOp.ModOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.AndBitOp.AndBitOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-bit-op/-and-bit-op.html","searchKeys":["AndBitOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.AndBitOp.AndBitOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.MinusOp.MinusOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-minus-op/-minus-op.html","searchKeys":["MinusOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.MinusOp.MinusOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.OrBitOp.OrBitOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-bit-op/-or-bit-op.html","searchKeys":["OrBitOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.OrBitOp.OrBitOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.PlusOp.PlusOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-plus-op/-plus-op.html","searchKeys":["PlusOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.PlusOp.PlusOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.TimesOp.TimesOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-times-op/-times-op.html","searchKeys":["TimesOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.TimesOp.TimesOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.XorBitOp.XorBitOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-xor-bit-op/-xor-bit-op.html","searchKeys":["XorBitOp","constructor(expr1: Expression<T>, expr2: Expression<S>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.XorBitOp.XorBitOp"]},{"name":"constructor(expr1: Expression<T>, expr2: Expression<String>, caseSensitive: Boolean)","description":"org.jetbrains.exposed.v1.core.RegexpOp.RegexpOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-regexp-op/-regexp-op.html","searchKeys":["RegexpOp","constructor(expr1: Expression<T>, expr2: Expression<String>, caseSensitive: Boolean)","org.jetbrains.exposed.v1.core.RegexpOp.RegexpOp"]},{"name":"constructor(expr: Any, list: Iterable<V>, isInList: Boolean = true)","description":"org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.InListOrNotInListBaseOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-list-or-not-in-list-base-op/-in-list-or-not-in-list-base-op.html","searchKeys":["InListOrNotInListBaseOp","constructor(expr: Any, list: Iterable<V>, isInList: Boolean = true)","org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.InListOrNotInListBaseOp"]},{"name":"constructor(expr: Expression<*>)","description":"org.jetbrains.exposed.v1.core.IsNotNullOp.IsNotNullOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-null-op/-is-not-null-op.html","searchKeys":["IsNotNullOp","constructor(expr: Expression<*>)","org.jetbrains.exposed.v1.core.IsNotNullOp.IsNotNullOp"]},{"name":"constructor(expr: Expression<*>)","description":"org.jetbrains.exposed.v1.core.IsNullOp.IsNullOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-null-op/-is-null-op.html","searchKeys":["IsNullOp","constructor(expr: Expression<*>)","org.jetbrains.exposed.v1.core.IsNullOp.IsNullOp"]},{"name":"constructor(expr: Expression<*>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.Cast.Cast","location":"exposed-core/org.jetbrains.exposed.v1.core/-cast/-cast.html","searchKeys":["Cast","constructor(expr: Expression<*>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.Cast.Cast"]},{"name":"constructor(expr: Expression<*>, distinct: Boolean = false)","description":"org.jetbrains.exposed.v1.core.Count.Count","location":"exposed-core/org.jetbrains.exposed.v1.core/-count/-count.html","searchKeys":["Count","constructor(expr: Expression<*>, distinct: Boolean = false)","org.jetbrains.exposed.v1.core.Count.Count"]},{"name":"constructor(expr: Expression<*>, from: Expression<*>, to: Expression<*>)","description":"org.jetbrains.exposed.v1.core.Between.Between","location":"exposed-core/org.jetbrains.exposed.v1.core/-between/-between.html","searchKeys":["Between","constructor(expr: Expression<*>, from: Expression<*>, to: Expression<*>)","org.jetbrains.exposed.v1.core.Between.Between"]},{"name":"constructor(expr: Expression<*>, table: Table, isInTable: Boolean = true)","description":"org.jetbrains.exposed.v1.core.ops.InTableOp.InTableOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-table-op/-in-table-op.html","searchKeys":["InTableOp","constructor(expr: Expression<*>, table: Table, isInTable: Boolean = true)","org.jetbrains.exposed.v1.core.ops.InTableOp.InTableOp"]},{"name":"constructor(expr: Expression<S>, scale: Int)","description":"org.jetbrains.exposed.v1.core.Avg.Avg","location":"exposed-core/org.jetbrains.exposed.v1.core/-avg/-avg.html","searchKeys":["Avg","constructor(expr: Expression<S>, scale: Int)","org.jetbrains.exposed.v1.core.Avg.Avg"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.core.CharLength.CharLength","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-length/-char-length.html","searchKeys":["CharLength","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.core.CharLength.CharLength"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.core.LowerCase.LowerCase","location":"exposed-core/org.jetbrains.exposed.v1.core/-lower-case/-lower-case.html","searchKeys":["LowerCase","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.core.LowerCase.LowerCase"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.core.NotOp.NotOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-op/-not-op.html","searchKeys":["NotOp","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.core.NotOp.NotOp"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.core.Trim.Trim","location":"exposed-core/org.jetbrains.exposed.v1.core/-trim/-trim.html","searchKeys":["Trim","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.core.Trim.Trim"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.core.UpperCase.UpperCase","location":"exposed-core/org.jetbrains.exposed.v1.core/-upper-case/-upper-case.html","searchKeys":["UpperCase","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.core.UpperCase.UpperCase"]},{"name":"constructor(expr: Expression<T>, columnType: IColumnType<S & Any>)","description":"org.jetbrains.exposed.v1.core.NoOpConversion.NoOpConversion","location":"exposed-core/org.jetbrains.exposed.v1.core/-no-op-conversion/-no-op-conversion.html","searchKeys":["NoOpConversion","constructor(expr: Expression<T>, columnType: IColumnType<S & Any>)","org.jetbrains.exposed.v1.core.NoOpConversion.NoOpConversion"]},{"name":"constructor(expr: Expression<T>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.Sum.Sum","location":"exposed-core/org.jetbrains.exposed.v1.core/-sum/-sum.html","searchKeys":["Sum","constructor(expr: Expression<T>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.Sum.Sum"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.EqSubQueryOp.EqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-eq-sub-query-op/-eq-sub-query-op.html","searchKeys":["EqSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.EqSubQueryOp.EqSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.GreaterEqSubQueryOp.GreaterEqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-eq-sub-query-op/-greater-eq-sub-query-op.html","searchKeys":["GreaterEqSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.GreaterEqSubQueryOp.GreaterEqSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.GreaterSubQueryOp.GreaterSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-greater-sub-query-op/-greater-sub-query-op.html","searchKeys":["GreaterSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.GreaterSubQueryOp.GreaterSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.InSubQueryOp.InSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-in-sub-query-op/-in-sub-query-op.html","searchKeys":["InSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.InSubQueryOp.InSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.LessEqSubQueryOp.LessEqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-eq-sub-query-op/-less-eq-sub-query-op.html","searchKeys":["LessEqSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.LessEqSubQueryOp.LessEqSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.LessSubQueryOp.LessSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-less-sub-query-op/-less-sub-query-op.html","searchKeys":["LessSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.LessSubQueryOp.LessSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.NotEqSubQueryOp.NotEqSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-eq-sub-query-op/-not-eq-sub-query-op.html","searchKeys":["NotEqSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.NotEqSubQueryOp.NotEqSubQueryOp"]},{"name":"constructor(expr: Expression<T>, query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.NotInSubQueryOp.NotInSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-in-sub-query-op/-not-in-sub-query-op.html","searchKeys":["NotInSubQueryOp","constructor(expr: Expression<T>, query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.NotInSubQueryOp.NotInSubQueryOp"]},{"name":"constructor(expr: Expression<T>, separator: String?, distinct: Boolean, vararg orderBy: Pair<Expression<*>, SortOrder>)","description":"org.jetbrains.exposed.v1.core.GroupConcat.GroupConcat","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/-group-concat.html","searchKeys":["GroupConcat","constructor(expr: Expression<T>, separator: String?, distinct: Boolean, vararg orderBy: Pair<Expression<*>, SortOrder>)","org.jetbrains.exposed.v1.core.GroupConcat.GroupConcat"]},{"name":"constructor(expr: Expression<T>, start: Expression<Int>, length: Expression<Int>)","description":"org.jetbrains.exposed.v1.core.Substring.Substring","location":"exposed-core/org.jetbrains.exposed.v1.core/-substring/-substring.html","searchKeys":["Substring","constructor(expr: Expression<T>, start: Expression<Int>, length: Expression<Int>)","org.jetbrains.exposed.v1.core.Substring.Substring"]},{"name":"constructor(expr: Expression<T>, substring: String)","description":"org.jetbrains.exposed.v1.core.Locate.Locate","location":"exposed-core/org.jetbrains.exposed.v1.core/-locate/-locate.html","searchKeys":["Locate","constructor(expr: Expression<T>, substring: String)","org.jetbrains.exposed.v1.core.Locate.Locate"]},{"name":"constructor(expr: Expression<in S>, columnType: IColumnType<T>)","description":"org.jetbrains.exposed.v1.core.Max.Max","location":"exposed-core/org.jetbrains.exposed.v1.core/-max/-max.html","searchKeys":["Max","constructor(expr: Expression<in S>, columnType: IColumnType<T>)","org.jetbrains.exposed.v1.core.Max.Max"]},{"name":"constructor(expr: Expression<in S>, columnType: IColumnType<T>)","description":"org.jetbrains.exposed.v1.core.Min.Min","location":"exposed-core/org.jetbrains.exposed.v1.core/-min/-min.html","searchKeys":["Min","constructor(expr: Expression<in S>, columnType: IColumnType<T>)","org.jetbrains.exposed.v1.core.Min.Min"]},{"name":"constructor(expr: ExpressionWithColumnType<S>, alternate: Expression<out T>, vararg others: Expression<out T>)","description":"org.jetbrains.exposed.v1.core.Coalesce.Coalesce","location":"exposed-core/org.jetbrains.exposed.v1.core/-coalesce/-coalesce.html","searchKeys":["Coalesce","constructor(expr: ExpressionWithColumnType<S>, alternate: Expression<out T>, vararg others: Expression<out T>)","org.jetbrains.exposed.v1.core.Coalesce.Coalesce"]},{"name":"constructor(expr: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.FirstValue.FirstValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-first-value/-first-value.html","searchKeys":["FirstValue","constructor(expr: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.FirstValue.FirstValue"]},{"name":"constructor(expr: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.LastValue.LastValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-last-value/-last-value.html","searchKeys":["LastValue","constructor(expr: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.LastValue.LastValue"]},{"name":"constructor(expr: ExpressionWithColumnType<T>, n: ExpressionWithColumnType<Int>)","description":"org.jetbrains.exposed.v1.core.NthValue.NthValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-nth-value/-nth-value.html","searchKeys":["NthValue","constructor(expr: ExpressionWithColumnType<T>, n: ExpressionWithColumnType<Int>)","org.jetbrains.exposed.v1.core.NthValue.NthValue"]},{"name":"constructor(expr: ExpressionWithColumnType<T>, offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null)","description":"org.jetbrains.exposed.v1.core.Lag.Lag","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/-lag.html","searchKeys":["Lag","constructor(expr: ExpressionWithColumnType<T>, offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null)","org.jetbrains.exposed.v1.core.Lag.Lag"]},{"name":"constructor(expr: ExpressionWithColumnType<T>, offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null)","description":"org.jetbrains.exposed.v1.core.Lead.Lead","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/-lead.html","searchKeys":["Lead","constructor(expr: ExpressionWithColumnType<T>, offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null)","org.jetbrains.exposed.v1.core.Lead.Lead"]},{"name":"constructor(expr: ExpressionWithColumnType<out T>, list: Iterable<T>, isInList: Boolean = true)","description":"org.jetbrains.exposed.v1.core.ops.SingleValueInListOp.SingleValueInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-single-value-in-list-op/-single-value-in-list-op.html","searchKeys":["SingleValueInListOp","constructor(expr: ExpressionWithColumnType<out T>, list: Iterable<T>, isInList: Boolean = true)","org.jetbrains.exposed.v1.core.ops.SingleValueInListOp.SingleValueInListOp"]},{"name":"constructor(expr: List<Column<*>>, list: Iterable<List<*>>, isInList: Boolean = true)","description":"org.jetbrains.exposed.v1.core.ops.MultipleInListOp.MultipleInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-multiple-in-list-op/-multiple-in-list-op.html","searchKeys":["MultipleInListOp","constructor(expr: List<Column<*>>, list: Iterable<List<*>>, isInList: Boolean = true)","org.jetbrains.exposed.v1.core.ops.MultipleInListOp.MultipleInListOp"]},{"name":"constructor(expr: Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>, list: Iterable<Pair<T1, T2>>, isInList: Boolean = true)","description":"org.jetbrains.exposed.v1.core.ops.PairInListOp.PairInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-pair-in-list-op/-pair-in-list-op.html","searchKeys":["PairInListOp","constructor(expr: Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>, list: Iterable<Pair<T1, T2>>, isInList: Boolean = true)","org.jetbrains.exposed.v1.core.ops.PairInListOp.PairInListOp"]},{"name":"constructor(expr: Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>, list: Iterable<Triple<T1, T2, T3>>, isInList: Boolean = true)","description":"org.jetbrains.exposed.v1.core.ops.TripleInListOp.TripleInListOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-triple-in-list-op/-triple-in-list-op.html","searchKeys":["TripleInListOp","constructor(expr: Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>, list: Iterable<Triple<T1, T2, T3>>, isInList: Boolean = true)","org.jetbrains.exposed.v1.core.ops.TripleInListOp.TripleInListOp"]},{"name":"constructor(expression1: Expression<*>, expression2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.IsDistinctFromOp.IsDistinctFromOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-distinct-from-op/-is-distinct-from-op.html","searchKeys":["IsDistinctFromOp","constructor(expression1: Expression<*>, expression2: Expression<*>)","org.jetbrains.exposed.v1.core.IsDistinctFromOp.IsDistinctFromOp"]},{"name":"constructor(expression1: Expression<*>, expression2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.IsNotDistinctFromOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-distinct-from-op/-is-not-distinct-from-op.html","searchKeys":["IsNotDistinctFromOp","constructor(expression1: Expression<*>, expression2: Expression<*>)","org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.IsNotDistinctFromOp"]},{"name":"constructor(expression: Expression<T>, index: Int, columnType: IColumnType<E & Any>)","description":"org.jetbrains.exposed.v1.core.functions.array.ArrayGet.ArrayGet","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-get/-array-get.html","searchKeys":["ArrayGet","constructor(expression: Expression<T>, index: Int, columnType: IColumnType<E & Any>)","org.jetbrains.exposed.v1.core.functions.array.ArrayGet.ArrayGet"]},{"name":"constructor(expression: Expression<T>, lower: Int?, upper: Int?, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.functions.array.ArraySlice.ArraySlice","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-slice/-array-slice.html","searchKeys":["ArraySlice","constructor(expression: Expression<T>, lower: Int?, upper: Int?, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.functions.array.ArraySlice.ArraySlice"]},{"name":"constructor(expression: Expression<T>, scale: Int)","description":"org.jetbrains.exposed.v1.core.StdDevPop.StdDevPop","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-pop/-std-dev-pop.html","searchKeys":["StdDevPop","constructor(expression: Expression<T>, scale: Int)","org.jetbrains.exposed.v1.core.StdDevPop.StdDevPop"]},{"name":"constructor(expression: Expression<T>, scale: Int)","description":"org.jetbrains.exposed.v1.core.StdDevSamp.StdDevSamp","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-samp/-std-dev-samp.html","searchKeys":["StdDevSamp","constructor(expression: Expression<T>, scale: Int)","org.jetbrains.exposed.v1.core.StdDevSamp.StdDevSamp"]},{"name":"constructor(expression: Expression<T>, scale: Int)","description":"org.jetbrains.exposed.v1.core.VarPop.VarPop","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-pop/-var-pop.html","searchKeys":["VarPop","constructor(expression: Expression<T>, scale: Int)","org.jetbrains.exposed.v1.core.VarPop.VarPop"]},{"name":"constructor(expression: Expression<T>, scale: Int)","description":"org.jetbrains.exposed.v1.core.VarSamp.VarSamp","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-samp/-var-samp.html","searchKeys":["VarSamp","constructor(expression: Expression<T>, scale: Int)","org.jetbrains.exposed.v1.core.VarSamp.VarSamp"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.ACosFunction.ACosFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-a-cos-function/-a-cos-function.html","searchKeys":["ACosFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.ACosFunction.ACosFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.ASinFunction.ASinFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-a-sin-function/-a-sin-function.html","searchKeys":["ASinFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.ASinFunction.ASinFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.ATanFunction.ATanFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-a-tan-function/-a-tan-function.html","searchKeys":["ATanFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.ATanFunction.ATanFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.AbsFunction.AbsFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-abs-function/-abs-function.html","searchKeys":["AbsFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.AbsFunction.AbsFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.CeilingFunction.CeilingFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-ceiling-function/-ceiling-function.html","searchKeys":["CeilingFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.CeilingFunction.CeilingFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.CosFunction.CosFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-cos-function/-cos-function.html","searchKeys":["CosFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.CosFunction.CosFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.CotFunction.CotFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-cot-function/-cot-function.html","searchKeys":["CotFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.CotFunction.CotFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.DegreesFunction.DegreesFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-degrees-function/-degrees-function.html","searchKeys":["DegreesFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.DegreesFunction.DegreesFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.ExpFunction.ExpFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-exp-function/-exp-function.html","searchKeys":["ExpFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.ExpFunction.ExpFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.FloorFunction.FloorFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-floor-function/-floor-function.html","searchKeys":["FloorFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.FloorFunction.FloorFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.RadiansFunction.RadiansFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-radians-function/-radians-function.html","searchKeys":["RadiansFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.RadiansFunction.RadiansFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.SignFunction.SignFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-sign-function/-sign-function.html","searchKeys":["SignFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.SignFunction.SignFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.SinFunction.SinFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-sin-function/-sin-function.html","searchKeys":["SinFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.SinFunction.SinFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.SqrtFunction.SqrtFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-sqrt-function/-sqrt-function.html","searchKeys":["SqrtFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.SqrtFunction.SqrtFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>)","description":"org.jetbrains.exposed.v1.core.functions.math.TanFunction.TanFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-tan-function/-tan-function.html","searchKeys":["TanFunction","constructor(expression: ExpressionWithColumnType<T>)","org.jetbrains.exposed.v1.core.functions.math.TanFunction.TanFunction"]},{"name":"constructor(expression: ExpressionWithColumnType<T>, scale: Int)","description":"org.jetbrains.exposed.v1.core.functions.math.RoundFunction.RoundFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-round-function/-round-function.html","searchKeys":["RoundFunction","constructor(expression: ExpressionWithColumnType<T>, scale: Int)","org.jetbrains.exposed.v1.core.functions.math.RoundFunction.RoundFunction"]},{"name":"constructor(expressions: List<Expression<Boolean>>)","description":"org.jetbrains.exposed.v1.core.AndOp.AndOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-op/-and-op.html","searchKeys":["AndOp","constructor(expressions: List<Expression<Boolean>>)","org.jetbrains.exposed.v1.core.AndOp.AndOp"]},{"name":"constructor(expressions: List<Expression<Boolean>>)","description":"org.jetbrains.exposed.v1.core.OrOp.OrOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-op/-or-op.html","searchKeys":["OrOp","constructor(expressions: List<Expression<Boolean>>)","org.jetbrains.exposed.v1.core.OrOp.OrOp"]},{"name":"constructor(fieldIndex: Map<Expression<*>, Int>, data: Array<Any?> = arrayOfNulls<Any?>(fieldIndex.size))","description":"org.jetbrains.exposed.v1.core.ResultRow.ResultRow","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/-result-row.html","searchKeys":["ResultRow","constructor(fieldIndex: Map<Expression<*>, Int>, data: Array<Any?> = arrayOfNulls<Any?>(fieldIndex.size))","org.jetbrains.exposed.v1.core.ResultRow.ResultRow"]},{"name":"constructor(fieldIndex: Map<String, Int>, data: Array<Any?>)","description":"org.jetbrains.exposed.v1.core.ExplainResultRow.ExplainResultRow","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-result-row/-explain-result-row.html","searchKeys":["ExplainResultRow","constructor(fieldIndex: Map<String, Int>, data: Array<Any?>)","org.jetbrains.exposed.v1.core.ExplainResultRow.ExplainResultRow"]},{"name":"constructor(firstColumn: Column<*>, vararg columns: Column<*>, name: String? = null)","description":"org.jetbrains.exposed.v1.core.Table.PrimaryKey.PrimaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-primary-key/-primary-key.html","searchKeys":["PrimaryKey","constructor(firstColumn: Column<*>, vararg columns: Column<*>, name: String? = null)","org.jetbrains.exposed.v1.core.Table.PrimaryKey.PrimaryKey"]},{"name":"constructor(functionName: String, columnType: IColumnType<T & Any>, vararg expr: Expression<*>)","description":"org.jetbrains.exposed.v1.core.CustomFunction.CustomFunction","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-function/-custom-function.html","searchKeys":["CustomFunction","constructor(functionName: String, columnType: IColumnType<T & Any>, vararg expr: Expression<*>)","org.jetbrains.exposed.v1.core.CustomFunction.CustomFunction"]},{"name":"constructor(id: T, table: IdTable<T>)","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID.EntityID","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/-entity-i-d.html","searchKeys":["EntityID","constructor(id: T, table: IdTable<T>)","org.jetbrains.exposed.v1.core.dao.id.EntityID.EntityID"]},{"name":"constructor(idColumn: Column<T>)","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.EntityIDColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/-entity-i-d-column-type.html","searchKeys":["EntityIDColumnType","constructor(idColumn: Column<T>)","org.jetbrains.exposed.v1.core.EntityIDColumnType.EntityIDColumnType"]},{"name":"constructor(init: Transaction.() -> T? = null)","description":"org.jetbrains.exposed.v1.core.transactions.TransactionStore.TransactionStore","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-store/-transaction-store.html","searchKeys":["TransactionStore","constructor(init: Transaction.() -> T? = null)","org.jetbrains.exposed.v1.core.transactions.TransactionStore.TransactionStore"]},{"name":"constructor(inputStream: InputStream)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.ExposedBlob","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/-exposed-blob.html","searchKeys":["ExposedBlob","constructor(inputStream: InputStream)","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.ExposedBlob"]},{"name":"constructor(isAny: Boolean, array: List<T>, delegateType: ColumnType<T>)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromArrayOp.AllAnyFromArrayOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-array-op/-all-any-from-array-op.html","searchKeys":["AllAnyFromArrayOp","constructor(isAny: Boolean, array: List<T>, delegateType: ColumnType<T>)","org.jetbrains.exposed.v1.core.ops.AllAnyFromArrayOp.AllAnyFromArrayOp"]},{"name":"constructor(isAny: Boolean, expression: Expression<T>)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromExpressionOp.AllAnyFromExpressionOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-expression-op/-all-any-from-expression-op.html","searchKeys":["AllAnyFromExpressionOp","constructor(isAny: Boolean, expression: Expression<T>)","org.jetbrains.exposed.v1.core.ops.AllAnyFromExpressionOp.AllAnyFromExpressionOp"]},{"name":"constructor(isAny: Boolean, subQuery: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromSubQueryOp.AllAnyFromSubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-sub-query-op/-all-any-from-sub-query-op.html","searchKeys":["AllAnyFromSubQueryOp","constructor(isAny: Boolean, subQuery: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.ops.AllAnyFromSubQueryOp.AllAnyFromSubQueryOp"]},{"name":"constructor(isAny: Boolean, subSearch: SubSearch)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.AllAnyFromBaseOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-base-op/-all-any-from-base-op.html","searchKeys":["AllAnyFromBaseOp","constructor(isAny: Boolean, subSearch: SubSearch)","org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.AllAnyFromBaseOp"]},{"name":"constructor(isAny: Boolean, table: Table)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromTableOp.AllAnyFromTableOp","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-table-op/-all-any-from-table-op.html","searchKeys":["AllAnyFromTableOp","constructor(isAny: Boolean, table: Table)","org.jetbrains.exposed.v1.core.ops.AllAnyFromTableOp.AllAnyFromTableOp"]},{"name":"constructor(klass: KClass<T>)","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.EnumerationColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/-enumeration-column-type.html","searchKeys":["EnumerationColumnType","constructor(klass: KClass<T>)","org.jetbrains.exposed.v1.core.EnumerationColumnType.EnumerationColumnType"]},{"name":"constructor(klass: KClass<T>, colLength: Int)","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.EnumerationNameColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/-enumeration-name-column-type.html","searchKeys":["EnumerationNameColumnType","constructor(klass: KClass<T>, colLength: Int)","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.EnumerationNameColumnType"]},{"name":"constructor(length: Int)","description":"org.jetbrains.exposed.v1.core.BinaryColumnType.BinaryColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/-binary-column-type.html","searchKeys":["BinaryColumnType","constructor(length: Int)","org.jetbrains.exposed.v1.core.BinaryColumnType.BinaryColumnType"]},{"name":"constructor(message: String)","description":"org.jetbrains.exposed.v1.core.statements.BatchDataInconsistentException.BatchDataInconsistentException","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-data-inconsistent-exception/-batch-data-inconsistent-exception.html","searchKeys":["BatchDataInconsistentException","constructor(message: String)","org.jetbrains.exposed.v1.core.statements.BatchDataInconsistentException.BatchDataInconsistentException"]},{"name":"constructor(mode: ForUpdateOption.MySQL.MODE? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForShare.ForShare","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-for-share/-for-share.html","searchKeys":["ForShare","constructor(mode: ForUpdateOption.MySQL.MODE? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForShare.ForShare"]},{"name":"constructor(mode: ForUpdateOption.MySQL.MODE? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForUpdate.ForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-for-update/-for-update.html","searchKeys":["ForUpdate","constructor(mode: ForUpdateOption.MySQL.MODE? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForUpdate.ForUpdate"]},{"name":"constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForKeyShare.ForKeyShare","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-key-share/-for-key-share.html","searchKeys":["ForKeyShare","constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForKeyShare.ForKeyShare"]},{"name":"constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForNoKeyUpdate.ForNoKeyUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-no-key-update/-for-no-key-update.html","searchKeys":["ForNoKeyUpdate","constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForNoKeyUpdate.ForNoKeyUpdate"]},{"name":"constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForShare.ForShare","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-share/-for-share.html","searchKeys":["ForShare","constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForShare.ForShare"]},{"name":"constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForUpdate.ForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-update/-for-update.html","searchKeys":["ForUpdate","constructor(mode: ForUpdateOption.PostgreSQL.MODE? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForUpdate.ForUpdate"]},{"name":"constructor(name: String = \"\")","description":"org.jetbrains.exposed.v1.core.Table.Table","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-table.html","searchKeys":["Table","constructor(name: String = \"\")","org.jetbrains.exposed.v1.core.Table.Table"]},{"name":"constructor(name: String = \"\")","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeIdTable.CompositeIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-id-table/-composite-id-table.html","searchKeys":["CompositeIdTable","constructor(name: String = \"\")","org.jetbrains.exposed.v1.core.dao.id.CompositeIdTable.CompositeIdTable"]},{"name":"constructor(name: String = \"\")","description":"org.jetbrains.exposed.v1.core.dao.id.IdTable.IdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-id-table/-id-table.html","searchKeys":["IdTable","constructor(name: String = \"\")","org.jetbrains.exposed.v1.core.dao.id.IdTable.IdTable"]},{"name":"constructor(name: String = \"\", columnName: String = \"id\")","description":"org.jetbrains.exposed.v1.core.dao.id.IntIdTable.IntIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-int-id-table/-int-id-table.html","searchKeys":["IntIdTable","constructor(name: String = \"\", columnName: String = \"id\")","org.jetbrains.exposed.v1.core.dao.id.IntIdTable.IntIdTable"]},{"name":"constructor(name: String = \"\", columnName: String = \"id\")","description":"org.jetbrains.exposed.v1.core.dao.id.LongIdTable.LongIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-long-id-table/-long-id-table.html","searchKeys":["LongIdTable","constructor(name: String = \"\", columnName: String = \"id\")","org.jetbrains.exposed.v1.core.dao.id.LongIdTable.LongIdTable"]},{"name":"constructor(name: String = \"\", columnName: String = \"id\")","description":"org.jetbrains.exposed.v1.core.dao.id.UIntIdTable.UIntIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-int-id-table/-u-int-id-table.html","searchKeys":["UIntIdTable","constructor(name: String = \"\", columnName: String = \"id\")","org.jetbrains.exposed.v1.core.dao.id.UIntIdTable.UIntIdTable"]},{"name":"constructor(name: String = \"\", columnName: String = \"id\")","description":"org.jetbrains.exposed.v1.core.dao.id.ULongIdTable.ULongIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-long-id-table/-u-long-id-table.html","searchKeys":["ULongIdTable","constructor(name: String = \"\", columnName: String = \"id\")","org.jetbrains.exposed.v1.core.dao.id.ULongIdTable.ULongIdTable"]},{"name":"constructor(name: String = \"\", columnName: String = \"id\")","description":"org.jetbrains.exposed.v1.core.dao.id.UUIDTable.UUIDTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-u-i-d-table/-u-u-i-d-table.html","searchKeys":["UUIDTable","constructor(name: String = \"\", columnName: String = \"id\")","org.jetbrains.exposed.v1.core.dao.id.UUIDTable.UUIDTable"]},{"name":"constructor(name: String = dialectName)","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.PostgreSQLDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/-postgre-s-q-l-dialect.html","searchKeys":["PostgreSQLDialect","constructor(name: String = dialectName)","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.PostgreSQLDialect"]},{"name":"constructor(name: String)","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedSavepoint.ExposedSavepoint","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-savepoint/-exposed-savepoint.html","searchKeys":["ExposedSavepoint","constructor(name: String)","org.jetbrains.exposed.v1.core.statements.api.ExposedSavepoint.ExposedSavepoint"]},{"name":"constructor(name: String, authorization: String? = null, password: String? = null, defaultTablespace: String? = null, temporaryTablespace: String? = null, quota: String? = null, on: String? = null)","description":"org.jetbrains.exposed.v1.core.Schema.Schema","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/-schema.html","searchKeys":["Schema","constructor(name: String, authorization: String? = null, password: String? = null, defaultTablespace: String? = null, temporaryTablespace: String? = null, quota: String? = null, on: String? = null)","org.jetbrains.exposed.v1.core.Schema.Schema"]},{"name":"constructor(name: String, columnNames: List<String>)","description":"org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata.PrimaryKeyMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-primary-key-metadata/-primary-key-metadata.html","searchKeys":["PrimaryKeyMetadata","constructor(name: String, columnNames: List<String>)","org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata.PrimaryKeyMetadata"]},{"name":"constructor(name: String, dataTypeProvider: DataTypeProvider, functionProvider: FunctionProvider)","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.VendorDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/-vendor-dialect.html","searchKeys":["VendorDialect","constructor(name: String, dataTypeProvider: DataTypeProvider, functionProvider: FunctionProvider)","org.jetbrains.exposed.v1.core.vendors.VendorDialect.VendorDialect"]},{"name":"constructor(name: String, jdbcType: Int, sqlType: String, nullable: Boolean, size: Int?, scale: Int?, autoIncrement: Boolean, defaultDbValue: String?)","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.ColumnMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/-column-metadata.html","searchKeys":["ColumnMetadata","constructor(name: String, jdbcType: Int, sqlType: String, nullable: Boolean, size: Int?, scale: Int?, autoIncrement: Boolean, defaultDbValue: String?)","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.ColumnMetadata"]},{"name":"constructor(name: String, sql: String?, fromDb: (Any) -> T, toDb: (T) -> Any)","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.CustomEnumerationColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/-custom-enumeration-column-type.html","searchKeys":["CustomEnumerationColumnType","constructor(name: String, sql: String?, fromDb: (Any) -> T, toDb: (T) -> Any)","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.CustomEnumerationColumnType"]},{"name":"constructor(name: String, startWith: Long? = null, incrementBy: Long? = null, minValue: Long? = null, maxValue: Long? = null, cycle: Boolean? = null, cache: Long? = null)","description":"org.jetbrains.exposed.v1.core.Sequence.Sequence","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/-sequence.html","searchKeys":["Sequence","constructor(name: String, startWith: Long? = null, incrementBy: Long? = null, minValue: Long? = null, maxValue: Long? = null, cycle: Boolean? = null, cache: Long? = null)","org.jetbrains.exposed.v1.core.Sequence.Sequence"]},{"name":"constructor(nullability: Boolean, type: Boolean, autoInc: Boolean, defaults: Boolean, caseSensitiveName: Boolean, sizeAndScale: Boolean)","description":"org.jetbrains.exposed.v1.core.ColumnDiff.ColumnDiff","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/-column-diff.html","searchKeys":["ColumnDiff","constructor(nullability: Boolean, type: Boolean, autoInc: Boolean, defaults: Boolean, caseSensitiveName: Boolean, sizeAndScale: Boolean)","org.jetbrains.exposed.v1.core.ColumnDiff.ColumnDiff"]},{"name":"constructor(nullable: Boolean = false)","description":"org.jetbrains.exposed.v1.core.ColumnType.ColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-type/-column-type.html","searchKeys":["ColumnType","constructor(nullable: Boolean = false)","org.jetbrains.exposed.v1.core.ColumnType.ColumnType"]},{"name":"constructor(numBuckets: ExpressionWithColumnType<Int>)","description":"org.jetbrains.exposed.v1.core.Ntile.Ntile","location":"exposed-core/org.jetbrains.exposed.v1.core/-ntile/-ntile.html","searchKeys":["Ntile","constructor(numBuckets: ExpressionWithColumnType<Int>)","org.jetbrains.exposed.v1.core.Ntile.Ntile"]},{"name":"constructor(offset: Expression<Int>)","description":"org.jetbrains.exposed.v1.core.OffsetFollowingWindowFrameBound.OffsetFollowingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-following-window-frame-bound/-offset-following-window-frame-bound.html","searchKeys":["OffsetFollowingWindowFrameBound","constructor(offset: Expression<Int>)","org.jetbrains.exposed.v1.core.OffsetFollowingWindowFrameBound.OffsetFollowingWindowFrameBound"]},{"name":"constructor(offset: Expression<Int>)","description":"org.jetbrains.exposed.v1.core.OffsetPrecedingWindowFrameBound.OffsetPrecedingWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-preceding-window-frame-bound/-offset-preceding-window-frame-bound.html","searchKeys":["OffsetPrecedingWindowFrameBound","constructor(offset: Expression<Int>)","org.jetbrains.exposed.v1.core.OffsetPrecedingWindowFrameBound.OffsetPrecedingWindowFrameBound"]},{"name":"constructor(offset: Expression<Int>, direction: WindowFrameBoundDirection)","description":"org.jetbrains.exposed.v1.core.OffsetWindowFrameBound.OffsetWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-window-frame-bound/-offset-window-frame-bound.html","searchKeys":["OffsetWindowFrameBound","constructor(offset: Expression<Int>, direction: WindowFrameBoundDirection)","org.jetbrains.exposed.v1.core.OffsetWindowFrameBound.OffsetWindowFrameBound"]},{"name":"constructor(operatorName: String, columnType: IColumnType<T & Any>, expr1: Expression<*>, expr2: Expression<*>)","description":"org.jetbrains.exposed.v1.core.CustomOperator.CustomOperator","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-operator/-custom-operator.html","searchKeys":["CustomOperator","constructor(operatorName: String, columnType: IColumnType<T & Any>, expr1: Expression<*>, expr2: Expression<*>)","org.jetbrains.exposed.v1.core.CustomOperator.CustomOperator"]},{"name":"constructor(pattern: String, escapeChar: Char? = null)","description":"org.jetbrains.exposed.v1.core.LikePattern.LikePattern","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/-like-pattern.html","searchKeys":["LikePattern","constructor(pattern: String, escapeChar: Char? = null)","org.jetbrains.exposed.v1.core.LikePattern.LikePattern"]},{"name":"constructor(precision: Int, scale: Int)","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.DecimalColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/-decimal-column-type.html","searchKeys":["DecimalColumnType","constructor(precision: Int, scale: Int)","org.jetbrains.exposed.v1.core.DecimalColumnType.DecimalColumnType"]},{"name":"constructor(prepared: Boolean)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.QueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/-query-builder.html","searchKeys":["QueryBuilder","constructor(prepared: Boolean)","org.jetbrains.exposed.v1.core.QueryBuilder.QueryBuilder"]},{"name":"constructor(query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.Exists.Exists","location":"exposed-core/org.jetbrains.exposed.v1.core/-exists/-exists.html","searchKeys":["Exists","constructor(query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.Exists.Exists"]},{"name":"constructor(query: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.NotExists.NotExists","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-exists/-not-exists.html","searchKeys":["NotExists","constructor(query: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.NotExists.NotExists"]},{"name":"constructor(query: AbstractQuery<*>, alias: String)","description":"org.jetbrains.exposed.v1.core.QueryAlias.QueryAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/-query-alias.html","searchKeys":["QueryAlias","constructor(query: AbstractQuery<*>, alias: String)","org.jetbrains.exposed.v1.core.QueryAlias.QueryAlias"]},{"name":"constructor(querySuffix: String, mode: ForUpdateOption.ForUpdateOrShareMode? = null, vararg ofTables: Table)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateBase.ForUpdateBase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-for-update-base/-for-update-base.html","searchKeys":["ForUpdateBase","constructor(querySuffix: String, mode: ForUpdateOption.ForUpdateOrShareMode? = null, vararg ofTables: Table)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateBase.ForUpdateBase"]},{"name":"constructor(references: Map<Column<*>, Column<*>>, onUpdate: ReferenceOption?, onDelete: ReferenceOption?, name: String?)","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.ForeignKeyConstraint","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/-foreign-key-constraint.html","searchKeys":["ForeignKeyConstraint","constructor(references: Map<Column<*>, Column<*>>, onUpdate: ReferenceOption?, onDelete: ReferenceOption?, name: String?)","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.ForeignKeyConstraint"]},{"name":"constructor(resultSet: ResultApi)","description":"org.jetbrains.exposed.v1.core.statements.StatementResult.Object.Object","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/-object/-object.html","searchKeys":["Object","constructor(resultSet: ResultApi)","org.jetbrains.exposed.v1.core.statements.StatementResult.Object.Object"]},{"name":"constructor(scale: Int = 2)","description":"org.jetbrains.exposed.v1.core.CumeDist.CumeDist","location":"exposed-core/org.jetbrains.exposed.v1.core/-cume-dist/-cume-dist.html","searchKeys":["CumeDist","constructor(scale: Int = 2)","org.jetbrains.exposed.v1.core.CumeDist.CumeDist"]},{"name":"constructor(scale: Int = 2)","description":"org.jetbrains.exposed.v1.core.PercentRank.PercentRank","location":"exposed-core/org.jetbrains.exposed.v1.core/-percent-rank/-percent-rank.html","searchKeys":["PercentRank","constructor(scale: Int = 2)","org.jetbrains.exposed.v1.core.PercentRank.PercentRank"]},{"name":"constructor(schemaName: String, tableNames: List<String>)","description":"org.jetbrains.exposed.v1.core.vendors.SchemaMetadata.SchemaMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-schema-metadata/-schema-metadata.html","searchKeys":["SchemaMetadata","constructor(schemaName: String, tableNames: List<String>)","org.jetbrains.exposed.v1.core.vendors.SchemaMetadata.SchemaMetadata"]},{"name":"constructor(seed: Int? = null)","description":"org.jetbrains.exposed.v1.core.Random.Random","location":"exposed-core/org.jetbrains.exposed.v1.core/-random/-random.html","searchKeys":["Random","constructor(seed: Int? = null)","org.jetbrains.exposed.v1.core.Random.Random"]},{"name":"constructor(separator: String, vararg expr: Expression<*>)","description":"org.jetbrains.exposed.v1.core.Concat.Concat","location":"exposed-core/org.jetbrains.exposed.v1.core/-concat/-concat.html","searchKeys":["Concat","constructor(separator: String, vararg expr: Expression<*>)","org.jetbrains.exposed.v1.core.Concat.Concat"]},{"name":"constructor(seq: Sequence)","description":"org.jetbrains.exposed.v1.core.NextVal.IntNextVal.IntNextVal","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/-int-next-val/-int-next-val.html","searchKeys":["IntNextVal","constructor(seq: Sequence)","org.jetbrains.exposed.v1.core.NextVal.IntNextVal.IntNextVal"]},{"name":"constructor(seq: Sequence)","description":"org.jetbrains.exposed.v1.core.NextVal.LongNextVal.LongNextVal","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/-long-next-val/-long-next-val.html","searchKeys":["LongNextVal","constructor(seq: Sequence)","org.jetbrains.exposed.v1.core.NextVal.LongNextVal.LongNextVal"]},{"name":"constructor(source: ColumnSet, fields: List<Expression<*>>)","description":"org.jetbrains.exposed.v1.core.Slice.Slice","location":"exposed-core/org.jetbrains.exposed.v1.core/-slice/-slice.html","searchKeys":["Slice","constructor(source: ColumnSet, fields: List<Expression<*>>)","org.jetbrains.exposed.v1.core.Slice.Slice"]},{"name":"constructor(statement: Statement<*>, args: Iterable<Pair<IColumnType<*>, Any?>>)","description":"org.jetbrains.exposed.v1.core.statements.StatementContext.StatementContext","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-context/-statement-context.html","searchKeys":["StatementContext","constructor(statement: Statement<*>, args: Iterable<Pair<IColumnType<*>, Any?>>)","org.jetbrains.exposed.v1.core.statements.StatementContext.StatementContext"]},{"name":"constructor(table: ColumnSet)","description":"org.jetbrains.exposed.v1.core.Join.Join","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/-join.html","searchKeys":["Join","constructor(table: ColumnSet)","org.jetbrains.exposed.v1.core.Join.Join"]},{"name":"constructor(table: ColumnSet, otherTable: ColumnSet, joinType: JoinType = JoinType.INNER, onColumn: Expression<*>? = null, otherColumn: Expression<*>? = null, lateral: Boolean = false, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null)","description":"org.jetbrains.exposed.v1.core.Join.Join","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/-join.html","searchKeys":["Join","constructor(table: ColumnSet, otherTable: ColumnSet, joinType: JoinType = JoinType.INNER, onColumn: Expression<*>? = null, otherColumn: Expression<*>? = null, lateral: Boolean = false, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null)","org.jetbrains.exposed.v1.core.Join.Join"]},{"name":"constructor(table: IdTable<*>)","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.BatchUpdateStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/-batch-update-statement.html","searchKeys":["BatchUpdateStatement","constructor(table: IdTable<*>)","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.BatchUpdateStatement"]},{"name":"constructor(table: Table)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.MergeStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-merge-statement.html","searchKeys":["MergeStatement","constructor(table: Table)","org.jetbrains.exposed.v1.core.statements.MergeStatement.MergeStatement"]},{"name":"constructor(table: Table)","description":"org.jetbrains.exposed.v1.core.statements.ReplaceStatement.ReplaceStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-replace-statement/-replace-statement.html","searchKeys":["ReplaceStatement","constructor(table: Table)","org.jetbrains.exposed.v1.core.statements.ReplaceStatement.ReplaceStatement"]},{"name":"constructor(table: Table, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true)","description":"org.jetbrains.exposed.v1.core.statements.BatchInsertStatement.BatchInsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-insert-statement/-batch-insert-statement.html","searchKeys":["BatchInsertStatement","constructor(table: Table, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true)","org.jetbrains.exposed.v1.core.statements.BatchInsertStatement.BatchInsertStatement"]},{"name":"constructor(table: Table, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true)","description":"org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.SQLServerBatchInsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-s-q-l-server-batch-insert-statement/-s-q-l-server-batch-insert-statement.html","searchKeys":["SQLServerBatchInsertStatement","constructor(table: Table, ignore: Boolean = false, shouldReturnGeneratedValues: Boolean = true)","org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.SQLServerBatchInsertStatement"]},{"name":"constructor(table: Table, ignore: Boolean, shouldReturnGeneratedValues: Boolean = true)","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.BaseBatchInsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/-base-batch-insert-statement.html","searchKeys":["BaseBatchInsertStatement","constructor(table: Table, ignore: Boolean, shouldReturnGeneratedValues: Boolean = true)","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.BaseBatchInsertStatement"]},{"name":"constructor(table: Table, isIgnore: Boolean = false)","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.InsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/-insert-statement.html","searchKeys":["InsertStatement","constructor(table: Table, isIgnore: Boolean = false)","org.jetbrains.exposed.v1.core.statements.InsertStatement.InsertStatement"]},{"name":"constructor(table: Table, name: String, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.Column.Column","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/-column.html","searchKeys":["Column","constructor(table: Table, name: String, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.Column.Column"]},{"name":"constructor(table: Table, returningExpressions: List<Expression<*>>, mainStatement: Statement<*>)","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement.ReturningStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/-returning-statement.html","searchKeys":["ReturningStatement","constructor(table: Table, returningExpressions: List<Expression<*>>, mainStatement: Statement<*>)","org.jetbrains.exposed.v1.core.statements.ReturningStatement.ReturningStatement"]},{"name":"constructor(table: Table, shouldReturnGeneratedValues: Boolean = true)","description":"org.jetbrains.exposed.v1.core.statements.BatchReplaceStatement.BatchReplaceStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-replace-statement/-batch-replace-statement.html","searchKeys":["BatchReplaceStatement","constructor(table: Table, shouldReturnGeneratedValues: Boolean = true)","org.jetbrains.exposed.v1.core.statements.BatchReplaceStatement.BatchReplaceStatement"]},{"name":"constructor(table: Table, vararg keys: Column<*>, onUpdate: List<Pair<Column<*>, Expression<*>>>?, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?)","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.UpsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/-upsert-statement.html","searchKeys":["UpsertStatement","constructor(table: Table, vararg keys: Column<*>, onUpdate: List<Pair<Column<*>, Expression<*>>>?, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?)","org.jetbrains.exposed.v1.core.statements.UpsertStatement.UpsertStatement"]},{"name":"constructor(table: Table, vararg keys: Column<*>, onUpdate: List<Pair<Column<*>, Expression<*>>>?, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?, shouldReturnGeneratedValues: Boolean)","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.BatchUpsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/-batch-upsert-statement.html","searchKeys":["BatchUpsertStatement","constructor(table: Table, vararg keys: Column<*>, onUpdate: List<Pair<Column<*>, Expression<*>>>?, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?, shouldReturnGeneratedValues: Boolean)","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.BatchUpsertStatement"]},{"name":"constructor(table: Table, vararg keys: Column<*>, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?)","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.UpsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/-upsert-statement.html","searchKeys":["UpsertStatement","constructor(table: Table, vararg keys: Column<*>, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?)","org.jetbrains.exposed.v1.core.statements.UpsertStatement.UpsertStatement"]},{"name":"constructor(table: Table, vararg keys: Column<*>, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?, shouldReturnGeneratedValues: Boolean = true)","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.BatchUpsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/-batch-upsert-statement.html","searchKeys":["BatchUpsertStatement","constructor(table: Table, vararg keys: Column<*>, onUpdateExclude: List<Column<*>>?, where: Op<Boolean>?, shouldReturnGeneratedValues: Boolean = true)","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.BatchUpsertStatement"]},{"name":"constructor(table: Table, where: Op<Boolean>?, isIgnore: Boolean, limit: Int?, offset: Long?)","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.DeleteStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/-delete-statement.html","searchKeys":["DeleteStatement","constructor(table: Table, where: Op<Boolean>?, isIgnore: Boolean, limit: Int?, offset: Long?)","org.jetbrains.exposed.v1.core.statements.DeleteStatement.DeleteStatement"]},{"name":"constructor(tableName: String, checkName: String, checkOp: String)","description":"org.jetbrains.exposed.v1.core.CheckConstraint.CheckConstraint","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/-check-constraint.html","searchKeys":["CheckConstraint","constructor(tableName: String, checkName: String, checkOp: String)","org.jetbrains.exposed.v1.core.CheckConstraint.CheckConstraint"]},{"name":"constructor(target: Column<*>, from: Column<*>, onUpdate: ReferenceOption?, onDelete: ReferenceOption?, name: String?)","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.ForeignKeyConstraint","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/-foreign-key-constraint.html","searchKeys":["ForeignKeyConstraint","constructor(target: Column<*>, from: Column<*>, onUpdate: ReferenceOption?, onDelete: ReferenceOption?, name: String?)","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.ForeignKeyConstraint"]},{"name":"constructor(targets: List<Table>)","description":"org.jetbrains.exposed.v1.core.AbstractQuery.AbstractQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-abstract-query.html","searchKeys":["AbstractQuery","constructor(targets: List<Table>)","org.jetbrains.exposed.v1.core.AbstractQuery.AbstractQuery"]},{"name":"constructor(targetsSet: ColumnSet, limit: Int?, where: Op<Boolean>? = null)","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.UpdateStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/-update-statement.html","searchKeys":["UpdateStatement","constructor(targetsSet: ColumnSet, limit: Int?, where: Op<Boolean>? = null)","org.jetbrains.exposed.v1.core.statements.UpdateStatement.UpdateStatement"]},{"name":"constructor(targetsSet: ColumnSet, where: Op<Boolean>? = null, isIgnore: Boolean = false, limit: Int? = null, targetTables: List<Table> = emptyList())","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.DeleteStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/-delete-statement.html","searchKeys":["DeleteStatement","constructor(targetsSet: ColumnSet, where: Op<Boolean>? = null, isIgnore: Boolean = false, limit: Int? = null, targetTables: List<Table> = emptyList())","org.jetbrains.exposed.v1.core.statements.DeleteStatement.DeleteStatement"]},{"name":"constructor(timeout: Int)","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle.ForUpdateWait.ForUpdateWait","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-oracle/-for-update-wait/-for-update-wait.html","searchKeys":["ForUpdateWait","constructor(timeout: Int)","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle.ForUpdateWait.ForUpdateWait"]},{"name":"constructor(type: MergeStatement.ClauseCondition, action: MergeStatement.ClauseAction, arguments: List<Pair<Column<*>, Any?>>, and: Op<Boolean>?, deleteWhere: Op<Boolean>? = null, overridingSystemValue: Boolean = false, overridingUserValue: Boolean = false)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.Clause","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/-clause.html","searchKeys":["Clause","constructor(type: MergeStatement.ClauseCondition, action: MergeStatement.ClauseAction, arguments: List<Pair<Column<*>, Any?>>, and: Op<Boolean>?, deleteWhere: Op<Boolean>? = null, overridingSystemValue: Boolean = false, overridingUserValue: Boolean = false)","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.Clause"]},{"name":"constructor(type: StatementType, targets: List<Table>)","description":"org.jetbrains.exposed.v1.core.statements.Statement.Statement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement/-statement.html","searchKeys":["Statement","constructor(type: StatementType, targets: List<Table>)","org.jetbrains.exposed.v1.core.statements.Statement.Statement"]},{"name":"constructor(type: StatementType, targets: List<Table>)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.UpdateBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/-update-builder.html","searchKeys":["UpdateBuilder","constructor(type: StatementType, targets: List<Table>)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.UpdateBuilder"]},{"name":"constructor(unit: WindowFrameUnit, start: WindowFrameBound, end: WindowFrameBound? = null)","description":"org.jetbrains.exposed.v1.core.WindowFrameClause.WindowFrameClause","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-clause/-window-frame-clause.html","searchKeys":["WindowFrameClause","constructor(unit: WindowFrameUnit, start: WindowFrameBound, end: WindowFrameBound? = null)","org.jetbrains.exposed.v1.core.WindowFrameClause.WindowFrameClause"]},{"name":"constructor(useObjectIdentifier: Boolean = false)","description":"org.jetbrains.exposed.v1.core.BlobColumnType.BlobColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/-blob-column-type.html","searchKeys":["BlobColumnType","constructor(useObjectIdentifier: Boolean = false)","org.jetbrains.exposed.v1.core.BlobColumnType.BlobColumnType"]},{"name":"constructor(value: Expression<*>? = null)","description":"org.jetbrains.exposed.v1.core.Case.Case","location":"exposed-core/org.jetbrains.exposed.v1.core/-case/-case.html","searchKeys":["Case","constructor(value: Expression<*>? = null)","org.jetbrains.exposed.v1.core.Case.Case"]},{"name":"constructor(value: Expression<*>?)","description":"org.jetbrains.exposed.v1.core.CaseWhen.CaseWhen","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when/-case-when.html","searchKeys":["CaseWhen","constructor(value: Expression<*>?)","org.jetbrains.exposed.v1.core.CaseWhen.CaseWhen"]},{"name":"constructor(value: T, sqlType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.core.QueryParameter.QueryParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-parameter/-query-parameter.html","searchKeys":["QueryParameter","constructor(value: T, sqlType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.core.QueryParameter.QueryParameter"]},{"name":"data class CheckConstraint(val tableName: String, val checkName: String, val checkOp: String) : DdlAware","description":"org.jetbrains.exposed.v1.core.CheckConstraint","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/index.html","searchKeys":["CheckConstraint","data class CheckConstraint(val tableName: String, val checkName: String, val checkOp: String) : DdlAware","org.jetbrains.exposed.v1.core.CheckConstraint"]},{"name":"data class Clause(val type: MergeStatement.ClauseCondition, val action: MergeStatement.ClauseAction, val arguments: List<Pair<Column<*>, Any?>>, val and: Op<Boolean>?, val deleteWhere: Op<Boolean>? = null, val overridingSystemValue: Boolean = false, val overridingUserValue: Boolean = false)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/index.html","searchKeys":["Clause","data class Clause(val type: MergeStatement.ClauseCondition, val action: MergeStatement.ClauseAction, val arguments: List<Pair<Column<*>, Any?>>, val and: Op<Boolean>?, val deleteWhere: Op<Boolean>? = null, val overridingSystemValue: Boolean = false, val overridingUserValue: Boolean = false)","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause"]},{"name":"data class ColumnDiff(val nullability: Boolean, val type: Boolean, val autoInc: Boolean, val defaults: Boolean, val caseSensitiveName: Boolean, val sizeAndScale: Boolean)","description":"org.jetbrains.exposed.v1.core.ColumnDiff","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/index.html","searchKeys":["ColumnDiff","data class ColumnDiff(val nullability: Boolean, val type: Boolean, val autoInc: Boolean, val defaults: Boolean, val caseSensitiveName: Boolean, val sizeAndScale: Boolean)","org.jetbrains.exposed.v1.core.ColumnDiff"]},{"name":"data class ColumnMetadata(val name: String, val jdbcType: Int, val sqlType: String, val nullable: Boolean, val size: Int?, val scale: Int?, val autoIncrement: Boolean, val defaultDbValue: String?)","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/index.html","searchKeys":["ColumnMetadata","data class ColumnMetadata(val name: String, val jdbcType: Int, val sqlType: String, val nullable: Boolean, val size: Int?, val scale: Int?, val autoIncrement: Boolean, val defaultDbValue: String?)","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata"]},{"name":"data class Count(val count: Int) : StatementResult","description":"org.jetbrains.exposed.v1.core.statements.StatementResult.Count","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/-count/index.html","searchKeys":["Count","data class Count(val count: Int) : StatementResult","org.jetbrains.exposed.v1.core.statements.StatementResult.Count"]},{"name":"data class ForeignKeyConstraint(val references: Map<Column<*>, Column<*>>, onUpdate: ReferenceOption?, onDelete: ReferenceOption?, name: String?) : DdlAware","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/index.html","searchKeys":["ForeignKeyConstraint","data class ForeignKeyConstraint(val references: Map<Column<*>, Column<*>>, onUpdate: ReferenceOption?, onDelete: ReferenceOption?, name: String?) : DdlAware","org.jetbrains.exposed.v1.core.ForeignKeyConstraint"]},{"name":"data class Index(val columns: List<Column<*>>, val unique: Boolean, val customName: String? = null, val indexType: String? = null, val filterCondition: Op<Boolean>? = null, val functions: List<ExpressionWithColumnType<*>>? = null, val functionsTable: Table? = null) : DdlAware","description":"org.jetbrains.exposed.v1.core.Index","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/index.html","searchKeys":["Index","data class Index(val columns: List<Column<*>>, val unique: Boolean, val customName: String? = null, val indexType: String? = null, val filterCondition: Op<Boolean>? = null, val functions: List<ExpressionWithColumnType<*>>? = null, val functionsTable: Table? = null) : DdlAware","org.jetbrains.exposed.v1.core.Index"]},{"name":"data class LikePattern(val pattern: String, val escapeChar: Char? = null)","description":"org.jetbrains.exposed.v1.core.LikePattern","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/index.html","searchKeys":["LikePattern","data class LikePattern(val pattern: String, val escapeChar: Char? = null)","org.jetbrains.exposed.v1.core.LikePattern"]},{"name":"data class Object(val resultSet: ResultApi) : StatementResult","description":"org.jetbrains.exposed.v1.core.statements.StatementResult.Object","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/-object/index.html","searchKeys":["Object","data class Object(val resultSet: ResultApi) : StatementResult","org.jetbrains.exposed.v1.core.statements.StatementResult.Object"]},{"name":"data class PrimaryKeyMetadata(val name: String, val columnNames: List<String>)","description":"org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-primary-key-metadata/index.html","searchKeys":["PrimaryKeyMetadata","data class PrimaryKeyMetadata(val name: String, val columnNames: List<String>)","org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata"]},{"name":"data class Schema(name: String, val authorization: String? = null, val password: String? = null, val defaultTablespace: String? = null, val temporaryTablespace: String? = null, val quota: String? = null, val on: String? = null)","description":"org.jetbrains.exposed.v1.core.Schema","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/index.html","searchKeys":["Schema","data class Schema(name: String, val authorization: String? = null, val password: String? = null, val defaultTablespace: String? = null, val temporaryTablespace: String? = null, val quota: String? = null, val on: String? = null)","org.jetbrains.exposed.v1.core.Schema"]},{"name":"data class SchemaMetadata(val schemaName: String, val tableNames: List<String>)","description":"org.jetbrains.exposed.v1.core.vendors.SchemaMetadata","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-schema-metadata/index.html","searchKeys":["SchemaMetadata","data class SchemaMetadata(val schemaName: String, val tableNames: List<String>)","org.jetbrains.exposed.v1.core.vendors.SchemaMetadata"]},{"name":"data object ForUpdate : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-for-update/index.html","searchKeys":["ForUpdate","data object ForUpdate : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdate"]},{"name":"data object ForUpdateNoWait : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle.ForUpdateNoWait","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-oracle/-for-update-no-wait/index.html","searchKeys":["ForUpdateNoWait","data object ForUpdateNoWait : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle.ForUpdateNoWait"]},{"name":"data object LockInShareMode : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MariaDB.LockInShareMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-maria-d-b/-lock-in-share-mode/index.html","searchKeys":["LockInShareMode","data object LockInShareMode : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MariaDB.LockInShareMode"]},{"name":"data object LockInShareMode : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.LockInShareMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-lock-in-share-mode/index.html","searchKeys":["LockInShareMode","data object LockInShareMode : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.LockInShareMode"]},{"name":"data object NoForUpdateOption : ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.NoForUpdateOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-no-for-update-option/index.html","searchKeys":["NoForUpdateOption","data object NoForUpdateOption : ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.NoForUpdateOption"]},{"name":"enum ClauseAction : Enum<MergeStatement.ClauseAction> ","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/index.html","searchKeys":["ClauseAction","enum ClauseAction : Enum<MergeStatement.ClauseAction> ","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction"]},{"name":"enum ClauseCondition : Enum<MergeStatement.ClauseCondition> ","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-condition/index.html","searchKeys":["ClauseCondition","enum ClauseCondition : Enum<MergeStatement.ClauseCondition> ","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition"]},{"name":"enum CommentPosition : Enum<AbstractQuery.CommentPosition> ","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/index.html","searchKeys":["CommentPosition","enum CommentPosition : Enum<AbstractQuery.CommentPosition> ","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition"]},{"name":"enum H2CompatibilityMode : Enum<H2Dialect.H2CompatibilityMode> ","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/index.html","searchKeys":["H2CompatibilityMode","enum H2CompatibilityMode : Enum<H2Dialect.H2CompatibilityMode> ","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode"]},{"name":"enum H2MajorVersion : Enum<H2Dialect.H2MajorVersion> ","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-major-version/index.html","searchKeys":["H2MajorVersion","enum H2MajorVersion : Enum<H2Dialect.H2MajorVersion> ","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion"]},{"name":"enum JoinType : Enum<JoinType> ","description":"org.jetbrains.exposed.v1.core.JoinType","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/index.html","searchKeys":["JoinType","enum JoinType : Enum<JoinType> ","org.jetbrains.exposed.v1.core.JoinType"]},{"name":"enum MODE : Enum<ForUpdateOption.MySQL.MODE> , ForUpdateOption.ForUpdateOrShareMode","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/index.html","searchKeys":["MODE","enum MODE : Enum<ForUpdateOption.MySQL.MODE> , ForUpdateOption.ForUpdateOrShareMode","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE"]},{"name":"enum MODE : Enum<ForUpdateOption.PostgreSQL.MODE> , ForUpdateOption.ForUpdateOrShareMode","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/index.html","searchKeys":["MODE","enum MODE : Enum<ForUpdateOption.PostgreSQL.MODE> , ForUpdateOption.ForUpdateOrShareMode","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE"]},{"name":"enum ReferenceOption : Enum<ReferenceOption> ","description":"org.jetbrains.exposed.v1.core.ReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/index.html","searchKeys":["ReferenceOption","enum ReferenceOption : Enum<ReferenceOption> ","org.jetbrains.exposed.v1.core.ReferenceOption"]},{"name":"enum SortOrder : Enum<SortOrder> ","description":"org.jetbrains.exposed.v1.core.SortOrder","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/index.html","searchKeys":["SortOrder","enum SortOrder : Enum<SortOrder> ","org.jetbrains.exposed.v1.core.SortOrder"]},{"name":"enum StatementGroup : Enum<StatementGroup> ","description":"org.jetbrains.exposed.v1.core.statements.StatementGroup","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-group/index.html","searchKeys":["StatementGroup","enum StatementGroup : Enum<StatementGroup> ","org.jetbrains.exposed.v1.core.statements.StatementGroup"]},{"name":"enum StatementType : Enum<StatementType> ","description":"org.jetbrains.exposed.v1.core.statements.StatementType","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/index.html","searchKeys":["StatementType","enum StatementType : Enum<StatementType> ","org.jetbrains.exposed.v1.core.statements.StatementType"]},{"name":"enum WindowFrameBoundDirection : Enum<WindowFrameBoundDirection> ","description":"org.jetbrains.exposed.v1.core.WindowFrameBoundDirection","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound-direction/index.html","searchKeys":["WindowFrameBoundDirection","enum WindowFrameBoundDirection : Enum<WindowFrameBoundDirection> ","org.jetbrains.exposed.v1.core.WindowFrameBoundDirection"]},{"name":"enum WindowFrameUnit : Enum<WindowFrameUnit> ","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/index.html","searchKeys":["WindowFrameUnit","enum WindowFrameUnit : Enum<WindowFrameUnit> ","org.jetbrains.exposed.v1.core.WindowFrameUnit"]},{"name":"fun <C1 : ColumnSet, C2 : ColumnSet> C1.crossJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","description":"org.jetbrains.exposed.v1.core.crossJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/cross-join.html","searchKeys":["crossJoin","fun <C1 : ColumnSet, C2 : ColumnSet> C1.crossJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","org.jetbrains.exposed.v1.core.crossJoin"]},{"name":"fun <C1 : ColumnSet, C2 : ColumnSet> C1.fullJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","description":"org.jetbrains.exposed.v1.core.fullJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/full-join.html","searchKeys":["fullJoin","fun <C1 : ColumnSet, C2 : ColumnSet> C1.fullJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","org.jetbrains.exposed.v1.core.fullJoin"]},{"name":"fun <C1 : ColumnSet, C2 : ColumnSet> C1.innerJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","description":"org.jetbrains.exposed.v1.core.innerJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/inner-join.html","searchKeys":["innerJoin","fun <C1 : ColumnSet, C2 : ColumnSet> C1.innerJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","org.jetbrains.exposed.v1.core.innerJoin"]},{"name":"fun <C1 : ColumnSet, C2 : ColumnSet> C1.leftJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","description":"org.jetbrains.exposed.v1.core.leftJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/left-join.html","searchKeys":["leftJoin","fun <C1 : ColumnSet, C2 : ColumnSet> C1.leftJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","org.jetbrains.exposed.v1.core.leftJoin"]},{"name":"fun <C1 : ColumnSet, C2 : ColumnSet> C1.rightJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","description":"org.jetbrains.exposed.v1.core.rightJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/right-join.html","searchKeys":["rightJoin","fun <C1 : ColumnSet, C2 : ColumnSet> C1.rightJoin(otherTable: C2, onColumn: C1.() -> Expression<*>? = null, otherColumn: C2.() -> Expression<*>? = null, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>? = null): Join","org.jetbrains.exposed.v1.core.rightJoin"]},{"name":"fun <E, R : List<Any?>> Table.array(name: String, columnType: ColumnType<E & Any>, maximumCardinality: List<Int>? = null, dimensions: Int): Column<R>","description":"org.jetbrains.exposed.v1.core.Table.array","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/array.html","searchKeys":["array","fun <E, R : List<Any?>> Table.array(name: String, columnType: ColumnType<E & Any>, maximumCardinality: List<Int>? = null, dimensions: Int): Column<R>","org.jetbrains.exposed.v1.core.Table.array"]},{"name":"fun <E, T : List<E>?> ExpressionWithColumnType<T>.slice(lower: Int? = null, upper: Int? = null): ArraySlice<E, T>","description":"org.jetbrains.exposed.v1.core.slice","location":"exposed-core/org.jetbrains.exposed.v1.core/slice.html","searchKeys":["slice","fun <E, T : List<E>?> ExpressionWithColumnType<T>.slice(lower: Int? = null, upper: Int? = null): ArraySlice<E, T>","org.jetbrains.exposed.v1.core.slice"]},{"name":"fun <E, T : List<E>?> allFrom(expression: Expression<T>): Op<E>","description":"org.jetbrains.exposed.v1.core.allFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/all-from.html","searchKeys":["allFrom","fun <E, T : List<E>?> allFrom(expression: Expression<T>): Op<E>","org.jetbrains.exposed.v1.core.allFrom"]},{"name":"fun <E, T : List<E>?> anyFrom(expression: Expression<T>): Op<E>","description":"org.jetbrains.exposed.v1.core.anyFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/any-from.html","searchKeys":["anyFrom","fun <E, T : List<E>?> anyFrom(expression: Expression<T>): Op<E>","org.jetbrains.exposed.v1.core.anyFrom"]},{"name":"fun <E> array(name: String, columnType: ColumnType<E & Any>, maximumCardinality: Int? = null): Column<List<E>>","description":"org.jetbrains.exposed.v1.core.Table.array","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/array.html","searchKeys":["array","fun <E> array(name: String, columnType: ColumnType<E & Any>, maximumCardinality: Int? = null): Column<List<E>>","org.jetbrains.exposed.v1.core.Table.array"]},{"name":"fun <ID : Any> entityId(name: String, originalColumn: Column<ID>): Column<EntityID<ID>>","description":"org.jetbrains.exposed.v1.core.Table.entityId","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/entity-id.html","searchKeys":["entityId","fun <ID : Any> entityId(name: String, originalColumn: Column<ID>): Column<EntityID<ID>>","org.jetbrains.exposed.v1.core.Table.entityId"]},{"name":"fun <ID : Any> entityId(name: String, table: IdTable<ID>): Column<EntityID<ID>>","description":"org.jetbrains.exposed.v1.core.Table.entityId","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/entity-id.html","searchKeys":["entityId","fun <ID : Any> entityId(name: String, table: IdTable<ID>): Column<EntityID<ID>>","org.jetbrains.exposed.v1.core.Table.entityId"]},{"name":"fun <N : Any> Column<EntityID<N>>.autoinc(idSeqName: String? = null): Column<EntityID<N>>","description":"org.jetbrains.exposed.v1.core.Table.autoinc","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/autoinc.html","searchKeys":["autoinc","fun <N : Any> Column<EntityID<N>>.autoinc(idSeqName: String? = null): Column<EntityID<N>>","org.jetbrains.exposed.v1.core.Table.autoinc"]},{"name":"fun <N : Any> Column<N>.autoIncrement(idSeqName: String? = null): Column<N>","description":"org.jetbrains.exposed.v1.core.Table.autoIncrement","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/auto-increment.html","searchKeys":["autoIncrement","fun <N : Any> Column<N>.autoIncrement(idSeqName: String? = null): Column<N>","org.jetbrains.exposed.v1.core.Table.autoIncrement"]},{"name":"fun <N : Any> Column<N>.autoIncrement(sequence: Sequence): Column<N>","description":"org.jetbrains.exposed.v1.core.Table.autoIncrement","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/auto-increment.html","searchKeys":["autoIncrement","fun <N : Any> Column<N>.autoIncrement(sequence: Sequence): Column<N>","org.jetbrains.exposed.v1.core.Table.autoIncrement"]},{"name":"fun <R, T : CompositeColumn<R>> registerCompositeColumn(column: T): T","description":"org.jetbrains.exposed.v1.core.Table.registerCompositeColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/register-composite-column.html","searchKeys":["registerCompositeColumn","fun <R, T : CompositeColumn<R>> registerCompositeColumn(column: T): T","org.jetbrains.exposed.v1.core.Table.registerCompositeColumn"]},{"name":"fun <R> Expression<*>.castTo(columnType: IColumnType<R & Any>): ExpressionWithColumnType<R>","description":"org.jetbrains.exposed.v1.core.castTo","location":"exposed-core/org.jetbrains.exposed.v1.core/cast-to.html","searchKeys":["castTo","fun <R> Expression<*>.castTo(columnType: IColumnType<R & Any>): ExpressionWithColumnType<R>","org.jetbrains.exposed.v1.core.castTo"]},{"name":"fun <R> originalColumn(column: Column<R>): Column<R>?","description":"org.jetbrains.exposed.v1.core.Alias.originalColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/original-column.html","searchKeys":["originalColumn","fun <R> originalColumn(column: Column<R>): Column<R>?","org.jetbrains.exposed.v1.core.Alias.originalColumn"]},{"name":"fun <S : T> referee(): Column<S>?","description":"org.jetbrains.exposed.v1.core.Column.referee","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/referee.html","searchKeys":["referee","fun <S : T> referee(): Column<S>?","org.jetbrains.exposed.v1.core.Column.referee"]},{"name":"fun <S> buildStatement(body: IStatementBuilder.() -> S): S","description":"org.jetbrains.exposed.v1.core.statements.buildStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/build-statement.html","searchKeys":["buildStatement","fun <S> buildStatement(body: IStatementBuilder.() -> S): S","org.jetbrains.exposed.v1.core.statements.buildStatement"]},{"name":"fun <T : AbstractQuery<*>> T.alias(alias: String): QueryAlias","description":"org.jetbrains.exposed.v1.core.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/alias.html","searchKeys":["alias","fun <T : AbstractQuery<*>> T.alias(alias: String): QueryAlias","org.jetbrains.exposed.v1.core.alias"]},{"name":"fun <T : Any, C : CompositeColumn<T>> C.nullable(): CompositeColumn<T?>","description":"org.jetbrains.exposed.v1.core.Table.nullable","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/nullable.html","searchKeys":["nullable","fun <T : Any, C : CompositeColumn<T>> C.nullable(): CompositeColumn<T?>","org.jetbrains.exposed.v1.core.Table.nullable"]},{"name":"fun <T : Any, E : EntityID<T>> optReference(name: String, refColumn: Column<E>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<E?>","description":"org.jetbrains.exposed.v1.core.Table.optReference","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/opt-reference.html","searchKeys":["optReference","fun <T : Any, E : EntityID<T>> optReference(name: String, refColumn: Column<E>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<E?>","org.jetbrains.exposed.v1.core.Table.optReference"]},{"name":"fun <T : Any, E : EntityID<T>> reference(name: String, refColumn: Column<E>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<E>","description":"org.jetbrains.exposed.v1.core.Table.reference","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/reference.html","searchKeys":["reference","fun <T : Any, E : EntityID<T>> reference(name: String, refColumn: Column<E>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<E>","org.jetbrains.exposed.v1.core.Table.reference"]},{"name":"fun <T : Any, S : T, C : Column<S>> C.references(ref: Column<EntityID<T>>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): C","description":"org.jetbrains.exposed.v1.core.Table.references","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/references.html","searchKeys":["references","fun <T : Any, S : T, C : Column<S>> C.references(ref: Column<EntityID<T>>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): C","org.jetbrains.exposed.v1.core.Table.references"]},{"name":"fun <T : Any, S : T, C : Column<S>> C.references(ref: Column<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): C","description":"org.jetbrains.exposed.v1.core.Table.references","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/references.html","searchKeys":["references","fun <T : Any, S : T, C : Column<S>> C.references(ref: Column<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): C","org.jetbrains.exposed.v1.core.Table.references"]},{"name":"fun <T : Any, S : T?> ExpressionWithColumnType<in S>.max(): Max<T, S>","description":"org.jetbrains.exposed.v1.core.max","location":"exposed-core/org.jetbrains.exposed.v1.core/max.html","searchKeys":["max","fun <T : Any, S : T?> ExpressionWithColumnType<in S>.max(): Max<T, S>","org.jetbrains.exposed.v1.core.max"]},{"name":"fun <T : Any, S : T?> ExpressionWithColumnType<in S>.min(): Min<T, S>","description":"org.jetbrains.exposed.v1.core.min","location":"exposed-core/org.jetbrains.exposed.v1.core/min.html","searchKeys":["min","fun <T : Any, S : T?> ExpressionWithColumnType<in S>.min(): Min<T, S>","org.jetbrains.exposed.v1.core.min"]},{"name":"fun <T : Any> Column<T>.entityId(): Column<EntityID<T>>","description":"org.jetbrains.exposed.v1.core.Table.entityId","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/entity-id.html","searchKeys":["entityId","fun <T : Any> Column<T>.entityId(): Column<EntityID<T>>","org.jetbrains.exposed.v1.core.Table.entityId"]},{"name":"fun <T : Any> Column<T>.nullable(): Column<T?>","description":"org.jetbrains.exposed.v1.core.Table.nullable","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/nullable.html","searchKeys":["nullable","fun <T : Any> Column<T>.nullable(): Column<T?>","org.jetbrains.exposed.v1.core.Table.nullable"]},{"name":"fun <T : Any> createEntityID(value: T, table: IdTable<T>): EntityID<T>","description":"org.jetbrains.exposed.v1.core.dao.id.EntityIDFunctionProvider.createEntityID","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d-function-provider/create-entity-i-d.html","searchKeys":["createEntityID","fun <T : Any> createEntityID(value: T, table: IdTable<T>): EntityID<T>","org.jetbrains.exposed.v1.core.dao.id.EntityIDFunctionProvider.createEntityID"]},{"name":"fun <T : Any> getOrCreate(key: Key<T>, init: () -> T): T","description":"org.jetbrains.exposed.v1.core.UserDataHolder.getOrCreate","location":"exposed-core/org.jetbrains.exposed.v1.core/-user-data-holder/get-or-create.html","searchKeys":["getOrCreate","fun <T : Any> getOrCreate(key: Key<T>, init: () -> T): T","org.jetbrains.exposed.v1.core.UserDataHolder.getOrCreate"]},{"name":"fun <T : Any> getUserData(key: Key<T>): T?","description":"org.jetbrains.exposed.v1.core.UserDataHolder.getUserData","location":"exposed-core/org.jetbrains.exposed.v1.core/-user-data-holder/get-user-data.html","searchKeys":["getUserData","fun <T : Any> getUserData(key: Key<T>): T?","org.jetbrains.exposed.v1.core.UserDataHolder.getUserData"]},{"name":"fun <T : Any> idParam(value: EntityID<T>, column: Column<EntityID<T>>): Expression<EntityID<T>>","description":"org.jetbrains.exposed.v1.core.idParam","location":"exposed-core/org.jetbrains.exposed.v1.core/id-param.html","searchKeys":["idParam","fun <T : Any> idParam(value: EntityID<T>, column: Column<EntityID<T>>): Expression<EntityID<T>>","org.jetbrains.exposed.v1.core.idParam"]},{"name":"fun <T : Any> nullableTransactionScope(): TransactionStore<T>","description":"org.jetbrains.exposed.v1.core.transactions.nullableTransactionScope","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/nullable-transaction-scope.html","searchKeys":["nullableTransactionScope","fun <T : Any> nullableTransactionScope(): TransactionStore<T>","org.jetbrains.exposed.v1.core.transactions.nullableTransactionScope"]},{"name":"fun <T : Any> optReference(name: String, foreign: IdTable<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<EntityID<T>?>","description":"org.jetbrains.exposed.v1.core.Table.optReference","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/opt-reference.html","searchKeys":["optReference","fun <T : Any> optReference(name: String, foreign: IdTable<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<EntityID<T>?>","org.jetbrains.exposed.v1.core.Table.optReference"]},{"name":"fun <T : Any> optReference(name: String, refColumn: Column<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<T?>","description":"org.jetbrains.exposed.v1.core.Table.optReference","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/opt-reference.html","searchKeys":["optReference","fun <T : Any> optReference(name: String, refColumn: Column<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<T?>","org.jetbrains.exposed.v1.core.Table.optReference"]},{"name":"fun <T : Any> putUserData(key: Key<T>, value: T)","description":"org.jetbrains.exposed.v1.core.UserDataHolder.putUserData","location":"exposed-core/org.jetbrains.exposed.v1.core/-user-data-holder/put-user-data.html","searchKeys":["putUserData","fun <T : Any> putUserData(key: Key<T>, value: T)","org.jetbrains.exposed.v1.core.UserDataHolder.putUserData"]},{"name":"fun <T : Any> reference(name: String, foreign: IdTable<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<EntityID<T>>","description":"org.jetbrains.exposed.v1.core.Table.reference","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/reference.html","searchKeys":["reference","fun <T : Any> reference(name: String, foreign: IdTable<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<EntityID<T>>","org.jetbrains.exposed.v1.core.Table.reference"]},{"name":"fun <T : Any> reference(name: String, refColumn: Column<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.reference","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/reference.html","searchKeys":["reference","fun <T : Any> reference(name: String, refColumn: Column<T>, onDelete: ReferenceOption? = null, onUpdate: ReferenceOption? = null, fkName: String? = null): Column<T>","org.jetbrains.exposed.v1.core.Table.reference"]},{"name":"fun <T : Any> removeUserData(key: Key<T>): Any?","description":"org.jetbrains.exposed.v1.core.UserDataHolder.removeUserData","location":"exposed-core/org.jetbrains.exposed.v1.core/-user-data-holder/remove-user-data.html","searchKeys":["removeUserData","fun <T : Any> removeUserData(key: Key<T>): Any?","org.jetbrains.exposed.v1.core.UserDataHolder.removeUserData"]},{"name":"fun <T : Any> resolveColumnType(klass: KClass<T>, defaultType: ColumnType<*>? = null): ColumnType<T>","description":"org.jetbrains.exposed.v1.core.resolveColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/resolve-column-type.html","searchKeys":["resolveColumnType","fun <T : Any> resolveColumnType(klass: KClass<T>, defaultType: ColumnType<*>? = null): ColumnType<T>","org.jetbrains.exposed.v1.core.resolveColumnType"]},{"name":"fun <T : Any> transactionScope(init: Transaction.() -> T): ReadWriteProperty<Any?, T>","description":"org.jetbrains.exposed.v1.core.transactions.transactionScope","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/transaction-scope.html","searchKeys":["transactionScope","fun <T : Any> transactionScope(init: Transaction.() -> T): ReadWriteProperty<Any?, T>","org.jetbrains.exposed.v1.core.transactions.transactionScope"]},{"name":"fun <T : Any> wrapAsExpression(query: AbstractQuery<*>): Expression<T?>","description":"org.jetbrains.exposed.v1.core.wrapAsExpression","location":"exposed-core/org.jetbrains.exposed.v1.core/wrap-as-expression.html","searchKeys":["wrapAsExpression","fun <T : Any> wrapAsExpression(query: AbstractQuery<*>): Expression<T?>","org.jetbrains.exposed.v1.core.wrapAsExpression"]},{"name":"fun <T : BigDecimal?, S : T> DivideOp<T, S>.withScale(scale: Int): DivideOp<T, S>","description":"org.jetbrains.exposed.v1.core.DivideOp.Companion.withScale","location":"exposed-core/org.jetbrains.exposed.v1.core/-divide-op/-companion/with-scale.html","searchKeys":["withScale","fun <T : BigDecimal?, S : T> DivideOp<T, S>.withScale(scale: Int): DivideOp<T, S>","org.jetbrains.exposed.v1.core.DivideOp.Companion.withScale"]},{"name":"fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<S>.avg(scale: Int = 2): Avg<T, S>","description":"org.jetbrains.exposed.v1.core.avg","location":"exposed-core/org.jetbrains.exposed.v1.core/avg.html","searchKeys":["avg","fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<S>.avg(scale: Int = 2): Avg<T, S>","org.jetbrains.exposed.v1.core.avg"]},{"name":"fun <T : Enum<T>> customEnumeration(name: String, sql: String? = null, fromDb: (Any) -> T, toDb: (T) -> Any): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.customEnumeration","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/custom-enumeration.html","searchKeys":["customEnumeration","fun <T : Enum<T>> customEnumeration(name: String, sql: String? = null, fromDb: (Any) -> T, toDb: (T) -> Any): Column<T>","org.jetbrains.exposed.v1.core.Table.customEnumeration"]},{"name":"fun <T : Enum<T>> enumeration(name: String, klass: KClass<T>): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.enumeration","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/enumeration.html","searchKeys":["enumeration","fun <T : Enum<T>> enumeration(name: String, klass: KClass<T>): Column<T>","org.jetbrains.exposed.v1.core.Table.enumeration"]},{"name":"fun <T : Enum<T>> enumerationByName(name: String, length: Int, klass: KClass<T>): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.enumerationByName","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/enumeration-by-name.html","searchKeys":["enumerationByName","fun <T : Enum<T>> enumerationByName(name: String, length: Int, klass: KClass<T>): Column<T>","org.jetbrains.exposed.v1.core.Table.enumerationByName"]},{"name":"fun <T : String?> Expression<T>.charLength(): CharLength<T>","description":"org.jetbrains.exposed.v1.core.charLength","location":"exposed-core/org.jetbrains.exposed.v1.core/char-length.html","searchKeys":["charLength","fun <T : String?> Expression<T>.charLength(): CharLength<T>","org.jetbrains.exposed.v1.core.charLength"]},{"name":"fun <T : String?> Expression<T>.groupConcat(separator: String? = null, distinct: Boolean = false, orderBy: Array<Pair<Expression<*>, SortOrder>> = emptyArray()): GroupConcat<T>","description":"org.jetbrains.exposed.v1.core.groupConcat","location":"exposed-core/org.jetbrains.exposed.v1.core/group-concat.html","searchKeys":["groupConcat","fun <T : String?> Expression<T>.groupConcat(separator: String? = null, distinct: Boolean = false, orderBy: Array<Pair<Expression<*>, SortOrder>> = emptyArray()): GroupConcat<T>","org.jetbrains.exposed.v1.core.groupConcat"]},{"name":"fun <T : String?> Expression<T>.groupConcat(separator: String? = null, distinct: Boolean = false, orderBy: Pair<Expression<*>, SortOrder>): GroupConcat<T>","description":"org.jetbrains.exposed.v1.core.groupConcat","location":"exposed-core/org.jetbrains.exposed.v1.core/group-concat.html","searchKeys":["groupConcat","fun <T : String?> Expression<T>.groupConcat(separator: String? = null, distinct: Boolean = false, orderBy: Pair<Expression<*>, SortOrder>): GroupConcat<T>","org.jetbrains.exposed.v1.core.groupConcat"]},{"name":"fun <T : String?> Expression<T>.locate(substring: String): Locate<T>","description":"org.jetbrains.exposed.v1.core.locate","location":"exposed-core/org.jetbrains.exposed.v1.core/locate.html","searchKeys":["locate","fun <T : String?> Expression<T>.locate(substring: String): Locate<T>","org.jetbrains.exposed.v1.core.locate"]},{"name":"fun <T : String?> Expression<T>.lowerCase(): LowerCase<T>","description":"org.jetbrains.exposed.v1.core.lowerCase","location":"exposed-core/org.jetbrains.exposed.v1.core/lower-case.html","searchKeys":["lowerCase","fun <T : String?> Expression<T>.lowerCase(): LowerCase<T>","org.jetbrains.exposed.v1.core.lowerCase"]},{"name":"fun <T : String?> Expression<T>.substring(start: Int, length: Int): Substring<T>","description":"org.jetbrains.exposed.v1.core.substring","location":"exposed-core/org.jetbrains.exposed.v1.core/substring.html","searchKeys":["substring","fun <T : String?> Expression<T>.substring(start: Int, length: Int): Substring<T>","org.jetbrains.exposed.v1.core.substring"]},{"name":"fun <T : String?> Expression<T>.trim(): Trim<T>","description":"org.jetbrains.exposed.v1.core.trim","location":"exposed-core/org.jetbrains.exposed.v1.core/trim.html","searchKeys":["trim","fun <T : String?> Expression<T>.trim(): Trim<T>","org.jetbrains.exposed.v1.core.trim"]},{"name":"fun <T : String?> Expression<T>.upperCase(): UpperCase<T>","description":"org.jetbrains.exposed.v1.core.upperCase","location":"exposed-core/org.jetbrains.exposed.v1.core/upper-case.html","searchKeys":["upperCase","fun <T : String?> Expression<T>.upperCase(): UpperCase<T>","org.jetbrains.exposed.v1.core.upperCase"]},{"name":"fun <T : Table> T.alias(alias: String): Alias<T>","description":"org.jetbrains.exposed.v1.core.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/alias.html","searchKeys":["alias","fun <T : Table> T.alias(alias: String): Alias<T>","org.jetbrains.exposed.v1.core.alias"]},{"name":"fun <T> Array<T>.appendTo(separator: CharSequence = \", \", prefix: CharSequence = \"\", postfix: CharSequence = \"\", transform: QueryBuilder.(T) -> Unit)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.appendTo","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/append-to.html","searchKeys":["appendTo","fun <T> Array<T>.appendTo(separator: CharSequence = \", \", prefix: CharSequence = \"\", postfix: CharSequence = \"\", transform: QueryBuilder.(T) -> Unit)","org.jetbrains.exposed.v1.core.QueryBuilder.appendTo"]},{"name":"fun <T> Column<T>.check(name: String = \"\", op: SqlExpressionBuilder.(Column<T>) -> Op<Boolean>): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.check","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/check.html","searchKeys":["check","fun <T> Column<T>.check(name: String = \"\", op: SqlExpressionBuilder.(Column<T>) -> Op<Boolean>): Column<T>","org.jetbrains.exposed.v1.core.Table.check"]},{"name":"fun <T> Column<T>.clientDefault(defaultValue: () -> T): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.clientDefault","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/client-default.html","searchKeys":["clientDefault","fun <T> Column<T>.clientDefault(defaultValue: () -> T): Column<T>","org.jetbrains.exposed.v1.core.Table.clientDefault"]},{"name":"fun <T> Column<T>.databaseGenerated(): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.databaseGenerated","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/database-generated.html","searchKeys":["databaseGenerated","fun <T> Column<T>.databaseGenerated(): Column<T>","org.jetbrains.exposed.v1.core.Table.databaseGenerated"]},{"name":"fun <T> Column<T>.default(defaultValue: T): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.default","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/default.html","searchKeys":["default","fun <T> Column<T>.default(defaultValue: T): Column<T>","org.jetbrains.exposed.v1.core.Table.default"]},{"name":"fun <T> Column<T>.defaultExpression(defaultValue: Expression<T>): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.defaultExpression","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/default-expression.html","searchKeys":["defaultExpression","fun <T> Column<T>.defaultExpression(defaultValue: Expression<T>): Column<T>","org.jetbrains.exposed.v1.core.Table.defaultExpression"]},{"name":"fun <T> Column<T>.index(customIndexName: String? = null, isUnique: Boolean = false): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.index","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/--index--.html","searchKeys":["index","fun <T> Column<T>.index(customIndexName: String? = null, isUnique: Boolean = false): Column<T>","org.jetbrains.exposed.v1.core.Table.index"]},{"name":"fun <T> Column<T>.uniqueIndex(customIndexName: String? = null): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.uniqueIndex","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/unique-index.html","searchKeys":["uniqueIndex","fun <T> Column<T>.uniqueIndex(customIndexName: String? = null): Column<T>","org.jetbrains.exposed.v1.core.Table.uniqueIndex"]},{"name":"fun <T> Column<T>.withDefinition(vararg definition: Any): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.withDefinition","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/with-definition.html","searchKeys":["withDefinition","fun <T> Column<T>.withDefinition(vararg definition: Any): Column<T>","org.jetbrains.exposed.v1.core.Table.withDefinition"]},{"name":"fun <T> CompositeColumn<T>.default(defaultValue: T): CompositeColumn<T>","description":"org.jetbrains.exposed.v1.core.Table.default","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/default.html","searchKeys":["default","fun <T> CompositeColumn<T>.default(defaultValue: T): CompositeColumn<T>","org.jetbrains.exposed.v1.core.Table.default"]},{"name":"fun <T> Expression<T>.alias(alias: String): ExpressionAlias<T>","description":"org.jetbrains.exposed.v1.core.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/alias.html","searchKeys":["alias","fun <T> Expression<T>.alias(alias: String): ExpressionAlias<T>","org.jetbrains.exposed.v1.core.alias"]},{"name":"fun <T> ExpressionWithColumnType<T>.alias(alias: String): ExpressionWithColumnTypeAlias<T>","description":"org.jetbrains.exposed.v1.core.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/alias.html","searchKeys":["alias","fun <T> ExpressionWithColumnType<T>.alias(alias: String): ExpressionWithColumnTypeAlias<T>","org.jetbrains.exposed.v1.core.alias"]},{"name":"fun <T> ExpressionWithColumnType<T>.function(functionName: String): CustomFunction<T?>","description":"org.jetbrains.exposed.v1.core.function","location":"exposed-core/org.jetbrains.exposed.v1.core/function.html","searchKeys":["function","fun <T> ExpressionWithColumnType<T>.function(functionName: String): CustomFunction<T?>","org.jetbrains.exposed.v1.core.function"]},{"name":"fun <T> ExpressionWithColumnType<T>.stdDevPop(scale: Int = 2): StdDevPop<T>","description":"org.jetbrains.exposed.v1.core.stdDevPop","location":"exposed-core/org.jetbrains.exposed.v1.core/std-dev-pop.html","searchKeys":["stdDevPop","fun <T> ExpressionWithColumnType<T>.stdDevPop(scale: Int = 2): StdDevPop<T>","org.jetbrains.exposed.v1.core.stdDevPop"]},{"name":"fun <T> ExpressionWithColumnType<T>.stdDevSamp(scale: Int = 2): StdDevSamp<T>","description":"org.jetbrains.exposed.v1.core.stdDevSamp","location":"exposed-core/org.jetbrains.exposed.v1.core/std-dev-samp.html","searchKeys":["stdDevSamp","fun <T> ExpressionWithColumnType<T>.stdDevSamp(scale: Int = 2): StdDevSamp<T>","org.jetbrains.exposed.v1.core.stdDevSamp"]},{"name":"fun <T> ExpressionWithColumnType<T>.sum(): Sum<T>","description":"org.jetbrains.exposed.v1.core.sum","location":"exposed-core/org.jetbrains.exposed.v1.core/sum.html","searchKeys":["sum","fun <T> ExpressionWithColumnType<T>.sum(): Sum<T>","org.jetbrains.exposed.v1.core.sum"]},{"name":"fun <T> ExpressionWithColumnType<T>.varPop(scale: Int = 2): VarPop<T>","description":"org.jetbrains.exposed.v1.core.varPop","location":"exposed-core/org.jetbrains.exposed.v1.core/var-pop.html","searchKeys":["varPop","fun <T> ExpressionWithColumnType<T>.varPop(scale: Int = 2): VarPop<T>","org.jetbrains.exposed.v1.core.varPop"]},{"name":"fun <T> ExpressionWithColumnType<T>.varSamp(scale: Int = 2): VarSamp<T>","description":"org.jetbrains.exposed.v1.core.varSamp","location":"exposed-core/org.jetbrains.exposed.v1.core/var-samp.html","searchKeys":["varSamp","fun <T> ExpressionWithColumnType<T>.varSamp(scale: Int = 2): VarSamp<T>","org.jetbrains.exposed.v1.core.varSamp"]},{"name":"fun <T> Iterable<T>.appendTo(builder: QueryBuilder, separator: CharSequence = \", \", prefix: CharSequence = \"\", postfix: CharSequence = \"\", transform: QueryBuilder.(T) -> Unit): QueryBuilder","description":"org.jetbrains.exposed.v1.core.appendTo","location":"exposed-core/org.jetbrains.exposed.v1.core/append-to.html","searchKeys":["appendTo","fun <T> Iterable<T>.appendTo(builder: QueryBuilder, separator: CharSequence = \", \", prefix: CharSequence = \"\", postfix: CharSequence = \"\", transform: QueryBuilder.(T) -> Unit): QueryBuilder","org.jetbrains.exposed.v1.core.appendTo"]},{"name":"fun <T> Iterable<T>.appendTo(separator: CharSequence = \", \", prefix: CharSequence = \"\", postfix: CharSequence = \"\", transform: QueryBuilder.(T) -> Unit)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.appendTo","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/append-to.html","searchKeys":["appendTo","fun <T> Iterable<T>.appendTo(separator: CharSequence = \", \", prefix: CharSequence = \"\", postfix: CharSequence = \"\", transform: QueryBuilder.(T) -> Unit)","org.jetbrains.exposed.v1.core.QueryBuilder.appendTo"]},{"name":"fun <T> When(cond: Expression<Boolean>, result: Expression<T>): CaseWhen<T>","description":"org.jetbrains.exposed.v1.core.Case.When","location":"exposed-core/org.jetbrains.exposed.v1.core/-case/-when.html","searchKeys":["When","fun <T> When(cond: Expression<Boolean>, result: Expression<T>): CaseWhen<T>","org.jetbrains.exposed.v1.core.Case.When"]},{"name":"fun <T> allFrom(subQuery: AbstractQuery<*>): Op<T>","description":"org.jetbrains.exposed.v1.core.allFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/all-from.html","searchKeys":["allFrom","fun <T> allFrom(subQuery: AbstractQuery<*>): Op<T>","org.jetbrains.exposed.v1.core.allFrom"]},{"name":"fun <T> allFrom(table: Table): Op<T>","description":"org.jetbrains.exposed.v1.core.allFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/all-from.html","searchKeys":["allFrom","fun <T> allFrom(table: Table): Op<T>","org.jetbrains.exposed.v1.core.allFrom"]},{"name":"fun <T> anyFrom(subQuery: AbstractQuery<*>): Op<T>","description":"org.jetbrains.exposed.v1.core.anyFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/any-from.html","searchKeys":["anyFrom","fun <T> anyFrom(subQuery: AbstractQuery<*>): Op<T>","org.jetbrains.exposed.v1.core.anyFrom"]},{"name":"fun <T> anyFrom(table: Table): Op<T>","description":"org.jetbrains.exposed.v1.core.anyFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/any-from.html","searchKeys":["anyFrom","fun <T> anyFrom(table: Table): Op<T>","org.jetbrains.exposed.v1.core.anyFrom"]},{"name":"fun <T> getOrNull(column: Column<T>): T?","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.getOrNull","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/get-or-null.html","searchKeys":["getOrNull","fun <T> getOrNull(column: Column<T>): T?","org.jetbrains.exposed.v1.core.statements.InsertStatement.getOrNull"]},{"name":"fun <T> getOrNull(expression: Expression<T>): T?","description":"org.jetbrains.exposed.v1.core.ResultRow.getOrNull","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/get-or-null.html","searchKeys":["getOrNull","fun <T> getOrNull(expression: Expression<T>): T?","org.jetbrains.exposed.v1.core.ResultRow.getOrNull"]},{"name":"fun <T> hasValue(expression: Expression<T>): Boolean","description":"org.jetbrains.exposed.v1.core.ResultRow.hasValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/has-value.html","searchKeys":["hasValue","fun <T> hasValue(expression: Expression<T>): Boolean","org.jetbrains.exposed.v1.core.ResultRow.hasValue"]},{"name":"fun <T> nullOp(): Op<T>","description":"org.jetbrains.exposed.v1.core.Op.Companion.nullOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-companion/null-op.html","searchKeys":["nullOp","fun <T> nullOp(): Op<T>","org.jetbrains.exposed.v1.core.Op.Companion.nullOp"]},{"name":"fun <T> registerArgument(column: Column<*>, argument: T)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.registerArgument","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/register-argument.html","searchKeys":["registerArgument","fun <T> registerArgument(column: Column<*>, argument: T)","org.jetbrains.exposed.v1.core.QueryBuilder.registerArgument"]},{"name":"fun <T> registerArgument(sqlType: IColumnType<*>, argument: T)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.registerArgument","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/register-argument.html","searchKeys":["registerArgument","fun <T> registerArgument(sqlType: IColumnType<*>, argument: T)","org.jetbrains.exposed.v1.core.QueryBuilder.registerArgument"]},{"name":"fun <T> registerArguments(sqlType: IColumnType<*>, arguments: Iterable<T>)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.registerArguments","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/register-arguments.html","searchKeys":["registerArguments","fun <T> registerArguments(sqlType: IColumnType<*>, arguments: Iterable<T>)","org.jetbrains.exposed.v1.core.QueryBuilder.registerArguments"]},{"name":"fun <T> registerColumn(name: String, type: IColumnType<T & Any>): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.registerColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/register-column.html","searchKeys":["registerColumn","fun <T> registerColumn(name: String, type: IColumnType<T & Any>): Column<T>","org.jetbrains.exposed.v1.core.Table.registerColumn"]},{"name":"fun <TColumn : Column<*>> replaceColumn(oldColumn: Column<*>, newColumn: TColumn): TColumn","description":"org.jetbrains.exposed.v1.core.Table.replaceColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/replace-column.html","searchKeys":["replaceColumn","fun <TColumn : Column<*>> replaceColumn(oldColumn: Column<*>, newColumn: TColumn): TColumn","org.jetbrains.exposed.v1.core.Table.replaceColumn"]},{"name":"fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.nullTransform(transformer: ColumnTransformer<Unwrapped, Wrapped?>): Column<Wrapped?>","description":"org.jetbrains.exposed.v1.core.Table.nullTransform","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/null-transform.html","searchKeys":["nullTransform","fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.nullTransform(transformer: ColumnTransformer<Unwrapped, Wrapped?>): Column<Wrapped?>","org.jetbrains.exposed.v1.core.Table.nullTransform"]},{"name":"fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.nullTransform(wrap: (Unwrapped) -> Wrapped?, unwrap: (Wrapped?) -> Unwrapped): Column<Wrapped?>","description":"org.jetbrains.exposed.v1.core.Table.nullTransform","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/null-transform.html","searchKeys":["nullTransform","fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.nullTransform(wrap: (Unwrapped) -> Wrapped?, unwrap: (Wrapped?) -> Unwrapped): Column<Wrapped?>","org.jetbrains.exposed.v1.core.Table.nullTransform"]},{"name":"fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.transform(transformer: ColumnTransformer<Unwrapped, Wrapped>): Column<Wrapped>","description":"org.jetbrains.exposed.v1.core.Table.transform","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/transform.html","searchKeys":["transform","fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.transform(transformer: ColumnTransformer<Unwrapped, Wrapped>): Column<Wrapped>","org.jetbrains.exposed.v1.core.Table.transform"]},{"name":"fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.transform(wrap: (Unwrapped) -> Wrapped, unwrap: (Wrapped) -> Unwrapped): Column<Wrapped>","description":"org.jetbrains.exposed.v1.core.Table.transform","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/transform.html","searchKeys":["transform","fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped>.transform(wrap: (Unwrapped) -> Wrapped, unwrap: (Wrapped) -> Unwrapped): Column<Wrapped>","org.jetbrains.exposed.v1.core.Table.transform"]},{"name":"fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped?>.transform(transformer: ColumnTransformer<Unwrapped?, Wrapped?>): Column<Wrapped?>","description":"org.jetbrains.exposed.v1.core.Table.transform","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/transform.html","searchKeys":["transform","fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped?>.transform(transformer: ColumnTransformer<Unwrapped?, Wrapped?>): Column<Wrapped?>","org.jetbrains.exposed.v1.core.Table.transform"]},{"name":"fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped?>.transform(wrap: (Unwrapped?) -> Wrapped?, unwrap: (Wrapped?) -> Unwrapped?): Column<Wrapped?>","description":"org.jetbrains.exposed.v1.core.Table.transform","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/transform.html","searchKeys":["transform","fun <Unwrapped : Any, Wrapped : Any> Column<Unwrapped?>.transform(wrap: (Unwrapped?) -> Wrapped?, unwrap: (Wrapped?) -> Unwrapped?): Column<Wrapped?>","org.jetbrains.exposed.v1.core.Table.transform"]},{"name":"fun <Unwrapped, Wrapped> columnTransformer(unwrap: (value: Wrapped) -> Unwrapped, wrap: (value: Unwrapped) -> Wrapped): ColumnTransformer<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.core.columnTransformer","location":"exposed-core/org.jetbrains.exposed.v1.core/column-transformer.html","searchKeys":["columnTransformer","fun <Unwrapped, Wrapped> columnTransformer(unwrap: (value: Wrapped) -> Unwrapped, wrap: (value: Unwrapped) -> Wrapped): ColumnTransformer<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.core.columnTransformer"]},{"name":"fun Column<*>.countDistinct(): Count","description":"org.jetbrains.exposed.v1.core.countDistinct","location":"exposed-core/org.jetbrains.exposed.v1.core/count-distinct.html","searchKeys":["countDistinct","fun Column<*>.countDistinct(): Count","org.jetbrains.exposed.v1.core.countDistinct"]},{"name":"fun Column<UUID>.autoGenerate(): Column<UUID>","description":"org.jetbrains.exposed.v1.core.Table.autoGenerate","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/auto-generate.html","searchKeys":["autoGenerate","fun Column<UUID>.autoGenerate(): Column<UUID>","org.jetbrains.exposed.v1.core.Table.autoGenerate"]},{"name":"fun ColumnSet.targetTables(): List<Table>","description":"org.jetbrains.exposed.v1.core.targetTables","location":"exposed-core/org.jetbrains.exposed.v1.core/target-tables.html","searchKeys":["targetTables","fun ColumnSet.targetTables(): List<Table>","org.jetbrains.exposed.v1.core.targetTables"]},{"name":"fun CustomLongFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Long?>","description":"org.jetbrains.exposed.v1.core.CustomLongFunction","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-long-function.html","searchKeys":["CustomLongFunction","fun CustomLongFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Long?>","org.jetbrains.exposed.v1.core.CustomLongFunction"]},{"name":"fun CustomStringFunction(functionName: String, vararg params: Expression<*>): CustomFunction<String?>","description":"org.jetbrains.exposed.v1.core.CustomStringFunction","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-string-function.html","searchKeys":["CustomStringFunction","fun CustomStringFunction(functionName: String, vararg params: Expression<*>): CustomFunction<String?>","org.jetbrains.exposed.v1.core.CustomStringFunction"]},{"name":"fun Else(e: Expression<T>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.CaseWhen.Else","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when/-else.html","searchKeys":["Else","fun Else(e: Expression<T>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.CaseWhen.Else"]},{"name":"fun ExpressionWithColumnType<*>.count(): Count","description":"org.jetbrains.exposed.v1.core.count","location":"exposed-core/org.jetbrains.exposed.v1.core/count.html","searchKeys":["count","fun ExpressionWithColumnType<*>.count(): Count","org.jetbrains.exposed.v1.core.count"]},{"name":"fun Join.joinQuery(on: SqlExpressionBuilder.(QueryAlias) -> Op<Boolean>? = null, joinType: JoinType = JoinType.INNER, lateral: Boolean = false, joinPart: () -> AbstractQuery<*>): Join","description":"org.jetbrains.exposed.v1.core.joinQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/join-query.html","searchKeys":["joinQuery","fun Join.joinQuery(on: SqlExpressionBuilder.(QueryAlias) -> Op<Boolean>? = null, joinType: JoinType = JoinType.INNER, lateral: Boolean = false, joinPart: () -> AbstractQuery<*>): Join","org.jetbrains.exposed.v1.core.joinQuery"]},{"name":"fun List<Op<Boolean>>.compoundAnd(): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.compoundAnd","location":"exposed-core/org.jetbrains.exposed.v1.core/compound-and.html","searchKeys":["compoundAnd","fun List<Op<Boolean>>.compoundAnd(): Op<Boolean>","org.jetbrains.exposed.v1.core.compoundAnd"]},{"name":"fun List<Op<Boolean>>.compoundOr(): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.compoundOr","location":"exposed-core/org.jetbrains.exposed.v1.core/compound-or.html","searchKeys":["compoundOr","fun List<Op<Boolean>>.compoundOr(): Op<Boolean>","org.jetbrains.exposed.v1.core.compoundOr"]},{"name":"fun QueryBuilder.append(vararg expr: Any): QueryBuilder","description":"org.jetbrains.exposed.v1.core.append","location":"exposed-core/org.jetbrains.exposed.v1.core/append.html","searchKeys":["append","fun QueryBuilder.append(vararg expr: Any): QueryBuilder","org.jetbrains.exposed.v1.core.append"]},{"name":"fun Sequence.nextIntVal(): NextVal<Int>","description":"org.jetbrains.exposed.v1.core.nextIntVal","location":"exposed-core/org.jetbrains.exposed.v1.core/next-int-val.html","searchKeys":["nextIntVal","fun Sequence.nextIntVal(): NextVal<Int>","org.jetbrains.exposed.v1.core.nextIntVal"]},{"name":"fun Sequence.nextLongVal(): NextVal<Long>","description":"org.jetbrains.exposed.v1.core.nextLongVal","location":"exposed-core/org.jetbrains.exposed.v1.core/next-long-val.html","searchKeys":["nextLongVal","fun Sequence.nextLongVal(): NextVal<Long>","org.jetbrains.exposed.v1.core.nextLongVal"]},{"name":"fun StatementContext.expandArgs(transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.statements.expandArgs","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/expand-args.html","searchKeys":["expandArgs","fun StatementContext.expandArgs(transaction: Transaction): String","org.jetbrains.exposed.v1.core.statements.expandArgs"]},{"name":"fun Table.joinQuery(on: SqlExpressionBuilder.(QueryAlias) -> Op<Boolean>? = null, joinType: JoinType = JoinType.INNER, lateral: Boolean = false, joinPart: () -> AbstractQuery<*>): Join","description":"org.jetbrains.exposed.v1.core.joinQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/join-query.html","searchKeys":["joinQuery","fun Table.joinQuery(on: SqlExpressionBuilder.(QueryAlias) -> Op<Boolean>? = null, joinType: JoinType = JoinType.INNER, lateral: Boolean = false, joinPart: () -> AbstractQuery<*>): Join","org.jetbrains.exposed.v1.core.joinQuery"]},{"name":"fun When(cond: Expression<Boolean>, result: Expression<T>): CaseWhen<T>","description":"org.jetbrains.exposed.v1.core.CaseWhen.When","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when/-when.html","searchKeys":["When","fun When(cond: Expression<Boolean>, result: Expression<T>): CaseWhen<T>","org.jetbrains.exposed.v1.core.CaseWhen.When"]},{"name":"fun addBatch()","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.addBatch","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/add-batch.html","searchKeys":["addBatch","fun addBatch()","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.addBatch"]},{"name":"fun addBatch(id: EntityID<*>)","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.addBatch","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/add-batch.html","searchKeys":["addBatch","fun addBatch(id: EntityID<*>)","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.addBatch"]},{"name":"fun addLogger(logger: SqlLogger)","description":"org.jetbrains.exposed.v1.core.CompositeSqlLogger.addLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-sql-logger/add-logger.html","searchKeys":["addLogger","fun addLogger(logger: SqlLogger)","org.jetbrains.exposed.v1.core.CompositeSqlLogger.addLogger"]},{"name":"fun adjustComments(position: AbstractQuery.CommentPosition, content: String? = null): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.adjustComments","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/adjust-comments.html","searchKeys":["adjustComments","fun adjustComments(position: AbstractQuery.CommentPosition, content: String? = null): T","org.jetbrains.exposed.v1.core.AbstractQuery.adjustComments"]},{"name":"fun adjustHaving(body: Op<Boolean>?.() -> Op<Boolean>): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.adjustHaving","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/adjust-having.html","searchKeys":["adjustHaving","fun adjustHaving(body: Op<Boolean>?.() -> Op<Boolean>): T","org.jetbrains.exposed.v1.core.AbstractQuery.adjustHaving"]},{"name":"fun all(transaction: Transaction, table: Table): Int","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.Companion.all","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/-companion/all.html","searchKeys":["all","fun all(transaction: Transaction, table: Table): Int","org.jetbrains.exposed.v1.core.statements.DeleteStatement.Companion.all"]},{"name":"fun alreadyInJoin(table: Table): Boolean","description":"org.jetbrains.exposed.v1.core.Join.alreadyInJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/already-in-join.html","searchKeys":["alreadyInJoin","fun alreadyInJoin(table: Table): Boolean","org.jetbrains.exposed.v1.core.Join.alreadyInJoin"]},{"name":"fun append(value: Char): QueryBuilder","description":"org.jetbrains.exposed.v1.core.QueryBuilder.append","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/append.html","searchKeys":["append","fun append(value: Char): QueryBuilder","org.jetbrains.exposed.v1.core.QueryBuilder.append"]},{"name":"fun append(value: Expression<*>): QueryBuilder","description":"org.jetbrains.exposed.v1.core.QueryBuilder.append","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/append.html","searchKeys":["append","fun append(value: Expression<*>): QueryBuilder","org.jetbrains.exposed.v1.core.QueryBuilder.append"]},{"name":"fun append(value: String): QueryBuilder","description":"org.jetbrains.exposed.v1.core.QueryBuilder.append","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/append.html","searchKeys":["append","fun append(value: String): QueryBuilder","org.jetbrains.exposed.v1.core.QueryBuilder.append"]},{"name":"fun binary(name: String): Column<ByteArray>","description":"org.jetbrains.exposed.v1.core.Table.binary","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/binary.html","searchKeys":["binary","fun binary(name: String): Column<ByteArray>","org.jetbrains.exposed.v1.core.Table.binary"]},{"name":"fun binary(name: String, length: Int): Column<ByteArray>","description":"org.jetbrains.exposed.v1.core.Table.binary","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/binary.html","searchKeys":["binary","fun binary(name: String, length: Int): Column<ByteArray>","org.jetbrains.exposed.v1.core.Table.binary"]},{"name":"fun blob(name: String, useObjectIdentifier: Boolean = false): Column<ExposedBlob>","description":"org.jetbrains.exposed.v1.core.Table.blob","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/blob.html","searchKeys":["blob","fun blob(name: String, useObjectIdentifier: Boolean = false): Column<ExposedBlob>","org.jetbrains.exposed.v1.core.Table.blob"]},{"name":"fun blobParam(value: ExposedBlob, useObjectIdentifier: Boolean = false): Expression<ExposedBlob>","description":"org.jetbrains.exposed.v1.core.blobParam","location":"exposed-core/org.jetbrains.exposed.v1.core/blob-param.html","searchKeys":["blobParam","fun blobParam(value: ExposedBlob, useObjectIdentifier: Boolean = false): Expression<ExposedBlob>","org.jetbrains.exposed.v1.core.blobParam"]},{"name":"fun bool(name: String): Column<Boolean>","description":"org.jetbrains.exposed.v1.core.Table.bool","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/bool.html","searchKeys":["bool","fun bool(name: String): Column<Boolean>","org.jetbrains.exposed.v1.core.Table.bool"]},{"name":"fun booleanLiteral(value: Boolean): LiteralOp<Boolean>","description":"org.jetbrains.exposed.v1.core.booleanLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/boolean-literal.html","searchKeys":["booleanLiteral","fun booleanLiteral(value: Boolean): LiteralOp<Boolean>","org.jetbrains.exposed.v1.core.booleanLiteral"]},{"name":"fun booleanParam(value: Boolean): Expression<Boolean>","description":"org.jetbrains.exposed.v1.core.booleanParam","location":"exposed-core/org.jetbrains.exposed.v1.core/boolean-param.html","searchKeys":["booleanParam","fun booleanParam(value: Boolean): Expression<Boolean>","org.jetbrains.exposed.v1.core.booleanParam"]},{"name":"fun byte(name: String, checkConstraintName: String? = null): Column<Byte>","description":"org.jetbrains.exposed.v1.core.Table.byte","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/byte.html","searchKeys":["byte","fun byte(name: String, checkConstraintName: String? = null): Column<Byte>","org.jetbrains.exposed.v1.core.Table.byte"]},{"name":"fun byteLiteral(value: Byte): LiteralOp<Byte>","description":"org.jetbrains.exposed.v1.core.byteLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/byte-literal.html","searchKeys":["byteLiteral","fun byteLiteral(value: Byte): LiteralOp<Byte>","org.jetbrains.exposed.v1.core.byteLiteral"]},{"name":"fun byteParam(value: Byte): Expression<Byte>","description":"org.jetbrains.exposed.v1.core.byteParam","location":"exposed-core/org.jetbrains.exposed.v1.core/byte-param.html","searchKeys":["byteParam","fun byteParam(value: Byte): Expression<Byte>","org.jetbrains.exposed.v1.core.byteParam"]},{"name":"fun causedByQueries(): List<String>","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException.causedByQueries","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/caused-by-queries.html","searchKeys":["causedByQueries","fun causedByQueries(): List<String>","org.jetbrains.exposed.v1.exceptions.ExposedSQLException.causedByQueries"]},{"name":"fun char(name: String): Column<Char>","description":"org.jetbrains.exposed.v1.core.Table.char","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/char.html","searchKeys":["char","fun char(name: String): Column<Char>","org.jetbrains.exposed.v1.core.Table.char"]},{"name":"fun char(name: String, length: Int, collate: String? = null): Column<String>","description":"org.jetbrains.exposed.v1.core.Table.char","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/char.html","searchKeys":["char","fun char(name: String, length: Int, collate: String? = null): Column<String>","org.jetbrains.exposed.v1.core.Table.char"]},{"name":"fun check(name: String = \"\", op: SqlExpressionBuilder.() -> Op<Boolean>)","description":"org.jetbrains.exposed.v1.core.Table.check","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/check.html","searchKeys":["check","fun check(name: String = \"\", op: SqlExpressionBuilder.() -> Op<Boolean>)","org.jetbrains.exposed.v1.core.Table.check"]},{"name":"fun checkConstraints(): List<CheckConstraint>","description":"org.jetbrains.exposed.v1.core.Table.checkConstraints","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/check-constraints.html","searchKeys":["checkConstraints","fun checkConstraints(): List<CheckConstraint>","org.jetbrains.exposed.v1.core.Table.checkConstraints"]},{"name":"fun closeAndUnregisterDatabase(db: DatabaseApi)","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.closeAndUnregisterDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/close-and-unregister-database.html","searchKeys":["closeAndUnregisterDatabase","fun closeAndUnregisterDatabase(db: DatabaseApi)","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.closeAndUnregisterDatabase"]},{"name":"fun columnsWithDatabaseDefaults(): List<Column<*>>","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.columnsWithDatabaseDefaults","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/columns-with-database-defaults.html","searchKeys":["columnsWithDatabaseDefaults","fun columnsWithDatabaseDefaults(): List<Column<*>>","org.jetbrains.exposed.v1.core.statements.InsertStatement.columnsWithDatabaseDefaults"]},{"name":"fun comment(content: String, position: AbstractQuery.CommentPosition = CommentPosition.FRONT): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.comment","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/comment.html","searchKeys":["comment","fun comment(content: String, position: AbstractQuery.CommentPosition = CommentPosition.FRONT): T","org.jetbrains.exposed.v1.core.AbstractQuery.comment"]},{"name":"fun create(rs: RowApi, fieldIndex: Map<String, Int>): ExplainResultRow","description":"org.jetbrains.exposed.v1.core.ExplainResultRow.Companion.create","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-result-row/-companion/create.html","searchKeys":["create","fun create(rs: RowApi, fieldIndex: Map<String, Int>): ExplainResultRow","org.jetbrains.exposed.v1.core.ExplainResultRow.Companion.create"]},{"name":"fun create(rs: RowApi, fieldsIndex: Map<Expression<*>, Int>): ResultRow","description":"org.jetbrains.exposed.v1.core.ResultRow.Companion.create","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/-companion/create.html","searchKeys":["create","fun create(rs: RowApi, fieldsIndex: Map<Expression<*>, Int>): ResultRow","org.jetbrains.exposed.v1.core.ResultRow.Companion.create"]},{"name":"fun createAndFillDefaults(columns: List<Column<*>>): ResultRow","description":"org.jetbrains.exposed.v1.core.ResultRow.Companion.createAndFillDefaults","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/-companion/create-and-fill-defaults.html","searchKeys":["createAndFillDefaults","fun createAndFillDefaults(columns: List<Column<*>>): ResultRow","org.jetbrains.exposed.v1.core.ResultRow.Companion.createAndFillDefaults"]},{"name":"fun createAndFillValues(data: Map<Expression<*>, Any?>): ResultRow","description":"org.jetbrains.exposed.v1.core.ResultRow.Companion.createAndFillValues","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/-companion/create-and-fill-values.html","searchKeys":["createAndFillValues","fun createAndFillValues(data: Map<Expression<*>, Any?>): ResultRow","org.jetbrains.exposed.v1.core.ResultRow.Companion.createAndFillValues"]},{"name":"fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Schema.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/create-statement.html","searchKeys":["createStatement","fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.Schema.createStatement"]},{"name":"fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Sequence.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/create-statement.html","searchKeys":["createStatement","fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.Sequence.createStatement"]},{"name":"fun currentRow(): CurrentRowWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.currentRow","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/current-row.html","searchKeys":["currentRow","fun currentRow(): CurrentRowWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.currentRow"]},{"name":"fun currentTransaction(): Transaction","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.currentTransaction","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/current-transaction.html","searchKeys":["currentTransaction","fun currentTransaction(): Transaction","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.currentTransaction"]},{"name":"fun currentTransactionOrNull(): Transaction?","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.currentTransactionOrNull","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/current-transaction-or-null.html","searchKeys":["currentTransactionOrNull","fun currentTransactionOrNull(): Transaction?","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.currentTransactionOrNull"]},{"name":"fun cutIfNecessaryAndQuote(identity: String): String","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.cutIfNecessaryAndQuote","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/cut-if-necessary-and-quote.html","searchKeys":["cutIfNecessaryAndQuote","fun cutIfNecessaryAndQuote(identity: String): String","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.cutIfNecessaryAndQuote"]},{"name":"fun decimal(name: String, precision: Int, scale: Int): Column<BigDecimal>","description":"org.jetbrains.exposed.v1.core.Table.decimal","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/decimal.html","searchKeys":["decimal","fun decimal(name: String, precision: Int, scale: Int): Column<BigDecimal>","org.jetbrains.exposed.v1.core.Table.decimal"]},{"name":"fun decimalLiteral(value: BigDecimal): LiteralOp<BigDecimal>","description":"org.jetbrains.exposed.v1.core.decimalLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/decimal-literal.html","searchKeys":["decimalLiteral","fun decimalLiteral(value: BigDecimal): LiteralOp<BigDecimal>","org.jetbrains.exposed.v1.core.decimalLiteral"]},{"name":"fun decimalParam(value: BigDecimal): Expression<BigDecimal>","description":"org.jetbrains.exposed.v1.core.decimalParam","location":"exposed-core/org.jetbrains.exposed.v1.core/decimal-param.html","searchKeys":["decimalParam","fun decimalParam(value: BigDecimal): Expression<BigDecimal>","org.jetbrains.exposed.v1.core.decimalParam"]},{"name":"fun defaultValueInDb(): Expression<T>?","description":"org.jetbrains.exposed.v1.core.Column.defaultValueInDb","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/default-value-in-db.html","searchKeys":["defaultValueInDb","fun defaultValueInDb(): Expression<T>?","org.jetbrains.exposed.v1.core.Column.defaultValueInDb"]},{"name":"fun descriptionDdl(modify: Boolean = false): String","description":"org.jetbrains.exposed.v1.core.Column.descriptionDdl","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/description-ddl.html","searchKeys":["descriptionDdl","fun descriptionDdl(modify: Boolean = false): String","org.jetbrains.exposed.v1.core.Column.descriptionDdl"]},{"name":"fun double(name: String): Column<Double>","description":"org.jetbrains.exposed.v1.core.Table.double","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/double.html","searchKeys":["double","fun double(name: String): Column<Double>","org.jetbrains.exposed.v1.core.Table.double"]},{"name":"fun doubleLiteral(value: Double): LiteralOp<Double>","description":"org.jetbrains.exposed.v1.core.doubleLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/double-literal.html","searchKeys":["doubleLiteral","fun doubleLiteral(value: Double): LiteralOp<Double>","org.jetbrains.exposed.v1.core.doubleLiteral"]},{"name":"fun doubleParam(value: Double): Expression<Double>","description":"org.jetbrains.exposed.v1.core.doubleParam","location":"exposed-core/org.jetbrains.exposed.v1.core/double-param.html","searchKeys":["doubleParam","fun doubleParam(value: Double): Expression<Double>","org.jetbrains.exposed.v1.core.doubleParam"]},{"name":"fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Sequence.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/drop-statement.html","searchKeys":["dropStatement","fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.Sequence.dropStatement"]},{"name":"fun dropStatement(cascade: Boolean): List<String>","description":"org.jetbrains.exposed.v1.core.Schema.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/drop-statement.html","searchKeys":["dropStatement","fun dropStatement(cascade: Boolean): List<String>","org.jetbrains.exposed.v1.core.Schema.dropStatement"]},{"name":"fun exists(query: AbstractQuery<*>): Exists","description":"org.jetbrains.exposed.v1.core.exists","location":"exposed-core/org.jetbrains.exposed.v1.core/exists.html","searchKeys":["exists","fun exists(query: AbstractQuery<*>): Exists","org.jetbrains.exposed.v1.core.exists"]},{"name":"fun fetchSize(n: Int): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.fetchSize","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/fetch-size.html","searchKeys":["fetchSize","fun fetchSize(n: Int): T","org.jetbrains.exposed.v1.core.AbstractQuery.fetchSize"]},{"name":"fun filterCondition(index: Index): String?","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.filterCondition","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/filter-condition.html","searchKeys":["filterCondition","fun filterCondition(index: Index): String?","org.jetbrains.exposed.v1.core.vendors.VendorDialect.filterCondition"]},{"name":"fun float(name: String): Column<Float>","description":"org.jetbrains.exposed.v1.core.Table.float","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/float.html","searchKeys":["float","fun float(name: String): Column<Float>","org.jetbrains.exposed.v1.core.Table.float"]},{"name":"fun floatLiteral(value: Float): LiteralOp<Float>","description":"org.jetbrains.exposed.v1.core.floatLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/float-literal.html","searchKeys":["floatLiteral","fun floatLiteral(value: Float): LiteralOp<Float>","org.jetbrains.exposed.v1.core.floatLiteral"]},{"name":"fun floatParam(value: Float): Expression<Float>","description":"org.jetbrains.exposed.v1.core.floatParam","location":"exposed-core/org.jetbrains.exposed.v1.core/float-param.html","searchKeys":["floatParam","fun floatParam(value: Float): Expression<Float>","org.jetbrains.exposed.v1.core.floatParam"]},{"name":"fun foreignKey(vararg from: Column<*>, target: Table.PrimaryKey, onUpdate: ReferenceOption? = null, onDelete: ReferenceOption? = null, name: String? = null)","description":"org.jetbrains.exposed.v1.core.Table.foreignKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/foreign-key.html","searchKeys":["foreignKey","fun foreignKey(vararg from: Column<*>, target: Table.PrimaryKey, onUpdate: ReferenceOption? = null, onDelete: ReferenceOption? = null, name: String? = null)","org.jetbrains.exposed.v1.core.Table.foreignKey"]},{"name":"fun foreignKey(vararg references: Pair<Column<*>, Column<*>>, onUpdate: ReferenceOption? = null, onDelete: ReferenceOption? = null, name: String? = null)","description":"org.jetbrains.exposed.v1.core.Table.foreignKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/foreign-key.html","searchKeys":["foreignKey","fun foreignKey(vararg references: Pair<Column<*>, Column<*>>, onUpdate: ReferenceOption? = null, onDelete: ReferenceOption? = null, name: String? = null)","org.jetbrains.exposed.v1.core.Table.foreignKey"]},{"name":"fun from(table: Table, name: String, op: Op<Boolean>): CheckConstraint","description":"org.jetbrains.exposed.v1.core.CheckConstraint.Companion.from","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/-companion/from.html","searchKeys":["from","fun from(table: Table, name: String, op: Op<Boolean>): CheckConstraint","org.jetbrains.exposed.v1.core.CheckConstraint.Companion.from"]},{"name":"fun fullIdentity(column: Column<*>): String","description":"org.jetbrains.exposed.v1.core.Transaction.fullIdentity","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/full-identity.html","searchKeys":["fullIdentity","fun fullIdentity(column: Column<*>): String","org.jetbrains.exposed.v1.core.Transaction.fullIdentity"]},{"name":"fun getCurrentThreadManager(): TransactionManagerApi","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getCurrentThreadManager","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/get-current-thread-manager.html","searchKeys":["getCurrentThreadManager","fun getCurrentThreadManager(): TransactionManagerApi","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getCurrentThreadManager"]},{"name":"fun getDatabaseManager(db: DatabaseApi): TransactionManagerApi?","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getDatabaseManager","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/get-database-manager.html","searchKeys":["getDatabaseManager","fun getDatabaseManager(db: DatabaseApi): TransactionManagerApi?","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getDatabaseManager"]},{"name":"fun getDefaultDatabase(): DatabaseApi?","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getDefaultDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/get-default-database.html","searchKeys":["getDefaultDatabase","fun getDefaultDatabase(): DatabaseApi?","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getDefaultDatabase"]},{"name":"fun getDefaultDatabaseOrFirst(): DatabaseApi?","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getDefaultDatabaseOrFirst","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/get-default-database-or-first.html","searchKeys":["getDefaultDatabaseOrFirst","fun getDefaultDatabaseOrFirst(): DatabaseApi?","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.getDefaultDatabaseOrFirst"]},{"name":"fun getFunctionProvider(dialect: DatabaseDialect): FunctionProvider","description":"org.jetbrains.exposed.v1.core.statements.UpsertBuilder.Companion.getFunctionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-builder/-companion/get-function-provider.html","searchKeys":["getFunctionProvider","fun getFunctionProvider(dialect: DatabaseDialect): FunctionProvider","org.jetbrains.exposed.v1.core.statements.UpsertBuilder.Companion.getFunctionProvider"]},{"name":"fun groupBy(vararg columns: Expression<*>): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.groupBy","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/group-by.html","searchKeys":["groupBy","fun groupBy(vararg columns: Expression<*>): T","org.jetbrains.exposed.v1.core.AbstractQuery.groupBy"]},{"name":"fun groups(start: CurrentOrPreceding): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.groups","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/groups.html","searchKeys":["groups","fun groups(start: CurrentOrPreceding): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.groups"]},{"name":"fun groups(start: WindowFrameBound, end: WindowFrameBound): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.groups","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/groups.html","searchKeys":["groups","fun groups(start: WindowFrameBound, end: WindowFrameBound): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.groups"]},{"name":"fun hasCustomForUpdateState(): Boolean","description":"org.jetbrains.exposed.v1.core.AbstractQuery.hasCustomForUpdateState","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/has-custom-for-update-state.html","searchKeys":["hasCustomForUpdateState","fun hasCustomForUpdateState(): Boolean","org.jetbrains.exposed.v1.core.AbstractQuery.hasCustomForUpdateState"]},{"name":"fun hasDifferences(): Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.hasDifferences","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/has-differences.html","searchKeys":["hasDifferences","fun hasDifferences(): Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.hasDifferences"]},{"name":"fun having(op: SqlExpressionBuilder.() -> Op<Boolean>): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.having","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/having.html","searchKeys":["having","fun having(op: SqlExpressionBuilder.() -> Op<Boolean>): T","org.jetbrains.exposed.v1.core.AbstractQuery.having"]},{"name":"fun hexString(): String","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.hexString","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/hex-string.html","searchKeys":["hexString","fun hexString(): String","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.hexString"]},{"name":"fun identity(column: Column<*>): String","description":"org.jetbrains.exposed.v1.core.Transaction.identity","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/identity.html","searchKeys":["identity","fun identity(column: Column<*>): String","org.jetbrains.exposed.v1.core.Transaction.identity"]},{"name":"fun identity(table: Table): String","description":"org.jetbrains.exposed.v1.core.Transaction.identity","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/identity.html","searchKeys":["identity","fun identity(table: Table): String","org.jetbrains.exposed.v1.core.Transaction.identity"]},{"name":"fun inProperCase(identity: String): String","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.inProperCase","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/in-proper-case.html","searchKeys":["inProperCase","fun inProperCase(identity: String): String","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.inProperCase"]},{"name":"fun index(customIndexName: String? = null, isUnique: Boolean = false, vararg columns: Column<*>, functions: List<ExpressionWithColumnType<*>>? = null, indexType: String? = null, filterCondition: FilterCondition = null)","description":"org.jetbrains.exposed.v1.core.Table.index","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/--index--.html","searchKeys":["index","fun index(customIndexName: String? = null, isUnique: Boolean = false, vararg columns: Column<*>, functions: List<ExpressionWithColumnType<*>>? = null, indexType: String? = null, filterCondition: FilterCondition = null)","org.jetbrains.exposed.v1.core.Table.index"]},{"name":"fun index(isUnique: Boolean = false, vararg columns: Column<*>)","description":"org.jetbrains.exposed.v1.core.Table.index","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/--index--.html","searchKeys":["index","fun index(isUnique: Boolean = false, vararg columns: Column<*>)","org.jetbrains.exposed.v1.core.Table.index"]},{"name":"fun intLiteral(value: Int): LiteralOp<Int>","description":"org.jetbrains.exposed.v1.core.intLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/int-literal.html","searchKeys":["intLiteral","fun intLiteral(value: Int): LiteralOp<Int>","org.jetbrains.exposed.v1.core.intLiteral"]},{"name":"fun intParam(value: Int): Expression<Int>","description":"org.jetbrains.exposed.v1.core.intParam","location":"exposed-core/org.jetbrains.exposed.v1.core/int-param.html","searchKeys":["intParam","fun intParam(value: Int): Expression<Int>","org.jetbrains.exposed.v1.core.intParam"]},{"name":"fun integer(name: String, checkConstraintName: String? = null): Column<Int>","description":"org.jetbrains.exposed.v1.core.Table.integer","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/integer.html","searchKeys":["integer","fun integer(name: String, checkConstraintName: String? = null): Column<Int>","org.jetbrains.exposed.v1.core.Table.integer"]},{"name":"fun isDatabaseGenerated(): Boolean","description":"org.jetbrains.exposed.v1.core.Column.isDatabaseGenerated","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/is-database-generated.html","searchKeys":["isDatabaseGenerated","fun isDatabaseGenerated(): Boolean","org.jetbrains.exposed.v1.core.Column.isDatabaseGenerated"]},{"name":"fun isDotPrefixedAndUnquoted(identity: String): Boolean","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.isDotPrefixedAndUnquoted","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/is-dot-prefixed-and-unquoted.html","searchKeys":["isDotPrefixedAndUnquoted","fun isDotPrefixedAndUnquoted(identity: String): Boolean","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.isDotPrefixedAndUnquoted"]},{"name":"fun isForUpdate(): Boolean","description":"org.jetbrains.exposed.v1.core.AbstractQuery.isForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/is-for-update.html","searchKeys":["isForUpdate","fun isForUpdate(): Boolean","org.jetbrains.exposed.v1.core.AbstractQuery.isForUpdate"]},{"name":"fun largeText(name: String, collate: String? = null, eagerLoading: Boolean = false): Column<String>","description":"org.jetbrains.exposed.v1.core.Table.largeText","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/large-text.html","searchKeys":["largeText","fun largeText(name: String, collate: String? = null, eagerLoading: Boolean = false): Column<String>","org.jetbrains.exposed.v1.core.Table.largeText"]},{"name":"fun long(name: String, checkConstraintName: String? = null): Column<Long>","description":"org.jetbrains.exposed.v1.core.Table.long","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/long.html","searchKeys":["long","fun long(name: String, checkConstraintName: String? = null): Column<Long>","org.jetbrains.exposed.v1.core.Table.long"]},{"name":"fun longLiteral(value: Long): LiteralOp<Long>","description":"org.jetbrains.exposed.v1.core.longLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/long-literal.html","searchKeys":["longLiteral","fun longLiteral(value: Long): LiteralOp<Long>","org.jetbrains.exposed.v1.core.longLiteral"]},{"name":"fun longParam(value: Long): Expression<Long>","description":"org.jetbrains.exposed.v1.core.longParam","location":"exposed-core/org.jetbrains.exposed.v1.core/long-param.html","searchKeys":["longParam","fun longParam(value: Long): Expression<Long>","org.jetbrains.exposed.v1.core.longParam"]},{"name":"fun mediumText(name: String, collate: String? = null, eagerLoading: Boolean = false): Column<String>","description":"org.jetbrains.exposed.v1.core.Table.mediumText","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/medium-text.html","searchKeys":["mediumText","fun mediumText(name: String, collate: String? = null, eagerLoading: Boolean = false): Column<String>","org.jetbrains.exposed.v1.core.Table.mediumText"]},{"name":"fun modifyStatements(columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.Column.modifyStatements","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/modify-statements.html","searchKeys":["modifyStatements","fun modifyStatements(columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.Column.modifyStatements"]},{"name":"fun nameInDatabaseCase(): String","description":"org.jetbrains.exposed.v1.core.Column.nameInDatabaseCase","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/name-in-database-case.html","searchKeys":["nameInDatabaseCase","fun nameInDatabaseCase(): String","org.jetbrains.exposed.v1.core.Column.nameInDatabaseCase"]},{"name":"fun nameInDatabaseCase(): String","description":"org.jetbrains.exposed.v1.core.Table.nameInDatabaseCase","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/name-in-database-case.html","searchKeys":["nameInDatabaseCase","fun nameInDatabaseCase(): String","org.jetbrains.exposed.v1.core.Table.nameInDatabaseCase"]},{"name":"fun nameInDatabaseCaseUnquoted(): String","description":"org.jetbrains.exposed.v1.core.Table.nameInDatabaseCaseUnquoted","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/name-in-database-case-unquoted.html","searchKeys":["nameInDatabaseCaseUnquoted","fun nameInDatabaseCaseUnquoted(): String","org.jetbrains.exposed.v1.core.Table.nameInDatabaseCaseUnquoted"]},{"name":"fun nameUnquoted(): String","description":"org.jetbrains.exposed.v1.core.Column.nameUnquoted","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/name-unquoted.html","searchKeys":["nameUnquoted","fun nameUnquoted(): String","org.jetbrains.exposed.v1.core.Column.nameUnquoted"]},{"name":"fun needQuotes(identity: String): Boolean","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.needQuotes","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/need-quotes.html","searchKeys":["needQuotes","fun needQuotes(identity: String): Boolean","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.needQuotes"]},{"name":"fun not(op: Expression<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.not","location":"exposed-core/org.jetbrains.exposed.v1.core/not.html","searchKeys":["not","fun not(op: Expression<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.not"]},{"name":"fun notExists(query: AbstractQuery<*>): NotExists","description":"org.jetbrains.exposed.v1.core.notExists","location":"exposed-core/org.jetbrains.exposed.v1.core/not-exists.html","searchKeys":["notExists","fun notExists(query: AbstractQuery<*>): NotExists","org.jetbrains.exposed.v1.core.notExists"]},{"name":"fun ofLiteral(text: String, escapeChar: Char = '\\\\'): LikePattern","description":"org.jetbrains.exposed.v1.core.LikePattern.Companion.ofLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/-companion/of-literal.html","searchKeys":["ofLiteral","fun ofLiteral(text: String, escapeChar: Char = '\\\\'): LikePattern","org.jetbrains.exposed.v1.core.LikePattern.Companion.ofLiteral"]},{"name":"fun offsetFollowing(offset: Expression<Int>): OffsetFollowingWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetFollowing","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/offset-following.html","searchKeys":["offsetFollowing","fun offsetFollowing(offset: Expression<Int>): OffsetFollowingWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetFollowing"]},{"name":"fun offsetFollowing(offset: Int): OffsetFollowingWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetFollowing","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/offset-following.html","searchKeys":["offsetFollowing","fun offsetFollowing(offset: Int): OffsetFollowingWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetFollowing"]},{"name":"fun offsetPreceding(offset: Expression<Int>): OffsetPrecedingWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetPreceding","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/offset-preceding.html","searchKeys":["offsetPreceding","fun offsetPreceding(offset: Expression<Int>): OffsetPrecedingWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetPreceding"]},{"name":"fun offsetPreceding(offset: Int): OffsetPrecedingWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetPreceding","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/offset-preceding.html","searchKeys":["offsetPreceding","fun offsetPreceding(offset: Int): OffsetPrecedingWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.offsetPreceding"]},{"name":"fun onlyNameDiffer(other: Index): Boolean","description":"org.jetbrains.exposed.v1.core.Index.onlyNameDiffer","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/only-name-differ.html","searchKeys":["onlyNameDiffer","fun onlyNameDiffer(other: Index): Boolean","org.jetbrains.exposed.v1.core.Index.onlyNameDiffer"]},{"name":"fun orderBy(column: Expression<*>, order: SortOrder = SortOrder.ASC): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.orderBy","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/order-by.html","searchKeys":["orderBy","fun orderBy(column: Expression<*>, order: SortOrder = SortOrder.ASC): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.orderBy"]},{"name":"fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.orderBy","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/order-by.html","searchKeys":["orderBy","fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.orderBy"]},{"name":"fun partitionBy(vararg expressions: Expression<*>): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.partitionBy","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/partition-by.html","searchKeys":["partitionBy","fun partitionBy(vararg expressions: Expression<*>): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.partitionBy"]},{"name":"fun quoteIdentifierWhenWrongCaseOrNecessary(identity: String): String","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.quoteIdentifierWhenWrongCaseOrNecessary","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/quote-identifier-when-wrong-case-or-necessary.html","searchKeys":["quoteIdentifierWhenWrongCaseOrNecessary","fun quoteIdentifierWhenWrongCaseOrNecessary(identity: String): String","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.quoteIdentifierWhenWrongCaseOrNecessary"]},{"name":"fun quoteIfNecessary(identity: String): String","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.quoteIfNecessary","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/quote-if-necessary.html","searchKeys":["quoteIfNecessary","fun quoteIfNecessary(identity: String): String","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.quoteIfNecessary"]},{"name":"fun range(start: CurrentOrPreceding): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.range","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/range.html","searchKeys":["range","fun range(start: CurrentOrPreceding): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.range"]},{"name":"fun range(start: WindowFrameBound, end: WindowFrameBound): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.range","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/range.html","searchKeys":["range","fun range(start: WindowFrameBound, end: WindowFrameBound): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.range"]},{"name":"fun registerDatabaseManager(db: DatabaseApi, manager: TransactionManagerApi)","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.registerDatabaseManager","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/register-database-manager.html","searchKeys":["registerDatabaseManager","fun registerDatabaseManager(db: DatabaseApi, manager: TransactionManagerApi)","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.registerDatabaseManager"]},{"name":"fun registerDialect(prefix: String, dialect: () -> DatabaseDialect)","description":"org.jetbrains.exposed.v1.core.DatabaseApi.Companion.registerDialect","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/-companion/register-dialect.html","searchKeys":["registerDialect","fun registerDialect(prefix: String, dialect: () -> DatabaseDialect)","org.jetbrains.exposed.v1.core.DatabaseApi.Companion.registerDialect"]},{"name":"fun removeLastBatch()","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.removeLastBatch","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/remove-last-batch.html","searchKeys":["removeLastBatch","fun removeLastBatch()","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.removeLastBatch"]},{"name":"fun removeLogger(logger: SqlLogger)","description":"org.jetbrains.exposed.v1.core.CompositeSqlLogger.removeLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-sql-logger/remove-logger.html","searchKeys":["removeLogger","fun removeLogger(logger: SqlLogger)","org.jetbrains.exposed.v1.core.CompositeSqlLogger.removeLogger"]},{"name":"fun resetCurrentThreadManager(manager: TransactionManagerApi?)","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.resetCurrentThreadManager","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/reset-current-thread-manager.html","searchKeys":["resetCurrentThreadManager","fun resetCurrentThreadManager(manager: TransactionManagerApi?)","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.resetCurrentThreadManager"]},{"name":"fun rows(start: CurrentOrPreceding): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.rows","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/rows.html","searchKeys":["rows","fun rows(start: CurrentOrPreceding): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.rows"]},{"name":"fun rows(start: WindowFrameBound, end: WindowFrameBound): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.rows","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/rows.html","searchKeys":["rows","fun rows(start: WindowFrameBound, end: WindowFrameBound): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.rows"]},{"name":"fun setDefaultDatabase(db: DatabaseApi?)","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.setDefaultDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/set-default-database.html","searchKeys":["setDefaultDatabase","fun setDefaultDatabase(db: DatabaseApi?)","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager.setDefaultDatabase"]},{"name":"fun setSchemaStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Schema.setSchemaStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/set-schema-statement.html","searchKeys":["setSchemaStatement","fun setSchemaStatement(): List<String>","org.jetbrains.exposed.v1.core.Schema.setSchemaStatement"]},{"name":"fun short(name: String, checkConstraintName: String? = null): Column<Short>","description":"org.jetbrains.exposed.v1.core.Table.short","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/short.html","searchKeys":["short","fun short(name: String, checkConstraintName: String? = null): Column<Short>","org.jetbrains.exposed.v1.core.Table.short"]},{"name":"fun shortLiteral(value: Short): LiteralOp<Short>","description":"org.jetbrains.exposed.v1.core.shortLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/short-literal.html","searchKeys":["shortLiteral","fun shortLiteral(value: Short): LiteralOp<Short>","org.jetbrains.exposed.v1.core.shortLiteral"]},{"name":"fun shortParam(value: Short): Expression<Short>","description":"org.jetbrains.exposed.v1.core.shortParam","location":"exposed-core/org.jetbrains.exposed.v1.core/short-param.html","searchKeys":["shortParam","fun shortParam(value: Short): Expression<Short>","org.jetbrains.exposed.v1.core.shortParam"]},{"name":"fun shouldQuoteIdentifier(identity: String): Boolean","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.shouldQuoteIdentifier","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/should-quote-identifier.html","searchKeys":["shouldQuoteIdentifier","fun shouldQuoteIdentifier(identity: String): Boolean","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.shouldQuoteIdentifier"]},{"name":"fun sortTablesByReferences(tables: Iterable<Table>): List<Table>","description":"org.jetbrains.exposed.v1.core.TableUtils.sortTablesByReferences","location":"exposed-core/org.jetbrains.exposed.v1.core/-table-utils/sort-tables-by-references.html","searchKeys":["sortTablesByReferences","fun sortTablesByReferences(tables: Iterable<Table>): List<Table>","org.jetbrains.exposed.v1.core.TableUtils.sortTablesByReferences"]},{"name":"fun sql(transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.statements.StatementContext.sql","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-context/sql.html","searchKeys":["sql","fun sql(transaction: Transaction): String","org.jetbrains.exposed.v1.core.statements.StatementContext.sql"]},{"name":"fun stringLiteral(value: String): LiteralOp<String>","description":"org.jetbrains.exposed.v1.core.stringLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/string-literal.html","searchKeys":["stringLiteral","fun stringLiteral(value: String): LiteralOp<String>","org.jetbrains.exposed.v1.core.stringLiteral"]},{"name":"fun stringParam(value: String): Expression<String>","description":"org.jetbrains.exposed.v1.core.stringParam","location":"exposed-core/org.jetbrains.exposed.v1.core/string-param.html","searchKeys":["stringParam","fun stringParam(value: String): Expression<String>","org.jetbrains.exposed.v1.core.stringParam"]},{"name":"fun targetOf(from: Column<*>): Column<*>?","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.targetOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/target-of.html","searchKeys":["targetOf","fun targetOf(from: Column<*>): Column<*>?","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.targetOf"]},{"name":"fun text(name: String, collate: String? = null, eagerLoading: Boolean = false): Column<String>","description":"org.jetbrains.exposed.v1.core.Table.text","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/text.html","searchKeys":["text","fun text(name: String, collate: String? = null, eagerLoading: Boolean = false): Column<String>","org.jetbrains.exposed.v1.core.Table.text"]},{"name":"fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.WindowFrameClause.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-clause/to-query-builder.html","searchKeys":["toQueryBuilder","fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.WindowFrameClause.toQueryBuilder"]},{"name":"fun ubyte(name: String, checkConstraintName: String? = null): Column<UByte>","description":"org.jetbrains.exposed.v1.core.Table.ubyte","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/ubyte.html","searchKeys":["ubyte","fun ubyte(name: String, checkConstraintName: String? = null): Column<UByte>","org.jetbrains.exposed.v1.core.Table.ubyte"]},{"name":"fun ubyteLiteral(value: UByte): LiteralOp<UByte>","description":"org.jetbrains.exposed.v1.core.ubyteLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/ubyte-literal.html","searchKeys":["ubyteLiteral","fun ubyteLiteral(value: UByte): LiteralOp<UByte>","org.jetbrains.exposed.v1.core.ubyteLiteral"]},{"name":"fun ubyteParam(value: UByte): Expression<UByte>","description":"org.jetbrains.exposed.v1.core.ubyteParam","location":"exposed-core/org.jetbrains.exposed.v1.core/ubyte-param.html","searchKeys":["ubyteParam","fun ubyteParam(value: UByte): Expression<UByte>","org.jetbrains.exposed.v1.core.ubyteParam"]},{"name":"fun uintLiteral(value: UInt): LiteralOp<UInt>","description":"org.jetbrains.exposed.v1.core.uintLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/uint-literal.html","searchKeys":["uintLiteral","fun uintLiteral(value: UInt): LiteralOp<UInt>","org.jetbrains.exposed.v1.core.uintLiteral"]},{"name":"fun uintParam(value: UInt): Expression<UInt>","description":"org.jetbrains.exposed.v1.core.uintParam","location":"exposed-core/org.jetbrains.exposed.v1.core/uint-param.html","searchKeys":["uintParam","fun uintParam(value: UInt): Expression<UInt>","org.jetbrains.exposed.v1.core.uintParam"]},{"name":"fun uinteger(name: String, checkConstraintName: String? = null): Column<UInt>","description":"org.jetbrains.exposed.v1.core.Table.uinteger","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/uinteger.html","searchKeys":["uinteger","fun uinteger(name: String, checkConstraintName: String? = null): Column<UInt>","org.jetbrains.exposed.v1.core.Table.uinteger"]},{"name":"fun ulong(name: String): Column<ULong>","description":"org.jetbrains.exposed.v1.core.Table.ulong","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/ulong.html","searchKeys":["ulong","fun ulong(name: String): Column<ULong>","org.jetbrains.exposed.v1.core.Table.ulong"]},{"name":"fun ulongLiteral(value: ULong): LiteralOp<ULong>","description":"org.jetbrains.exposed.v1.core.ulongLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/ulong-literal.html","searchKeys":["ulongLiteral","fun ulongLiteral(value: ULong): LiteralOp<ULong>","org.jetbrains.exposed.v1.core.ulongLiteral"]},{"name":"fun ulongParam(value: ULong): Expression<ULong>","description":"org.jetbrains.exposed.v1.core.ulongParam","location":"exposed-core/org.jetbrains.exposed.v1.core/ulong-param.html","searchKeys":["ulongParam","fun ulongParam(value: ULong): Expression<ULong>","org.jetbrains.exposed.v1.core.ulongParam"]},{"name":"fun unboundedFollowing(): UnboundedFollowingWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.unboundedFollowing","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/unbounded-following.html","searchKeys":["unboundedFollowing","fun unboundedFollowing(): UnboundedFollowingWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.unboundedFollowing"]},{"name":"fun unboundedPreceding(): UnboundedPrecedingWindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.unboundedPreceding","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/unbounded-preceding.html","searchKeys":["unboundedPreceding","fun unboundedPreceding(): UnboundedPrecedingWindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion.unboundedPreceding"]},{"name":"fun uniqueIndex(customIndexName: String? = null, vararg columns: Column<*>, functions: List<ExpressionWithColumnType<*>>? = null, filterCondition: FilterCondition = null)","description":"org.jetbrains.exposed.v1.core.Table.uniqueIndex","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/unique-index.html","searchKeys":["uniqueIndex","fun uniqueIndex(customIndexName: String? = null, vararg columns: Column<*>, functions: List<ExpressionWithColumnType<*>>? = null, filterCondition: FilterCondition = null)","org.jetbrains.exposed.v1.core.Table.uniqueIndex"]},{"name":"fun uniqueIndex(vararg columns: Column<*>, filterCondition: FilterCondition = null)","description":"org.jetbrains.exposed.v1.core.Table.uniqueIndex","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/unique-index.html","searchKeys":["uniqueIndex","fun uniqueIndex(vararg columns: Column<*>, filterCondition: FilterCondition = null)","org.jetbrains.exposed.v1.core.Table.uniqueIndex"]},{"name":"fun ushort(name: String, checkConstraintName: String? = null): Column<UShort>","description":"org.jetbrains.exposed.v1.core.Table.ushort","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/ushort.html","searchKeys":["ushort","fun ushort(name: String, checkConstraintName: String? = null): Column<UShort>","org.jetbrains.exposed.v1.core.Table.ushort"]},{"name":"fun ushortLiteral(value: UShort): LiteralOp<UShort>","description":"org.jetbrains.exposed.v1.core.ushortLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/ushort-literal.html","searchKeys":["ushortLiteral","fun ushortLiteral(value: UShort): LiteralOp<UShort>","org.jetbrains.exposed.v1.core.ushortLiteral"]},{"name":"fun ushortParam(value: UShort): Expression<UShort>","description":"org.jetbrains.exposed.v1.core.ushortParam","location":"exposed-core/org.jetbrains.exposed.v1.core/ushort-param.html","searchKeys":["ushortParam","fun ushortParam(value: UShort): Expression<UShort>","org.jetbrains.exposed.v1.core.ushortParam"]},{"name":"fun uuid(name: String): Column<UUID>","description":"org.jetbrains.exposed.v1.core.Table.uuid","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/uuid.html","searchKeys":["uuid","fun uuid(name: String): Column<UUID>","org.jetbrains.exposed.v1.core.Table.uuid"]},{"name":"fun valueOf(value: String): AbstractQuery.CommentPosition","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AbstractQuery.CommentPosition","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.valueOf"]},{"name":"fun valueOf(value: String): ForUpdateOption.MySQL.MODE","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ForUpdateOption.MySQL.MODE","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.valueOf"]},{"name":"fun valueOf(value: String): ForUpdateOption.PostgreSQL.MODE","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ForUpdateOption.PostgreSQL.MODE","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.valueOf"]},{"name":"fun valueOf(value: String): H2Dialect.H2CompatibilityMode","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): H2Dialect.H2CompatibilityMode","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.valueOf"]},{"name":"fun valueOf(value: String): H2Dialect.H2MajorVersion","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-major-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): H2Dialect.H2MajorVersion","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.valueOf"]},{"name":"fun valueOf(value: String): JoinType","description":"org.jetbrains.exposed.v1.core.JoinType.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): JoinType","org.jetbrains.exposed.v1.core.JoinType.valueOf"]},{"name":"fun valueOf(value: String): MergeStatement.ClauseAction","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MergeStatement.ClauseAction","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.valueOf"]},{"name":"fun valueOf(value: String): MergeStatement.ClauseCondition","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-condition/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MergeStatement.ClauseCondition","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.valueOf"]},{"name":"fun valueOf(value: String): ReferenceOption","description":"org.jetbrains.exposed.v1.core.ReferenceOption.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ReferenceOption","org.jetbrains.exposed.v1.core.ReferenceOption.valueOf"]},{"name":"fun valueOf(value: String): SortOrder","description":"org.jetbrains.exposed.v1.core.SortOrder.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SortOrder","org.jetbrains.exposed.v1.core.SortOrder.valueOf"]},{"name":"fun valueOf(value: String): StatementGroup","description":"org.jetbrains.exposed.v1.core.statements.StatementGroup.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-group/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StatementGroup","org.jetbrains.exposed.v1.core.statements.StatementGroup.valueOf"]},{"name":"fun valueOf(value: String): StatementType","description":"org.jetbrains.exposed.v1.core.statements.StatementType.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StatementType","org.jetbrains.exposed.v1.core.statements.StatementType.valueOf"]},{"name":"fun valueOf(value: String): WindowFrameBoundDirection","description":"org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound-direction/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): WindowFrameBoundDirection","org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.valueOf"]},{"name":"fun valueOf(value: String): WindowFrameUnit","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit.valueOf","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): WindowFrameUnit","org.jetbrains.exposed.v1.core.WindowFrameUnit.valueOf"]},{"name":"fun values(): Array<AbstractQuery.CommentPosition>","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.values","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/values.html","searchKeys":["values","fun values(): Array<AbstractQuery.CommentPosition>","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.values"]},{"name":"fun values(): Array<ForUpdateOption.MySQL.MODE>","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.values","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/values.html","searchKeys":["values","fun values(): Array<ForUpdateOption.MySQL.MODE>","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.values"]},{"name":"fun values(): Array<ForUpdateOption.PostgreSQL.MODE>","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.values","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/values.html","searchKeys":["values","fun values(): Array<ForUpdateOption.PostgreSQL.MODE>","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.values"]},{"name":"fun values(): Array<H2Dialect.H2CompatibilityMode>","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.values","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/values.html","searchKeys":["values","fun values(): Array<H2Dialect.H2CompatibilityMode>","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.values"]},{"name":"fun values(): Array<H2Dialect.H2MajorVersion>","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.values","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-major-version/values.html","searchKeys":["values","fun values(): Array<H2Dialect.H2MajorVersion>","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.values"]},{"name":"fun values(): Array<JoinType>","description":"org.jetbrains.exposed.v1.core.JoinType.values","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/values.html","searchKeys":["values","fun values(): Array<JoinType>","org.jetbrains.exposed.v1.core.JoinType.values"]},{"name":"fun values(): Array<MergeStatement.ClauseAction>","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.values","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/values.html","searchKeys":["values","fun values(): Array<MergeStatement.ClauseAction>","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.values"]},{"name":"fun values(): Array<MergeStatement.ClauseCondition>","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.values","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-condition/values.html","searchKeys":["values","fun values(): Array<MergeStatement.ClauseCondition>","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.values"]},{"name":"fun values(): Array<ReferenceOption>","description":"org.jetbrains.exposed.v1.core.ReferenceOption.values","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/values.html","searchKeys":["values","fun values(): Array<ReferenceOption>","org.jetbrains.exposed.v1.core.ReferenceOption.values"]},{"name":"fun values(): Array<SortOrder>","description":"org.jetbrains.exposed.v1.core.SortOrder.values","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/values.html","searchKeys":["values","fun values(): Array<SortOrder>","org.jetbrains.exposed.v1.core.SortOrder.values"]},{"name":"fun values(): Array<StatementGroup>","description":"org.jetbrains.exposed.v1.core.statements.StatementGroup.values","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-group/values.html","searchKeys":["values","fun values(): Array<StatementGroup>","org.jetbrains.exposed.v1.core.statements.StatementGroup.values"]},{"name":"fun values(): Array<StatementType>","description":"org.jetbrains.exposed.v1.core.statements.StatementType.values","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/values.html","searchKeys":["values","fun values(): Array<StatementType>","org.jetbrains.exposed.v1.core.statements.StatementType.values"]},{"name":"fun values(): Array<WindowFrameBoundDirection>","description":"org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.values","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound-direction/values.html","searchKeys":["values","fun values(): Array<WindowFrameBoundDirection>","org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.values"]},{"name":"fun values(): Array<WindowFrameUnit>","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit.values","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/values.html","searchKeys":["values","fun values(): Array<WindowFrameUnit>","org.jetbrains.exposed.v1.core.WindowFrameUnit.values"]},{"name":"fun varchar(name: String, length: Int, collate: String? = null): Column<String>","description":"org.jetbrains.exposed.v1.core.Table.varchar","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/varchar.html","searchKeys":["varchar","fun varchar(name: String, length: Int, collate: String? = null): Column<String>","org.jetbrains.exposed.v1.core.Table.varchar"]},{"name":"fun whenMatchedDelete(and: Op<Boolean>? = null)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.whenMatchedDelete","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/when-matched-delete.html","searchKeys":["whenMatchedDelete","fun whenMatchedDelete(and: Op<Boolean>? = null)","org.jetbrains.exposed.v1.core.statements.MergeStatement.whenMatchedDelete"]},{"name":"fun whenMatchedDoNothing(and: Op<Boolean>? = null)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.whenMatchedDoNothing","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/when-matched-do-nothing.html","searchKeys":["whenMatchedDoNothing","fun whenMatchedDoNothing(and: Op<Boolean>? = null)","org.jetbrains.exposed.v1.core.statements.MergeStatement.whenMatchedDoNothing"]},{"name":"fun whenMatchedUpdate(and: Op<Boolean>? = null, deleteWhere: Op<Boolean>? = null, body: (UpdateStatement) -> Unit)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.whenMatchedUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/when-matched-update.html","searchKeys":["whenMatchedUpdate","fun whenMatchedUpdate(and: Op<Boolean>? = null, deleteWhere: Op<Boolean>? = null, body: (UpdateStatement) -> Unit)","org.jetbrains.exposed.v1.core.statements.MergeStatement.whenMatchedUpdate"]},{"name":"fun whenNotMatchedDoNothing(and: Op<Boolean>? = null)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.whenNotMatchedDoNothing","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/when-not-matched-do-nothing.html","searchKeys":["whenNotMatchedDoNothing","fun whenNotMatchedDoNothing(and: Op<Boolean>? = null)","org.jetbrains.exposed.v1.core.statements.MergeStatement.whenNotMatchedDoNothing"]},{"name":"fun whenNotMatchedInsert(and: Op<Boolean>? = null, overridingUserValue: Boolean = false, overridingSystemValue: Boolean = false, body: (InsertStatement<Int>) -> Unit)","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.whenNotMatchedInsert","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/when-not-matched-insert.html","searchKeys":["whenNotMatchedInsert","fun whenNotMatchedInsert(and: Op<Boolean>? = null, overridingUserValue: Boolean = false, overridingSystemValue: Boolean = false, body: (InsertStatement<Int>) -> Unit)","org.jetbrains.exposed.v1.core.statements.MergeStatement.whenNotMatchedInsert"]},{"name":"fun where(transaction: Transaction, table: Table, op: Op<Boolean>, isIgnore: Boolean = false, limit: Int? = null): Int","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.Companion.where","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/-companion/where.html","searchKeys":["where","fun where(transaction: Transaction, table: Table, op: Op<Boolean>, isIgnore: Boolean = false, limit: Int? = null): Int","org.jetbrains.exposed.v1.core.statements.DeleteStatement.Companion.where"]},{"name":"fun withColumnType(columnType: IColumnType<T & Any>): Column<T>","description":"org.jetbrains.exposed.v1.core.Column.withColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/with-column-type.html","searchKeys":["withColumnType","fun withColumnType(columnType: IColumnType<T & Any>): Column<T>","org.jetbrains.exposed.v1.core.Column.withColumnType"]},{"name":"fun withDistinctOn(vararg columns: Column<*>): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.withDistinctOn","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/with-distinct-on.html","searchKeys":["withDistinctOn","fun withDistinctOn(vararg columns: Column<*>): T","org.jetbrains.exposed.v1.core.AbstractQuery.withDistinctOn"]},{"name":"infix fun <T : Any, S : T, C : Column<S>> C.references(ref: Column<T>): C","description":"org.jetbrains.exposed.v1.core.Table.references","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/references.html","searchKeys":["references","infix fun <T : Any, S : T, C : Column<S>> C.references(ref: Column<T>): C","org.jetbrains.exposed.v1.core.Table.references"]},{"name":"infix fun Expression<Boolean>.and(op: Expression<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.and","location":"exposed-core/org.jetbrains.exposed.v1.core/and.html","searchKeys":["and","infix fun Expression<Boolean>.and(op: Expression<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.and"]},{"name":"infix fun Expression<Boolean>.or(op: Expression<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.or","location":"exposed-core/org.jetbrains.exposed.v1.core/or.html","searchKeys":["or","infix fun Expression<Boolean>.or(op: Expression<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.or"]},{"name":"infix fun Op<Boolean>.andIfNotNull(op: Expression<Boolean>?): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.andIfNotNull","location":"exposed-core/org.jetbrains.exposed.v1.core/and-if-not-null.html","searchKeys":["andIfNotNull","infix fun Op<Boolean>.andIfNotNull(op: Expression<Boolean>?): Op<Boolean>","org.jetbrains.exposed.v1.core.andIfNotNull"]},{"name":"infix fun Op<Boolean>.orIfNotNull(op: Expression<Boolean>?): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.orIfNotNull","location":"exposed-core/org.jetbrains.exposed.v1.core/or-if-not-null.html","searchKeys":["orIfNotNull","infix fun Op<Boolean>.orIfNotNull(op: Expression<Boolean>?): Op<Boolean>","org.jetbrains.exposed.v1.core.orIfNotNull"]},{"name":"infix operator fun <E, T : List<E>?> ExpressionWithColumnType<T>.get(index: Int): ArrayGet<E, T>","description":"org.jetbrains.exposed.v1.core.get","location":"exposed-core/org.jetbrains.exposed.v1.core/get.html","searchKeys":["get","infix operator fun <E, T : List<E>?> ExpressionWithColumnType<T>.get(index: Int): ArrayGet<E, T>","org.jetbrains.exposed.v1.core.get"]},{"name":"infix operator fun <T> get(column: Column<T>): T","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.get","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/get.html","searchKeys":["get","infix operator fun <T> get(column: Column<T>): T","org.jetbrains.exposed.v1.core.statements.InsertStatement.get"]},{"name":"infix operator fun <T> get(column: CompositeColumn<T>): T","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.get","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/get.html","searchKeys":["get","infix operator fun <T> get(column: CompositeColumn<T>): T","org.jetbrains.exposed.v1.core.statements.InsertStatement.get"]},{"name":"infix operator fun plus(rhs: LikePattern): LikePattern","description":"org.jetbrains.exposed.v1.core.LikePattern.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/plus.html","searchKeys":["plus","infix operator fun plus(rhs: LikePattern): LikePattern","org.jetbrains.exposed.v1.core.LikePattern.plus"]},{"name":"infix operator fun plus(rhs: String): LikePattern","description":"org.jetbrains.exposed.v1.core.LikePattern.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/plus.html","searchKeys":["plus","infix operator fun plus(rhs: String): LikePattern","org.jetbrains.exposed.v1.core.LikePattern.plus"]},{"name":"inline fun <E : Any> array(name: String, maximumCardinality: Int? = null): Column<List<E>>","description":"org.jetbrains.exposed.v1.core.Table.array","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/array.html","searchKeys":["array","inline fun <E : Any> array(name: String, maximumCardinality: Int? = null): Column<List<E>>","org.jetbrains.exposed.v1.core.Table.array"]},{"name":"inline fun <T : Any, R : List<Any>> Table.array(name: String, maximumCardinality: List<Int>? = null, dimensions: Int): Column<R>","description":"org.jetbrains.exposed.v1.core.Table.array","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/array.html","searchKeys":["array","inline fun <T : Any, R : List<Any>> Table.array(name: String, maximumCardinality: List<Int>? = null, dimensions: Int): Column<R>","org.jetbrains.exposed.v1.core.Table.array"]},{"name":"inline fun <T : Any, R : List<Any>> arrayLiteral(value: R, dimensions: Int, delegateType: ColumnType<T>? = null): LiteralOp<R>","description":"org.jetbrains.exposed.v1.core.arrayLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/array-literal.html","searchKeys":["arrayLiteral","inline fun <T : Any, R : List<Any>> arrayLiteral(value: R, dimensions: Int, delegateType: ColumnType<T>? = null): LiteralOp<R>","org.jetbrains.exposed.v1.core.arrayLiteral"]},{"name":"inline fun <T : Any, R : List<Any>> arrayParam(value: R, dimensions: Int, delegateType: ColumnType<T>? = null): Expression<R>","description":"org.jetbrains.exposed.v1.core.arrayParam","location":"exposed-core/org.jetbrains.exposed.v1.core/array-param.html","searchKeys":["arrayParam","inline fun <T : Any, R : List<Any>> arrayParam(value: R, dimensions: Int, delegateType: ColumnType<T>? = null): Expression<R>","org.jetbrains.exposed.v1.core.arrayParam"]},{"name":"inline fun <T : Any> allFrom(array: Array<T>, delegateType: ColumnType<T>? = null): Op<T>","description":"org.jetbrains.exposed.v1.core.allFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/all-from.html","searchKeys":["allFrom","inline fun <T : Any> allFrom(array: Array<T>, delegateType: ColumnType<T>? = null): Op<T>","org.jetbrains.exposed.v1.core.allFrom"]},{"name":"inline fun <T : Any> allFrom(array: List<T>, delegateType: ColumnType<T>? = null): Op<T>","description":"org.jetbrains.exposed.v1.core.allFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/all-from.html","searchKeys":["allFrom","inline fun <T : Any> allFrom(array: List<T>, delegateType: ColumnType<T>? = null): Op<T>","org.jetbrains.exposed.v1.core.allFrom"]},{"name":"inline fun <T : Any> anyFrom(array: Array<T>, delegateType: ColumnType<T>? = null): Op<T>","description":"org.jetbrains.exposed.v1.core.anyFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/any-from.html","searchKeys":["anyFrom","inline fun <T : Any> anyFrom(array: Array<T>, delegateType: ColumnType<T>? = null): Op<T>","org.jetbrains.exposed.v1.core.anyFrom"]},{"name":"inline fun <T : Any> anyFrom(array: List<T>, delegateType: ColumnType<T>? = null): Op<T>","description":"org.jetbrains.exposed.v1.core.anyFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/any-from.html","searchKeys":["anyFrom","inline fun <T : Any> anyFrom(array: List<T>, delegateType: ColumnType<T>? = null): Op<T>","org.jetbrains.exposed.v1.core.anyFrom"]},{"name":"inline fun <T : Any> arrayLiteral(value: List<T>, delegateType: ColumnType<T>? = null): LiteralOp<List<T>>","description":"org.jetbrains.exposed.v1.core.arrayLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/array-literal.html","searchKeys":["arrayLiteral","inline fun <T : Any> arrayLiteral(value: List<T>, delegateType: ColumnType<T>? = null): LiteralOp<List<T>>","org.jetbrains.exposed.v1.core.arrayLiteral"]},{"name":"inline fun <T : Any> arrayParam(value: List<T>, delegateType: ColumnType<T>? = null): Expression<List<T>>","description":"org.jetbrains.exposed.v1.core.arrayParam","location":"exposed-core/org.jetbrains.exposed.v1.core/array-param.html","searchKeys":["arrayParam","inline fun <T : Any> arrayParam(value: List<T>, delegateType: ColumnType<T>? = null): Expression<List<T>>","org.jetbrains.exposed.v1.core.arrayParam"]},{"name":"inline fun <T : Enum<T>> enumeration(name: String): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.enumeration","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/enumeration.html","searchKeys":["enumeration","inline fun <T : Enum<T>> enumeration(name: String): Column<T>","org.jetbrains.exposed.v1.core.Table.enumeration"]},{"name":"inline fun <T : Enum<T>> enumerationByName(name: String, length: Int): Column<T>","description":"org.jetbrains.exposed.v1.core.Table.enumerationByName","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/enumeration-by-name.html","searchKeys":["enumerationByName","inline fun <T : Enum<T>> enumerationByName(name: String, length: Int): Column<T>","org.jetbrains.exposed.v1.core.Table.enumerationByName"]},{"name":"inline fun <T, E : Expression<T>> build(builder: SqlExpressionBuilder.() -> E): E","description":"org.jetbrains.exposed.v1.core.Expression.Companion.build","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/-companion/build.html","searchKeys":["build","inline fun <T, E : Expression<T>> build(builder: SqlExpressionBuilder.() -> E): E","org.jetbrains.exposed.v1.core.Expression.Companion.build"]},{"name":"inline fun <T> build(op: SqlExpressionBuilder.() -> Op<T>): Op<T>","description":"org.jetbrains.exposed.v1.core.Op.Companion.build","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-companion/build.html","searchKeys":["build","inline fun <T> build(op: SqlExpressionBuilder.() -> Op<T>): Op<T>","org.jetbrains.exposed.v1.core.Op.Companion.build"]},{"name":"inline fun Expression<Boolean>.and(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.and","location":"exposed-core/org.jetbrains.exposed.v1.core/and.html","searchKeys":["and","inline fun Expression<Boolean>.and(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.and"]},{"name":"inline fun Expression<Boolean>.andNot(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.andNot","location":"exposed-core/org.jetbrains.exposed.v1.core/and-not.html","searchKeys":["andNot","inline fun Expression<Boolean>.andNot(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.andNot"]},{"name":"inline fun Expression<Boolean>.or(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.or","location":"exposed-core/org.jetbrains.exposed.v1.core/or.html","searchKeys":["or","inline fun Expression<Boolean>.or(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.or"]},{"name":"inline fun Expression<Boolean>.orNot(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.orNot","location":"exposed-core/org.jetbrains.exposed.v1.core/or-not.html","searchKeys":["orNot","inline fun Expression<Boolean>.orNot(op: SqlExpressionBuilder.() -> Op<Boolean>): Op<Boolean>","org.jetbrains.exposed.v1.core.orNot"]},{"name":"inline fun Op<Boolean>.andIfNotNull(op: SqlExpressionBuilder.() -> Op<Boolean>?): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.andIfNotNull","location":"exposed-core/org.jetbrains.exposed.v1.core/and-if-not-null.html","searchKeys":["andIfNotNull","inline fun Op<Boolean>.andIfNotNull(op: SqlExpressionBuilder.() -> Op<Boolean>?): Op<Boolean>","org.jetbrains.exposed.v1.core.andIfNotNull"]},{"name":"inline fun Op<Boolean>.orIfNotNull(op: SqlExpressionBuilder.() -> Op<Boolean>?): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.orIfNotNull","location":"exposed-core/org.jetbrains.exposed.v1.core/or-if-not-null.html","searchKeys":["orIfNotNull","inline fun Op<Boolean>.orIfNotNull(op: SqlExpressionBuilder.() -> Op<Boolean>?): Op<Boolean>","org.jetbrains.exposed.v1.core.orIfNotNull"]},{"name":"inner class PrimaryKey(val columns: Array<Column<*>>, name: String? = null)","description":"org.jetbrains.exposed.v1.core.Table.PrimaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-primary-key/index.html","searchKeys":["PrimaryKey","inner class PrimaryKey(val columns: Array<Column<*>>, name: String? = null)","org.jetbrains.exposed.v1.core.Table.PrimaryKey"]},{"name":"interface ColumnTransformer<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.core.ColumnTransformer","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-transformer/index.html","searchKeys":["ColumnTransformer","interface ColumnTransformer<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.core.ColumnTransformer"]},{"name":"interface ComplexExpression","description":"org.jetbrains.exposed.v1.core.ComplexExpression","location":"exposed-core/org.jetbrains.exposed.v1.core/-complex-expression/index.html","searchKeys":["ComplexExpression","interface ComplexExpression","org.jetbrains.exposed.v1.core.ComplexExpression"]},{"name":"interface CurrentOrFollowing : WindowFrameBound","description":"org.jetbrains.exposed.v1.core.CurrentOrFollowing","location":"exposed-core/org.jetbrains.exposed.v1.core/-current-or-following/index.html","searchKeys":["CurrentOrFollowing","interface CurrentOrFollowing : WindowFrameBound","org.jetbrains.exposed.v1.core.CurrentOrFollowing"]},{"name":"interface CurrentOrPreceding : WindowFrameBound","description":"org.jetbrains.exposed.v1.core.CurrentOrPreceding","location":"exposed-core/org.jetbrains.exposed.v1.core/-current-or-preceding/index.html","searchKeys":["CurrentOrPreceding","interface CurrentOrPreceding : WindowFrameBound","org.jetbrains.exposed.v1.core.CurrentOrPreceding"]},{"name":"interface DatabaseConfig","description":"org.jetbrains.exposed.v1.core.DatabaseConfig","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/index.html","searchKeys":["DatabaseConfig","interface DatabaseConfig","org.jetbrains.exposed.v1.core.DatabaseConfig"]},{"name":"interface DatabaseDialect","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/index.html","searchKeys":["DatabaseDialect","interface DatabaseDialect","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect"]},{"name":"interface DdlAware","description":"org.jetbrains.exposed.v1.core.DdlAware","location":"exposed-core/org.jetbrains.exposed.v1.core/-ddl-aware/index.html","searchKeys":["DdlAware","interface DdlAware","org.jetbrains.exposed.v1.core.DdlAware"]},{"name":"interface EntityIDFactory","description":"org.jetbrains.exposed.v1.core.dao.id.EntityIDFactory","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d-factory/index.html","searchKeys":["EntityIDFactory","interface EntityIDFactory","org.jetbrains.exposed.v1.core.dao.id.EntityIDFactory"]},{"name":"interface FieldSet","description":"org.jetbrains.exposed.v1.core.FieldSet","location":"exposed-core/org.jetbrains.exposed.v1.core/-field-set/index.html","searchKeys":["FieldSet","interface FieldSet","org.jetbrains.exposed.v1.core.FieldSet"]},{"name":"interface ForUpdateOrShareMode","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateOrShareMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-for-update-or-share-mode/index.html","searchKeys":["ForUpdateOrShareMode","interface ForUpdateOrShareMode","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateOrShareMode"]},{"name":"interface GlobalStatementInterceptor : StatementInterceptor","description":"org.jetbrains.exposed.v1.core.statements.GlobalStatementInterceptor","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-global-statement-interceptor/index.html","searchKeys":["GlobalStatementInterceptor","interface GlobalStatementInterceptor : StatementInterceptor","org.jetbrains.exposed.v1.core.statements.GlobalStatementInterceptor"]},{"name":"interface IColumnType<T>","description":"org.jetbrains.exposed.v1.core.IColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/index.html","searchKeys":["IColumnType","interface IColumnType<T>","org.jetbrains.exposed.v1.core.IColumnType"]},{"name":"interface IDateColumnType","description":"org.jetbrains.exposed.v1.core.IDateColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-date-column-type/index.html","searchKeys":["IDateColumnType","interface IDateColumnType","org.jetbrains.exposed.v1.core.IDateColumnType"]},{"name":"interface IExpressionAlias<T>","description":"org.jetbrains.exposed.v1.core.IExpressionAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-expression-alias/index.html","searchKeys":["IExpressionAlias","interface IExpressionAlias<T>","org.jetbrains.exposed.v1.core.IExpressionAlias"]},{"name":"interface ISqlExpressionBuilder","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/index.html","searchKeys":["ISqlExpressionBuilder","interface ISqlExpressionBuilder","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder"]},{"name":"interface IStatementBuilder","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/index.html","searchKeys":["IStatementBuilder","interface IStatementBuilder","org.jetbrains.exposed.v1.core.statements.IStatementBuilder"]},{"name":"interface JsonColumnMarker","description":"org.jetbrains.exposed.v1.core.JsonColumnMarker","location":"exposed-core/org.jetbrains.exposed.v1.core/-json-column-marker/index.html","searchKeys":["JsonColumnMarker","interface JsonColumnMarker","org.jetbrains.exposed.v1.core.JsonColumnMarker"]},{"name":"interface MatchMode","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.MatchMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/-match-mode/index.html","searchKeys":["MatchMode","interface MatchMode","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.MatchMode"]},{"name":"interface PreparedStatementApi","description":"org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-prepared-statement-api/index.html","searchKeys":["PreparedStatementApi","interface PreparedStatementApi","org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi"]},{"name":"interface ResultApi : AutoCloseable","description":"org.jetbrains.exposed.v1.core.statements.api.ResultApi","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-result-api/index.html","searchKeys":["ResultApi","interface ResultApi : AutoCloseable","org.jetbrains.exposed.v1.core.statements.api.ResultApi"]},{"name":"interface RowApi","description":"org.jetbrains.exposed.v1.core.statements.api.RowApi","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-row-api/index.html","searchKeys":["RowApi","interface RowApi","org.jetbrains.exposed.v1.core.statements.api.RowApi"]},{"name":"interface SqlLogger","description":"org.jetbrains.exposed.v1.core.SqlLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-sql-logger/index.html","searchKeys":["SqlLogger","interface SqlLogger","org.jetbrains.exposed.v1.core.SqlLogger"]},{"name":"interface StatementInterceptor","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/index.html","searchKeys":["StatementInterceptor","interface StatementInterceptor","org.jetbrains.exposed.v1.core.statements.StatementInterceptor"]},{"name":"interface TransactionInterface","description":"org.jetbrains.exposed.v1.core.transactions.TransactionInterface","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-interface/index.html","searchKeys":["TransactionInterface","interface TransactionInterface","org.jetbrains.exposed.v1.core.transactions.TransactionInterface"]},{"name":"interface TransactionManagerApi","description":"org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-manager-api/index.html","searchKeys":["TransactionManagerApi","interface TransactionManagerApi","org.jetbrains.exposed.v1.core.transactions.TransactionManagerApi"]},{"name":"interface WindowFunction<T>","description":"org.jetbrains.exposed.v1.core.WindowFunction","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function/index.html","searchKeys":["WindowFunction","interface WindowFunction<T>","org.jetbrains.exposed.v1.core.WindowFunction"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.BooleanColumnType.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.BooleanColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.CheckConstraint.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.CheckConstraint.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.ColumnDiff.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.ColumnDiff.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.DatabaseApi.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.DatabaseApi.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.DatabaseConfig.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.DecimalColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.DivideOp.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-divide-op/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.DivideOp.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.ExplainResultRow.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-result-row/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.ExplainResultRow.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.Expression.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.Expression.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.LikePattern.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.LikePattern.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.ModOp.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.ModOp.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.Op.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.Op.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.ResultRow.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.ResultRow.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.StringColumnType.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.StringColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.UUIDColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.WindowFrameBound.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.WindowFrameBound.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.dao.id.CompositeID.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.statements.DeleteStatement.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.statements.UpsertBuilder.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-builder/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.statements.UpsertBuilder.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.Companion"]},{"name":"object Companion : ForUpdateOption.MySQL.ForShare","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForShare.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-for-share/-companion/index.html","searchKeys":["Companion","object Companion : ForUpdateOption.MySQL.ForShare","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForShare.Companion"]},{"name":"object Companion : ForUpdateOption.PostgreSQL.ForKeyShare","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForKeyShare.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-key-share/-companion/index.html","searchKeys":["Companion","object Companion : ForUpdateOption.PostgreSQL.ForKeyShare","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForKeyShare.Companion"]},{"name":"object Companion : ForUpdateOption.PostgreSQL.ForNoKeyUpdate","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForNoKeyUpdate.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-no-key-update/-companion/index.html","searchKeys":["Companion","object Companion : ForUpdateOption.PostgreSQL.ForNoKeyUpdate","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForNoKeyUpdate.Companion"]},{"name":"object Companion : ForUpdateOption.PostgreSQL.ForShare","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForShare.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-share/-companion/index.html","searchKeys":["Companion","object Companion : ForUpdateOption.PostgreSQL.ForShare","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForShare.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.H2Dialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.OracleDialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-n-g-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.Companion"]},{"name":"object Companion : VendorDialect.DialectNameProvider","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.Companion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/-companion/index.html","searchKeys":["Companion","object Companion : VendorDialect.DialectNameProvider","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.Companion"]},{"name":"object CoreTransactionManager","description":"org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-core-transaction-manager/index.html","searchKeys":["CoreTransactionManager","object CoreTransactionManager","org.jetbrains.exposed.v1.core.transactions.CoreTransactionManager"]},{"name":"object CurrentRowWindowFrameBound : WindowFrameBound, CurrentOrPreceding, CurrentOrFollowing","description":"org.jetbrains.exposed.v1.core.CurrentRowWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-current-row-window-frame-bound/index.html","searchKeys":["CurrentRowWindowFrameBound","object CurrentRowWindowFrameBound : WindowFrameBound, CurrentOrPreceding, CurrentOrFollowing","org.jetbrains.exposed.v1.core.CurrentRowWindowFrameBound"]},{"name":"object Dual : Table","description":"org.jetbrains.exposed.v1.core.Table.Dual","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-dual/index.html","searchKeys":["Dual","object Dual : Table","org.jetbrains.exposed.v1.core.Table.Dual"]},{"name":"object EntityIDFunctionProvider","description":"org.jetbrains.exposed.v1.core.dao.id.EntityIDFunctionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d-function-provider/index.html","searchKeys":["EntityIDFunctionProvider","object EntityIDFunctionProvider","org.jetbrains.exposed.v1.core.dao.id.EntityIDFunctionProvider"]},{"name":"object FALSE : Op<Boolean> , Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.Op.FALSE","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-f-a-l-s-e/index.html","searchKeys":["FALSE","object FALSE : Op<Boolean> , Op.OpBoolean","org.jetbrains.exposed.v1.core.Op.FALSE"]},{"name":"object MariaDB","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MariaDB","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-maria-d-b/index.html","searchKeys":["MariaDB","object MariaDB","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MariaDB"]},{"name":"object MySQL","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/index.html","searchKeys":["MySQL","object MySQL","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL"]},{"name":"object Oracle","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-oracle/index.html","searchKeys":["Oracle","object Oracle","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.Oracle"]},{"name":"object PiFunction : CustomFunction<BigDecimal> ","description":"org.jetbrains.exposed.v1.core.functions.math.PiFunction","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.math/-pi-function/index.html","searchKeys":["PiFunction","object PiFunction : CustomFunction<BigDecimal> ","org.jetbrains.exposed.v1.core.functions.math.PiFunction"]},{"name":"object PostgreSQL","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/index.html","searchKeys":["PostgreSQL","object PostgreSQL","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL"]},{"name":"object Slf4jSqlDebugLogger : SqlLogger","description":"org.jetbrains.exposed.v1.core.Slf4jSqlDebugLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-slf4j-sql-debug-logger/index.html","searchKeys":["Slf4jSqlDebugLogger","object Slf4jSqlDebugLogger : SqlLogger","org.jetbrains.exposed.v1.core.Slf4jSqlDebugLogger"]},{"name":"object SqlExpressionBuilder : ISqlExpressionBuilder","description":"org.jetbrains.exposed.v1.core.SqlExpressionBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-sql-expression-builder/index.html","searchKeys":["SqlExpressionBuilder","object SqlExpressionBuilder : ISqlExpressionBuilder","org.jetbrains.exposed.v1.core.SqlExpressionBuilder"]},{"name":"object StdOutSqlLogger : SqlLogger","description":"org.jetbrains.exposed.v1.core.StdOutSqlLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-out-sql-logger/index.html","searchKeys":["StdOutSqlLogger","object StdOutSqlLogger : SqlLogger","org.jetbrains.exposed.v1.core.StdOutSqlLogger"]},{"name":"object TRUE : Op<Boolean> , Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.Op.TRUE","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-t-r-u-e/index.html","searchKeys":["TRUE","object TRUE : Op<Boolean> , Op.OpBoolean","org.jetbrains.exposed.v1.core.Op.TRUE"]},{"name":"object TableUtils : SchemaUtilityApi","description":"org.jetbrains.exposed.v1.core.TableUtils","location":"exposed-core/org.jetbrains.exposed.v1.core/-table-utils/index.html","searchKeys":["TableUtils","object TableUtils : SchemaUtilityApi","org.jetbrains.exposed.v1.core.TableUtils"]},{"name":"open class BasicBinaryColumnType : ColumnType<ByteArray> ","description":"org.jetbrains.exposed.v1.core.BasicBinaryColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-basic-binary-column-type/index.html","searchKeys":["BasicBinaryColumnType","open class BasicBinaryColumnType : ColumnType<ByteArray> ","org.jetbrains.exposed.v1.core.BasicBinaryColumnType"]},{"name":"open class BatchInsertStatement(table: Table, ignore: Boolean = false, val shouldReturnGeneratedValues: Boolean = true) : BaseBatchInsertStatement","description":"org.jetbrains.exposed.v1.core.statements.BatchInsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-insert-statement/index.html","searchKeys":["BatchInsertStatement","open class BatchInsertStatement(table: Table, ignore: Boolean = false, val shouldReturnGeneratedValues: Boolean = true) : BaseBatchInsertStatement","org.jetbrains.exposed.v1.core.statements.BatchInsertStatement"]},{"name":"open class BatchReplaceStatement(table: Table, val shouldReturnGeneratedValues: Boolean = true) : BaseBatchInsertStatement","description":"org.jetbrains.exposed.v1.core.statements.BatchReplaceStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-replace-statement/index.html","searchKeys":["BatchReplaceStatement","open class BatchReplaceStatement(table: Table, val shouldReturnGeneratedValues: Boolean = true) : BaseBatchInsertStatement","org.jetbrains.exposed.v1.core.statements.BatchReplaceStatement"]},{"name":"open class BatchUpdateStatement(val table: IdTable<*>) : UpdateStatement","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/index.html","searchKeys":["BatchUpdateStatement","open class BatchUpdateStatement(val table: IdTable<*>) : UpdateStatement","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement"]},{"name":"open class BatchUpsertStatement(table: Table, val keys: Column<*>, val onUpdateExclude: List<Column<*>>?, val where: Op<Boolean>?, val shouldReturnGeneratedValues: Boolean = true) : BaseBatchInsertStatement, UpsertBuilder","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/index.html","searchKeys":["BatchUpsertStatement","open class BatchUpsertStatement(table: Table, val keys: Column<*>, val onUpdateExclude: List<Column<*>>?, val where: Op<Boolean>?, val shouldReturnGeneratedValues: Boolean = true) : BaseBatchInsertStatement, UpsertBuilder","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement"]},{"name":"open class BinaryColumnType(val length: Int) : BasicBinaryColumnType","description":"org.jetbrains.exposed.v1.core.BinaryColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/index.html","searchKeys":["BinaryColumnType","open class BinaryColumnType(val length: Int) : BasicBinaryColumnType","org.jetbrains.exposed.v1.core.BinaryColumnType"]},{"name":"open class Builder","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/index.html","searchKeys":["Builder","open class Builder","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder"]},{"name":"open class CharColumnType(val colLength: Int = 255, val collate: String? = null) : StringColumnType","description":"org.jetbrains.exposed.v1.core.CharColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/index.html","searchKeys":["CharColumnType","open class CharColumnType(val colLength: Int = 255, val collate: String? = null) : StringColumnType","org.jetbrains.exposed.v1.core.CharColumnType"]},{"name":"open class ColumnWithTransform<Unwrapped, Wrapped>(val delegate: IColumnType<Unwrapped & Any>, val transformer: ColumnTransformer<Unwrapped, Wrapped>) : ColumnType<Wrapped & Any> ","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/index.html","searchKeys":["ColumnWithTransform","open class ColumnWithTransform<Unwrapped, Wrapped>(val delegate: IColumnType<Unwrapped & Any>, val transformer: ColumnTransformer<Unwrapped, Wrapped>) : ColumnType<Wrapped & Any> ","org.jetbrains.exposed.v1.core.ColumnWithTransform"]},{"name":"open class CompositeIdTable(name: String = \"\") : IdTable<CompositeID> ","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-id-table/index.html","searchKeys":["CompositeIdTable","open class CompositeIdTable(name: String = \"\") : IdTable<CompositeID> ","org.jetbrains.exposed.v1.core.dao.id.CompositeIdTable"]},{"name":"open class CustomFunction<T>(val functionName: String, columnType: IColumnType<T & Any>, val expr: Expression<*>) : Function<T> ","description":"org.jetbrains.exposed.v1.core.CustomFunction","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-function/index.html","searchKeys":["CustomFunction","open class CustomFunction<T>(val functionName: String, columnType: IColumnType<T & Any>, val expr: Expression<*>) : Function<T> ","org.jetbrains.exposed.v1.core.CustomFunction"]},{"name":"open class CustomOperator<T>(val operatorName: String, columnType: IColumnType<T & Any>, val expr1: Expression<*>, val expr2: Expression<*>) : Function<T> ","description":"org.jetbrains.exposed.v1.core.CustomOperator","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-operator/index.html","searchKeys":["CustomOperator","open class CustomOperator<T>(val operatorName: String, columnType: IColumnType<T & Any>, val expr1: Expression<*>, val expr2: Expression<*>) : Function<T> ","org.jetbrains.exposed.v1.core.CustomOperator"]},{"name":"open class DeleteStatement(val targetsSet: ColumnSet, val where: Op<Boolean>? = null, val isIgnore: Boolean = false, val limit: Int? = null, val targetTables: List<Table> = emptyList()) : Statement<Int> ","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/index.html","searchKeys":["DeleteStatement","open class DeleteStatement(val targetsSet: ColumnSet, val where: Op<Boolean>? = null, val isIgnore: Boolean = false, val limit: Int? = null, val targetTables: List<Table> = emptyList()) : Statement<Int> ","org.jetbrains.exposed.v1.core.statements.DeleteStatement"]},{"name":"open class EntityID<T : Any>","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/index.html","searchKeys":["EntityID","open class EntityID<T : Any>","org.jetbrains.exposed.v1.core.dao.id.EntityID"]},{"name":"open class ExplainQuery(val analyze: Boolean, val options: String?, internalStatement: Statement<*>) : Statement<ResultApi> ","description":"org.jetbrains.exposed.v1.core.ExplainQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-query/index.html","searchKeys":["ExplainQuery","open class ExplainQuery(val analyze: Boolean, val options: String?, internalStatement: Statement<*>) : Statement<ResultApi> ","org.jetbrains.exposed.v1.core.ExplainQuery"]},{"name":"open class ForKeyShare(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForKeyShare","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-key-share/index.html","searchKeys":["ForKeyShare","open class ForKeyShare(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForKeyShare"]},{"name":"open class ForNoKeyUpdate(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForNoKeyUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-no-key-update/index.html","searchKeys":["ForNoKeyUpdate","open class ForNoKeyUpdate(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForNoKeyUpdate"]},{"name":"open class ForShare(mode: ForUpdateOption.MySQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForShare","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-for-share/index.html","searchKeys":["ForShare","open class ForShare(mode: ForUpdateOption.MySQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.ForShare"]},{"name":"open class ForShare(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForShare","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-for-share/index.html","searchKeys":["ForShare","open class ForShare(mode: ForUpdateOption.PostgreSQL.MODE? = null, ofTables: Table) : ForUpdateOption.ForUpdateBase","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.ForShare"]},{"name":"open class H2Dialect : VendorDialect","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/index.html","searchKeys":["H2Dialect","open class H2Dialect : VendorDialect","org.jetbrains.exposed.v1.core.vendors.H2Dialect"]},{"name":"open class InsertSelectStatement(val columns: List<Column<*>>, val selectQuery: AbstractQuery<*>, val isIgnore: Boolean = false) : Statement<Int> ","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/index.html","searchKeys":["InsertSelectStatement","open class InsertSelectStatement(val columns: List<Column<*>>, val selectQuery: AbstractQuery<*>, val isIgnore: Boolean = false) : Statement<Int> ","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement"]},{"name":"open class InsertStatement<Key : Any>(val table: Table, val isIgnore: Boolean = false) : UpdateBuilder<Int> ","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/index.html","searchKeys":["InsertStatement","open class InsertStatement<Key : Any>(val table: Table, val isIgnore: Boolean = false) : UpdateBuilder<Int> ","org.jetbrains.exposed.v1.core.statements.InsertStatement"]},{"name":"open class IntIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<Int> ","description":"org.jetbrains.exposed.v1.core.dao.id.IntIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-int-id-table/index.html","searchKeys":["IntIdTable","open class IntIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<Int> ","org.jetbrains.exposed.v1.core.dao.id.IntIdTable"]},{"name":"open class LargeTextColumnType(val collate: String? = null, val eagerLoading: Boolean = false) : TextColumnType","description":"org.jetbrains.exposed.v1.core.LargeTextColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-large-text-column-type/index.html","searchKeys":["LargeTextColumnType","open class LargeTextColumnType(val collate: String? = null, val eagerLoading: Boolean = false) : TextColumnType","org.jetbrains.exposed.v1.core.LargeTextColumnType"]},{"name":"open class LongIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<Long> ","description":"org.jetbrains.exposed.v1.core.dao.id.LongIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-long-id-table/index.html","searchKeys":["LongIdTable","open class LongIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<Long> ","org.jetbrains.exposed.v1.core.dao.id.LongIdTable"]},{"name":"open class MariaDBDialect : MysqlDialect","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/index.html","searchKeys":["MariaDBDialect","open class MariaDBDialect : MysqlDialect","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect"]},{"name":"open class MediumTextColumnType(val collate: String? = null, val eagerLoading: Boolean = false) : TextColumnType","description":"org.jetbrains.exposed.v1.core.MediumTextColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-medium-text-column-type/index.html","searchKeys":["MediumTextColumnType","open class MediumTextColumnType(val collate: String? = null, val eagerLoading: Boolean = false) : TextColumnType","org.jetbrains.exposed.v1.core.MediumTextColumnType"]},{"name":"open class MergeSelectStatement(dest: Table, selectQuery: QueryAlias, val on: Op<Boolean>) : MergeStatement","description":"org.jetbrains.exposed.v1.core.statements.MergeSelectStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-select-statement/index.html","searchKeys":["MergeSelectStatement","open class MergeSelectStatement(dest: Table, selectQuery: QueryAlias, val on: Op<Boolean>) : MergeStatement","org.jetbrains.exposed.v1.core.statements.MergeSelectStatement"]},{"name":"open class MergeTableStatement(dest: Table, source: Table, on: Op<Boolean>?) : MergeStatement","description":"org.jetbrains.exposed.v1.core.statements.MergeTableStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-table-statement/index.html","searchKeys":["MergeTableStatement","open class MergeTableStatement(dest: Table, source: Table, on: Op<Boolean>?) : MergeStatement","org.jetbrains.exposed.v1.core.statements.MergeTableStatement"]},{"name":"open class MysqlDialect : VendorDialect","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/index.html","searchKeys":["MysqlDialect","open class MysqlDialect : VendorDialect","org.jetbrains.exposed.v1.core.vendors.MysqlDialect"]},{"name":"open class NullableColumnWithTransform<Unwrapped, Wrapped>(delegate: IColumnType<Unwrapped & Any>, transformer: ColumnTransformer<Unwrapped, Wrapped>) : ColumnWithTransform<Unwrapped, Wrapped> ","description":"org.jetbrains.exposed.v1.core.NullableColumnWithTransform","location":"exposed-core/org.jetbrains.exposed.v1.core/-nullable-column-with-transform/index.html","searchKeys":["NullableColumnWithTransform","open class NullableColumnWithTransform<Unwrapped, Wrapped>(delegate: IColumnType<Unwrapped & Any>, transformer: ColumnTransformer<Unwrapped, Wrapped>) : ColumnWithTransform<Unwrapped, Wrapped> ","org.jetbrains.exposed.v1.core.NullableColumnWithTransform"]},{"name":"open class OffsetWindowFrameBound(offset: Expression<Int>, direction: WindowFrameBoundDirection) : WindowFrameBound","description":"org.jetbrains.exposed.v1.core.OffsetWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-window-frame-bound/index.html","searchKeys":["OffsetWindowFrameBound","open class OffsetWindowFrameBound(offset: Expression<Int>, direction: WindowFrameBoundDirection) : WindowFrameBound","org.jetbrains.exposed.v1.core.OffsetWindowFrameBound"]},{"name":"open class OracleDialect : VendorDialect","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/index.html","searchKeys":["OracleDialect","open class OracleDialect : VendorDialect","org.jetbrains.exposed.v1.core.vendors.OracleDialect"]},{"name":"open class PostgreSQLDialect(val name: String = dialectName) : VendorDialect","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/index.html","searchKeys":["PostgreSQLDialect","open class PostgreSQLDialect(val name: String = dialectName) : VendorDialect","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect"]},{"name":"open class PostgreSQLNGDialect : PostgreSQLDialect","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-n-g-dialect/index.html","searchKeys":["PostgreSQLNGDialect","open class PostgreSQLNGDialect : PostgreSQLDialect","org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect"]},{"name":"open class ReplaceSelectStatement(val columns: List<Column<*>>, val selectQuery: AbstractQuery<*>) : InsertSelectStatement","description":"org.jetbrains.exposed.v1.core.statements.ReplaceSelectStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-replace-select-statement/index.html","searchKeys":["ReplaceSelectStatement","open class ReplaceSelectStatement(val columns: List<Column<*>>, val selectQuery: AbstractQuery<*>) : InsertSelectStatement","org.jetbrains.exposed.v1.core.statements.ReplaceSelectStatement"]},{"name":"open class ReplaceStatement<Key : Any>(table: Table) : InsertStatement<Key> ","description":"org.jetbrains.exposed.v1.core.statements.ReplaceStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-replace-statement/index.html","searchKeys":["ReplaceStatement","open class ReplaceStatement<Key : Any>(table: Table) : InsertStatement<Key> ","org.jetbrains.exposed.v1.core.statements.ReplaceStatement"]},{"name":"open class ReturningStatement(val table: Table, val returningExpressions: List<Expression<*>>, val mainStatement: Statement<*>) : Statement<ResultApi> ","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/index.html","searchKeys":["ReturningStatement","open class ReturningStatement(val table: Table, val returningExpressions: List<Expression<*>>, val mainStatement: Statement<*>) : Statement<ResultApi> ","org.jetbrains.exposed.v1.core.statements.ReturningStatement"]},{"name":"open class SQLServerBatchInsertStatement(table: Table, ignore: Boolean = false, val shouldReturnGeneratedValues: Boolean = true) : BatchInsertStatement","description":"org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-s-q-l-server-batch-insert-statement/index.html","searchKeys":["SQLServerBatchInsertStatement","open class SQLServerBatchInsertStatement(table: Table, ignore: Boolean = false, val shouldReturnGeneratedValues: Boolean = true) : BatchInsertStatement","org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement"]},{"name":"open class SQLServerDialect : VendorDialect","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/index.html","searchKeys":["SQLServerDialect","open class SQLServerDialect : VendorDialect","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect"]},{"name":"open class SQLiteDialect : VendorDialect","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/index.html","searchKeys":["SQLiteDialect","open class SQLiteDialect : VendorDialect","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect"]},{"name":"open class Table(name: String = \"\") : ColumnSet, DdlAware","description":"org.jetbrains.exposed.v1.core.Table","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/index.html","searchKeys":["Table","open class Table(name: String = \"\") : ColumnSet, DdlAware","org.jetbrains.exposed.v1.core.Table"]},{"name":"open class TextColumnType(val collate: String? = null, val eagerLoading: Boolean = false) : StringColumnType","description":"org.jetbrains.exposed.v1.core.TextColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-text-column-type/index.html","searchKeys":["TextColumnType","open class TextColumnType(val collate: String? = null, val eagerLoading: Boolean = false) : StringColumnType","org.jetbrains.exposed.v1.core.TextColumnType"]},{"name":"open class UIntIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<UInt> ","description":"org.jetbrains.exposed.v1.core.dao.id.UIntIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-int-id-table/index.html","searchKeys":["UIntIdTable","open class UIntIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<UInt> ","org.jetbrains.exposed.v1.core.dao.id.UIntIdTable"]},{"name":"open class ULongIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<ULong> ","description":"org.jetbrains.exposed.v1.core.dao.id.ULongIdTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-long-id-table/index.html","searchKeys":["ULongIdTable","open class ULongIdTable(name: String = \"\", columnName: String = \"id\") : IdTable<ULong> ","org.jetbrains.exposed.v1.core.dao.id.ULongIdTable"]},{"name":"open class UUIDTable(name: String = \"\", columnName: String = \"id\") : IdTable<UUID> ","description":"org.jetbrains.exposed.v1.core.dao.id.UUIDTable","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-u-i-d-table/index.html","searchKeys":["UUIDTable","open class UUIDTable(name: String = \"\", columnName: String = \"id\") : IdTable<UUID> ","org.jetbrains.exposed.v1.core.dao.id.UUIDTable"]},{"name":"open class UnboundedWindowFrameBound(direction: WindowFrameBoundDirection) : WindowFrameBound","description":"org.jetbrains.exposed.v1.core.UnboundedWindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-window-frame-bound/index.html","searchKeys":["UnboundedWindowFrameBound","open class UnboundedWindowFrameBound(direction: WindowFrameBoundDirection) : WindowFrameBound","org.jetbrains.exposed.v1.core.UnboundedWindowFrameBound"]},{"name":"open class UpdateStatement(val targetsSet: ColumnSet, val limit: Int?, val where: Op<Boolean>? = null) : UpdateBuilder<Int> ","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/index.html","searchKeys":["UpdateStatement","open class UpdateStatement(val targetsSet: ColumnSet, val limit: Int?, val where: Op<Boolean>? = null) : UpdateBuilder<Int> ","org.jetbrains.exposed.v1.core.statements.UpdateStatement"]},{"name":"open class UpsertStatement<Key : Any>(table: Table, val keys: Column<*>, val onUpdateExclude: List<Column<*>>?, val where: Op<Boolean>?) : InsertStatement<Key> , UpsertBuilder","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/index.html","searchKeys":["UpsertStatement","open class UpsertStatement<Key : Any>(table: Table, val keys: Column<*>, val onUpdateExclude: List<Column<*>>?, val where: Op<Boolean>?) : InsertStatement<Key> , UpsertBuilder","org.jetbrains.exposed.v1.core.statements.UpsertStatement"]},{"name":"open class UserDataHolder","description":"org.jetbrains.exposed.v1.core.UserDataHolder","location":"exposed-core/org.jetbrains.exposed.v1.core/-user-data-holder/index.html","searchKeys":["UserDataHolder","open class UserDataHolder","org.jetbrains.exposed.v1.core.UserDataHolder"]},{"name":"open class VarCharColumnType(val colLength: Int = 255, val collate: String? = null) : StringColumnType","description":"org.jetbrains.exposed.v1.core.VarCharColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/index.html","searchKeys":["VarCharColumnType","open class VarCharColumnType(val colLength: Int = 255, val collate: String? = null) : StringColumnType","org.jetbrains.exposed.v1.core.VarCharColumnType"]},{"name":"open fun <D : Table, S : Table> D.mergeFrom(source: S, on: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: MergeTableStatement.() -> Unit): MergeTableStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.mergeFrom","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/merge-from.html","searchKeys":["mergeFrom","open fun <D : Table, S : Table> D.mergeFrom(source: S, on: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: MergeTableStatement.() -> Unit): MergeTableStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.mergeFrom"]},{"name":"open fun <T : Any, E : EntityID<T>?> Column<E>.between(from: T, to: T): Between","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.between","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/between.html","searchKeys":["between","open fun <T : Any, E : EntityID<T>?> Column<E>.between(from: T, to: T): Between","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.between"]},{"name":"open fun <T : String?> Expression<T>.isNullOrEmpty(): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNullOrEmpty","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-null-or-empty.html","searchKeys":["isNullOrEmpty","open fun <T : String?> Expression<T>.isNullOrEmpty(): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNullOrEmpty"]},{"name":"open fun <T : String?> Expression<T>.match(pattern: String, mode: FunctionProvider.MatchMode? = null): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.match","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/match.html","searchKeys":["match","open fun <T : String?> Expression<T>.match(pattern: String, mode: FunctionProvider.MatchMode? = null): Op<Boolean>","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.match"]},{"name":"open fun <T : String?> Expression<T>.match(pattern: String, mode: FunctionProvider.MatchMode?): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.match","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/match.html","searchKeys":["match","open fun <T : String?> Expression<T>.match(pattern: String, mode: FunctionProvider.MatchMode?): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.match"]},{"name":"open fun <T : String?> Expression<T>.regexp(pattern: Expression<String>, caseSensitive: Boolean = true): RegexpOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.regexp","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/regexp.html","searchKeys":["regexp","open fun <T : String?> Expression<T>.regexp(pattern: Expression<String>, caseSensitive: Boolean = true): RegexpOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.regexp"]},{"name":"open fun <T : String?> charLength(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.charLength","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/char-length.html","searchKeys":["charLength","open fun <T : String?> charLength(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.charLength"]},{"name":"open fun <T : String?> groupConcat(expr: GroupConcat<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.groupConcat","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/group-concat.html","searchKeys":["groupConcat","open fun <T : String?> groupConcat(expr: GroupConcat<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.groupConcat"]},{"name":"open fun <T : String?> locate(queryBuilder: QueryBuilder, expr: Expression<T>, substring: String)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.locate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/locate.html","searchKeys":["locate","open fun <T : String?> locate(queryBuilder: QueryBuilder, expr: Expression<T>, substring: String)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.locate"]},{"name":"open fun <T : String?> regexp(expr1: Expression<T>, pattern: Expression<String>, caseSensitive: Boolean, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.regexp","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/regexp.html","searchKeys":["regexp","open fun <T : String?> regexp(expr1: Expression<T>, pattern: Expression<String>, caseSensitive: Boolean, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.regexp"]},{"name":"open fun <T : String?> substring(expr: Expression<T>, start: Expression<Int>, length: Expression<Int>, builder: QueryBuilder, prefix: String = \"SUBSTRING\")","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.substring","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/substring.html","searchKeys":["substring","open fun <T : String?> substring(expr: Expression<T>, start: Expression<Int>, length: Expression<Int>, builder: QueryBuilder, prefix: String = \"SUBSTRING\")","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.substring"]},{"name":"open fun <T : Table, E : Any> T.batchReplace(shouldReturnGeneratedValues: Boolean = true, body: BatchReplaceStatement.(E) -> Unit): BatchReplaceStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.batchReplace","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/batch-replace.html","searchKeys":["batchReplace","open fun <T : Table, E : Any> T.batchReplace(shouldReturnGeneratedValues: Boolean = true, body: BatchReplaceStatement.(E) -> Unit): BatchReplaceStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.batchReplace"]},{"name":"open fun <T : Table, E> T.batchInsert(ignoreErrors: Boolean = false, shouldReturnGeneratedValues: Boolean = true, body: BatchInsertStatement.(E) -> Unit): BatchInsertStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.batchInsert","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/batch-insert.html","searchKeys":["batchInsert","open fun <T : Table, E> T.batchInsert(ignoreErrors: Boolean = false, shouldReturnGeneratedValues: Boolean = true, body: BatchInsertStatement.(E) -> Unit): BatchInsertStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.batchInsert"]},{"name":"open fun <T : Table, E> T.batchUpsert(onUpdateList: List<Pair<Column<*>, Any?>>? = null, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, shouldReturnGeneratedValues: Boolean = true, vararg keys: Column<*>, body: BatchUpsertStatement.(E) -> Unit): BatchUpsertStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.batchUpsert","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/batch-upsert.html","searchKeys":["batchUpsert","open fun <T : Table, E> T.batchUpsert(onUpdateList: List<Pair<Column<*>, Any?>>? = null, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, shouldReturnGeneratedValues: Boolean = true, vararg keys: Column<*>, body: BatchUpsertStatement.(E) -> Unit): BatchUpsertStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.batchUpsert"]},{"name":"open fun <T : Table> T.deleteAll(): DeleteStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteAll","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/delete-all.html","searchKeys":["deleteAll","open fun <T : Table> T.deleteAll(): DeleteStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteAll"]},{"name":"open fun <T : Table> T.deleteIgnoreWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): DeleteStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteIgnoreWhere","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/delete-ignore-where.html","searchKeys":["deleteIgnoreWhere","open fun <T : Table> T.deleteIgnoreWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): DeleteStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteIgnoreWhere"]},{"name":"open fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): ReturningStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteReturning","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/delete-returning.html","searchKeys":["deleteReturning","open fun <T : Table> T.deleteReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): ReturningStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteReturning"]},{"name":"open fun <T : Table> T.deleteWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): DeleteStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteWhere","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/delete-where.html","searchKeys":["deleteWhere","open fun <T : Table> T.deleteWhere(limit: Int? = null, op: T.(ISqlExpressionBuilder) -> Op<Boolean>): DeleteStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.deleteWhere"]},{"name":"open fun <T : Table> T.insert(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Number>","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insert","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/insert.html","searchKeys":["insert","open fun <T : Table> T.insert(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Number>","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insert"]},{"name":"open fun <T : Table> T.insert(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): InsertSelectStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insert","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/insert.html","searchKeys":["insert","open fun <T : Table> T.insert(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): InsertSelectStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insert"]},{"name":"open fun <T : Table> T.insertIgnore(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Long>","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insertIgnore","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/insert-ignore.html","searchKeys":["insertIgnore","open fun <T : Table> T.insertIgnore(body: T.(UpdateBuilder<*>) -> Unit): InsertStatement<Long>","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insertIgnore"]},{"name":"open fun <T : Table> T.insertIgnore(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): InsertSelectStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insertIgnore","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/insert-ignore.html","searchKeys":["insertIgnore","open fun <T : Table> T.insertIgnore(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): InsertSelectStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insertIgnore"]},{"name":"open fun <T : Table> T.insertReturning(returning: List<Expression<*>> = columns, ignoreErrors: Boolean = false, body: T.(InsertStatement<Number>) -> Unit): ReturningStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insertReturning","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/insert-returning.html","searchKeys":["insertReturning","open fun <T : Table> T.insertReturning(returning: List<Expression<*>> = columns, ignoreErrors: Boolean = false, body: T.(InsertStatement<Number>) -> Unit): ReturningStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.insertReturning"]},{"name":"open fun <T : Table> T.mergeFrom(selectQuery: QueryAlias, on: SqlExpressionBuilder.() -> Op<Boolean>, body: MergeSelectStatement.() -> Unit): MergeSelectStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.mergeFrom","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/merge-from.html","searchKeys":["mergeFrom","open fun <T : Table> T.mergeFrom(selectQuery: QueryAlias, on: SqlExpressionBuilder.() -> Op<Boolean>, body: MergeSelectStatement.() -> Unit): MergeSelectStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.mergeFrom"]},{"name":"open fun <T : Table> T.replace(body: T.(UpdateBuilder<*>) -> Unit): ReplaceStatement<Long>","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.replace","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/replace.html","searchKeys":["replace","open fun <T : Table> T.replace(body: T.(UpdateBuilder<*>) -> Unit): ReplaceStatement<Long>","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.replace"]},{"name":"open fun <T : Table> T.replace(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): ReplaceSelectStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.replace","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/replace.html","searchKeys":["replace","open fun <T : Table> T.replace(selectQuery: AbstractQuery<*>, columns: List<Column<*>>? = null): ReplaceSelectStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.replace"]},{"name":"open fun <T : Table> T.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: T.(UpdateStatement) -> Unit): UpdateStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.update","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/update.html","searchKeys":["update","open fun <T : Table> T.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: T.(UpdateStatement) -> Unit): UpdateStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.update"]},{"name":"open fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpdateStatement) -> Unit): ReturningStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.updateReturning","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/update-returning.html","searchKeys":["updateReturning","open fun <T : Table> T.updateReturning(returning: List<Expression<*>> = columns, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpdateStatement) -> Unit): ReturningStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.updateReturning"]},{"name":"open fun <T : Table> T.upsert(vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): UpsertStatement<Long>","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.upsert","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/upsert.html","searchKeys":["upsert","open fun <T : Table> T.upsert(vararg keys: Column<*>, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): UpsertStatement<Long>","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.upsert"]},{"name":"open fun <T : Table> T.upsertReturning(vararg keys: Column<*>, returning: List<Expression<*>> = columns, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): ReturningStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.upsertReturning","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/upsert-returning.html","searchKeys":["upsertReturning","open fun <T : Table> T.upsertReturning(vararg keys: Column<*>, returning: List<Expression<*>> = columns, onUpdate: UpsertBuilder.(UpdateStatement) -> Unit? = null, onUpdateExclude: List<Column<*>>? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null, body: T.(UpsertStatement<Long>) -> Unit): ReturningStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.upsertReturning"]},{"name":"open fun <T, S : T?> ExpressionWithColumnType<S>.asLiteral(value: T): LiteralOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.asLiteral","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/as-literal.html","searchKeys":["asLiteral","open fun <T, S : T?> ExpressionWithColumnType<S>.asLiteral(value: T): LiteralOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.asLiteral"]},{"name":"open fun <T, S : T?> ExpressionWithColumnType<in S>.between(from: T, to: T): Between","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.between","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/between.html","searchKeys":["between","open fun <T, S : T?> ExpressionWithColumnType<in S>.between(from: T, to: T): Between","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.between"]},{"name":"open fun <T, S : T?> ExpressionWithColumnType<in S>.wrap(value: T): QueryParameter<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.wrap","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/wrap.html","searchKeys":["wrap","open fun <T, S : T?> ExpressionWithColumnType<in S>.wrap(value: T): QueryParameter<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.wrap"]},{"name":"open fun <T, S : T?> coalesce(expr: ExpressionWithColumnType<S>, alternate: Expression<out T>, vararg others: Expression<out T>): Coalesce<T, S>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.coalesce","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/coalesce.html","searchKeys":["coalesce","open fun <T, S : T?> coalesce(expr: ExpressionWithColumnType<S>, alternate: Expression<out T>, vararg others: Expression<out T>): Coalesce<T, S>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.coalesce"]},{"name":"open fun <T, S : T?> update(column: Column<T>, value: Expression<S>)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.update","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/update.html","searchKeys":["update","open fun <T, S : T?> update(column: Column<T>, value: Expression<S>)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.update"]},{"name":"open fun <T, S : T?> update(column: Column<T>, value: SqlExpressionBuilder.() -> Expression<S>)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.update","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/update.html","searchKeys":["update","open fun <T, S : T?> update(column: Column<T>, value: SqlExpressionBuilder.() -> Expression<S>)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.update"]},{"name":"open fun <T> Expression<T>.isNotNull(): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotNull","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-not-null.html","searchKeys":["isNotNull","open fun <T> Expression<T>.isNotNull(): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotNull"]},{"name":"open fun <T> Expression<T>.isNull(): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNull","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-null.html","searchKeys":["isNull","open fun <T> Expression<T>.isNull(): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNull"]},{"name":"open fun <T> ExpressionWithColumnType<T>.firstValue(): FirstValue<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.firstValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/first-value.html","searchKeys":["firstValue","open fun <T> ExpressionWithColumnType<T>.firstValue(): FirstValue<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.firstValue"]},{"name":"open fun <T> ExpressionWithColumnType<T>.lag(offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null): Lag<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lag","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/lag.html","searchKeys":["lag","open fun <T> ExpressionWithColumnType<T>.lag(offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null): Lag<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lag"]},{"name":"open fun <T> ExpressionWithColumnType<T>.lastValue(): LastValue<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lastValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/last-value.html","searchKeys":["lastValue","open fun <T> ExpressionWithColumnType<T>.lastValue(): LastValue<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lastValue"]},{"name":"open fun <T> ExpressionWithColumnType<T>.lead(offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null): Lead<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lead","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/lead.html","searchKeys":["lead","open fun <T> ExpressionWithColumnType<T>.lead(offset: ExpressionWithColumnType<Int> = intLiteral(1), defaultValue: ExpressionWithColumnType<T>? = null): Lead<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lead"]},{"name":"open fun <T> ExpressionWithColumnType<T>.nthValue(n: ExpressionWithColumnType<Int>): NthValue<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.nthValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/nth-value.html","searchKeys":["nthValue","open fun <T> ExpressionWithColumnType<T>.nthValue(n: ExpressionWithColumnType<Int>): NthValue<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.nthValue"]},{"name":"open fun <T> arraySlice(expression: Expression<T>, lower: Int?, upper: Int?, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.arraySlice","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/array-slice.html","searchKeys":["arraySlice","open fun <T> arraySlice(expression: Expression<T>, lower: Int?, upper: Int?, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.arraySlice"]},{"name":"open fun <T> date(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.date","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/date.html","searchKeys":["date","open fun <T> date(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.date"]},{"name":"open fun <T> day(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.day","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/day.html","searchKeys":["day","open fun <T> day(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.day"]},{"name":"open fun <T> hour(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.hour","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/hour.html","searchKeys":["hour","open fun <T> hour(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.hour"]},{"name":"open fun <T> insertValue(column: Column<T>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.statements.UpsertBuilder.insertValue","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-builder/insert-value.html","searchKeys":["insertValue","open fun <T> insertValue(column: Column<T>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.statements.UpsertBuilder.insertValue"]},{"name":"open fun <T> jsonExtract(expression: Expression<T>, vararg path: String, toScalar: Boolean, jsonType: IColumnType<*>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.jsonExtract","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/json-extract.html","searchKeys":["jsonExtract","open fun <T> jsonExtract(expression: Expression<T>, vararg path: String, toScalar: Boolean, jsonType: IColumnType<*>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.jsonExtract"]},{"name":"open fun <T> minute(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.minute","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/minute.html","searchKeys":["minute","open fun <T> minute(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.minute"]},{"name":"open fun <T> month(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.month","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/month.html","searchKeys":["month","open fun <T> month(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.month"]},{"name":"open fun <T> second(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.second","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/second.html","searchKeys":["second","open fun <T> second(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.second"]},{"name":"open fun <T> stdDevPop(expression: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.stdDevPop","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/std-dev-pop.html","searchKeys":["stdDevPop","open fun <T> stdDevPop(expression: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.stdDevPop"]},{"name":"open fun <T> stdDevSamp(expression: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.stdDevSamp","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/std-dev-samp.html","searchKeys":["stdDevSamp","open fun <T> stdDevSamp(expression: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.stdDevSamp"]},{"name":"open fun <T> time(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.time","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/time.html","searchKeys":["time","open fun <T> time(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.time"]},{"name":"open fun <T> varPop(expression: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.varPop","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/var-pop.html","searchKeys":["varPop","open fun <T> varPop(expression: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.varPop"]},{"name":"open fun <T> varSamp(expression: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.varSamp","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/var-samp.html","searchKeys":["varSamp","open fun <T> varSamp(expression: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.varSamp"]},{"name":"open fun <T> year(expr: Expression<T>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.year","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/year.html","searchKeys":["year","open fun <T> year(expr: Expression<T>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.year"]},{"name":"open fun ExpressionWithColumnType<Int>.intToDecimal(): NoOpConversion<Int, BigDecimal>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.intToDecimal","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/int-to-decimal.html","searchKeys":["intToDecimal","open fun ExpressionWithColumnType<Int>.intToDecimal(): NoOpConversion<Int, BigDecimal>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.intToDecimal"]},{"name":"open fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): DeleteStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.delete","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/delete.html","searchKeys":["delete","open fun Join.delete(targetTable: Table, vararg targetTables: Table, ignore: Boolean = false, limit: Int? = null, where: SqlExpressionBuilder.() -> Op<Boolean>? = null): DeleteStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.delete"]},{"name":"open fun Join.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: (UpdateStatement) -> Unit): UpdateStatement","description":"org.jetbrains.exposed.v1.core.statements.IStatementBuilder.update","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-i-statement-builder/update.html","searchKeys":["update","open fun Join.update(where: SqlExpressionBuilder.() -> Op<Boolean>? = null, limit: Int? = null, body: (UpdateStatement) -> Unit): UpdateStatement","org.jetbrains.exposed.v1.core.statements.IStatementBuilder.update"]},{"name":"open fun afterCommit(transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterCommit","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/after-commit.html","searchKeys":["afterCommit","open fun afterCommit(transaction: Transaction)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterCommit"]},{"name":"open fun afterExecution(transaction: Transaction, contexts: List<StatementContext>, executedStatement: PreparedStatementApi)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterExecution","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/after-execution.html","searchKeys":["afterExecution","open fun afterExecution(transaction: Transaction, contexts: List<StatementContext>, executedStatement: PreparedStatementApi)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterExecution"]},{"name":"open fun afterRollback(transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterRollback","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/after-rollback.html","searchKeys":["afterRollback","open fun afterRollback(transaction: Transaction)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterRollback"]},{"name":"open fun afterStatementPrepared(transaction: Transaction, preparedStatement: PreparedStatementApi)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterStatementPrepared","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/after-statement-prepared.html","searchKeys":["afterStatementPrepared","open fun afterStatementPrepared(transaction: Transaction, preparedStatement: PreparedStatementApi)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.afterStatementPrepared"]},{"name":"open fun aliasOnlyExpression(): Expression<T>","description":"org.jetbrains.exposed.v1.core.IExpressionAlias.aliasOnlyExpression","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-expression-alias/alias-only-expression.html","searchKeys":["aliasOnlyExpression","open fun aliasOnlyExpression(): Expression<T>","org.jetbrains.exposed.v1.core.IExpressionAlias.aliasOnlyExpression"]},{"name":"open fun areEquivalentColumnTypes(columnMetadataSqlType: String, columnMetadataJdbcType: Int, columnType: String): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.areEquivalentColumnTypes","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/are-equivalent-column-types.html","searchKeys":["areEquivalentColumnTypes","open fun areEquivalentColumnTypes(columnMetadataSqlType: String, columnMetadataJdbcType: Int, columnType: String): Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.areEquivalentColumnTypes"]},{"name":"open fun beforeCommit(transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.beforeCommit","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/before-commit.html","searchKeys":["beforeCommit","open fun beforeCommit(transaction: Transaction)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.beforeCommit"]},{"name":"open fun beforeExecution(transaction: Transaction, context: StatementContext)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.beforeExecution","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/before-execution.html","searchKeys":["beforeExecution","open fun beforeExecution(transaction: Transaction, context: StatementContext)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.beforeExecution"]},{"name":"open fun beforeRollback(transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.beforeRollback","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/before-rollback.html","searchKeys":["beforeRollback","open fun beforeRollback(transaction: Transaction)","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.beforeRollback"]},{"name":"open fun binaryType(length: Int): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.binaryType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/binary-type.html","searchKeys":["binaryType","open fun binaryType(length: Int): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.binaryType"]},{"name":"open fun blobType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.blobType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/blob-type.html","searchKeys":["blobType","open fun blobType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.blobType"]},{"name":"open fun booleanFromStringToBoolean(value: String): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.booleanFromStringToBoolean","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/boolean-from-string-to-boolean.html","searchKeys":["booleanFromStringToBoolean","open fun booleanFromStringToBoolean(value: String): Boolean","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.booleanFromStringToBoolean"]},{"name":"open fun booleanToStatementString(bool: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.booleanToStatementString","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/boolean-to-statement-string.html","searchKeys":["booleanToStatementString","open fun booleanToStatementString(bool: Boolean): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.booleanToStatementString"]},{"name":"open fun booleanType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.booleanType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/boolean-type.html","searchKeys":["booleanType","open fun booleanType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.booleanType"]},{"name":"open fun byteType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.byteType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/byte-type.html","searchKeys":["byteType","open fun byteType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.byteType"]},{"name":"open fun case(value: Expression<*>? = null): Case","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.case","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/case.html","searchKeys":["case","open fun case(value: Expression<*>? = null): Case","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.case"]},{"name":"open fun cast(expr: Expression<*>, type: IColumnType<*>, builder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.cast","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/cast.html","searchKeys":["cast","open fun cast(expr: Expression<*>, type: IColumnType<*>, builder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.cast"]},{"name":"open fun concat(separator: String = \"\", expr: List<Expression<*>>): Concat","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.concat","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/concat.html","searchKeys":["concat","open fun concat(separator: String = \"\", expr: List<Expression<*>>): Concat","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.concat"]},{"name":"open fun concat(separator: String, queryBuilder: QueryBuilder, vararg expr: Expression<*>)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.concat","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/concat.html","searchKeys":["concat","open fun concat(separator: String, queryBuilder: QueryBuilder, vararg expr: Expression<*>)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.concat"]},{"name":"open fun concat(vararg expr: Expression<*>): Concat","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.concat","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/concat.html","searchKeys":["concat","open fun concat(vararg expr: Expression<*>): Concat","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.concat"]},{"name":"open fun copyTo(other: T)","description":"org.jetbrains.exposed.v1.core.AbstractQuery.copyTo","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/copy-to.html","searchKeys":["copyTo","open fun copyTo(other: T)","org.jetbrains.exposed.v1.core.AbstractQuery.copyTo"]},{"name":"open fun createDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.createDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/create-database.html","searchKeys":["createDatabase","open fun createDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.createDatabase"]},{"name":"open fun createSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.createSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/create-schema.html","searchKeys":["createSchema","open fun createSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.createSchema"]},{"name":"open fun cumeDist(): CumeDist","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.cumeDist","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/cume-dist.html","searchKeys":["cumeDist","open fun cumeDist(): CumeDist","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.cumeDist"]},{"name":"open fun dateTimeType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.dateTimeType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/date-time-type.html","searchKeys":["dateTimeType","open fun dateTimeType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.dateTimeType"]},{"name":"open fun dateType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.dateType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/date-type.html","searchKeys":["dateType","open fun dateType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.dateType"]},{"name":"open fun delete(ignore: Boolean, table: Table, where: String?, limit: Int?, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.delete","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/delete.html","searchKeys":["delete","open fun delete(ignore: Boolean, table: Table, where: String?, limit: Int?, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.delete"]},{"name":"open fun delete(ignore: Boolean, targets: Join, targetTables: List<Table>, where: Op<Boolean>?, limit: Int?, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.delete","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/delete.html","searchKeys":["delete","open fun delete(ignore: Boolean, targets: Join, targetTables: List<Table>, where: Op<Boolean>?, limit: Int?, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.delete"]},{"name":"open fun denseRank(): DenseRank","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.denseRank","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/dense-rank.html","searchKeys":["denseRank","open fun denseRank(): DenseRank","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.denseRank"]},{"name":"open fun doubleType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.doubleType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/double-type.html","searchKeys":["doubleType","open fun doubleType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.doubleType"]},{"name":"open fun dropDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dropDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/drop-database.html","searchKeys":["dropDatabase","open fun dropDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dropDatabase"]},{"name":"open fun dropSchema(schema: Schema, cascade: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dropSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/drop-schema.html","searchKeys":["dropSchema","open fun dropSchema(schema: Schema, cascade: Boolean): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.dropSchema"]},{"name":"open fun explain(analyze: Boolean, options: String?, internalStatement: String, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.explain","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/explain.html","searchKeys":["explain","open fun explain(analyze: Boolean, options: String?, internalStatement: String, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.explain"]},{"name":"open fun fillParameters(args: Iterable<Pair<IColumnType<*>, Any?>>): Int","description":"org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.fillParameters","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-prepared-statement-api/fill-parameters.html","searchKeys":["fillParameters","open fun fillParameters(args: Iterable<Pair<IColumnType<*>, Any?>>): Int","org.jetbrains.exposed.v1.core.statements.api.PreparedStatementApi.fillParameters"]},{"name":"open fun floatType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.floatType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/float-type.html","searchKeys":["floatType","open fun floatType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.floatType"]},{"name":"open fun insert(ignore: Boolean, table: Table, columns: List<Column<*>>, expr: String, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.insert","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/insert.html","searchKeys":["insert","open fun insert(ignore: Boolean, table: Table, columns: List<Column<*>>, expr: String, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.insert"]},{"name":"open fun insertValue(columnName: String, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.insertValue","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/insert-value.html","searchKeys":["insertValue","open fun insertValue(columnName: String, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.insertValue"]},{"name":"open fun integerAutoincType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.integerAutoincType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/integer-autoinc-type.html","searchKeys":["integerAutoincType","open fun integerAutoincType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.integerAutoincType"]},{"name":"open fun integerType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.integerType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/integer-type.html","searchKeys":["integerType","open fun integerType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.integerType"]},{"name":"open fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.isAllowedAsColumnDefault"]},{"name":"open fun isFractionDateTimeSupported(): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.isFractionDateTimeSupported","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/is-fraction-date-time-supported.html","searchKeys":["isFractionDateTimeSupported","open fun isFractionDateTimeSupported(): Boolean","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.isFractionDateTimeSupported"]},{"name":"open fun isTimeZoneOffsetSupported(): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.isTimeZoneOffsetSupported","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/is-time-zone-offset-supported.html","searchKeys":["isTimeZoneOffsetSupported","open fun isTimeZoneOffsetSupported(): Boolean","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.isTimeZoneOffsetSupported"]},{"name":"open fun jsonBType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.jsonBType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/json-b-type.html","searchKeys":["jsonBType","open fun jsonBType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.jsonBType"]},{"name":"open fun jsonContains(target: Expression<*>, candidate: Expression<*>, path: String?, jsonType: IColumnType<*>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.jsonContains","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/json-contains.html","searchKeys":["jsonContains","open fun jsonContains(target: Expression<*>, candidate: Expression<*>, path: String?, jsonType: IColumnType<*>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.jsonContains"]},{"name":"open fun jsonExists(expression: Expression<*>, vararg path: String, optional: String?, jsonType: IColumnType<*>, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.jsonExists","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/json-exists.html","searchKeys":["jsonExists","open fun jsonExists(expression: Expression<*>, vararg path: String, optional: String?, jsonType: IColumnType<*>, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.jsonExists"]},{"name":"open fun jsonType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.jsonType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/json-type.html","searchKeys":["jsonType","open fun jsonType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.jsonType"]},{"name":"open fun keepUserDataInTransactionStoreOnCommit(userData: Map<Key<*>, Any?>): Map<Key<*>, Any?>","description":"org.jetbrains.exposed.v1.core.statements.StatementInterceptor.keepUserDataInTransactionStoreOnCommit","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-interceptor/keep-user-data-in-transaction-store-on-commit.html","searchKeys":["keepUserDataInTransactionStoreOnCommit","open fun keepUserDataInTransactionStoreOnCommit(userData: Map<Key<*>, Any?>): Map<Key<*>, Any?>","org.jetbrains.exposed.v1.core.statements.StatementInterceptor.keepUserDataInTransactionStoreOnCommit"]},{"name":"open fun largeTextType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.largeTextType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/large-text-type.html","searchKeys":["largeTextType","open fun largeTextType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.largeTextType"]},{"name":"open fun listDatabases(): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.listDatabases","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/list-databases.html","searchKeys":["listDatabases","open fun listDatabases(): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.listDatabases"]},{"name":"open fun longAutoincType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.longAutoincType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/long-autoinc-type.html","searchKeys":["longAutoincType","open fun longAutoincType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.longAutoincType"]},{"name":"open fun longType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.longType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/long-type.html","searchKeys":["longType","open fun longType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.longType"]},{"name":"open fun mediumTextType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.mediumTextType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/medium-text-type.html","searchKeys":["mediumTextType","open fun mediumTextType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.mediumTextType"]},{"name":"open fun merge(dest: Table, source: Table, transaction: Transaction, clauses: List<MergeStatement.Clause>, on: Op<Boolean>?): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.merge","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/merge.html","searchKeys":["merge","open fun merge(dest: Table, source: Table, transaction: Transaction, clauses: List<MergeStatement.Clause>, on: Op<Boolean>?): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.merge"]},{"name":"open fun mergeSelect(dest: Table, source: QueryAlias, transaction: Transaction, clauses: List<MergeStatement.Clause>, on: Op<Boolean>, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.mergeSelect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/merge-select.html","searchKeys":["mergeSelect","open fun mergeSelect(dest: Table, source: QueryAlias, transaction: Transaction, clauses: List<MergeStatement.Clause>, on: Op<Boolean>, prepared: Boolean): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.mergeSelect"]},{"name":"open fun nextVal(seq: Sequence, builder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.nextVal","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/next-val.html","searchKeys":["nextVal","open fun nextVal(seq: Sequence, builder: QueryBuilder)","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.nextVal"]},{"name":"open fun nonNullValueAsDefaultString(value: T & Any): String","description":"org.jetbrains.exposed.v1.core.IColumnType.nonNullValueAsDefaultString","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open fun nonNullValueAsDefaultString(value: T & Any): String","org.jetbrains.exposed.v1.core.IColumnType.nonNullValueAsDefaultString"]},{"name":"open fun nonNullValueToString(value: T & Any): String","description":"org.jetbrains.exposed.v1.core.IColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open fun nonNullValueToString(value: T & Any): String","org.jetbrains.exposed.v1.core.IColumnType.nonNullValueToString"]},{"name":"open fun notNullValueToDB(value: T & Any): Any","description":"org.jetbrains.exposed.v1.core.IColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open fun notNullValueToDB(value: T & Any): Any","org.jetbrains.exposed.v1.core.IColumnType.notNullValueToDB"]},{"name":"open fun ntile(numBuckets: ExpressionWithColumnType<Int>): Ntile","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.ntile","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/ntile.html","searchKeys":["ntile","open fun ntile(numBuckets: ExpressionWithColumnType<Int>): Ntile","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.ntile"]},{"name":"open fun parameterMarker(value: T?): String","description":"org.jetbrains.exposed.v1.core.IColumnType.parameterMarker","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/parameter-marker.html","searchKeys":["parameterMarker","open fun parameterMarker(value: T?): String","org.jetbrains.exposed.v1.core.IColumnType.parameterMarker"]},{"name":"open fun percentRank(): PercentRank","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.percentRank","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/percent-rank.html","searchKeys":["percentRank","open fun percentRank(): PercentRank","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.percentRank"]},{"name":"open fun precessOrderByClause(queryBuilder: QueryBuilder, expression: Expression<*>, sortOrder: SortOrder)","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.precessOrderByClause","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/precess-order-by-clause.html","searchKeys":["precessOrderByClause","open fun precessOrderByClause(queryBuilder: QueryBuilder, expression: Expression<*>, sortOrder: SortOrder)","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.precessOrderByClause"]},{"name":"open fun preciseType(): String","description":"org.jetbrains.exposed.v1.core.TextColumnType.preciseType","location":"exposed-core/org.jetbrains.exposed.v1.core/-text-column-type/precise-type.html","searchKeys":["preciseType","open fun preciseType(): String","org.jetbrains.exposed.v1.core.TextColumnType.preciseType"]},{"name":"open fun preciseType(): String","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.preciseType","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/precise-type.html","searchKeys":["preciseType","open fun preciseType(): String","org.jetbrains.exposed.v1.core.VarCharColumnType.preciseType"]},{"name":"open fun prepareSQL(builder: QueryBuilder): String","description":"org.jetbrains.exposed.v1.core.AbstractQuery.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/prepare-s-q-l.html","searchKeys":["prepareSQL","open fun prepareSQL(builder: QueryBuilder): String","org.jetbrains.exposed.v1.core.AbstractQuery.prepareSQL"]},{"name":"open fun processForDefaultValue(e: Expression<*>): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.processForDefaultValue","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/process-for-default-value.html","searchKeys":["processForDefaultValue","open fun processForDefaultValue(e: Expression<*>): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.processForDefaultValue"]},{"name":"open fun queryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.IExpressionAlias.queryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-expression-alias/query-builder.html","searchKeys":["queryBuilder","open fun queryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.IExpressionAlias.queryBuilder"]},{"name":"open fun queryLimit(size: Int, offset: Long, alreadyOrdered: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.queryLimit","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/query-limit.html","searchKeys":["queryLimit","open fun queryLimit(size: Int, offset: Long, alreadyOrdered: Boolean): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.queryLimit"]},{"name":"open fun queryLimitAndOffset(size: Int?, offset: Long, alreadyOrdered: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.queryLimitAndOffset","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/query-limit-and-offset.html","searchKeys":["queryLimitAndOffset","open fun queryLimitAndOffset(size: Int?, offset: Long, alreadyOrdered: Boolean): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.queryLimitAndOffset"]},{"name":"open fun random(seed: Int?): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.random","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/random.html","searchKeys":["random","open fun random(seed: Int?): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.random"]},{"name":"open fun rank(): Rank","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rank","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/rank.html","searchKeys":["rank","open fun rank(): Rank","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rank"]},{"name":"open fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.IColumnType.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/read-object.html","searchKeys":["readObject","open fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.IColumnType.readObject"]},{"name":"open fun replace(table: Table, columns: List<Column<*>>, expression: String, transaction: Transaction, prepared: Boolean = true): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.replace","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/replace.html","searchKeys":["replace","open fun replace(table: Table, columns: List<Column<*>>, expression: String, transaction: Transaction, prepared: Boolean = true): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.replace"]},{"name":"open fun returning(mainSql: String, returning: List<Expression<*>>, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.returning","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/returning.html","searchKeys":["returning","open fun returning(mainSql: String, returning: List<Expression<*>>, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.returning"]},{"name":"open fun rowNumber(): RowNumber","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rowNumber","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/row-number.html","searchKeys":["rowNumber","open fun rowNumber(): RowNumber","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rowNumber"]},{"name":"open fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.IColumnType.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/set-parameter.html","searchKeys":["setParameter","open fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.IColumnType.setParameter"]},{"name":"open fun setSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.setSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/set-schema.html","searchKeys":["setSchema","open fun setSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.setSchema"]},{"name":"open fun shortType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.shortType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/short-type.html","searchKeys":["shortType","open fun shortType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.shortType"]},{"name":"open fun storeUpdateValues(onUpdate: UpsertBuilder.(UpdateStatement) -> Unit)","description":"org.jetbrains.exposed.v1.core.statements.UpsertBuilder.storeUpdateValues","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-builder/store-update-values.html","searchKeys":["storeUpdateValues","open fun storeUpdateValues(onUpdate: UpsertBuilder.(UpdateStatement) -> Unit)","org.jetbrains.exposed.v1.core.statements.UpsertBuilder.storeUpdateValues"]},{"name":"open fun textType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.textType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/text-type.html","searchKeys":["textType","open fun textType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.textType"]},{"name":"open fun timeType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.timeType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/time-type.html","searchKeys":["timeType","open fun timeType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.timeType"]},{"name":"open fun timestampType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.timestampType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/timestamp-type.html","searchKeys":["timestampType","open fun timestampType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.timestampType"]},{"name":"open fun timestampWithTimeZoneType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.timestampWithTimeZoneType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/timestamp-with-time-zone-type.html","searchKeys":["timestampWithTimeZoneType","open fun timestampWithTimeZoneType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.timestampWithTimeZoneType"]},{"name":"open fun ubyteType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ubyteType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/ubyte-type.html","searchKeys":["ubyteType","open fun ubyteType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ubyteType"]},{"name":"open fun uintegerAutoincType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uintegerAutoincType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/uinteger-autoinc-type.html","searchKeys":["uintegerAutoincType","open fun uintegerAutoincType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uintegerAutoincType"]},{"name":"open fun uintegerType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uintegerType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/uinteger-type.html","searchKeys":["uintegerType","open fun uintegerType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uintegerType"]},{"name":"open fun ulongAutoincType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ulongAutoincType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/ulong-autoinc-type.html","searchKeys":["ulongAutoincType","open fun ulongAutoincType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ulongAutoincType"]},{"name":"open fun ulongType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ulongType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/ulong-type.html","searchKeys":["ulongType","open fun ulongType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ulongType"]},{"name":"open fun unwrapRecursive(value: Wrapped?): Any?","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.unwrapRecursive","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/unwrap-recursive.html","searchKeys":["unwrapRecursive","open fun unwrapRecursive(value: Wrapped?): Any?","org.jetbrains.exposed.v1.core.ColumnWithTransform.unwrapRecursive"]},{"name":"open fun update(target: Table, columnsAndValues: List<Pair<Column<*>, Any?>>, limit: Int?, where: Op<Boolean>?, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.update","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/update.html","searchKeys":["update","open fun update(target: Table, columnsAndValues: List<Pair<Column<*>, Any?>>, limit: Int?, where: Op<Boolean>?, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.update"]},{"name":"open fun update(targets: Join, columnsAndValues: List<Pair<Column<*>, Any?>>, limit: Int?, where: Op<Boolean>?, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.update","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/update.html","searchKeys":["update","open fun update(targets: Join, columnsAndValues: List<Pair<Column<*>, Any?>>, limit: Int?, where: Op<Boolean>?, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.update"]},{"name":"open fun upsert(table: Table, data: List<Pair<Column<*>, Any?>>, expression: String, onUpdate: List<Pair<Column<*>, Any?>>, keyColumns: List<Column<*>>, where: Op<Boolean>?, transaction: Transaction): String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.upsert","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/upsert.html","searchKeys":["upsert","open fun upsert(table: Table, data: List<Pair<Column<*>, Any?>>, expression: String, onUpdate: List<Pair<Column<*>, Any?>>, keyColumns: List<Column<*>>, where: Op<Boolean>?, transaction: Transaction): String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.upsert"]},{"name":"open fun ushortType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ushortType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/ushort-type.html","searchKeys":["ushortType","open fun ushortType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.ushortType"]},{"name":"open fun uuidToDB(value: UUID): Any","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uuidToDB","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/uuid-to-d-b.html","searchKeys":["uuidToDB","open fun uuidToDB(value: UUID): Any","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uuidToDB"]},{"name":"open fun uuidType(): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uuidType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/uuid-type.html","searchKeys":["uuidType","open fun uuidType(): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.uuidType"]},{"name":"open fun validateLastBatch()","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.validateLastBatch","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/validate-last-batch.html","searchKeys":["validateLastBatch","open fun validateLastBatch()","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.validateLastBatch"]},{"name":"open fun validateValueBeforeUpdate(value: T?)","description":"org.jetbrains.exposed.v1.core.IColumnType.validateValueBeforeUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open fun validateValueBeforeUpdate(value: T?)","org.jetbrains.exposed.v1.core.IColumnType.validateValueBeforeUpdate"]},{"name":"open fun valueAsDefaultString(value: T?): String","description":"org.jetbrains.exposed.v1.core.IColumnType.valueAsDefaultString","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/value-as-default-string.html","searchKeys":["valueAsDefaultString","open fun valueAsDefaultString(value: T?): String","org.jetbrains.exposed.v1.core.IColumnType.valueAsDefaultString"]},{"name":"open fun valueToDB(value: T?): Any?","description":"org.jetbrains.exposed.v1.core.IColumnType.valueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/value-to-d-b.html","searchKeys":["valueToDB","open fun valueToDB(value: T?): Any?","org.jetbrains.exposed.v1.core.IColumnType.valueToDB"]},{"name":"open fun valueToString(value: T?): String","description":"org.jetbrains.exposed.v1.core.IColumnType.valueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-column-type/value-to-string.html","searchKeys":["valueToString","open fun valueToString(value: T?): String","org.jetbrains.exposed.v1.core.IColumnType.valueToString"]},{"name":"open fun varcharType(colLength: Int): String","description":"org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.varcharType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-data-type-provider/varchar-type.html","searchKeys":["varcharType","open fun varcharType(colLength: Int): String","org.jetbrains.exposed.v1.core.vendors.DataTypeProvider.varcharType"]},{"name":"open fun withDistinct(value: Boolean = true): T","description":"org.jetbrains.exposed.v1.core.AbstractQuery.withDistinct","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/with-distinct.html","searchKeys":["withDistinct","open fun withDistinct(value: Boolean = true): T","org.jetbrains.exposed.v1.core.AbstractQuery.withDistinct"]},{"name":"open infix fun <ID : EntityID<CompositeID>> Column<ID>.inList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun <ID : EntityID<CompositeID>> Column<ID>.inList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun <ID : EntityID<CompositeID>> Column<ID>.notInList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun <ID : EntityID<CompositeID>> Column<ID>.notInList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.eq(other: Expression<V>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq.html","searchKeys":["eq","open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.eq(other: Expression<V>): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq"]},{"name":"open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.eq(t: V): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq.html","searchKeys":["eq","open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.eq(t: V): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq"]},{"name":"open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.isDistinctFrom(other: Expression<in V>): IsDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-distinct-from.html","searchKeys":["isDistinctFrom","open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.isDistinctFrom(other: Expression<in V>): IsDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom"]},{"name":"open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.isNotDistinctFrom(other: Expression<in V>): IsNotDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-not-distinct-from.html","searchKeys":["isNotDistinctFrom","open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.isNotDistinctFrom(other: Expression<in V>): IsNotDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom"]},{"name":"open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.neq(other: Expression<V>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/neq.html","searchKeys":["neq","open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.neq(other: Expression<V>): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq"]},{"name":"open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.neq(t: V): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/neq.html","searchKeys":["neq","open infix fun <T : Any, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.neq(t: V): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq"]},{"name":"open infix fun <T : Any, ID : EntityID<T>?> Column<ID>.inList(list: Iterable<T>): InListOrNotInListBaseOp<EntityID<T>?>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun <T : Any, ID : EntityID<T>?> Column<ID>.inList(list: Iterable<T>): InListOrNotInListBaseOp<EntityID<T>?>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun <T : Any, ID : EntityID<T>?> Column<ID>.notInList(list: Iterable<T>): InListOrNotInListBaseOp<EntityID<T>?>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun <T : Any, ID : EntityID<T>?> Column<ID>.notInList(list: Iterable<T>): InListOrNotInListBaseOp<EntityID<T>?>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<V>.eq(other: ExpressionWithColumnType<E>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq.html","searchKeys":["eq","open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<V>.eq(other: ExpressionWithColumnType<E>): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq"]},{"name":"open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<V>.isNotDistinctFrom(other: ExpressionWithColumnType<E>): IsNotDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-not-distinct-from.html","searchKeys":["isNotDistinctFrom","open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<V>.isNotDistinctFrom(other: ExpressionWithColumnType<E>): IsNotDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom"]},{"name":"open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<V>.neq(other: ExpressionWithColumnType<E>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/neq.html","searchKeys":["neq","open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<V>.neq(other: ExpressionWithColumnType<E>): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq"]},{"name":"open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<in V>.isDistinctFrom(other: ExpressionWithColumnType<E>): IsDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-distinct-from.html","searchKeys":["isDistinctFrom","open infix fun <T : Any, V : T?, E : EntityID<T>?> Expression<in V>.isDistinctFrom(other: ExpressionWithColumnType<E>): IsDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom"]},{"name":"open infix fun <T : Any> Column<EntityID<T>>.isDistinctFrom(t: T): IsDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-distinct-from.html","searchKeys":["isDistinctFrom","open infix fun <T : Any> Column<EntityID<T>>.isDistinctFrom(t: T): IsDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom"]},{"name":"open infix fun <T : Any> Column<EntityID<T>>.isNotDistinctFrom(t: T): IsNotDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-not-distinct-from.html","searchKeys":["isNotDistinctFrom","open infix fun <T : Any> Column<EntityID<T>>.isNotDistinctFrom(t: T): IsNotDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.greater(other: Expression<in V>): GreaterOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater.html","searchKeys":["greater","open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.greater(other: Expression<in V>): GreaterOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.greaterEq(other: Expression<in V>): GreaterEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq.html","searchKeys":["greaterEq","open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.greaterEq(other: Expression<in V>): GreaterEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.less(other: Expression<in V>): LessOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less.html","searchKeys":["less","open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.less(other: Expression<in V>): LessOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.lessEq(other: Expression<in V>): LessEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq.html","searchKeys":["lessEq","open infix fun <T : Comparable<T>, E : EntityID<T>?, V : T?> ExpressionWithColumnType<E>.lessEq(other: Expression<in V>): LessEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.greater(other: Expression<E>): GreaterOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater.html","searchKeys":["greater","open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.greater(other: Expression<E>): GreaterOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.greaterEq(other: Expression<E>): GreaterEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq.html","searchKeys":["greaterEq","open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.greaterEq(other: Expression<E>): GreaterEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.less(other: Expression<E>): LessOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less.html","searchKeys":["less","open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.less(other: Expression<E>): LessOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less"]},{"name":"open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.lessEq(other: Expression<E>): LessEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq.html","searchKeys":["lessEq","open infix fun <T : Comparable<T>, E : EntityID<T>?> Expression<E>.lessEq(other: Expression<E>): LessEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq"]},{"name":"open infix fun <T : Comparable<T>, S : T?> Expression<in S>.greater(other: Expression<in S>): GreaterOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater.html","searchKeys":["greater","open infix fun <T : Comparable<T>, S : T?> Expression<in S>.greater(other: Expression<in S>): GreaterOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater"]},{"name":"open infix fun <T : Comparable<T>, S : T?> Expression<in S>.greaterEq(other: Expression<in S>): GreaterEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq.html","searchKeys":["greaterEq","open infix fun <T : Comparable<T>, S : T?> Expression<in S>.greaterEq(other: Expression<in S>): GreaterEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq"]},{"name":"open infix fun <T : Comparable<T>, S : T?> Expression<in S>.isDistinctFrom(other: Expression<in S>): IsDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-distinct-from.html","searchKeys":["isDistinctFrom","open infix fun <T : Comparable<T>, S : T?> Expression<in S>.isDistinctFrom(other: Expression<in S>): IsDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom"]},{"name":"open infix fun <T : Comparable<T>, S : T?> Expression<in S>.isNotDistinctFrom(other: Expression<in S>): IsNotDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-not-distinct-from.html","searchKeys":["isNotDistinctFrom","open infix fun <T : Comparable<T>, S : T?> Expression<in S>.isNotDistinctFrom(other: Expression<in S>): IsNotDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom"]},{"name":"open infix fun <T : Comparable<T>, S : T?> Expression<in S>.less(other: Expression<in S>): LessOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less.html","searchKeys":["less","open infix fun <T : Comparable<T>, S : T?> Expression<in S>.less(other: Expression<in S>): LessOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less"]},{"name":"open infix fun <T : Comparable<T>, S : T?> Expression<in S>.lessEq(other: Expression<in S>): LessEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq.html","searchKeys":["lessEq","open infix fun <T : Comparable<T>, S : T?> Expression<in S>.lessEq(other: Expression<in S>): LessEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq"]},{"name":"open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.greater(t: T): GreaterOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater.html","searchKeys":["greater","open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.greater(t: T): GreaterOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater"]},{"name":"open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.greaterEq(t: T): GreaterEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq.html","searchKeys":["greaterEq","open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.greaterEq(t: T): GreaterEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq"]},{"name":"open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.isDistinctFrom(t: T): IsDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-distinct-from.html","searchKeys":["isDistinctFrom","open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.isDistinctFrom(t: T): IsDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isDistinctFrom"]},{"name":"open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.isNotDistinctFrom(t: T): IsNotDistinctFromOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/is-not-distinct-from.html","searchKeys":["isNotDistinctFrom","open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.isNotDistinctFrom(t: T): IsNotDistinctFromOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.isNotDistinctFrom"]},{"name":"open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.less(t: T): LessOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less.html","searchKeys":["less","open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.less(t: T): LessOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less"]},{"name":"open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.lessEq(t: T): LessEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq.html","searchKeys":["lessEq","open infix fun <T : Comparable<T>, S : T?> ExpressionWithColumnType<in S>.lessEq(t: T): LessEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq"]},{"name":"open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.greater(other: ExpressionWithColumnType<E>): GreaterOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater.html","searchKeys":["greater","open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.greater(other: ExpressionWithColumnType<E>): GreaterOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater"]},{"name":"open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.greaterEq(other: ExpressionWithColumnType<E>): GreaterEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq.html","searchKeys":["greaterEq","open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.greaterEq(other: ExpressionWithColumnType<E>): GreaterEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq"]},{"name":"open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.less(other: ExpressionWithColumnType<E>): LessOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less.html","searchKeys":["less","open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.less(other: ExpressionWithColumnType<E>): LessOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less"]},{"name":"open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.lessEq(other: ExpressionWithColumnType<E>): LessEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq.html","searchKeys":["lessEq","open infix fun <T : Comparable<T>, V : T?, E : EntityID<T>?> Expression<V>.lessEq(other: ExpressionWithColumnType<E>): LessEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq"]},{"name":"open infix fun <T : Comparable<T>> Column<EntityID<T>>.greater(t: T): GreaterOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater.html","searchKeys":["greater","open infix fun <T : Comparable<T>> Column<EntityID<T>>.greater(t: T): GreaterOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greater"]},{"name":"open infix fun <T : Comparable<T>> Column<EntityID<T>>.greaterEq(t: T): GreaterEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq.html","searchKeys":["greaterEq","open infix fun <T : Comparable<T>> Column<EntityID<T>>.greaterEq(t: T): GreaterEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEq"]},{"name":"open infix fun <T : Comparable<T>> Column<EntityID<T>>.less(t: T): LessOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less.html","searchKeys":["less","open infix fun <T : Comparable<T>> Column<EntityID<T>>.less(t: T): LessOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.less"]},{"name":"open infix fun <T : Comparable<T>> Column<EntityID<T>>.lessEq(t: T): LessEqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq.html","searchKeys":["lessEq","open infix fun <T : Comparable<T>> Column<EntityID<T>>.lessEq(t: T): LessEqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEq"]},{"name":"open infix fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> Expression<S>.mod(other: ExpressionWithColumnType<ID>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/mod.html","searchKeys":["mod","open infix fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> Expression<S>.mod(other: ExpressionWithColumnType<ID>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod"]},{"name":"open infix fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.mod(other: Expression<S>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/mod.html","searchKeys":["mod","open infix fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.mod(other: Expression<S>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod"]},{"name":"open infix fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.mod(other: S): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/mod.html","searchKeys":["mod","open infix fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.mod(other: S): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod"]},{"name":"open infix fun <T : Number?, S : Number> ExpressionWithColumnType<T>.mod(other: Expression<S>): ModOp<T, S, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/mod.html","searchKeys":["mod","open infix fun <T : Number?, S : Number> ExpressionWithColumnType<T>.mod(other: Expression<S>): ModOp<T, S, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod"]},{"name":"open infix fun <T : Number?, S : T> ExpressionWithColumnType<T>.mod(t: S): ModOp<T, S, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/mod.html","searchKeys":["mod","open infix fun <T : Number?, S : T> ExpressionWithColumnType<T>.mod(t: S): ModOp<T, S, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.mod"]},{"name":"open infix fun <T : String?> Expression<T>.like(expression: ExpressionWithColumnType<String>): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/like.html","searchKeys":["like","open infix fun <T : String?> Expression<T>.like(expression: ExpressionWithColumnType<String>): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like"]},{"name":"open infix fun <T : String?> Expression<T>.like(pattern: LikePattern): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/like.html","searchKeys":["like","open infix fun <T : String?> Expression<T>.like(pattern: LikePattern): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like"]},{"name":"open infix fun <T : String?> Expression<T>.like(pattern: String): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/like.html","searchKeys":["like","open infix fun <T : String?> Expression<T>.like(pattern: String): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like"]},{"name":"open infix fun <T : String?> Expression<T>.match(pattern: String): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.match","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/match.html","searchKeys":["match","open infix fun <T : String?> Expression<T>.match(pattern: String): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.match"]},{"name":"open infix fun <T : String?> Expression<T>.notLike(expression: ExpressionWithColumnType<String>): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-like.html","searchKeys":["notLike","open infix fun <T : String?> Expression<T>.notLike(expression: ExpressionWithColumnType<String>): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike"]},{"name":"open infix fun <T : String?> Expression<T>.notLike(pattern: LikePattern): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-like.html","searchKeys":["notLike","open infix fun <T : String?> Expression<T>.notLike(pattern: LikePattern): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike"]},{"name":"open infix fun <T : String?> Expression<T>.notLike(pattern: String): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-like.html","searchKeys":["notLike","open infix fun <T : String?> Expression<T>.notLike(pattern: String): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike"]},{"name":"open infix fun <T : String?> Expression<T>.regexp(pattern: String): RegexpOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.regexp","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/regexp.html","searchKeys":["regexp","open infix fun <T : String?> Expression<T>.regexp(pattern: String): RegexpOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.regexp"]},{"name":"open infix fun <T, S1 : T?, S2 : T?> Expression<in S1>.eq(other: Expression<in S2>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq.html","searchKeys":["eq","open infix fun <T, S1 : T?, S2 : T?> Expression<in S1>.eq(other: Expression<in S2>): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq"]},{"name":"open infix fun <T, S1 : T?, S2 : T?> Expression<in S1>.neq(other: Expression<in S2>): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/neq.html","searchKeys":["neq","open infix fun <T, S1 : T?, S2 : T?> Expression<in S1>.neq(other: Expression<in S2>): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq"]},{"name":"open infix fun <T1, T2, T3> Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>.inList(list: Iterable<Triple<T1, T2, T3>>): InListOrNotInListBaseOp<Triple<T1, T2, T3>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun <T1, T2, T3> Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>.inList(list: Iterable<Triple<T1, T2, T3>>): InListOrNotInListBaseOp<Triple<T1, T2, T3>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun <T1, T2, T3> Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>.notInList(list: Iterable<Triple<T1, T2, T3>>): InListOrNotInListBaseOp<Triple<T1, T2, T3>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun <T1, T2, T3> Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>.notInList(list: Iterable<Triple<T1, T2, T3>>): InListOrNotInListBaseOp<Triple<T1, T2, T3>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix fun <T1, T2> Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>.inList(list: Iterable<Pair<T1, T2>>): InListOrNotInListBaseOp<Pair<T1, T2>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun <T1, T2> Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>.inList(list: Iterable<Pair<T1, T2>>): InListOrNotInListBaseOp<Pair<T1, T2>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun <T1, T2> Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>.notInList(list: Iterable<Pair<T1, T2>>): InListOrNotInListBaseOp<Pair<T1, T2>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun <T1, T2> Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>.notInList(list: Iterable<Pair<T1, T2>>): InListOrNotInListBaseOp<Pair<T1, T2>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix fun <T> CompositeColumn<T>.eq(t: T): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq.html","searchKeys":["eq","open infix fun <T> CompositeColumn<T>.eq(t: T): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq"]},{"name":"open infix fun <T> Expression<T>.eqSubQuery(query: AbstractQuery<*>): EqSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eqSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq-sub-query.html","searchKeys":["eqSubQuery","open infix fun <T> Expression<T>.eqSubQuery(query: AbstractQuery<*>): EqSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eqSubQuery"]},{"name":"open infix fun <T> Expression<T>.greaterEqSubQuery(query: AbstractQuery<*>): GreaterEqSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEqSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-eq-sub-query.html","searchKeys":["greaterEqSubQuery","open infix fun <T> Expression<T>.greaterEqSubQuery(query: AbstractQuery<*>): GreaterEqSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterEqSubQuery"]},{"name":"open infix fun <T> Expression<T>.greaterSubQuery(query: AbstractQuery<*>): GreaterSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/greater-sub-query.html","searchKeys":["greaterSubQuery","open infix fun <T> Expression<T>.greaterSubQuery(query: AbstractQuery<*>): GreaterSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.greaterSubQuery"]},{"name":"open infix fun <T> Expression<T>.inSubQuery(query: AbstractQuery<*>): InSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-sub-query.html","searchKeys":["inSubQuery","open infix fun <T> Expression<T>.inSubQuery(query: AbstractQuery<*>): InSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inSubQuery"]},{"name":"open infix fun <T> Expression<T>.lessEqSubQuery(query: AbstractQuery<*>): LessEqSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEqSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-eq-sub-query.html","searchKeys":["lessEqSubQuery","open infix fun <T> Expression<T>.lessEqSubQuery(query: AbstractQuery<*>): LessEqSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessEqSubQuery"]},{"name":"open infix fun <T> Expression<T>.lessSubQuery(query: AbstractQuery<*>): LessSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/less-sub-query.html","searchKeys":["lessSubQuery","open infix fun <T> Expression<T>.lessSubQuery(query: AbstractQuery<*>): LessSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.lessSubQuery"]},{"name":"open infix fun <T> Expression<T>.notEqSubQuery(query: AbstractQuery<*>): NotEqSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notEqSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-eq-sub-query.html","searchKeys":["notEqSubQuery","open infix fun <T> Expression<T>.notEqSubQuery(query: AbstractQuery<*>): NotEqSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notEqSubQuery"]},{"name":"open infix fun <T> Expression<T>.notInSubQuery(query: AbstractQuery<*>): NotInSubQueryOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInSubQuery","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-sub-query.html","searchKeys":["notInSubQuery","open infix fun <T> Expression<T>.notInSubQuery(query: AbstractQuery<*>): NotInSubQueryOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInSubQuery"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.bitwiseAnd(t: Expression<T>): AndBitOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseAnd","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/bitwise-and.html","searchKeys":["bitwiseAnd","open infix fun <T> ExpressionWithColumnType<T>.bitwiseAnd(t: Expression<T>): AndBitOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseAnd"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.bitwiseAnd(t: T): AndBitOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseAnd","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/bitwise-and.html","searchKeys":["bitwiseAnd","open infix fun <T> ExpressionWithColumnType<T>.bitwiseAnd(t: T): AndBitOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseAnd"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.bitwiseOr(t: Expression<T>): OrBitOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseOr","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/bitwise-or.html","searchKeys":["bitwiseOr","open infix fun <T> ExpressionWithColumnType<T>.bitwiseOr(t: Expression<T>): OrBitOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseOr"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.bitwiseOr(t: T): OrBitOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseOr","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/bitwise-or.html","searchKeys":["bitwiseOr","open infix fun <T> ExpressionWithColumnType<T>.bitwiseOr(t: T): OrBitOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseOr"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.bitwiseXor(t: Expression<T>): XorBitOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseXor","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/bitwise-xor.html","searchKeys":["bitwiseXor","open infix fun <T> ExpressionWithColumnType<T>.bitwiseXor(t: Expression<T>): XorBitOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseXor"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.bitwiseXor(t: T): XorBitOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseXor","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/bitwise-xor.html","searchKeys":["bitwiseXor","open infix fun <T> ExpressionWithColumnType<T>.bitwiseXor(t: T): XorBitOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.bitwiseXor"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.eq(t: T): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/eq.html","searchKeys":["eq","open infix fun <T> ExpressionWithColumnType<T>.eq(t: T): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.eq"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.hasFlag(t: Expression<T>): EqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.hasFlag","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/has-flag.html","searchKeys":["hasFlag","open infix fun <T> ExpressionWithColumnType<T>.hasFlag(t: Expression<T>): EqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.hasFlag"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.hasFlag(t: T): EqOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.hasFlag","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/has-flag.html","searchKeys":["hasFlag","open infix fun <T> ExpressionWithColumnType<T>.hasFlag(t: T): EqOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.hasFlag"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.inList(list: Iterable<T>): InListOrNotInListBaseOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun <T> ExpressionWithColumnType<T>.inList(list: Iterable<T>): InListOrNotInListBaseOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.inTable(table: Table): InTableOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inTable","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-table.html","searchKeys":["inTable","open infix fun <T> ExpressionWithColumnType<T>.inTable(table: Table): InTableOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inTable"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.neq(other: T): Op<Boolean>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/neq.html","searchKeys":["neq","open infix fun <T> ExpressionWithColumnType<T>.neq(other: T): Op<Boolean>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.neq"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.notInList(list: Iterable<T>): InListOrNotInListBaseOp<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun <T> ExpressionWithColumnType<T>.notInList(list: Iterable<T>): InListOrNotInListBaseOp<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix fun <T> ExpressionWithColumnType<T>.notInTable(table: Table): InTableOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInTable","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-table.html","searchKeys":["notInTable","open infix fun <T> ExpressionWithColumnType<T>.notInTable(table: Table): InTableOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInTable"]},{"name":"open infix fun Expression<EntityID<String>>.like(expression: ExpressionWithColumnType<String>): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/like.html","searchKeys":["like","open infix fun Expression<EntityID<String>>.like(expression: ExpressionWithColumnType<String>): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like"]},{"name":"open infix fun Expression<EntityID<String>>.like(pattern: LikePattern): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/like.html","searchKeys":["like","open infix fun Expression<EntityID<String>>.like(pattern: LikePattern): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like"]},{"name":"open infix fun Expression<EntityID<String>>.like(pattern: String): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/like.html","searchKeys":["like","open infix fun Expression<EntityID<String>>.like(pattern: String): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.like"]},{"name":"open infix fun Expression<EntityID<String>>.notLike(expression: ExpressionWithColumnType<String>): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-like.html","searchKeys":["notLike","open infix fun Expression<EntityID<String>>.notLike(expression: ExpressionWithColumnType<String>): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike"]},{"name":"open infix fun Expression<EntityID<String>>.notLike(pattern: LikePattern): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-like.html","searchKeys":["notLike","open infix fun Expression<EntityID<String>>.notLike(pattern: LikePattern): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike"]},{"name":"open infix fun Expression<EntityID<String>>.notLike(pattern: String): LikeEscapeOp","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-like.html","searchKeys":["notLike","open infix fun Expression<EntityID<String>>.notLike(pattern: String): LikeEscapeOp","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notLike"]},{"name":"open infix fun List<Column<*>>.inList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun List<Column<*>>.inList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun List<Column<*>>.inList(list: Iterable<List<*>>): InListOrNotInListBaseOp<List<*>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/in-list.html","searchKeys":["inList","open infix fun List<Column<*>>.inList(list: Iterable<List<*>>): InListOrNotInListBaseOp<List<*>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.inList"]},{"name":"open infix fun List<Column<*>>.notInList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun List<Column<*>>.notInList(list: Iterable<CompositeID>): InListOrNotInListBaseOp<List<*>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix fun List<Column<*>>.notInList(list: Iterable<List<*>>): InListOrNotInListBaseOp<List<*>>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/not-in-list.html","searchKeys":["notInList","open infix fun List<Column<*>>.notInList(list: Iterable<List<*>>): InListOrNotInListBaseOp<List<*>>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.notInList"]},{"name":"open infix operator fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> Expression<S>.rem(other: ExpressionWithColumnType<ID>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/rem.html","searchKeys":["rem","open infix operator fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> Expression<S>.rem(other: ExpressionWithColumnType<ID>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem"]},{"name":"open infix operator fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.rem(other: Expression<S>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/rem.html","searchKeys":["rem","open infix operator fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.rem(other: Expression<S>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem"]},{"name":"open infix operator fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.rem(other: S): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/rem.html","searchKeys":["rem","open infix operator fun <T : Number, Comparable<T>, S : Number, ID : EntityID<T>?> ExpressionWithColumnType<ID>.rem(other: S): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem"]},{"name":"open infix operator fun <T : Number?, S : Number> ExpressionWithColumnType<T>.rem(other: Expression<S>): ModOp<T, S, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/rem.html","searchKeys":["rem","open infix operator fun <T : Number?, S : Number> ExpressionWithColumnType<T>.rem(other: Expression<S>): ModOp<T, S, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem"]},{"name":"open infix operator fun <T : Number?, S : T> ExpressionWithColumnType<T>.rem(t: S): ModOp<T, S, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/rem.html","searchKeys":["rem","open infix operator fun <T : Number?, S : T> ExpressionWithColumnType<T>.rem(t: S): ModOp<T, S, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.rem"]},{"name":"open infix operator fun <T, S : T> ExpressionWithColumnType<T>.div(other: Expression<S>): DivideOp<T, S>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.div","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/div.html","searchKeys":["div","open infix operator fun <T, S : T> ExpressionWithColumnType<T>.div(other: Expression<S>): DivideOp<T, S>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.div"]},{"name":"open infix operator fun <T, S : T> ExpressionWithColumnType<T>.minus(other: Expression<S>): MinusOp<T, S>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.minus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/minus.html","searchKeys":["minus","open infix operator fun <T, S : T> ExpressionWithColumnType<T>.minus(other: Expression<S>): MinusOp<T, S>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.minus"]},{"name":"open infix operator fun <T, S : T> ExpressionWithColumnType<T>.plus(other: Expression<S>): PlusOp<T, S>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/plus.html","searchKeys":["plus","open infix operator fun <T, S : T> ExpressionWithColumnType<T>.plus(other: Expression<S>): PlusOp<T, S>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus"]},{"name":"open infix operator fun <T, S : T> ExpressionWithColumnType<T>.times(other: Expression<S>): TimesOp<T, S>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.times","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/times.html","searchKeys":["times","open infix operator fun <T, S : T> ExpressionWithColumnType<T>.times(other: Expression<S>): TimesOp<T, S>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.times"]},{"name":"open infix operator fun <T> ExpressionWithColumnType<T>.div(t: T): DivideOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.div","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/div.html","searchKeys":["div","open infix operator fun <T> ExpressionWithColumnType<T>.div(t: T): DivideOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.div"]},{"name":"open infix operator fun <T> ExpressionWithColumnType<T>.minus(t: T): MinusOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.minus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/minus.html","searchKeys":["minus","open infix operator fun <T> ExpressionWithColumnType<T>.minus(t: T): MinusOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.minus"]},{"name":"open infix operator fun <T> ExpressionWithColumnType<T>.plus(t: T): PlusOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/plus.html","searchKeys":["plus","open infix operator fun <T> ExpressionWithColumnType<T>.plus(t: T): PlusOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus"]},{"name":"open infix operator fun <T> ExpressionWithColumnType<T>.times(t: T): TimesOp<T, T>","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.times","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/times.html","searchKeys":["times","open infix operator fun <T> ExpressionWithColumnType<T>.times(t: T): TimesOp<T, T>","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.times"]},{"name":"open infix operator fun Expression<String>.plus(value: Expression<String>): Concat","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/plus.html","searchKeys":["plus","open infix operator fun Expression<String>.plus(value: Expression<String>): Concat","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus"]},{"name":"open infix operator fun Expression<String>.plus(value: String): Concat","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/plus.html","searchKeys":["plus","open infix operator fun Expression<String>.plus(value: String): Concat","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus"]},{"name":"open infix operator fun String.plus(value: Expression<String>): Concat","description":"org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-i-sql-expression-builder/plus.html","searchKeys":["plus","open infix operator fun String.plus(value: Expression<String>): Concat","org.jetbrains.exposed.v1.core.ISqlExpressionBuilder.plus"]},{"name":"open infix override fun crossJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Join.crossJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/cross-join.html","searchKeys":["crossJoin","open infix override fun crossJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Join.crossJoin"]},{"name":"open infix override fun crossJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.QueryAlias.crossJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/cross-join.html","searchKeys":["crossJoin","open infix override fun crossJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.QueryAlias.crossJoin"]},{"name":"open infix override fun crossJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Table.crossJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/cross-join.html","searchKeys":["crossJoin","open infix override fun crossJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Table.crossJoin"]},{"name":"open infix override fun fullJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Join.fullJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/full-join.html","searchKeys":["fullJoin","open infix override fun fullJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Join.fullJoin"]},{"name":"open infix override fun fullJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.QueryAlias.fullJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/full-join.html","searchKeys":["fullJoin","open infix override fun fullJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.QueryAlias.fullJoin"]},{"name":"open infix override fun fullJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Table.fullJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/full-join.html","searchKeys":["fullJoin","open infix override fun fullJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Table.fullJoin"]},{"name":"open infix override fun innerJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Join.innerJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/inner-join.html","searchKeys":["innerJoin","open infix override fun innerJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Join.innerJoin"]},{"name":"open infix override fun innerJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.QueryAlias.innerJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/inner-join.html","searchKeys":["innerJoin","open infix override fun innerJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.QueryAlias.innerJoin"]},{"name":"open infix override fun innerJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Table.innerJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/inner-join.html","searchKeys":["innerJoin","open infix override fun innerJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Table.innerJoin"]},{"name":"open infix override fun leftJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Join.leftJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/left-join.html","searchKeys":["leftJoin","open infix override fun leftJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Join.leftJoin"]},{"name":"open infix override fun leftJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.QueryAlias.leftJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/left-join.html","searchKeys":["leftJoin","open infix override fun leftJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.QueryAlias.leftJoin"]},{"name":"open infix override fun leftJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Table.leftJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/left-join.html","searchKeys":["leftJoin","open infix override fun leftJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Table.leftJoin"]},{"name":"open infix override fun rightJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Join.rightJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/right-join.html","searchKeys":["rightJoin","open infix override fun rightJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Join.rightJoin"]},{"name":"open infix override fun rightJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.QueryAlias.rightJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/right-join.html","searchKeys":["rightJoin","open infix override fun rightJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.QueryAlias.rightJoin"]},{"name":"open infix override fun rightJoin(otherTable: ColumnSet): Join","description":"org.jetbrains.exposed.v1.core.Table.rightJoin","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/right-join.html","searchKeys":["rightJoin","open infix override fun rightJoin(otherTable: ColumnSet): Join","org.jetbrains.exposed.v1.core.Table.rightJoin"]},{"name":"open operator fun <S> set(column: Column<S>, value: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","open operator fun <S> set(column: Column<S>, value: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"open operator fun <S> set(column: Column<S>, value: S)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","open operator fun <S> set(column: Column<S>, value: S)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"open operator fun <S> set(column: CompositeColumn<S>, value: S)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","open operator fun <S> set(column: CompositeColumn<S>, value: S)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"open operator fun <T, S : T?, E : Expression<S>> set(column: Column<T>, value: E)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","open operator fun <T, S : T?, E : Expression<S>> set(column: Column<T>, value: E)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"open operator fun contains(column: Column<*>): Boolean","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.contains","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/contains.html","searchKeys":["contains","open operator fun contains(column: Column<*>): Boolean","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.contains"]},{"name":"open operator override fun <S> set(column: Column<S>, value: S)","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/set.html","searchKeys":["set","open operator override fun <S> set(column: Column<S>, value: S)","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.set"]},{"name":"open operator override fun compareTo(other: Column<*>): Int","description":"org.jetbrains.exposed.v1.core.Column.compareTo","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Column<*>): Int","org.jetbrains.exposed.v1.core.Column.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.Alias.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.Alias.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.AutoIncColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.BinaryColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.BinaryColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.CharColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.CharColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.Column.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.Column.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.ColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.ColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.DecimalColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.EntityIDColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.EnumerationColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.Expression.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.Expression.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.Index.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.Index.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.StringColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.StringColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.Table.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.Table.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.equals","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.VarCharColumnType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.equals","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.dao.id.CompositeID.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID.equals","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.dao.id.EntityID.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.equals","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.equals"]},{"name":"open operator override fun getValue(thisRef: Any?, property: KProperty<*>): T?","description":"org.jetbrains.exposed.v1.core.transactions.TransactionStore.getValue","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-store/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: Any?, property: KProperty<*>): T?","org.jetbrains.exposed.v1.core.transactions.TransactionStore.getValue"]},{"name":"open operator override fun setValue(thisRef: Any?, property: KProperty<*>, value: T?)","description":"org.jetbrains.exposed.v1.core.transactions.TransactionStore.setValue","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-store/set-value.html","searchKeys":["setValue","open operator override fun setValue(thisRef: Any?, property: KProperty<*>, value: T?)","org.jetbrains.exposed.v1.core.transactions.TransactionStore.setValue"]},{"name":"open override fun <T, S : T?> update(column: Column<T>, value: Expression<S>): Nothing","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.update","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/update.html","searchKeys":["update","open override fun <T, S : T?> update(column: Column<T>, value: Expression<S>): Nothing","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.update"]},{"name":"open override fun QueryBuilder.registerSubSearchArgument(subSearch: AbstractQuery<*>)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromSubQueryOp.registerSubSearchArgument","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-sub-query-op/register-sub-search-argument.html","searchKeys":["registerSubSearchArgument","open override fun QueryBuilder.registerSubSearchArgument(subSearch: AbstractQuery<*>)","org.jetbrains.exposed.v1.core.ops.AllAnyFromSubQueryOp.registerSubSearchArgument"]},{"name":"open override fun QueryBuilder.registerSubSearchArgument(subSearch: Expression<T>)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromExpressionOp.registerSubSearchArgument","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-expression-op/register-sub-search-argument.html","searchKeys":["registerSubSearchArgument","open override fun QueryBuilder.registerSubSearchArgument(subSearch: Expression<T>)","org.jetbrains.exposed.v1.core.ops.AllAnyFromExpressionOp.registerSubSearchArgument"]},{"name":"open override fun QueryBuilder.registerSubSearchArgument(subSearch: List<T>)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromArrayOp.registerSubSearchArgument","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-array-op/register-sub-search-argument.html","searchKeys":["registerSubSearchArgument","open override fun QueryBuilder.registerSubSearchArgument(subSearch: List<T>)","org.jetbrains.exposed.v1.core.ops.AllAnyFromArrayOp.registerSubSearchArgument"]},{"name":"open override fun QueryBuilder.registerSubSearchArgument(subSearch: Table)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromTableOp.registerSubSearchArgument","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-table-op/register-sub-search-argument.html","searchKeys":["registerSubSearchArgument","open override fun QueryBuilder.registerSubSearchArgument(subSearch: Table)","org.jetbrains.exposed.v1.core.ops.AllAnyFromTableOp.registerSubSearchArgument"]},{"name":"open override fun addPrimaryKey(table: Table, pkName: String?, vararg pkColumns: Column<*>): String","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.addPrimaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/add-primary-key.html","searchKeys":["addPrimaryKey","open override fun addPrimaryKey(table: Table, pkName: String?, vararg pkColumns: Column<*>): String","org.jetbrains.exposed.v1.core.vendors.VendorDialect.addPrimaryKey"]},{"name":"open override fun afterExecution(transaction: Transaction, contexts: List<StatementContext>, executedStatement: PreparedStatementApi)","description":"org.jetbrains.exposed.v1.core.CompositeSqlLogger.afterExecution","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-sql-logger/after-execution.html","searchKeys":["afterExecution","open override fun afterExecution(transaction: Transaction, contexts: List<StatementContext>, executedStatement: PreparedStatementApi)","org.jetbrains.exposed.v1.core.CompositeSqlLogger.afterExecution"]},{"name":"open override fun areEquivalentColumnTypes(columnMetadataSqlType: String, columnMetadataJdbcType: Int, columnType: String): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.areEquivalentColumnTypes","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/are-equivalent-column-types.html","searchKeys":["areEquivalentColumnTypes","open override fun areEquivalentColumnTypes(columnMetadataSqlType: String, columnMetadataJdbcType: Int, columnType: String): Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.areEquivalentColumnTypes"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.ExplainQuery.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-query/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.ExplainQuery.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.DeleteStatement.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-select-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.MergeStatement.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.ReturningStatement.arguments"]},{"name":"open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): Iterable<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.UpdateStatement.arguments"]},{"name":"open override fun arguments(): List<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): List<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.arguments"]},{"name":"open override fun arguments(): List<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): List<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.InsertStatement.arguments"]},{"name":"open override fun arguments(): List<Iterable<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): List<Iterable<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.UpsertStatement.arguments"]},{"name":"open override fun arguments(): List<List<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.AbstractQuery.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/arguments.html","searchKeys":["arguments","open override fun arguments(): List<List<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.AbstractQuery.arguments"]},{"name":"open override fun arguments(): List<List<Pair<IColumnType<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-s-q-l-server-batch-insert-statement/arguments.html","searchKeys":["arguments","open override fun arguments(): List<List<Pair<IColumnType<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.arguments"]},{"name":"open override fun createDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.createDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/create-database.html","searchKeys":["createDatabase","open override fun createDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.H2Dialect.createDatabase"]},{"name":"open override fun createDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.createDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/create-database.html","searchKeys":["createDatabase","open override fun createDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.createDatabase"]},{"name":"open override fun createDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.createDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/create-database.html","searchKeys":["createDatabase","open override fun createDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.createDatabase"]},{"name":"open override fun createDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.createDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/create-database.html","searchKeys":["createDatabase","open override fun createDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.createDatabase"]},{"name":"open override fun createDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.createDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/create-database.html","searchKeys":["createDatabase","open override fun createDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.createDatabase"]},{"name":"open override fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/create-index.html","searchKeys":["createIndex","open override fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.H2Dialect.createIndex"]},{"name":"open override fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/create-index.html","searchKeys":["createIndex","open override fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.createIndex"]},{"name":"open override fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/create-index.html","searchKeys":["createIndex","open override fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.createIndex"]},{"name":"open override fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/create-index.html","searchKeys":["createIndex","open override fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.createIndex"]},{"name":"open override fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/create-index.html","searchKeys":["createIndex","open override fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.createIndex"]},{"name":"open override fun createIndex(index: Index): String","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.createIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/create-index.html","searchKeys":["createIndex","open override fun createIndex(index: Index): String","org.jetbrains.exposed.v1.core.vendors.VendorDialect.createIndex"]},{"name":"open override fun createSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.createSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/create-schema.html","searchKeys":["createSchema","open override fun createSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.createSchema"]},{"name":"open override fun createSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.createSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/create-schema.html","searchKeys":["createSchema","open override fun createSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.createSchema"]},{"name":"open override fun createSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.createSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/create-schema.html","searchKeys":["createSchema","open override fun createSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.createSchema"]},{"name":"open override fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.CheckConstraint.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/create-statement.html","searchKeys":["createStatement","open override fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.CheckConstraint.createStatement"]},{"name":"open override fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Column.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/create-statement.html","searchKeys":["createStatement","open override fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.Column.createStatement"]},{"name":"open override fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/create-statement.html","searchKeys":["createStatement","open override fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.createStatement"]},{"name":"open override fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Index.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/create-statement.html","searchKeys":["createStatement","open override fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.Index.createStatement"]},{"name":"open override fun createStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Table.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/create-statement.html","searchKeys":["createStatement","open override fun createStatement(): List<String>","org.jetbrains.exposed.v1.core.Table.createStatement"]},{"name":"open override fun createStatement(): Nothing","description":"org.jetbrains.exposed.v1.core.Alias.createStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/create-statement.html","searchKeys":["createStatement","open override fun createStatement(): Nothing","org.jetbrains.exposed.v1.core.Alias.createStatement"]},{"name":"open override fun describe(s: Transaction, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Join.describe","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/describe.html","searchKeys":["describe","open override fun describe(s: Transaction, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Join.describe"]},{"name":"open override fun describe(s: Transaction, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.QueryAlias.describe","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/describe.html","searchKeys":["describe","open override fun describe(s: Transaction, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.QueryAlias.describe"]},{"name":"open override fun describe(s: Transaction, queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Table.describe","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/describe.html","searchKeys":["describe","open override fun describe(s: Transaction, queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Table.describe"]},{"name":"open override fun dropDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.dropDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/drop-database.html","searchKeys":["dropDatabase","open override fun dropDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.H2Dialect.dropDatabase"]},{"name":"open override fun dropDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.dropDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/drop-database.html","searchKeys":["dropDatabase","open override fun dropDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.dropDatabase"]},{"name":"open override fun dropDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.dropDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/drop-database.html","searchKeys":["dropDatabase","open override fun dropDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.dropDatabase"]},{"name":"open override fun dropDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.dropDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/drop-database.html","searchKeys":["dropDatabase","open override fun dropDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.dropDatabase"]},{"name":"open override fun dropDatabase(name: String): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.dropDatabase","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/drop-database.html","searchKeys":["dropDatabase","open override fun dropDatabase(name: String): String","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.dropDatabase"]},{"name":"open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/drop-index.html","searchKeys":["dropIndex","open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.dropIndex"]},{"name":"open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/drop-index.html","searchKeys":["dropIndex","open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.dropIndex"]},{"name":"open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/drop-index.html","searchKeys":["dropIndex","open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.dropIndex"]},{"name":"open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/drop-index.html","searchKeys":["dropIndex","open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.dropIndex"]},{"name":"open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/drop-index.html","searchKeys":["dropIndex","open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.dropIndex"]},{"name":"open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.dropIndex","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/drop-index.html","searchKeys":["dropIndex","open override fun dropIndex(tableName: String, indexName: String, isUnique: Boolean, isPartialOrFunctional: Boolean): String","org.jetbrains.exposed.v1.core.vendors.VendorDialect.dropIndex"]},{"name":"open override fun dropSchema(schema: Schema, cascade: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.dropSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/drop-schema.html","searchKeys":["dropSchema","open override fun dropSchema(schema: Schema, cascade: Boolean): String","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.dropSchema"]},{"name":"open override fun dropSchema(schema: Schema, cascade: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.dropSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/drop-schema.html","searchKeys":["dropSchema","open override fun dropSchema(schema: Schema, cascade: Boolean): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.dropSchema"]},{"name":"open override fun dropSchema(schema: Schema, cascade: Boolean): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.dropSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/drop-schema.html","searchKeys":["dropSchema","open override fun dropSchema(schema: Schema, cascade: Boolean): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.dropSchema"]},{"name":"open override fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.CheckConstraint.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/drop-statement.html","searchKeys":["dropStatement","open override fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.CheckConstraint.dropStatement"]},{"name":"open override fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Column.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/drop-statement.html","searchKeys":["dropStatement","open override fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.Column.dropStatement"]},{"name":"open override fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/drop-statement.html","searchKeys":["dropStatement","open override fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.dropStatement"]},{"name":"open override fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Index.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/drop-statement.html","searchKeys":["dropStatement","open override fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.Index.dropStatement"]},{"name":"open override fun dropStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Table.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/drop-statement.html","searchKeys":["dropStatement","open override fun dropStatement(): List<String>","org.jetbrains.exposed.v1.core.Table.dropStatement"]},{"name":"open override fun dropStatement(): Nothing","description":"org.jetbrains.exposed.v1.core.Alias.dropStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/drop-statement.html","searchKeys":["dropStatement","open override fun dropStatement(): Nothing","org.jetbrains.exposed.v1.core.Alias.dropStatement"]},{"name":"open override fun getErrorCode(): Int","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException.getErrorCode","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/get-error-code.html","searchKeys":["getErrorCode","open override fun getErrorCode(): Int","org.jetbrains.exposed.v1.exceptions.ExposedSQLException.getErrorCode"]},{"name":"open override fun getRealColumns(): List<Column<*>>","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn.getRealColumns","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/get-real-columns.html","searchKeys":["getRealColumns","open override fun getRealColumns(): List<Column<*>>","org.jetbrains.exposed.v1.core.BiCompositeColumn.getRealColumns"]},{"name":"open override fun getRealColumnsWithValues(compositeValue: T): Map<Column<*>, Any?>","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn.getRealColumnsWithValues","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/get-real-columns-with-values.html","searchKeys":["getRealColumnsWithValues","open override fun getRealColumnsWithValues(compositeValue: T): Map<Column<*>, Any?>","org.jetbrains.exposed.v1.core.BiCompositeColumn.getRealColumnsWithValues"]},{"name":"open override fun getSQLState(): String","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException.getSQLState","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/get-s-q-l-state.html","searchKeys":["getSQLState","open override fun getSQLState(): String","org.jetbrains.exposed.v1.exceptions.ExposedSQLException.getSQLState"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.Alias.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.Alias.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.AutoIncColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.BinaryColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.BinaryColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.CharColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.CharColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.Column.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.Column.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.ColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.ColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.DecimalColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.EntityIDColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.EnumerationColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.Expression.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.Expression.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.Index.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.Index.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.StringColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.StringColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.Table.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.Table.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.VarCharColumnType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.dao.id.CompositeID.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.dao.id.EntityID.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.hashCode","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.hashCode"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.isAllowedAsColumnDefault"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.isAllowedAsColumnDefault"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.isAllowedAsColumnDefault"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.OracleDialect.isAllowedAsColumnDefault"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.isAllowedAsColumnDefault"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.isAllowedAsColumnDefault"]},{"name":"open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.isAllowedAsColumnDefault","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/is-allowed-as-column-default.html","searchKeys":["isAllowedAsColumnDefault","open override fun isAllowedAsColumnDefault(e: Expression<*>): Boolean","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.isAllowedAsColumnDefault"]},{"name":"open override fun isFractionDateTimeSupported(): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.isFractionDateTimeSupported","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/is-fraction-date-time-supported.html","searchKeys":["isFractionDateTimeSupported","open override fun isFractionDateTimeSupported(): Boolean","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.isFractionDateTimeSupported"]},{"name":"open override fun isTimeZoneOffsetSupported(): Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.isTimeZoneOffsetSupported","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/is-time-zone-offset-supported.html","searchKeys":["isTimeZoneOffsetSupported","open override fun isTimeZoneOffsetSupported(): Boolean","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.isTimeZoneOffsetSupported"]},{"name":"open override fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>?, otherColumn: Expression<*>?, lateral: Boolean, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>?): Join","description":"org.jetbrains.exposed.v1.core.Join.join","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/join.html","searchKeys":["join","open override fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>?, otherColumn: Expression<*>?, lateral: Boolean, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>?): Join","org.jetbrains.exposed.v1.core.Join.join"]},{"name":"open override fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>?, otherColumn: Expression<*>?, lateral: Boolean, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>?): Join","description":"org.jetbrains.exposed.v1.core.QueryAlias.join","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/join.html","searchKeys":["join","open override fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>?, otherColumn: Expression<*>?, lateral: Boolean, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>?): Join","org.jetbrains.exposed.v1.core.QueryAlias.join"]},{"name":"open override fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>?, otherColumn: Expression<*>?, lateral: Boolean, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>?): Join","description":"org.jetbrains.exposed.v1.core.Table.join","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/join.html","searchKeys":["join","open override fun join(otherTable: ColumnSet, joinType: JoinType, onColumn: Expression<*>?, otherColumn: Expression<*>?, lateral: Boolean, additionalConstraint: SqlExpressionBuilder.() -> Op<Boolean>?): Join","org.jetbrains.exposed.v1.core.Table.join"]},{"name":"open override fun listDatabases(): String","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.listDatabases","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/list-databases.html","searchKeys":["listDatabases","open override fun listDatabases(): String","org.jetbrains.exposed.v1.core.vendors.H2Dialect.listDatabases"]},{"name":"open override fun listDatabases(): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.listDatabases","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/list-databases.html","searchKeys":["listDatabases","open override fun listDatabases(): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.listDatabases"]},{"name":"open override fun listDatabases(): String","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.listDatabases","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/list-databases.html","searchKeys":["listDatabases","open override fun listDatabases(): String","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.listDatabases"]},{"name":"open override fun listDatabases(): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.listDatabases","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/list-databases.html","searchKeys":["listDatabases","open override fun listDatabases(): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.listDatabases"]},{"name":"open override fun listDatabases(): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.listDatabases","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/list-databases.html","searchKeys":["listDatabases","open override fun listDatabases(): String","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.listDatabases"]},{"name":"open override fun log(context: StatementContext, transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.CompositeSqlLogger.log","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-sql-logger/log.html","searchKeys":["log","open override fun log(context: StatementContext, transaction: Transaction)","org.jetbrains.exposed.v1.core.CompositeSqlLogger.log"]},{"name":"open override fun log(context: StatementContext, transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.Slf4jSqlDebugLogger.log","location":"exposed-core/org.jetbrains.exposed.v1.core/-slf4j-sql-debug-logger/log.html","searchKeys":["log","open override fun log(context: StatementContext, transaction: Transaction)","org.jetbrains.exposed.v1.core.Slf4jSqlDebugLogger.log"]},{"name":"open override fun log(context: StatementContext, transaction: Transaction)","description":"org.jetbrains.exposed.v1.core.StdOutSqlLogger.log","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-out-sql-logger/log.html","searchKeys":["log","open override fun log(context: StatementContext, transaction: Transaction)","org.jetbrains.exposed.v1.core.StdOutSqlLogger.log"]},{"name":"open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.modifyColumn","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/modify-column.html","searchKeys":["modifyColumn","open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.vendors.H2Dialect.modifyColumn"]},{"name":"open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.modifyColumn","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/modify-column.html","searchKeys":["modifyColumn","open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.vendors.OracleDialect.modifyColumn"]},{"name":"open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.modifyColumn","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/modify-column.html","searchKeys":["modifyColumn","open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.modifyColumn"]},{"name":"open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.modifyColumn","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/modify-column.html","searchKeys":["modifyColumn","open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.modifyColumn"]},{"name":"open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.modifyColumn","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/modify-column.html","searchKeys":["modifyColumn","open override fun modifyColumn(column: Column<*>, columnDiff: ColumnDiff): List<String>","org.jetbrains.exposed.v1.core.vendors.VendorDialect.modifyColumn"]},{"name":"open override fun modifyStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.CheckConstraint.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/modify-statement.html","searchKeys":["modifyStatement","open override fun modifyStatement(): List<String>","org.jetbrains.exposed.v1.core.CheckConstraint.modifyStatement"]},{"name":"open override fun modifyStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Column.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/modify-statement.html","searchKeys":["modifyStatement","open override fun modifyStatement(): List<String>","org.jetbrains.exposed.v1.core.Column.modifyStatement"]},{"name":"open override fun modifyStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/modify-statement.html","searchKeys":["modifyStatement","open override fun modifyStatement(): List<String>","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.modifyStatement"]},{"name":"open override fun modifyStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Index.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/modify-statement.html","searchKeys":["modifyStatement","open override fun modifyStatement(): List<String>","org.jetbrains.exposed.v1.core.Index.modifyStatement"]},{"name":"open override fun modifyStatement(): List<String>","description":"org.jetbrains.exposed.v1.core.Table.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/modify-statement.html","searchKeys":["modifyStatement","open override fun modifyStatement(): List<String>","org.jetbrains.exposed.v1.core.Table.modifyStatement"]},{"name":"open override fun modifyStatement(): Nothing","description":"org.jetbrains.exposed.v1.core.Alias.modifyStatement","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/modify-statement.html","searchKeys":["modifyStatement","open override fun modifyStatement(): Nothing","org.jetbrains.exposed.v1.core.Alias.modifyStatement"]},{"name":"open override fun nonNullValueAsDefaultString(value: Double): String","description":"org.jetbrains.exposed.v1.core.DoubleColumnType.nonNullValueAsDefaultString","location":"exposed-core/org.jetbrains.exposed.v1.core/-double-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: Double): String","org.jetbrains.exposed.v1.core.DoubleColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: Float): String","description":"org.jetbrains.exposed.v1.core.FloatColumnType.nonNullValueAsDefaultString","location":"exposed-core/org.jetbrains.exposed.v1.core/-float-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: Float): String","org.jetbrains.exposed.v1.core.FloatColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: R): String","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.nonNullValueAsDefaultString","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: R): String","org.jetbrains.exposed.v1.core.ArrayColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueToString(value: Boolean): String","description":"org.jetbrains.exposed.v1.core.BooleanColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Boolean): String","org.jetbrains.exposed.v1.core.BooleanColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: ByteArray): String","description":"org.jetbrains.exposed.v1.core.BasicBinaryColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-basic-binary-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: ByteArray): String","org.jetbrains.exposed.v1.core.BasicBinaryColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: Char): String","description":"org.jetbrains.exposed.v1.core.CharacterColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-character-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Char): String","org.jetbrains.exposed.v1.core.CharacterColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: EntityID<T>): String","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: EntityID<T>): String","org.jetbrains.exposed.v1.core.EntityIDColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: ExposedBlob): String","description":"org.jetbrains.exposed.v1.core.BlobColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: ExposedBlob): String","org.jetbrains.exposed.v1.core.BlobColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: R): String","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: R): String","org.jetbrains.exposed.v1.core.ArrayColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: String): String","description":"org.jetbrains.exposed.v1.core.StringColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: String): String","org.jetbrains.exposed.v1.core.StringColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: T): String","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: T): String","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: T): String","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: T): String","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: UUID): String","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.nonNullValueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: UUID): String","org.jetbrains.exposed.v1.core.UUIDColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: Boolean): Any","description":"org.jetbrains.exposed.v1.core.BooleanColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Boolean): Any","org.jetbrains.exposed.v1.core.BooleanColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: Char): Any","description":"org.jetbrains.exposed.v1.core.CharacterColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-character-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Char): Any","org.jetbrains.exposed.v1.core.CharacterColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: EntityID<T>): Any","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: EntityID<T>): Any","org.jetbrains.exposed.v1.core.EntityIDColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: R): Any","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: R): Any","org.jetbrains.exposed.v1.core.ArrayColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: T): Any","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: T): Any","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: T): Any","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: T): Any","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: T): Int","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: T): Int","org.jetbrains.exposed.v1.core.EnumerationColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: UByte): Any","description":"org.jetbrains.exposed.v1.core.UByteColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-byte-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: UByte): Any","org.jetbrains.exposed.v1.core.UByteColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: UInt): Any","description":"org.jetbrains.exposed.v1.core.UIntegerColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-integer-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: UInt): Any","org.jetbrains.exposed.v1.core.UIntegerColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: ULong): Any","description":"org.jetbrains.exposed.v1.core.ULongColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-long-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: ULong): Any","org.jetbrains.exposed.v1.core.ULongColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: UShort): Any","description":"org.jetbrains.exposed.v1.core.UShortColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-short-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: UShort): Any","org.jetbrains.exposed.v1.core.UShortColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: UUID): Any","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: UUID): Any","org.jetbrains.exposed.v1.core.UUIDColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: Wrapped & Any): Any","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.notNullValueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Wrapped & Any): Any","org.jetbrains.exposed.v1.core.ColumnWithTransform.notNullValueToDB"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal>","description":"org.jetbrains.exposed.v1.core.CumeDist.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-cume-dist/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal>","org.jetbrains.exposed.v1.core.CumeDist.over"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal>","description":"org.jetbrains.exposed.v1.core.PercentRank.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-percent-rank/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal>","org.jetbrains.exposed.v1.core.PercentRank.over"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal?>","description":"org.jetbrains.exposed.v1.core.Avg.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-avg/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal?>","org.jetbrains.exposed.v1.core.Avg.over"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal?>","description":"org.jetbrains.exposed.v1.core.StdDevPop.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-pop/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal?>","org.jetbrains.exposed.v1.core.StdDevPop.over"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal?>","description":"org.jetbrains.exposed.v1.core.StdDevSamp.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-samp/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal?>","org.jetbrains.exposed.v1.core.StdDevSamp.over"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal?>","description":"org.jetbrains.exposed.v1.core.VarPop.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-pop/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal?>","org.jetbrains.exposed.v1.core.VarPop.over"]},{"name":"open override fun over(): WindowFunctionDefinition<BigDecimal?>","description":"org.jetbrains.exposed.v1.core.VarSamp.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-samp/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<BigDecimal?>","org.jetbrains.exposed.v1.core.VarSamp.over"]},{"name":"open override fun over(): WindowFunctionDefinition<Int>","description":"org.jetbrains.exposed.v1.core.Ntile.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-ntile/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<Int>","org.jetbrains.exposed.v1.core.Ntile.over"]},{"name":"open override fun over(): WindowFunctionDefinition<Long>","description":"org.jetbrains.exposed.v1.core.Count.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-count/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<Long>","org.jetbrains.exposed.v1.core.Count.over"]},{"name":"open override fun over(): WindowFunctionDefinition<Long>","description":"org.jetbrains.exposed.v1.core.DenseRank.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-dense-rank/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<Long>","org.jetbrains.exposed.v1.core.DenseRank.over"]},{"name":"open override fun over(): WindowFunctionDefinition<Long>","description":"org.jetbrains.exposed.v1.core.Rank.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-rank/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<Long>","org.jetbrains.exposed.v1.core.Rank.over"]},{"name":"open override fun over(): WindowFunctionDefinition<Long>","description":"org.jetbrains.exposed.v1.core.RowNumber.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-row-number/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<Long>","org.jetbrains.exposed.v1.core.RowNumber.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.FirstValue.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-first-value/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.FirstValue.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T>","description":"org.jetbrains.exposed.v1.core.LastValue.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-last-value/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T>","org.jetbrains.exposed.v1.core.LastValue.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T?>","description":"org.jetbrains.exposed.v1.core.Lag.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T?>","org.jetbrains.exposed.v1.core.Lag.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T?>","description":"org.jetbrains.exposed.v1.core.Lead.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T?>","org.jetbrains.exposed.v1.core.Lead.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T?>","description":"org.jetbrains.exposed.v1.core.Max.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-max/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T?>","org.jetbrains.exposed.v1.core.Max.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T?>","description":"org.jetbrains.exposed.v1.core.Min.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-min/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T?>","org.jetbrains.exposed.v1.core.Min.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T?>","description":"org.jetbrains.exposed.v1.core.NthValue.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-nth-value/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T?>","org.jetbrains.exposed.v1.core.NthValue.over"]},{"name":"open override fun over(): WindowFunctionDefinition<T?>","description":"org.jetbrains.exposed.v1.core.Sum.over","location":"exposed-core/org.jetbrains.exposed.v1.core/-sum/over.html","searchKeys":["over","open override fun over(): WindowFunctionDefinition<T?>","org.jetbrains.exposed.v1.core.Sum.over"]},{"name":"open override fun parameterMarker(value: R?): String","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.parameterMarker","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/parameter-marker.html","searchKeys":["parameterMarker","open override fun parameterMarker(value: R?): String","org.jetbrains.exposed.v1.core.ArrayColumnType.parameterMarker"]},{"name":"open override fun parameterMarker(value: Wrapped?): String","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.parameterMarker","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/parameter-marker.html","searchKeys":["parameterMarker","open override fun parameterMarker(value: Wrapped?): String","org.jetbrains.exposed.v1.core.ColumnWithTransform.parameterMarker"]},{"name":"open override fun preciseType(): String","description":"org.jetbrains.exposed.v1.core.LargeTextColumnType.preciseType","location":"exposed-core/org.jetbrains.exposed.v1.core/-large-text-column-type/precise-type.html","searchKeys":["preciseType","open override fun preciseType(): String","org.jetbrains.exposed.v1.core.LargeTextColumnType.preciseType"]},{"name":"open override fun preciseType(): String","description":"org.jetbrains.exposed.v1.core.MediumTextColumnType.preciseType","location":"exposed-core/org.jetbrains.exposed.v1.core/-medium-text-column-type/precise-type.html","searchKeys":["preciseType","open override fun preciseType(): String","org.jetbrains.exposed.v1.core.MediumTextColumnType.preciseType"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.AbstractQuery.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.AbstractQuery.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.ExplainQuery.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-query/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.ExplainQuery.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.BatchReplaceStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-replace-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.BatchReplaceStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.DeleteStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.InsertStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-select-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.MergeTableStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-table-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.MergeTableStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.ReplaceSelectStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-replace-select-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.ReplaceSelectStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.ReplaceStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-replace-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.ReplaceStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.ReturningStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-s-q-l-server-batch-insert-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.UpdateStatement.prepareSQL"]},{"name":"open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.prepareSQL","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/prepare-s-q-l.html","searchKeys":["prepareSQL","open override fun prepareSQL(transaction: Transaction, prepared: Boolean): String","org.jetbrains.exposed.v1.core.statements.UpsertStatement.prepareSQL"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.ArrayColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.BlobColumnType.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.BlobColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.ColumnWithTransform.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.EntityIDColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.TextColumnType.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-text-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.TextColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.readObject","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.core.UUIDColumnType.readObject"]},{"name":"open override fun restoreValueFromParts(parts: Map<Column<*>, Any?>): T","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn.restoreValueFromParts","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/restore-value-from-parts.html","searchKeys":["restoreValueFromParts","open override fun restoreValueFromParts(parts: Map<Column<*>, Any?>): T","org.jetbrains.exposed.v1.core.BiCompositeColumn.restoreValueFromParts"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.ArrayColumnType.setParameter"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.BlobColumnType.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.BlobColumnType.setParameter"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.ColumnWithTransform.setParameter"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.UByteColumnType.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-byte-column-type/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.UByteColumnType.setParameter"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.UIntegerColumnType.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-integer-column-type/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.UIntegerColumnType.setParameter"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.core.UShortColumnType.setParameter","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-short-column-type/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.core.UShortColumnType.setParameter"]},{"name":"open override fun setSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.setSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/set-schema.html","searchKeys":["setSchema","open override fun setSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.setSchema"]},{"name":"open override fun setSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.setSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/set-schema.html","searchKeys":["setSchema","open override fun setSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.OracleDialect.setSchema"]},{"name":"open override fun setSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.setSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/set-schema.html","searchKeys":["setSchema","open override fun setSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.setSchema"]},{"name":"open override fun setSchema(schema: Schema): String","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.setSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/set-schema.html","searchKeys":["setSchema","open override fun setSchema(schema: Schema): String","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.setSchema"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.ArrayColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.AutoIncColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.BasicBinaryColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-basic-binary-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.BasicBinaryColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.BinaryColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.BinaryColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.BlobColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.BlobColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.BooleanColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.BooleanColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.ByteColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-byte-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.ByteColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.CharColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.CharColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.CharacterColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-character-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.CharacterColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.ColumnWithTransform.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.DecimalColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.DoubleColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-double-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.DoubleColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.EntityIDColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.EnumerationColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.FloatColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-float-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.FloatColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.IntegerColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-integer-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.IntegerColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.LongColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-long-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.LongColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.ShortColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-short-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.ShortColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.TextColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-text-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.TextColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.UByteColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-byte-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.UByteColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.UIntegerColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-integer-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.UIntegerColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.ULongColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-long-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.ULongColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.UShortColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-short-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.UShortColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.UUIDColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.core.VarCharColumnType.sqlType"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.AndBitOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-bit-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.AndBitOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Avg.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-avg/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Avg.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Between.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-between/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Between.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CaseWhenElse.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when-else/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CaseWhenElse.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Cast.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-cast/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Cast.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CharLength.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-length/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CharLength.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Coalesce.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-coalesce/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Coalesce.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Column.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Column.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ComparisonOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-comparison-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ComparisonOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CompositeColumn.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-composite-column/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CompositeColumn.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CompoundBooleanOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-compound-boolean-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CompoundBooleanOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Concat.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-concat/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Concat.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Count.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-count/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Count.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CumeDist.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-cume-dist/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CumeDist.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CurrentRowWindowFrameBound.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-current-row-window-frame-bound/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CurrentRowWindowFrameBound.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CustomFunction.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-function/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CustomFunction.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.CustomOperator.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-operator/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.CustomOperator.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.DenseRank.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-dense-rank/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.DenseRank.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Exists.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-exists/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Exists.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ExpressionAlias.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-alias/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ExpressionAlias.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type-alias/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.FirstValue.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-first-value/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.FirstValue.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.GroupConcat.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.GroupConcat.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.IsDistinctFromOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-distinct-from-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.IsDistinctFromOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-distinct-from-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.IsNotNullOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-null-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.IsNotNullOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.IsNullOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-null-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.IsNullOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Lag.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Lag.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.LastValue.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-last-value/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.LastValue.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Lead.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Lead.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.LikeEscapeOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-escape-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.LikeEscapeOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.LiteralOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-literal-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.LiteralOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Locate.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-locate/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Locate.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.LowerCase.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-lower-case/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.LowerCase.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Max.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-max/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Max.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Min.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-min/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Min.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ModOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ModOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.NextVal.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.NextVal.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.NoOpConversion.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-no-op-conversion/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.NoOpConversion.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.NotExists.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-exists/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.NotExists.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.NotOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.NotOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.NthValue.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-nth-value/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.NthValue.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Ntile.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-ntile/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Ntile.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.OffsetWindowFrameBound.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-offset-window-frame-bound/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.OffsetWindowFrameBound.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Op.FALSE.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-f-a-l-s-e/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Op.FALSE.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Op.TRUE.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-op/-t-r-u-e/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Op.TRUE.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.OrBitOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-bit-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.OrBitOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.PercentRank.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-percent-rank/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.PercentRank.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.QueryParameter.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-parameter/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.QueryParameter.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Random.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-random/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Random.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Rank.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-rank/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Rank.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.RegexpOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-regexp-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.RegexpOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.RowNumber.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-row-number/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.RowNumber.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.StdDevPop.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-pop/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.StdDevPop.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.StdDevSamp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-samp/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.StdDevSamp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.SubQueryOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-sub-query-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.SubQueryOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Substring.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-substring/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Substring.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Sum.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-sum/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Sum.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.Trim.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-trim/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.Trim.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.UnboundedWindowFrameBound.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-unbounded-window-frame-bound/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.UnboundedWindowFrameBound.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.UpperCase.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-upper-case/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.UpperCase.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.VarPop.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-pop/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.VarPop.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.VarSamp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-samp/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.VarSamp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.XorBitOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core/-xor-bit-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.XorBitOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.functions.array.ArrayGet.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-get/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.functions.array.ArrayGet.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.functions.array.ArraySlice.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-slice/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.functions.array.ArraySlice.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-base-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-list-or-not-in-list-base-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ops.InTableOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-table-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ops.InTableOp.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.core.ops.MultipleInListOp.toQueryBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-multiple-in-list-op/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.core.ops.MultipleInListOp.toQueryBuilder"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.Column.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.Column.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.ColumnType.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-type/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.ColumnType.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.DatabaseApi.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.DatabaseApi.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.ExplainResultRow.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-result-row/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.ExplainResultRow.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.Expression.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.Expression.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.Index.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.Index.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.QueryBuilder.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.QueryBuilder.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.ReferenceOption.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.ReferenceOption.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.ResultRow.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.ResultRow.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.Sequence.toString","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.Sequence.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.toString","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.dao.id.CompositeID.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID.toString","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.dao.id.EntityID.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.toString","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.core.vendors.H2Dialect.toString"]},{"name":"open override fun toString(): String","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException.toString","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/to-string.html","searchKeys":["toString","open override fun toString(): String","org.jetbrains.exposed.v1.exceptions.ExposedSQLException.toString"]},{"name":"open override fun unwrapRecursive(value: Wrapped?): Any?","description":"org.jetbrains.exposed.v1.core.NullableColumnWithTransform.unwrapRecursive","location":"exposed-core/org.jetbrains.exposed.v1.core/-nullable-column-with-transform/unwrap-recursive.html","searchKeys":["unwrapRecursive","open override fun unwrapRecursive(value: Wrapped?): Any?","org.jetbrains.exposed.v1.core.NullableColumnWithTransform.unwrapRecursive"]},{"name":"open override fun validateLastBatch()","description":"org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.validateLastBatch","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-s-q-l-server-batch-insert-statement/validate-last-batch.html","searchKeys":["validateLastBatch","open override fun validateLastBatch()","org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.validateLastBatch"]},{"name":"open override fun validateValueBeforeUpdate(value: ByteArray?)","description":"org.jetbrains.exposed.v1.core.BinaryColumnType.validateValueBeforeUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open override fun validateValueBeforeUpdate(value: ByteArray?)","org.jetbrains.exposed.v1.core.BinaryColumnType.validateValueBeforeUpdate"]},{"name":"open override fun validateValueBeforeUpdate(value: String?)","description":"org.jetbrains.exposed.v1.core.CharColumnType.validateValueBeforeUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open override fun validateValueBeforeUpdate(value: String?)","org.jetbrains.exposed.v1.core.CharColumnType.validateValueBeforeUpdate"]},{"name":"open override fun validateValueBeforeUpdate(value: String?)","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.validateValueBeforeUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open override fun validateValueBeforeUpdate(value: String?)","org.jetbrains.exposed.v1.core.VarCharColumnType.validateValueBeforeUpdate"]},{"name":"open override fun validateValueBeforeUpdate(value: T?)","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.validateValueBeforeUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open override fun validateValueBeforeUpdate(value: T?)","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.validateValueBeforeUpdate"]},{"name":"open override fun valueFromDB(value: Any): BigDecimal","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): BigDecimal","org.jetbrains.exposed.v1.core.DecimalColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Boolean","description":"org.jetbrains.exposed.v1.core.BooleanColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-boolean-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Boolean","org.jetbrains.exposed.v1.core.BooleanColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Byte","description":"org.jetbrains.exposed.v1.core.ByteColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-byte-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Byte","org.jetbrains.exposed.v1.core.ByteColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): ByteArray","description":"org.jetbrains.exposed.v1.core.BasicBinaryColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-basic-binary-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): ByteArray","org.jetbrains.exposed.v1.core.BasicBinaryColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Char","description":"org.jetbrains.exposed.v1.core.CharacterColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-character-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Char","org.jetbrains.exposed.v1.core.CharacterColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Double","description":"org.jetbrains.exposed.v1.core.DoubleColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-double-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Double","org.jetbrains.exposed.v1.core.DoubleColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): EntityID<T>","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): EntityID<T>","org.jetbrains.exposed.v1.core.EntityIDColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): ExposedBlob","description":"org.jetbrains.exposed.v1.core.BlobColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): ExposedBlob","org.jetbrains.exposed.v1.core.BlobColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Float","description":"org.jetbrains.exposed.v1.core.FloatColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-float-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Float","org.jetbrains.exposed.v1.core.FloatColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Int","description":"org.jetbrains.exposed.v1.core.IntegerColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-integer-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Int","org.jetbrains.exposed.v1.core.IntegerColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Long","description":"org.jetbrains.exposed.v1.core.LongColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-long-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Long","org.jetbrains.exposed.v1.core.LongColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): R?","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): R?","org.jetbrains.exposed.v1.core.ArrayColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Short","description":"org.jetbrains.exposed.v1.core.ShortColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-short-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Short","org.jetbrains.exposed.v1.core.ShortColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): String","description":"org.jetbrains.exposed.v1.core.StringColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): String","org.jetbrains.exposed.v1.core.StringColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): T","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): T","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): T","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): T","org.jetbrains.exposed.v1.core.EnumerationColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): T","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): T","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): UByte","description":"org.jetbrains.exposed.v1.core.UByteColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-byte-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): UByte","org.jetbrains.exposed.v1.core.UByteColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): UInt","description":"org.jetbrains.exposed.v1.core.UIntegerColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-integer-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): UInt","org.jetbrains.exposed.v1.core.UIntegerColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): ULong","description":"org.jetbrains.exposed.v1.core.ULongColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-long-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): ULong","org.jetbrains.exposed.v1.core.ULongColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): UShort","description":"org.jetbrains.exposed.v1.core.UShortColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-short-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): UShort","org.jetbrains.exposed.v1.core.UShortColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): UUID","description":"org.jetbrains.exposed.v1.core.UUIDColumnType.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-u-u-i-d-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): UUID","org.jetbrains.exposed.v1.core.UUIDColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Wrapped?","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Wrapped?","org.jetbrains.exposed.v1.core.ColumnWithTransform.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Wrapped?","description":"org.jetbrains.exposed.v1.core.NullableColumnWithTransform.valueFromDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-nullable-column-with-transform/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Wrapped?","org.jetbrains.exposed.v1.core.NullableColumnWithTransform.valueFromDB"]},{"name":"open override fun valueToDB(value: Byte?): Any?","description":"org.jetbrains.exposed.v1.core.ByteColumnType.valueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-byte-column-type/value-to-d-b.html","searchKeys":["valueToDB","open override fun valueToDB(value: Byte?): Any?","org.jetbrains.exposed.v1.core.ByteColumnType.valueToDB"]},{"name":"open override fun valueToDB(value: Wrapped?): Any?","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.valueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/value-to-d-b.html","searchKeys":["valueToDB","open override fun valueToDB(value: Wrapped?): Any?","org.jetbrains.exposed.v1.core.ColumnWithTransform.valueToDB"]},{"name":"open override fun valueToDB(value: Wrapped?): Any?","description":"org.jetbrains.exposed.v1.core.NullableColumnWithTransform.valueToDB","location":"exposed-core/org.jetbrains.exposed.v1.core/-nullable-column-with-transform/value-to-d-b.html","searchKeys":["valueToDB","open override fun valueToDB(value: Wrapped?): Any?","org.jetbrains.exposed.v1.core.NullableColumnWithTransform.valueToDB"]},{"name":"open override fun valueToString(value: Wrapped?): String","description":"org.jetbrains.exposed.v1.core.NullableColumnWithTransform.valueToString","location":"exposed-core/org.jetbrains.exposed.v1.core/-nullable-column-with-transform/value-to-string.html","searchKeys":["valueToString","open override fun valueToString(value: Wrapped?): String","org.jetbrains.exposed.v1.core.NullableColumnWithTransform.valueToString"]},{"name":"open override val alias: String","description":"org.jetbrains.exposed.v1.core.ExpressionAlias.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-alias/alias.html","searchKeys":["alias","open override val alias: String","org.jetbrains.exposed.v1.core.ExpressionAlias.alias"]},{"name":"open override val alias: String","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type-alias/alias.html","searchKeys":["alias","open override val alias: String","org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.alias"]},{"name":"open override val columnType: IColumnType<R & Any>","description":"org.jetbrains.exposed.v1.core.ModOp.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<R & Any>","org.jetbrains.exposed.v1.core.ModOp.columnType"]},{"name":"open override val columnType: IColumnType<S & Any>","description":"org.jetbrains.exposed.v1.core.NoOpConversion.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-no-op-conversion/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<S & Any>","org.jetbrains.exposed.v1.core.NoOpConversion.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.AndBitOp.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-bit-op/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.AndBitOp.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.CaseWhenElse.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when-else/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.CaseWhenElse.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.Column.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.Column.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type-alias/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.Function.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-function/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.Function.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.LiteralOp.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-literal-op/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.LiteralOp.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.OrBitOp.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-bit-op/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.OrBitOp.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.WindowFunctionDefinition.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-function-definition/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.WindowFunctionDefinition.columnType"]},{"name":"open override val columnType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.XorBitOp.columnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-xor-bit-op/column-type.html","searchKeys":["columnType","open override val columnType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.XorBitOp.columnType"]},{"name":"open override val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.Alias.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/columns.html","searchKeys":["columns","open override val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.Alias.columns"]},{"name":"open override val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.Join.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/columns.html","searchKeys":["columns","open override val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.Join.columns"]},{"name":"open override val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.QueryAlias.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/columns.html","searchKeys":["columns","open override val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.QueryAlias.columns"]},{"name":"open override val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.Table.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/columns.html","searchKeys":["columns","open override val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.Table.columns"]},{"name":"open override val dataTypeProvider: DataTypeProvider","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.dataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/data-type-provider.html","searchKeys":["dataTypeProvider","open override val dataTypeProvider: DataTypeProvider","org.jetbrains.exposed.v1.core.vendors.H2Dialect.dataTypeProvider"]},{"name":"open override val dataTypeProvider: DataTypeProvider","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.dataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/data-type-provider.html","searchKeys":["dataTypeProvider","open override val dataTypeProvider: DataTypeProvider","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.dataTypeProvider"]},{"name":"open override val dataTypeProvider: DataTypeProvider","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.dataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/data-type-provider.html","searchKeys":["dataTypeProvider","open override val dataTypeProvider: DataTypeProvider","org.jetbrains.exposed.v1.core.vendors.VendorDialect.dataTypeProvider"]},{"name":"open override val defaultReferenceOption: ReferenceOption","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.defaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/default-reference-option.html","searchKeys":["defaultReferenceOption","open override val defaultReferenceOption: ReferenceOption","org.jetbrains.exposed.v1.core.vendors.H2Dialect.defaultReferenceOption"]},{"name":"open override val defaultReferenceOption: ReferenceOption","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.defaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/default-reference-option.html","searchKeys":["defaultReferenceOption","open override val defaultReferenceOption: ReferenceOption","org.jetbrains.exposed.v1.core.vendors.OracleDialect.defaultReferenceOption"]},{"name":"open override val defaultReferenceOption: ReferenceOption","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.defaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/default-reference-option.html","searchKeys":["defaultReferenceOption","open override val defaultReferenceOption: ReferenceOption","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.defaultReferenceOption"]},{"name":"open override val delegate: Expression<T>","description":"org.jetbrains.exposed.v1.core.ExpressionAlias.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-alias/delegate.html","searchKeys":["delegate","open override val delegate: Expression<T>","org.jetbrains.exposed.v1.core.ExpressionAlias.delegate"]},{"name":"open override val delegate: ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-expression-with-column-type-alias/delegate.html","searchKeys":["delegate","open override val delegate: ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.ExpressionWithColumnTypeAlias.delegate"]},{"name":"open override val expr: ExpressionWithColumnType<out T>","description":"org.jetbrains.exposed.v1.core.ops.SingleValueInListOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-single-value-in-list-op/expr.html","searchKeys":["expr","open override val expr: ExpressionWithColumnType<out T>","org.jetbrains.exposed.v1.core.ops.SingleValueInListOp.expr"]},{"name":"open override val expr: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.ops.MultipleInListOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-multiple-in-list-op/expr.html","searchKeys":["expr","open override val expr: List<Column<*>>","org.jetbrains.exposed.v1.core.ops.MultipleInListOp.expr"]},{"name":"open override val expr: Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>","description":"org.jetbrains.exposed.v1.core.ops.PairInListOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-pair-in-list-op/expr.html","searchKeys":["expr","open override val expr: Pair<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>>","org.jetbrains.exposed.v1.core.ops.PairInListOp.expr"]},{"name":"open override val expr: Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>","description":"org.jetbrains.exposed.v1.core.ops.TripleInListOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-triple-in-list-op/expr.html","searchKeys":["expr","open override val expr: Triple<ExpressionWithColumnType<T1>, ExpressionWithColumnType<T2>, ExpressionWithColumnType<T3>>","org.jetbrains.exposed.v1.core.ops.TripleInListOp.expr"]},{"name":"open override val fields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.Alias.fields","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/fields.html","searchKeys":["fields","open override val fields: List<Expression<*>>","org.jetbrains.exposed.v1.core.Alias.fields"]},{"name":"open override val fields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.ColumnSet.fields","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/fields.html","searchKeys":["fields","open override val fields: List<Expression<*>>","org.jetbrains.exposed.v1.core.ColumnSet.fields"]},{"name":"open override val fields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.Join.fields","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/fields.html","searchKeys":["fields","open override val fields: List<Expression<*>>","org.jetbrains.exposed.v1.core.Join.fields"]},{"name":"open override val fields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.QueryAlias.fields","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/fields.html","searchKeys":["fields","open override val fields: List<Expression<*>>","org.jetbrains.exposed.v1.core.QueryAlias.fields"]},{"name":"open override val fields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.Slice.fields","location":"exposed-core/org.jetbrains.exposed.v1.core/-slice/fields.html","searchKeys":["fields","open override val fields: List<Expression<*>>","org.jetbrains.exposed.v1.core.Slice.fields"]},{"name":"open override val firstDataSet: List<Pair<Column<*>, Any?>>","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.firstDataSet","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/first-data-set.html","searchKeys":["firstDataSet","open override val firstDataSet: List<Pair<Column<*>, Any?>>","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.firstDataSet"]},{"name":"open override val functionProvider: FunctionProvider","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.functionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/function-provider.html","searchKeys":["functionProvider","open override val functionProvider: FunctionProvider","org.jetbrains.exposed.v1.core.vendors.H2Dialect.functionProvider"]},{"name":"open override val functionProvider: FunctionProvider","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.functionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/function-provider.html","searchKeys":["functionProvider","open override val functionProvider: FunctionProvider","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.functionProvider"]},{"name":"open override val functionProvider: FunctionProvider","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.functionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/function-provider.html","searchKeys":["functionProvider","open override val functionProvider: FunctionProvider","org.jetbrains.exposed.v1.core.vendors.VendorDialect.functionProvider"]},{"name":"open override val likePatternSpecialChars: Map<Char, Char?>","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.likePatternSpecialChars","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/like-pattern-special-chars.html","searchKeys":["likePatternSpecialChars","open override val likePatternSpecialChars: Map<Char, Char?>","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.likePatternSpecialChars"]},{"name":"open override val name: String","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/name.html","searchKeys":["name","open override val name: String","org.jetbrains.exposed.v1.core.vendors.H2Dialect.name"]},{"name":"open override val name: String","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/name.html","searchKeys":["name","open override val name: String","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.name"]},{"name":"open override val name: String","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/name.html","searchKeys":["name","open override val name: String","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.name"]},{"name":"open override val name: String","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/name.html","searchKeys":["name","open override val name: String","org.jetbrains.exposed.v1.core.vendors.VendorDialect.name"]},{"name":"open override val needsQuotesWhenSymbolsInNames: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.needsQuotesWhenSymbolsInNames","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/needs-quotes-when-symbols-in-names.html","searchKeys":["needsQuotesWhenSymbolsInNames","open override val needsQuotesWhenSymbolsInNames: Boolean = false","org.jetbrains.exposed.v1.core.vendors.OracleDialect.needsQuotesWhenSymbolsInNames"]},{"name":"open override val needsQuotesWhenSymbolsInNames: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.needsQuotesWhenSymbolsInNames","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/needs-quotes-when-symbols-in-names.html","searchKeys":["needsQuotesWhenSymbolsInNames","open override val needsQuotesWhenSymbolsInNames: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.needsQuotesWhenSymbolsInNames"]},{"name":"open override val needsSequenceToAutoInc: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.needsSequenceToAutoInc","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/needs-sequence-to-auto-inc.html","searchKeys":["needsSequenceToAutoInc","open override val needsSequenceToAutoInc: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.needsSequenceToAutoInc"]},{"name":"open override val needsSequenceToAutoInc: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.needsSequenceToAutoInc","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/needs-sequence-to-auto-inc.html","searchKeys":["needsSequenceToAutoInc","open override val needsSequenceToAutoInc: Boolean = true","org.jetbrains.exposed.v1.core.vendors.OracleDialect.needsSequenceToAutoInc"]},{"name":"open override val primaryKey: Table.PrimaryKey?","description":"org.jetbrains.exposed.v1.core.Alias.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/primary-key.html","searchKeys":["primaryKey","open override val primaryKey: Table.PrimaryKey?","org.jetbrains.exposed.v1.core.Alias.primaryKey"]},{"name":"open override val querySuffix: String","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.NoForUpdateOption.querySuffix","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-no-for-update-option/query-suffix.html","searchKeys":["querySuffix","open override val querySuffix: String","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.NoForUpdateOption.querySuffix"]},{"name":"open override val requiresAutoCommitOnCreateDrop: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.requiresAutoCommitOnCreateDrop","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/requires-auto-commit-on-create-drop.html","searchKeys":["requiresAutoCommitOnCreateDrop","open override val requiresAutoCommitOnCreateDrop: Boolean = true","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.requiresAutoCommitOnCreateDrop"]},{"name":"open override val requiresAutoCommitOnCreateDrop: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect.requiresAutoCommitOnCreateDrop","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-n-g-dialect/requires-auto-commit-on-create-drop.html","searchKeys":["requiresAutoCommitOnCreateDrop","open override val requiresAutoCommitOnCreateDrop: Boolean = true","org.jetbrains.exposed.v1.core.vendors.PostgreSQLNGDialect.requiresAutoCommitOnCreateDrop"]},{"name":"open override val sequenceMaxValue: Long","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.sequenceMaxValue","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/sequence-max-value.html","searchKeys":["sequenceMaxValue","open override val sequenceMaxValue: Long","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.sequenceMaxValue"]},{"name":"open override val source: ColumnSet","description":"org.jetbrains.exposed.v1.core.ColumnSet.source","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-set/source.html","searchKeys":["source","open override val source: ColumnSet","org.jetbrains.exposed.v1.core.ColumnSet.source"]},{"name":"open override val source: ColumnSet","description":"org.jetbrains.exposed.v1.core.Slice.source","location":"exposed-core/org.jetbrains.exposed.v1.core/-slice/source.html","searchKeys":["source","open override val source: ColumnSet","org.jetbrains.exposed.v1.core.Slice.source"]},{"name":"open override val statement: String","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.statement","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/statement.html","searchKeys":["statement","open override val statement: String","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.statement"]},{"name":"open override val statement: String","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.statement","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/statement.html","searchKeys":["statement","open override val statement: String","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.statement"]},{"name":"open override val supportsColumnTypeChange: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsColumnTypeChange","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-column-type-change.html","searchKeys":["supportsColumnTypeChange","open override val supportsColumnTypeChange: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsColumnTypeChange"]},{"name":"open override val supportsCreateSchema: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsCreateSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-create-schema.html","searchKeys":["supportsCreateSchema","open override val supportsCreateSchema: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsCreateSchema"]},{"name":"open override val supportsCreateSchema: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsCreateSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/supports-create-schema.html","searchKeys":["supportsCreateSchema","open override val supportsCreateSchema: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsCreateSchema"]},{"name":"open override val supportsCreateSequence: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsCreateSequence","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-create-sequence.html","searchKeys":["supportsCreateSequence","open override val supportsCreateSequence: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsCreateSequence"]},{"name":"open override val supportsCreateSequence: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsCreateSequence","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/supports-create-sequence.html","searchKeys":["supportsCreateSequence","open override val supportsCreateSequence: Boolean","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsCreateSequence"]},{"name":"open override val supportsCreateSequence: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsCreateSequence","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/supports-create-sequence.html","searchKeys":["supportsCreateSequence","open override val supportsCreateSequence: Boolean = false","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsCreateSequence"]},{"name":"open override val supportsCreateSequence: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsCreateSequence","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/supports-create-sequence.html","searchKeys":["supportsCreateSequence","open override val supportsCreateSequence: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsCreateSequence"]},{"name":"open override val supportsDualTableConcept: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsDualTableConcept","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-dual-table-concept.html","searchKeys":["supportsDualTableConcept","open override val supportsDualTableConcept: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsDualTableConcept"]},{"name":"open override val supportsDualTableConcept: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsDualTableConcept","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-dual-table-concept.html","searchKeys":["supportsDualTableConcept","open override val supportsDualTableConcept: Boolean = true","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsDualTableConcept"]},{"name":"open override val supportsIfNotExists: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsIfNotExists","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-if-not-exists.html","searchKeys":["supportsIfNotExists","open override val supportsIfNotExists: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsIfNotExists"]},{"name":"open override val supportsIfNotExists: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsIfNotExists","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-if-not-exists.html","searchKeys":["supportsIfNotExists","open override val supportsIfNotExists: Boolean = false","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsIfNotExists"]},{"name":"open override val supportsIfNotExists: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsIfNotExists","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/supports-if-not-exists.html","searchKeys":["supportsIfNotExists","open override val supportsIfNotExists: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsIfNotExists"]},{"name":"open override val supportsMultipleGeneratedKeys: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsMultipleGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-multiple-generated-keys.html","searchKeys":["supportsMultipleGeneratedKeys","open override val supportsMultipleGeneratedKeys: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsMultipleGeneratedKeys"]},{"name":"open override val supportsMultipleGeneratedKeys: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsMultipleGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-multiple-generated-keys.html","searchKeys":["supportsMultipleGeneratedKeys","open override val supportsMultipleGeneratedKeys: Boolean = false","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsMultipleGeneratedKeys"]},{"name":"open override val supportsMultipleGeneratedKeys: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsMultipleGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/supports-multiple-generated-keys.html","searchKeys":["supportsMultipleGeneratedKeys","open override val supportsMultipleGeneratedKeys: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsMultipleGeneratedKeys"]},{"name":"open override val supportsMultipleGeneratedKeys: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.supportsMultipleGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/supports-multiple-generated-keys.html","searchKeys":["supportsMultipleGeneratedKeys","open override val supportsMultipleGeneratedKeys: Boolean = true","org.jetbrains.exposed.v1.core.vendors.VendorDialect.supportsMultipleGeneratedKeys"]},{"name":"open override val supportsOnUpdate: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsOnUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-on-update.html","searchKeys":["supportsOnUpdate","open override val supportsOnUpdate: Boolean = false","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsOnUpdate"]},{"name":"open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsOnlyIdentifiersInGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-only-identifiers-in-generated-keys.html","searchKeys":["supportsOnlyIdentifiersInGeneratedKeys","open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsOnlyIdentifiersInGeneratedKeys"]},{"name":"open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsOnlyIdentifiersInGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/supports-only-identifiers-in-generated-keys.html","searchKeys":["supportsOnlyIdentifiersInGeneratedKeys","open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean = true","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsOnlyIdentifiersInGeneratedKeys"]},{"name":"open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsOnlyIdentifiersInGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-only-identifiers-in-generated-keys.html","searchKeys":["supportsOnlyIdentifiersInGeneratedKeys","open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean = true","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsOnlyIdentifiersInGeneratedKeys"]},{"name":"open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsOnlyIdentifiersInGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/supports-only-identifiers-in-generated-keys.html","searchKeys":["supportsOnlyIdentifiersInGeneratedKeys","open override val supportsOnlyIdentifiersInGeneratedKeys: Boolean = true","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsOnlyIdentifiersInGeneratedKeys"]},{"name":"open override val supportsOrderByNullsFirstLast: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsOrderByNullsFirstLast","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-order-by-nulls-first-last.html","searchKeys":["supportsOrderByNullsFirstLast","open override val supportsOrderByNullsFirstLast: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsOrderByNullsFirstLast"]},{"name":"open override val supportsOrderByNullsFirstLast: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsOrderByNullsFirstLast","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/supports-order-by-nulls-first-last.html","searchKeys":["supportsOrderByNullsFirstLast","open override val supportsOrderByNullsFirstLast: Boolean = false","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsOrderByNullsFirstLast"]},{"name":"open override val supportsOrderByNullsFirstLast: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsOrderByNullsFirstLast","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-order-by-nulls-first-last.html","searchKeys":["supportsOrderByNullsFirstLast","open override val supportsOrderByNullsFirstLast: Boolean = true","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsOrderByNullsFirstLast"]},{"name":"open override val supportsOrderByNullsFirstLast: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.supportsOrderByNullsFirstLast","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/supports-order-by-nulls-first-last.html","searchKeys":["supportsOrderByNullsFirstLast","open override val supportsOrderByNullsFirstLast: Boolean = true","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.supportsOrderByNullsFirstLast"]},{"name":"open override val supportsRestrictReferenceOption: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsRestrictReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-restrict-reference-option.html","searchKeys":["supportsRestrictReferenceOption","open override val supportsRestrictReferenceOption: Boolean = false","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsRestrictReferenceOption"]},{"name":"open override val supportsRestrictReferenceOption: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsRestrictReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/supports-restrict-reference-option.html","searchKeys":["supportsRestrictReferenceOption","open override val supportsRestrictReferenceOption: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsRestrictReferenceOption"]},{"name":"open override val supportsSequenceAsGeneratedKeys: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsSequenceAsGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-sequence-as-generated-keys.html","searchKeys":["supportsSequenceAsGeneratedKeys","open override val supportsSequenceAsGeneratedKeys: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsSequenceAsGeneratedKeys"]},{"name":"open override val supportsSequenceAsGeneratedKeys: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsSequenceAsGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/supports-sequence-as-generated-keys.html","searchKeys":["supportsSequenceAsGeneratedKeys","open override val supportsSequenceAsGeneratedKeys: Boolean = false","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsSequenceAsGeneratedKeys"]},{"name":"open override val supportsSequenceAsGeneratedKeys: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsSequenceAsGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-l-server-dialect/supports-sequence-as-generated-keys.html","searchKeys":["supportsSequenceAsGeneratedKeys","open override val supportsSequenceAsGeneratedKeys: Boolean = false","org.jetbrains.exposed.v1.core.vendors.SQLServerDialect.supportsSequenceAsGeneratedKeys"]},{"name":"open override val supportsSetDefaultReferenceOption: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsSetDefaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-maria-d-b-dialect/supports-set-default-reference-option.html","searchKeys":["supportsSetDefaultReferenceOption","open override val supportsSetDefaultReferenceOption: Boolean = false","org.jetbrains.exposed.v1.core.vendors.MariaDBDialect.supportsSetDefaultReferenceOption"]},{"name":"open override val supportsSetDefaultReferenceOption: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsSetDefaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/supports-set-default-reference-option.html","searchKeys":["supportsSetDefaultReferenceOption","open override val supportsSetDefaultReferenceOption: Boolean = false","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsSetDefaultReferenceOption"]},{"name":"open override val supportsSetDefaultReferenceOption: Boolean = false","description":"org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsSetDefaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-oracle-dialect/supports-set-default-reference-option.html","searchKeys":["supportsSetDefaultReferenceOption","open override val supportsSetDefaultReferenceOption: Boolean = false","org.jetbrains.exposed.v1.core.vendors.OracleDialect.supportsSetDefaultReferenceOption"]},{"name":"open override val supportsSubqueryUnions: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsSubqueryUnions","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-subquery-unions.html","searchKeys":["supportsSubqueryUnions","open override val supportsSubqueryUnions: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsSubqueryUnions"]},{"name":"open override val supportsSubqueryUnions: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsSubqueryUnions","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/supports-subquery-unions.html","searchKeys":["supportsSubqueryUnions","open override val supportsSubqueryUnions: Boolean = true","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsSubqueryUnions"]},{"name":"open override val supportsSubqueryUnions: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.supportsSubqueryUnions","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/supports-subquery-unions.html","searchKeys":["supportsSubqueryUnions","open override val supportsSubqueryUnions: Boolean = true","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.supportsSubqueryUnions"]},{"name":"open override val supportsTernaryAffectedRowValues: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsTernaryAffectedRowValues","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-ternary-affected-row-values.html","searchKeys":["supportsTernaryAffectedRowValues","open override val supportsTernaryAffectedRowValues: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsTernaryAffectedRowValues"]},{"name":"open override val supportsTernaryAffectedRowValues: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsTernaryAffectedRowValues","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-mysql-dialect/supports-ternary-affected-row-values.html","searchKeys":["supportsTernaryAffectedRowValues","open override val supportsTernaryAffectedRowValues: Boolean = true","org.jetbrains.exposed.v1.core.vendors.MysqlDialect.supportsTernaryAffectedRowValues"]},{"name":"open override val supportsWindowFrameGroupsMode: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsWindowFrameGroupsMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/supports-window-frame-groups-mode.html","searchKeys":["supportsWindowFrameGroupsMode","open override val supportsWindowFrameGroupsMode: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.supportsWindowFrameGroupsMode"]},{"name":"open override val supportsWindowFrameGroupsMode: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.supportsWindowFrameGroupsMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-postgre-s-q-l-dialect/supports-window-frame-groups-mode.html","searchKeys":["supportsWindowFrameGroupsMode","open override val supportsWindowFrameGroupsMode: Boolean = true","org.jetbrains.exposed.v1.core.vendors.PostgreSQLDialect.supportsWindowFrameGroupsMode"]},{"name":"open override val supportsWindowFrameGroupsMode: Boolean = true","description":"org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsWindowFrameGroupsMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-s-q-lite-dialect/supports-window-frame-groups-mode.html","searchKeys":["supportsWindowFrameGroupsMode","open override val supportsWindowFrameGroupsMode: Boolean = true","org.jetbrains.exposed.v1.core.vendors.SQLiteDialect.supportsWindowFrameGroupsMode"]},{"name":"open override val tableName: String","description":"org.jetbrains.exposed.v1.core.Alias.tableName","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/table-name.html","searchKeys":["tableName","open override val tableName: String","org.jetbrains.exposed.v1.core.Alias.tableName"]},{"name":"open override var arguments: List<List<Pair<Column<*>, Any?>>>?","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/arguments.html","searchKeys":["arguments","open override var arguments: List<List<Pair<Column<*>, Any?>>>?","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.arguments"]},{"name":"open override var nullable: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnType.nullable","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-type/nullable.html","searchKeys":["nullable","open override var nullable: Boolean","org.jetbrains.exposed.v1.core.ColumnType.nullable"]},{"name":"open override var nullable: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.nullable","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/nullable.html","searchKeys":["nullable","open override var nullable: Boolean","org.jetbrains.exposed.v1.core.ColumnWithTransform.nullable"]},{"name":"open val DEFAULT_VALUE_EXPRESSION: String","description":"org.jetbrains.exposed.v1.core.vendors.FunctionProvider.DEFAULT_VALUE_EXPRESSION","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-function-provider/-d-e-f-a-u-l-t_-v-a-l-u-e_-e-x-p-r-e-s-s-i-o-n.html","searchKeys":["DEFAULT_VALUE_EXPRESSION","open val DEFAULT_VALUE_EXPRESSION: String","org.jetbrains.exposed.v1.core.vendors.FunctionProvider.DEFAULT_VALUE_EXPRESSION"]},{"name":"open val ddl: List<String>","description":"org.jetbrains.exposed.v1.core.DdlAware.ddl","location":"exposed-core/org.jetbrains.exposed.v1.core/-ddl-aware/ddl.html","searchKeys":["ddl","open val ddl: List<String>","org.jetbrains.exposed.v1.core.DdlAware.ddl"]},{"name":"open val defaultReferenceOption: ReferenceOption","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.defaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/default-reference-option.html","searchKeys":["defaultReferenceOption","open val defaultReferenceOption: ReferenceOption","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.defaultReferenceOption"]},{"name":"open val expr: Any","description":"org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-list-or-not-in-list-base-op/expr.html","searchKeys":["expr","open val expr: Any","org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.expr"]},{"name":"open val firstDataSet: List<Pair<Column<*>, Any?>>","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.firstDataSet","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/first-data-set.html","searchKeys":["firstDataSet","open val firstDataSet: List<Pair<Column<*>, Any?>>","org.jetbrains.exposed.v1.core.statements.UpdateStatement.firstDataSet"]},{"name":"open val likePatternSpecialChars: Map<Char, Char?>","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.likePatternSpecialChars","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/like-pattern-special-chars.html","searchKeys":["likePatternSpecialChars","open val likePatternSpecialChars: Map<Char, Char?>","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.likePatternSpecialChars"]},{"name":"open val needsQuotesWhenSymbolsInNames: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.needsQuotesWhenSymbolsInNames","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/needs-quotes-when-symbols-in-names.html","searchKeys":["needsQuotesWhenSymbolsInNames","open val needsQuotesWhenSymbolsInNames: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.needsQuotesWhenSymbolsInNames"]},{"name":"open val needsSequenceToAutoInc: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.needsSequenceToAutoInc","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/needs-sequence-to-auto-inc.html","searchKeys":["needsSequenceToAutoInc","open val needsSequenceToAutoInc: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.needsSequenceToAutoInc"]},{"name":"open val primaryKey: Table.PrimaryKey? = null","description":"org.jetbrains.exposed.v1.core.Table.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/primary-key.html","searchKeys":["primaryKey","open val primaryKey: Table.PrimaryKey? = null","org.jetbrains.exposed.v1.core.Table.primaryKey"]},{"name":"open val querySuffix: String","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.querySuffix","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/query-suffix.html","searchKeys":["querySuffix","open val querySuffix: String","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.querySuffix"]},{"name":"open val realFields: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.FieldSet.realFields","location":"exposed-core/org.jetbrains.exposed.v1.core/-field-set/real-fields.html","searchKeys":["realFields","open val realFields: List<Expression<*>>","org.jetbrains.exposed.v1.core.FieldSet.realFields"]},{"name":"open val requiresAutoCommitOnCreateDrop: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.requiresAutoCommitOnCreateDrop","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/requires-auto-commit-on-create-drop.html","searchKeys":["requiresAutoCommitOnCreateDrop","open val requiresAutoCommitOnCreateDrop: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.requiresAutoCommitOnCreateDrop"]},{"name":"open val sequenceMaxValue: Long","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.sequenceMaxValue","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/sequence-max-value.html","searchKeys":["sequenceMaxValue","open val sequenceMaxValue: Long","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.sequenceMaxValue"]},{"name":"open val supportsColumnTypeChange: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsColumnTypeChange","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-column-type-change.html","searchKeys":["supportsColumnTypeChange","open val supportsColumnTypeChange: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsColumnTypeChange"]},{"name":"open val supportsCreateSchema: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsCreateSchema","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-create-schema.html","searchKeys":["supportsCreateSchema","open val supportsCreateSchema: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsCreateSchema"]},{"name":"open val supportsCreateSequence: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsCreateSequence","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-create-sequence.html","searchKeys":["supportsCreateSequence","open val supportsCreateSequence: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsCreateSequence"]},{"name":"open val supportsDualTableConcept: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsDualTableConcept","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-dual-table-concept.html","searchKeys":["supportsDualTableConcept","open val supportsDualTableConcept: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsDualTableConcept"]},{"name":"open val supportsIfNotExists: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsIfNotExists","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-if-not-exists.html","searchKeys":["supportsIfNotExists","open val supportsIfNotExists: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsIfNotExists"]},{"name":"open val supportsOnUpdate: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsOnUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-on-update.html","searchKeys":["supportsOnUpdate","open val supportsOnUpdate: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsOnUpdate"]},{"name":"open val supportsOnlyIdentifiersInGeneratedKeys: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsOnlyIdentifiersInGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-only-identifiers-in-generated-keys.html","searchKeys":["supportsOnlyIdentifiersInGeneratedKeys","open val supportsOnlyIdentifiersInGeneratedKeys: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsOnlyIdentifiersInGeneratedKeys"]},{"name":"open val supportsOrderByNullsFirstLast: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsOrderByNullsFirstLast","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-order-by-nulls-first-last.html","searchKeys":["supportsOrderByNullsFirstLast","open val supportsOrderByNullsFirstLast: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsOrderByNullsFirstLast"]},{"name":"open val supportsRestrictReferenceOption: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsRestrictReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-restrict-reference-option.html","searchKeys":["supportsRestrictReferenceOption","open val supportsRestrictReferenceOption: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsRestrictReferenceOption"]},{"name":"open val supportsSelectForUpdate: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSelectForUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-select-for-update.html","searchKeys":["supportsSelectForUpdate","open val supportsSelectForUpdate: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSelectForUpdate"]},{"name":"open val supportsSequenceAsGeneratedKeys: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSequenceAsGeneratedKeys","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-sequence-as-generated-keys.html","searchKeys":["supportsSequenceAsGeneratedKeys","open val supportsSequenceAsGeneratedKeys: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSequenceAsGeneratedKeys"]},{"name":"open val supportsSetDefaultReferenceOption: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSetDefaultReferenceOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-set-default-reference-option.html","searchKeys":["supportsSetDefaultReferenceOption","open val supportsSetDefaultReferenceOption: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSetDefaultReferenceOption"]},{"name":"open val supportsSubqueryUnions: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSubqueryUnions","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-subquery-unions.html","searchKeys":["supportsSubqueryUnions","open val supportsSubqueryUnions: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsSubqueryUnions"]},{"name":"open val supportsTernaryAffectedRowValues: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsTernaryAffectedRowValues","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-ternary-affected-row-values.html","searchKeys":["supportsTernaryAffectedRowValues","open val supportsTernaryAffectedRowValues: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsTernaryAffectedRowValues"]},{"name":"open val supportsWindowFrameGroupsMode: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsWindowFrameGroupsMode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-database-dialect/supports-window-frame-groups-mode.html","searchKeys":["supportsWindowFrameGroupsMode","open val supportsWindowFrameGroupsMode: Boolean","org.jetbrains.exposed.v1.core.vendors.DatabaseDialect.supportsWindowFrameGroupsMode"]},{"name":"open val tableName: String","description":"org.jetbrains.exposed.v1.core.Table.tableName","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/table-name.html","searchKeys":["tableName","open val tableName: String","org.jetbrains.exposed.v1.core.Table.tableName"]},{"name":"open var defaultIsolationLevel: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultIsolationLevel","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-isolation-level.html","searchKeys":["defaultIsolationLevel","open var defaultIsolationLevel: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultIsolationLevel"]},{"name":"operator fun <S : Any> set(column: Column<EntityID<S>>, value: S)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","operator fun <S : Any> set(column: Column<EntityID<S>>, value: S)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"operator fun <S : Any> set(column: Column<EntityID<S>?>, value: S?)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","operator fun <S : Any> set(column: Column<EntityID<S>?>, value: S?)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"operator fun <S, ID : EntityID<S>, E : Expression<S>> set(column: Column<ID>, value: E)","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/set.html","searchKeys":["set","operator fun <S, ID : EntityID<S>, E : Expression<S>> set(column: Column<ID>, value: E)","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.set"]},{"name":"operator fun <T : Any, ID : EntityID<T>> set(column: Column<ID>, value: ID)","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.set","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/set.html","searchKeys":["set","operator fun <T : Any, ID : EntityID<T>> set(column: Column<ID>, value: ID)","org.jetbrains.exposed.v1.core.dao.id.CompositeID.set"]},{"name":"operator fun <T : Any, ID : EntityID<T>> set(column: Column<ID>, value: T)","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.set","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/set.html","searchKeys":["set","operator fun <T : Any, ID : EntityID<T>> set(column: Column<ID>, value: T)","org.jetbrains.exposed.v1.core.dao.id.CompositeID.set"]},{"name":"operator fun <T : Any, ID : EntityID<T>> set(column: Column<ID?>, value: T?)","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.set","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/set.html","searchKeys":["set","operator fun <T : Any, ID : EntityID<T>> set(column: Column<ID?>, value: T?)","org.jetbrains.exposed.v1.core.dao.id.CompositeID.set"]},{"name":"operator fun <T : Any> get(column: Column<T>): T","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.get","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/get.html","searchKeys":["get","operator fun <T : Any> get(column: Column<T>): T","org.jetbrains.exposed.v1.core.dao.id.CompositeID.get"]},{"name":"operator fun <T> get(expression: Expression<T>): T","description":"org.jetbrains.exposed.v1.core.ResultRow.get","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/get.html","searchKeys":["get","operator fun <T> get(expression: Expression<T>): T","org.jetbrains.exposed.v1.core.ResultRow.get"]},{"name":"operator fun <T> get(original: Column<T>): Column<T>","description":"org.jetbrains.exposed.v1.core.Alias.get","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/get.html","searchKeys":["get","operator fun <T> get(original: Column<T>): Column<T>","org.jetbrains.exposed.v1.core.Alias.get"]},{"name":"operator fun <T> get(original: Column<T>): Column<T>","description":"org.jetbrains.exposed.v1.core.QueryAlias.get","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/get.html","searchKeys":["get","operator fun <T> get(original: Column<T>): Column<T>","org.jetbrains.exposed.v1.core.QueryAlias.get"]},{"name":"operator fun <T> get(original: Expression<T>): Expression<T>","description":"org.jetbrains.exposed.v1.core.QueryAlias.get","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/get.html","searchKeys":["get","operator fun <T> get(original: Expression<T>): Expression<T>","org.jetbrains.exposed.v1.core.QueryAlias.get"]},{"name":"operator fun <T> get(original: ExpressionWithColumnType<T>): ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.QueryAlias.get","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/get.html","searchKeys":["get","operator fun <T> get(original: ExpressionWithColumnType<T>): ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.QueryAlias.get"]},{"name":"operator fun <T> set(expression: Expression<out T>, value: T)","description":"org.jetbrains.exposed.v1.core.ResultRow.set","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/set.html","searchKeys":["set","operator fun <T> set(expression: Expression<out T>, value: T)","org.jetbrains.exposed.v1.core.ResultRow.set"]},{"name":"operator fun Char.unaryPlus(): QueryBuilder","description":"org.jetbrains.exposed.v1.core.QueryBuilder.unaryPlus","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Char.unaryPlus(): QueryBuilder","org.jetbrains.exposed.v1.core.QueryBuilder.unaryPlus"]},{"name":"operator fun Expression<*>.unaryPlus(): QueryBuilder","description":"org.jetbrains.exposed.v1.core.QueryBuilder.unaryPlus","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Expression<*>.unaryPlus(): QueryBuilder","org.jetbrains.exposed.v1.core.QueryBuilder.unaryPlus"]},{"name":"operator fun String.unaryPlus(): QueryBuilder","description":"org.jetbrains.exposed.v1.core.QueryBuilder.unaryPlus","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun String.unaryPlus(): QueryBuilder","org.jetbrains.exposed.v1.core.QueryBuilder.unaryPlus"]},{"name":"operator fun contains(column: Column<*>): Boolean","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.contains","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/contains.html","searchKeys":["contains","operator fun contains(column: Column<*>): Boolean","org.jetbrains.exposed.v1.core.dao.id.CompositeID.contains"]},{"name":"operator fun invoke(body: (CompositeID) -> Unit): CompositeID","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeID.Companion.invoke","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-i-d/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(body: (CompositeID) -> Unit): CompositeID","org.jetbrains.exposed.v1.core.dao.id.CompositeID.Companion.invoke"]},{"name":"operator fun invoke(body: DatabaseConfig.Builder.() -> Unit = {}): DatabaseConfig","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Companion.invoke","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(body: DatabaseConfig.Builder.() -> Unit = {}): DatabaseConfig","org.jetbrains.exposed.v1.core.DatabaseConfig.Companion.invoke"]},{"name":"operator fun invoke(body: QueryBuilder.() -> Unit)","description":"org.jetbrains.exposed.v1.core.QueryBuilder.invoke","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/invoke.html","searchKeys":["invoke","operator fun invoke(body: QueryBuilder.() -> Unit)","org.jetbrains.exposed.v1.core.QueryBuilder.invoke"]},{"name":"operator fun plus(other: ForeignKeyConstraint): ForeignKeyConstraint","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.plus","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/plus.html","searchKeys":["plus","operator fun plus(other: ForeignKeyConstraint): ForeignKeyConstraint","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.plus"]},{"name":"override val id: Column<EntityID<CompositeID>>","description":"org.jetbrains.exposed.v1.core.dao.id.CompositeIdTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-composite-id-table/id.html","searchKeys":["id","override val id: Column<EntityID<CompositeID>>","org.jetbrains.exposed.v1.core.dao.id.CompositeIdTable.id"]},{"name":"override val id: Column<EntityID<Int>>","description":"org.jetbrains.exposed.v1.core.dao.id.IntIdTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-int-id-table/id.html","searchKeys":["id","override val id: Column<EntityID<Int>>","org.jetbrains.exposed.v1.core.dao.id.IntIdTable.id"]},{"name":"override val id: Column<EntityID<Long>>","description":"org.jetbrains.exposed.v1.core.dao.id.LongIdTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-long-id-table/id.html","searchKeys":["id","override val id: Column<EntityID<Long>>","org.jetbrains.exposed.v1.core.dao.id.LongIdTable.id"]},{"name":"override val id: Column<EntityID<UInt>>","description":"org.jetbrains.exposed.v1.core.dao.id.UIntIdTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-int-id-table/id.html","searchKeys":["id","override val id: Column<EntityID<UInt>>","org.jetbrains.exposed.v1.core.dao.id.UIntIdTable.id"]},{"name":"override val id: Column<EntityID<ULong>>","description":"org.jetbrains.exposed.v1.core.dao.id.ULongIdTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-long-id-table/id.html","searchKeys":["id","override val id: Column<EntityID<ULong>>","org.jetbrains.exposed.v1.core.dao.id.ULongIdTable.id"]},{"name":"override val id: Column<EntityID<UUID>>","description":"org.jetbrains.exposed.v1.core.dao.id.UUIDTable.id","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-u-i-d-table/id.html","searchKeys":["id","override val id: Column<EntityID<UUID>>","org.jetbrains.exposed.v1.core.dao.id.UUIDTable.id"]},{"name":"override val primaryKey: Table.PrimaryKey","description":"org.jetbrains.exposed.v1.core.dao.id.IntIdTable.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-int-id-table/primary-key.html","searchKeys":["primaryKey","override val primaryKey: Table.PrimaryKey","org.jetbrains.exposed.v1.core.dao.id.IntIdTable.primaryKey"]},{"name":"override val primaryKey: Table.PrimaryKey","description":"org.jetbrains.exposed.v1.core.dao.id.LongIdTable.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-long-id-table/primary-key.html","searchKeys":["primaryKey","override val primaryKey: Table.PrimaryKey","org.jetbrains.exposed.v1.core.dao.id.LongIdTable.primaryKey"]},{"name":"override val primaryKey: Table.PrimaryKey","description":"org.jetbrains.exposed.v1.core.dao.id.UIntIdTable.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-int-id-table/primary-key.html","searchKeys":["primaryKey","override val primaryKey: Table.PrimaryKey","org.jetbrains.exposed.v1.core.dao.id.UIntIdTable.primaryKey"]},{"name":"override val primaryKey: Table.PrimaryKey","description":"org.jetbrains.exposed.v1.core.dao.id.ULongIdTable.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-long-id-table/primary-key.html","searchKeys":["primaryKey","override val primaryKey: Table.PrimaryKey","org.jetbrains.exposed.v1.core.dao.id.ULongIdTable.primaryKey"]},{"name":"override val primaryKey: Table.PrimaryKey","description":"org.jetbrains.exposed.v1.core.dao.id.UUIDTable.primaryKey","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-u-u-i-d-table/primary-key.html","searchKeys":["primaryKey","override val primaryKey: Table.PrimaryKey","org.jetbrains.exposed.v1.core.dao.id.UUIDTable.primaryKey"]},{"name":"override val querySuffix: String","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateBase.querySuffix","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-for-update-base/query-suffix.html","searchKeys":["querySuffix","override val querySuffix: String","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.ForUpdateBase.querySuffix"]},{"name":"sealed class CompoundBooleanOp : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.CompoundBooleanOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-compound-boolean-op/index.html","searchKeys":["CompoundBooleanOp","sealed class CompoundBooleanOp : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.CompoundBooleanOp"]},{"name":"sealed class ForUpdateOption","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/index.html","searchKeys":["ForUpdateOption","sealed class ForUpdateOption","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption"]},{"name":"sealed class NextVal<T> : Function<T> ","description":"org.jetbrains.exposed.v1.core.NextVal","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/index.html","searchKeys":["NextVal","sealed class NextVal<T> : Function<T> ","org.jetbrains.exposed.v1.core.NextVal"]},{"name":"sealed class StatementResult","description":"org.jetbrains.exposed.v1.core.statements.StatementResult","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/index.html","searchKeys":["StatementResult","sealed class StatementResult","org.jetbrains.exposed.v1.core.statements.StatementResult"]},{"name":"sealed class SubQueryOp<T> : Op<Boolean> , ComplexExpression, Op.OpBoolean","description":"org.jetbrains.exposed.v1.core.SubQueryOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-sub-query-op/index.html","searchKeys":["SubQueryOp","sealed class SubQueryOp<T> : Op<Boolean> , ComplexExpression, Op.OpBoolean","org.jetbrains.exposed.v1.core.SubQueryOp"]},{"name":"sealed interface UpsertBuilder","description":"org.jetbrains.exposed.v1.core.statements.UpsertBuilder","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-builder/index.html","searchKeys":["UpsertBuilder","sealed interface UpsertBuilder","org.jetbrains.exposed.v1.core.statements.UpsertBuilder"]},{"name":"sealed interface WindowFrameBound","description":"org.jetbrains.exposed.v1.core.WindowFrameBound","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound/index.html","searchKeys":["WindowFrameBound","sealed interface WindowFrameBound","org.jetbrains.exposed.v1.core.WindowFrameBound"]},{"name":"typealias FilterCondition = SqlExpressionBuilder.() -> Op<Boolean>?","description":"org.jetbrains.exposed.v1.core.FilterCondition","location":"exposed-core/org.jetbrains.exposed.v1.core/-filter-condition/index.html","searchKeys":["FilterCondition","typealias FilterCondition = SqlExpressionBuilder.() -> Op<Boolean>?","org.jetbrains.exposed.v1.core.FilterCondition"]},{"name":"typealias JoinCondition = Pair<Expression<*>, Expression<*>>","description":"org.jetbrains.exposed.v1.core.JoinCondition","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-condition/index.html","searchKeys":["JoinCondition","typealias JoinCondition = Pair<Expression<*>, Expression<*>>","org.jetbrains.exposed.v1.core.JoinCondition"]},{"name":"typealias Select = Slice","description":"org.jetbrains.exposed.v1.core.Select","location":"exposed-core/org.jetbrains.exposed.v1.core/-select/index.html","searchKeys":["Select","typealias Select = Slice","org.jetbrains.exposed.v1.core.Select"]},{"name":"val ANSI_SQL_2003_KEYWORDS: Set<String>","description":"org.jetbrains.exposed.v1.core.vendors.ANSI_SQL_2003_KEYWORDS","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-a-n-s-i_-s-q-l_2003_-k-e-y-w-o-r-d-s.html","searchKeys":["ANSI_SQL_2003_KEYWORDS","val ANSI_SQL_2003_KEYWORDS: Set<String>","org.jetbrains.exposed.v1.core.vendors.ANSI_SQL_2003_KEYWORDS"]},{"name":"val AllChanged: ColumnDiff","description":"org.jetbrains.exposed.v1.core.ColumnDiff.Companion.AllChanged","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/-companion/-all-changed.html","searchKeys":["AllChanged","val AllChanged: ColumnDiff","org.jetbrains.exposed.v1.core.ColumnDiff.Companion.AllChanged"]},{"name":"val Column<*>.autoIncColumnType: AutoIncColumnType<*>?","description":"org.jetbrains.exposed.v1.core.autoIncColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/auto-inc-column-type.html","searchKeys":["autoIncColumnType","val Column<*>.autoIncColumnType: AutoIncColumnType<*>?","org.jetbrains.exposed.v1.core.autoIncColumnType"]},{"name":"val DatabaseDialect.h2Mode: H2Dialect.H2CompatibilityMode?","description":"org.jetbrains.exposed.v1.core.vendors.h2Mode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/h2-mode.html","searchKeys":["h2Mode","val DatabaseDialect.h2Mode: H2Dialect.H2CompatibilityMode?","org.jetbrains.exposed.v1.core.vendors.h2Mode"]},{"name":"val IColumnType<*>.isAutoInc: Boolean","description":"org.jetbrains.exposed.v1.core.isAutoInc","location":"exposed-core/org.jetbrains.exposed.v1.core/is-auto-inc.html","searchKeys":["isAutoInc","val IColumnType<*>.isAutoInc: Boolean","org.jetbrains.exposed.v1.core.isAutoInc"]},{"name":"val Join.lastQueryAlias: QueryAlias?","description":"org.jetbrains.exposed.v1.core.lastQueryAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/last-query-alias.html","searchKeys":["lastQueryAlias","val Join.lastQueryAlias: QueryAlias?","org.jetbrains.exposed.v1.core.lastQueryAlias"]},{"name":"val NoneChanged: ColumnDiff","description":"org.jetbrains.exposed.v1.core.ColumnDiff.Companion.NoneChanged","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/-companion/-none-changed.html","searchKeys":["NoneChanged","val NoneChanged: ColumnDiff","org.jetbrains.exposed.v1.core.ColumnDiff.Companion.NoneChanged"]},{"name":"val VENDORS_KEYWORDS: Map<String, List<String>>","description":"org.jetbrains.exposed.v1.core.vendors.VENDORS_KEYWORDS","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-v-e-n-d-o-r-s_-k-e-y-w-o-r-d-s.html","searchKeys":["VENDORS_KEYWORDS","val VENDORS_KEYWORDS: Map<String, List<String>>","org.jetbrains.exposed.v1.core.vendors.VENDORS_KEYWORDS"]},{"name":"val action: MergeStatement.ClauseAction","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.action","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/action.html","searchKeys":["action","val action: MergeStatement.ClauseAction","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.action"]},{"name":"val alias: String","description":"org.jetbrains.exposed.v1.core.Alias.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/alias.html","searchKeys":["alias","val alias: String","org.jetbrains.exposed.v1.core.Alias.alias"]},{"name":"val alias: String","description":"org.jetbrains.exposed.v1.core.QueryAlias.alias","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/alias.html","searchKeys":["alias","val alias: String","org.jetbrains.exposed.v1.core.QueryAlias.alias"]},{"name":"val analyze: Boolean","description":"org.jetbrains.exposed.v1.core.ExplainQuery.analyze","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-query/analyze.html","searchKeys":["analyze","val analyze: Boolean","org.jetbrains.exposed.v1.core.ExplainQuery.analyze"]},{"name":"val and: Op<Boolean>?","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.and","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/and.html","searchKeys":["and","val and: Op<Boolean>?","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.and"]},{"name":"val args: Iterable<Pair<IColumnType<*>, Any?>>","description":"org.jetbrains.exposed.v1.core.statements.StatementContext.args","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-context/args.html","searchKeys":["args","val args: Iterable<Pair<IColumnType<*>, Any?>>","org.jetbrains.exposed.v1.core.statements.StatementContext.args"]},{"name":"val args: List<Pair<IColumnType<*>, Any?>>","description":"org.jetbrains.exposed.v1.core.QueryBuilder.args","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/args.html","searchKeys":["args","val args: List<Pair<IColumnType<*>, Any?>>","org.jetbrains.exposed.v1.core.QueryBuilder.args"]},{"name":"val arguments: List<Pair<Column<*>, Any?>>","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.arguments","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/arguments.html","searchKeys":["arguments","val arguments: List<Pair<Column<*>, Any?>>","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.arguments"]},{"name":"val authorization: String? = null","description":"org.jetbrains.exposed.v1.core.Schema.authorization","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/authorization.html","searchKeys":["authorization","val authorization: String? = null","org.jetbrains.exposed.v1.core.Schema.authorization"]},{"name":"val autoInc: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.autoInc","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/auto-inc.html","searchKeys":["autoInc","val autoInc: Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.autoInc"]},{"name":"val autoIncColumn: Column<*>?","description":"org.jetbrains.exposed.v1.core.Table.autoIncColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/auto-inc-column.html","searchKeys":["autoIncColumn","val autoIncColumn: Column<*>?","org.jetbrains.exposed.v1.core.Table.autoIncColumn"]},{"name":"val autoIncrement: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.autoIncrement","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/auto-increment.html","searchKeys":["autoIncrement","val autoIncrement: Boolean","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.autoIncrement"]},{"name":"val autoincSeq: String?","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.autoincSeq","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/autoinc-seq.html","searchKeys":["autoincSeq","val autoincSeq: String?","org.jetbrains.exposed.v1.core.AutoIncColumnType.autoincSeq"]},{"name":"val bytes: ByteArray","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.bytes","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/bytes.html","searchKeys":["bytes","val bytes: ByteArray","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.bytes"]},{"name":"val cache: Long? = null","description":"org.jetbrains.exposed.v1.core.Sequence.cache","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/cache.html","searchKeys":["cache","val cache: Long? = null","org.jetbrains.exposed.v1.core.Sequence.cache"]},{"name":"val caseSensitive: Boolean","description":"org.jetbrains.exposed.v1.core.RegexpOp.caseSensitive","location":"exposed-core/org.jetbrains.exposed.v1.core/-regexp-op/case-sensitive.html","searchKeys":["caseSensitive","val caseSensitive: Boolean","org.jetbrains.exposed.v1.core.RegexpOp.caseSensitive"]},{"name":"val caseSensitiveName: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.caseSensitiveName","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/case-sensitive-name.html","searchKeys":["caseSensitiveName","val caseSensitiveName: Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.caseSensitiveName"]},{"name":"val caseWhen: CaseWhen<T>","description":"org.jetbrains.exposed.v1.core.CaseWhenElse.caseWhen","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when-else/case-when.html","searchKeys":["caseWhen","val caseWhen: CaseWhen<T>","org.jetbrains.exposed.v1.core.CaseWhenElse.caseWhen"]},{"name":"val cases: MutableList<Pair<Expression<Boolean>, Expression<out T>>>","description":"org.jetbrains.exposed.v1.core.CaseWhen.cases","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when/cases.html","searchKeys":["cases","val cases: MutableList<Pair<Expression<Boolean>, Expression<out T>>>","org.jetbrains.exposed.v1.core.CaseWhen.cases"]},{"name":"val checkName: String","description":"org.jetbrains.exposed.v1.core.CheckConstraint.checkName","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/check-name.html","searchKeys":["checkName","val checkName: String","org.jetbrains.exposed.v1.core.CheckConstraint.checkName"]},{"name":"val checkOp: String","description":"org.jetbrains.exposed.v1.core.CheckConstraint.checkOp","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/check-op.html","searchKeys":["checkOp","val checkOp: String","org.jetbrains.exposed.v1.core.CheckConstraint.checkOp"]},{"name":"val code: String","description":"org.jetbrains.exposed.v1.core.SortOrder.code","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/code.html","searchKeys":["code","val code: String","org.jetbrains.exposed.v1.core.SortOrder.code"]},{"name":"val colLength: Int","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.colLength","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/col-length.html","searchKeys":["colLength","val colLength: Int","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.colLength"]},{"name":"val colLength: Int = 255","description":"org.jetbrains.exposed.v1.core.CharColumnType.colLength","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-column-type/col-length.html","searchKeys":["colLength","val colLength: Int = 255","org.jetbrains.exposed.v1.core.CharColumnType.colLength"]},{"name":"val colLength: Int = 255","description":"org.jetbrains.exposed.v1.core.VarCharColumnType.colLength","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-char-column-type/col-length.html","searchKeys":["colLength","val colLength: Int = 255","org.jetbrains.exposed.v1.core.VarCharColumnType.colLength"]},{"name":"val collate: String? = null","description":"org.jetbrains.exposed.v1.core.StringColumnType.collate","location":"exposed-core/org.jetbrains.exposed.v1.core/-string-column-type/collate.html","searchKeys":["collate","val collate: String? = null","org.jetbrains.exposed.v1.core.StringColumnType.collate"]},{"name":"val columnNames: List<String>","description":"org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata.columnNames","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-primary-key-metadata/column-names.html","searchKeys":["columnNames","val columnNames: List<String>","org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata.columnNames"]},{"name":"val columnToReturnValue: Column<*>?","description":"org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.columnToReturnValue","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-s-q-l-server-batch-insert-statement/column-to-return-value.html","searchKeys":["columnToReturnValue","val columnToReturnValue: Column<*>?","org.jetbrains.exposed.v1.core.statements.SQLServerBatchInsertStatement.columnToReturnValue"]},{"name":"val columns: Array<Column<*>>","description":"org.jetbrains.exposed.v1.core.Table.PrimaryKey.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-primary-key/columns.html","searchKeys":["columns","val columns: Array<Column<*>>","org.jetbrains.exposed.v1.core.Table.PrimaryKey.columns"]},{"name":"val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.Index.columns","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/columns.html","searchKeys":["columns","val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.Index.columns"]},{"name":"val columns: List<Column<*>>","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.columns","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/columns.html","searchKeys":["columns","val columns: List<Column<*>>","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.columns"]},{"name":"val config: DatabaseConfig","description":"org.jetbrains.exposed.v1.core.DatabaseApi.config","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/config.html","searchKeys":["config","val config: DatabaseConfig","org.jetbrains.exposed.v1.core.DatabaseApi.config"]},{"name":"val contexts: List<StatementContext>","description":"org.jetbrains.exposed.v1.exceptions.ExposedSQLException.contexts","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-exposed-s-q-l-exception/contexts.html","searchKeys":["contexts","val contexts: List<StatementContext>","org.jetbrains.exposed.v1.exceptions.ExposedSQLException.contexts"]},{"name":"val count: Int","description":"org.jetbrains.exposed.v1.core.statements.StatementResult.Count.count","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/-count/count.html","searchKeys":["count","val count: Int","org.jetbrains.exposed.v1.core.statements.StatementResult.Count.count"]},{"name":"val currentDialect: DatabaseDialect","description":"org.jetbrains.exposed.v1.core.vendors.currentDialect","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/current-dialect.html","searchKeys":["currentDialect","val currentDialect: DatabaseDialect","org.jetbrains.exposed.v1.core.vendors.currentDialect"]},{"name":"val customFkName: String?","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.customFkName","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/custom-fk-name.html","searchKeys":["customFkName","val customFkName: String?","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.customFkName"]},{"name":"val customName: String? = null","description":"org.jetbrains.exposed.v1.core.Index.customName","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/custom-name.html","searchKeys":["customName","val customName: String? = null","org.jetbrains.exposed.v1.core.Index.customName"]},{"name":"val cycle: Boolean? = null","description":"org.jetbrains.exposed.v1.core.Sequence.cycle","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/cycle.html","searchKeys":["cycle","val cycle: Boolean? = null","org.jetbrains.exposed.v1.core.Sequence.cycle"]},{"name":"val data: ArrayList<MutableMap<Column<*>, Any?>>","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.data","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/data.html","searchKeys":["data","val data: ArrayList<MutableMap<Column<*>, Any?>>","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.data"]},{"name":"val data: ArrayList<Pair<EntityID<*>, Map<Column<*>, Any?>>>","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.data","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/data.html","searchKeys":["data","val data: ArrayList<Pair<EntityID<*>, Map<Column<*>, Any?>>>","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.data"]},{"name":"val database: String","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.database","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-database-metadata/database.html","searchKeys":["database","val database: String","org.jetbrains.exposed.v1.core.statements.api.ExposedDatabaseMetadata.database"]},{"name":"val ddl: List<String>","description":"org.jetbrains.exposed.v1.core.Schema.ddl","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/ddl.html","searchKeys":["ddl","val ddl: List<String>","org.jetbrains.exposed.v1.core.Schema.ddl"]},{"name":"val ddl: List<String>","description":"org.jetbrains.exposed.v1.core.Sequence.ddl","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/ddl.html","searchKeys":["ddl","val ddl: List<String>","org.jetbrains.exposed.v1.core.Sequence.ddl"]},{"name":"val defaultDbValue: String?","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.defaultDbValue","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/default-db-value.html","searchKeys":["defaultDbValue","val defaultDbValue: String?","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.defaultDbValue"]},{"name":"val defaultTablespace: String? = null","description":"org.jetbrains.exposed.v1.core.Schema.defaultTablespace","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/default-tablespace.html","searchKeys":["defaultTablespace","val defaultTablespace: String? = null","org.jetbrains.exposed.v1.core.Schema.defaultTablespace"]},{"name":"val defaultValue: ExpressionWithColumnType<T>? = null","description":"org.jetbrains.exposed.v1.core.Lag.defaultValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/default-value.html","searchKeys":["defaultValue","val defaultValue: ExpressionWithColumnType<T>? = null","org.jetbrains.exposed.v1.core.Lag.defaultValue"]},{"name":"val defaultValue: ExpressionWithColumnType<T>? = null","description":"org.jetbrains.exposed.v1.core.Lead.defaultValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/default-value.html","searchKeys":["defaultValue","val defaultValue: ExpressionWithColumnType<T>? = null","org.jetbrains.exposed.v1.core.Lead.defaultValue"]},{"name":"val defaults: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.defaults","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/defaults.html","searchKeys":["defaults","val defaults: Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.defaults"]},{"name":"val delegate: ColumnType<T>","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/delegate.html","searchKeys":["delegate","val delegate: ColumnType<T>","org.jetbrains.exposed.v1.core.AutoIncColumnType.delegate"]},{"name":"val delegate: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/delegate.html","searchKeys":["delegate","val delegate: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.ArrayColumnType.delegate"]},{"name":"val delegate: IColumnType<Unwrapped & Any>","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/delegate.html","searchKeys":["delegate","val delegate: IColumnType<Unwrapped & Any>","org.jetbrains.exposed.v1.core.ColumnWithTransform.delegate"]},{"name":"val delegate: T","description":"org.jetbrains.exposed.v1.core.Alias.delegate","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/delegate.html","searchKeys":["delegate","val delegate: T","org.jetbrains.exposed.v1.core.Alias.delegate"]},{"name":"val delegateType: String","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.delegateType","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/delegate-type.html","searchKeys":["delegateType","val delegateType: String","org.jetbrains.exposed.v1.core.ArrayColumnType.delegateType"]},{"name":"val delegatedDialectNameProvider: VendorDialect.DialectNameProvider?","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.delegatedDialectNameProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/delegated-dialect-name-provider.html","searchKeys":["delegatedDialectNameProvider","val delegatedDialectNameProvider: VendorDialect.DialectNameProvider?","org.jetbrains.exposed.v1.core.vendors.H2Dialect.delegatedDialectNameProvider"]},{"name":"val deleteRule: ReferenceOption?","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.deleteRule","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/delete-rule.html","searchKeys":["deleteRule","val deleteRule: ReferenceOption?","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.deleteRule"]},{"name":"val deleteWhere: Op<Boolean>? = null","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.deleteWhere","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/delete-where.html","searchKeys":["deleteWhere","val deleteWhere: Op<Boolean>? = null","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.deleteWhere"]},{"name":"val dialect: DatabaseDialect","description":"org.jetbrains.exposed.v1.exceptions.UnsupportedByDialectException.dialect","location":"exposed-core/org.jetbrains.exposed.v1.exceptions/-unsupported-by-dialect-exception/dialect.html","searchKeys":["dialect","val dialect: DatabaseDialect","org.jetbrains.exposed.v1.exceptions.UnsupportedByDialectException.dialect"]},{"name":"val dialectName: String","description":"org.jetbrains.exposed.v1.core.vendors.VendorDialect.DialectNameProvider.dialectName","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-vendor-dialect/-dialect-name-provider/dialect-name.html","searchKeys":["dialectName","val dialectName: String","org.jetbrains.exposed.v1.core.vendors.VendorDialect.DialectNameProvider.dialectName"]},{"name":"val dialects: ConcurrentHashMap<String, () -> DatabaseDialect>","description":"org.jetbrains.exposed.v1.core.DatabaseApi.Companion.dialects","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/-companion/dialects.html","searchKeys":["dialects","val dialects: ConcurrentHashMap<String, () -> DatabaseDialect>","org.jetbrains.exposed.v1.core.DatabaseApi.Companion.dialects"]},{"name":"val dimensions: Int = 1","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.dimensions","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/dimensions.html","searchKeys":["dimensions","val dimensions: Int = 1","org.jetbrains.exposed.v1.core.ArrayColumnType.dimensions"]},{"name":"val distinct: Boolean","description":"org.jetbrains.exposed.v1.core.GroupConcat.distinct","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/distinct.html","searchKeys":["distinct","val distinct: Boolean","org.jetbrains.exposed.v1.core.GroupConcat.distinct"]},{"name":"val distinct: Boolean = false","description":"org.jetbrains.exposed.v1.core.Count.distinct","location":"exposed-core/org.jetbrains.exposed.v1.core/-count/distinct.html","searchKeys":["distinct","val distinct: Boolean = false","org.jetbrains.exposed.v1.core.Count.distinct"]},{"name":"val eagerLoading: Boolean = false","description":"org.jetbrains.exposed.v1.core.TextColumnType.eagerLoading","location":"exposed-core/org.jetbrains.exposed.v1.core/-text-column-type/eager-loading.html","searchKeys":["eagerLoading","val eagerLoading: Boolean = false","org.jetbrains.exposed.v1.core.TextColumnType.eagerLoading"]},{"name":"val elseResult: Expression<T>","description":"org.jetbrains.exposed.v1.core.CaseWhenElse.elseResult","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when-else/else-result.html","searchKeys":["elseResult","val elseResult: Expression<T>","org.jetbrains.exposed.v1.core.CaseWhenElse.elseResult"]},{"name":"val entries: EnumEntries<AbstractQuery.CommentPosition>","description":"org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.entries","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/-comment-position/entries.html","searchKeys":["entries","val entries: EnumEntries<AbstractQuery.CommentPosition>","org.jetbrains.exposed.v1.core.AbstractQuery.CommentPosition.entries"]},{"name":"val entries: EnumEntries<ForUpdateOption.MySQL.MODE>","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-my-s-q-l/-m-o-d-e/entries.html","searchKeys":["entries","val entries: EnumEntries<ForUpdateOption.MySQL.MODE>","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.MySQL.MODE.entries"]},{"name":"val entries: EnumEntries<ForUpdateOption.PostgreSQL.MODE>","description":"org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-for-update-option/-postgre-s-q-l/-m-o-d-e/entries.html","searchKeys":["entries","val entries: EnumEntries<ForUpdateOption.PostgreSQL.MODE>","org.jetbrains.exposed.v1.core.vendors.ForUpdateOption.PostgreSQL.MODE.entries"]},{"name":"val entries: EnumEntries<H2Dialect.H2CompatibilityMode>","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-compatibility-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<H2Dialect.H2CompatibilityMode>","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2CompatibilityMode.entries"]},{"name":"val entries: EnumEntries<H2Dialect.H2MajorVersion>","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/-h2-major-version/entries.html","searchKeys":["entries","val entries: EnumEntries<H2Dialect.H2MajorVersion>","org.jetbrains.exposed.v1.core.vendors.H2Dialect.H2MajorVersion.entries"]},{"name":"val entries: EnumEntries<JoinType>","description":"org.jetbrains.exposed.v1.core.JoinType.entries","location":"exposed-core/org.jetbrains.exposed.v1.core/-join-type/entries.html","searchKeys":["entries","val entries: EnumEntries<JoinType>","org.jetbrains.exposed.v1.core.JoinType.entries"]},{"name":"val entries: EnumEntries<MergeStatement.ClauseAction>","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-action/entries.html","searchKeys":["entries","val entries: EnumEntries<MergeStatement.ClauseAction>","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseAction.entries"]},{"name":"val entries: EnumEntries<MergeStatement.ClauseCondition>","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause-condition/entries.html","searchKeys":["entries","val entries: EnumEntries<MergeStatement.ClauseCondition>","org.jetbrains.exposed.v1.core.statements.MergeStatement.ClauseCondition.entries"]},{"name":"val entries: EnumEntries<ReferenceOption>","description":"org.jetbrains.exposed.v1.core.ReferenceOption.entries","location":"exposed-core/org.jetbrains.exposed.v1.core/-reference-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ReferenceOption>","org.jetbrains.exposed.v1.core.ReferenceOption.entries"]},{"name":"val entries: EnumEntries<SortOrder>","description":"org.jetbrains.exposed.v1.core.SortOrder.entries","location":"exposed-core/org.jetbrains.exposed.v1.core/-sort-order/entries.html","searchKeys":["entries","val entries: EnumEntries<SortOrder>","org.jetbrains.exposed.v1.core.SortOrder.entries"]},{"name":"val entries: EnumEntries<StatementGroup>","description":"org.jetbrains.exposed.v1.core.statements.StatementGroup.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-group/entries.html","searchKeys":["entries","val entries: EnumEntries<StatementGroup>","org.jetbrains.exposed.v1.core.statements.StatementGroup.entries"]},{"name":"val entries: EnumEntries<StatementType>","description":"org.jetbrains.exposed.v1.core.statements.StatementType.entries","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/entries.html","searchKeys":["entries","val entries: EnumEntries<StatementType>","org.jetbrains.exposed.v1.core.statements.StatementType.entries"]},{"name":"val entries: EnumEntries<WindowFrameBoundDirection>","description":"org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.entries","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-bound-direction/entries.html","searchKeys":["entries","val entries: EnumEntries<WindowFrameBoundDirection>","org.jetbrains.exposed.v1.core.WindowFrameBoundDirection.entries"]},{"name":"val entries: EnumEntries<WindowFrameUnit>","description":"org.jetbrains.exposed.v1.core.WindowFrameUnit.entries","location":"exposed-core/org.jetbrains.exposed.v1.core/-window-frame-unit/entries.html","searchKeys":["entries","val entries: EnumEntries<WindowFrameUnit>","org.jetbrains.exposed.v1.core.WindowFrameUnit.entries"]},{"name":"val escapeChar: Char?","description":"org.jetbrains.exposed.v1.core.LikeEscapeOp.escapeChar","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-escape-op/escape-char.html","searchKeys":["escapeChar","val escapeChar: Char?","org.jetbrains.exposed.v1.core.LikeEscapeOp.escapeChar"]},{"name":"val escapeChar: Char? = null","description":"org.jetbrains.exposed.v1.core.LikePattern.escapeChar","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/escape-char.html","searchKeys":["escapeChar","val escapeChar: Char? = null","org.jetbrains.exposed.v1.core.LikePattern.escapeChar"]},{"name":"val exposedLogger: Logger","description":"org.jetbrains.exposed.v1.core.exposedLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/exposed-logger.html","searchKeys":["exposedLogger","val exposedLogger: Logger","org.jetbrains.exposed.v1.core.exposedLogger"]},{"name":"val expr1: Expression<*>","description":"org.jetbrains.exposed.v1.core.ComparisonOp.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-comparison-op/expr1.html","searchKeys":["expr1","val expr1: Expression<*>","org.jetbrains.exposed.v1.core.ComparisonOp.expr1"]},{"name":"val expr1: Expression<*>","description":"org.jetbrains.exposed.v1.core.CustomOperator.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-operator/expr1.html","searchKeys":["expr1","val expr1: Expression<*>","org.jetbrains.exposed.v1.core.CustomOperator.expr1"]},{"name":"val expr1: Expression<T>","description":"org.jetbrains.exposed.v1.core.AndBitOp.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-bit-op/expr1.html","searchKeys":["expr1","val expr1: Expression<T>","org.jetbrains.exposed.v1.core.AndBitOp.expr1"]},{"name":"val expr1: Expression<T>","description":"org.jetbrains.exposed.v1.core.ModOp.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/expr1.html","searchKeys":["expr1","val expr1: Expression<T>","org.jetbrains.exposed.v1.core.ModOp.expr1"]},{"name":"val expr1: Expression<T>","description":"org.jetbrains.exposed.v1.core.OrBitOp.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-bit-op/expr1.html","searchKeys":["expr1","val expr1: Expression<T>","org.jetbrains.exposed.v1.core.OrBitOp.expr1"]},{"name":"val expr1: Expression<T>","description":"org.jetbrains.exposed.v1.core.RegexpOp.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-regexp-op/expr1.html","searchKeys":["expr1","val expr1: Expression<T>","org.jetbrains.exposed.v1.core.RegexpOp.expr1"]},{"name":"val expr1: Expression<T>","description":"org.jetbrains.exposed.v1.core.XorBitOp.expr1","location":"exposed-core/org.jetbrains.exposed.v1.core/-xor-bit-op/expr1.html","searchKeys":["expr1","val expr1: Expression<T>","org.jetbrains.exposed.v1.core.XorBitOp.expr1"]},{"name":"val expr2: Expression<*>","description":"org.jetbrains.exposed.v1.core.ComparisonOp.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-comparison-op/expr2.html","searchKeys":["expr2","val expr2: Expression<*>","org.jetbrains.exposed.v1.core.ComparisonOp.expr2"]},{"name":"val expr2: Expression<*>","description":"org.jetbrains.exposed.v1.core.CustomOperator.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-operator/expr2.html","searchKeys":["expr2","val expr2: Expression<*>","org.jetbrains.exposed.v1.core.CustomOperator.expr2"]},{"name":"val expr2: Expression<S>","description":"org.jetbrains.exposed.v1.core.AndBitOp.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-and-bit-op/expr2.html","searchKeys":["expr2","val expr2: Expression<S>","org.jetbrains.exposed.v1.core.AndBitOp.expr2"]},{"name":"val expr2: Expression<S>","description":"org.jetbrains.exposed.v1.core.ModOp.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-mod-op/expr2.html","searchKeys":["expr2","val expr2: Expression<S>","org.jetbrains.exposed.v1.core.ModOp.expr2"]},{"name":"val expr2: Expression<S>","description":"org.jetbrains.exposed.v1.core.OrBitOp.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-or-bit-op/expr2.html","searchKeys":["expr2","val expr2: Expression<S>","org.jetbrains.exposed.v1.core.OrBitOp.expr2"]},{"name":"val expr2: Expression<S>","description":"org.jetbrains.exposed.v1.core.XorBitOp.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-xor-bit-op/expr2.html","searchKeys":["expr2","val expr2: Expression<S>","org.jetbrains.exposed.v1.core.XorBitOp.expr2"]},{"name":"val expr2: Expression<String>","description":"org.jetbrains.exposed.v1.core.RegexpOp.expr2","location":"exposed-core/org.jetbrains.exposed.v1.core/-regexp-op/expr2.html","searchKeys":["expr2","val expr2: Expression<String>","org.jetbrains.exposed.v1.core.RegexpOp.expr2"]},{"name":"val expr: Array<out Expression<*>>","description":"org.jetbrains.exposed.v1.core.Concat.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-concat/expr.html","searchKeys":["expr","val expr: Array<out Expression<*>>","org.jetbrains.exposed.v1.core.Concat.expr"]},{"name":"val expr: Array<out Expression<*>>","description":"org.jetbrains.exposed.v1.core.CustomFunction.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-function/expr.html","searchKeys":["expr","val expr: Array<out Expression<*>>","org.jetbrains.exposed.v1.core.CustomFunction.expr"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.core.Between.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-between/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.core.Between.expr"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.core.Cast.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-cast/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.core.Cast.expr"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.core.Count.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-count/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.core.Count.expr"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.core.IsNotNullOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-null-op/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.core.IsNotNullOp.expr"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.core.IsNullOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-null-op/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.core.IsNullOp.expr"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.core.ops.InTableOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-table-op/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.core.ops.InTableOp.expr"]},{"name":"val expr: Expression<S>","description":"org.jetbrains.exposed.v1.core.Avg.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-avg/expr.html","searchKeys":["expr","val expr: Expression<S>","org.jetbrains.exposed.v1.core.Avg.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.CharLength.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-char-length/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.CharLength.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.GroupConcat.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.GroupConcat.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.Locate.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-locate/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.Locate.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.LowerCase.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-lower-case/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.LowerCase.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.NoOpConversion.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-no-op-conversion/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.NoOpConversion.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.NotOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-op/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.NotOp.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.SubQueryOp.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-sub-query-op/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.SubQueryOp.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.Sum.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-sum/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.Sum.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.Trim.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-trim/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.Trim.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.core.UpperCase.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-upper-case/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.core.UpperCase.expr"]},{"name":"val expr: Expression<in S>","description":"org.jetbrains.exposed.v1.core.Max.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-max/expr.html","searchKeys":["expr","val expr: Expression<in S>","org.jetbrains.exposed.v1.core.Max.expr"]},{"name":"val expr: Expression<in S>","description":"org.jetbrains.exposed.v1.core.Min.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-min/expr.html","searchKeys":["expr","val expr: Expression<in S>","org.jetbrains.exposed.v1.core.Min.expr"]},{"name":"val expr: ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.FirstValue.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-first-value/expr.html","searchKeys":["expr","val expr: ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.FirstValue.expr"]},{"name":"val expr: ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.Lag.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/expr.html","searchKeys":["expr","val expr: ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.Lag.expr"]},{"name":"val expr: ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.LastValue.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-last-value/expr.html","searchKeys":["expr","val expr: ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.LastValue.expr"]},{"name":"val expr: ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.Lead.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/expr.html","searchKeys":["expr","val expr: ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.Lead.expr"]},{"name":"val expr: ExpressionWithColumnType<T>","description":"org.jetbrains.exposed.v1.core.NthValue.expr","location":"exposed-core/org.jetbrains.exposed.v1.core/-nth-value/expr.html","searchKeys":["expr","val expr: ExpressionWithColumnType<T>","org.jetbrains.exposed.v1.core.NthValue.expr"]},{"name":"val expression1: Expression<*>","description":"org.jetbrains.exposed.v1.core.IsDistinctFromOp.expression1","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-distinct-from-op/expression1.html","searchKeys":["expression1","val expression1: Expression<*>","org.jetbrains.exposed.v1.core.IsDistinctFromOp.expression1"]},{"name":"val expression1: Expression<*>","description":"org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.expression1","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-distinct-from-op/expression1.html","searchKeys":["expression1","val expression1: Expression<*>","org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.expression1"]},{"name":"val expression2: Expression<*>","description":"org.jetbrains.exposed.v1.core.IsDistinctFromOp.expression2","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-distinct-from-op/expression2.html","searchKeys":["expression2","val expression2: Expression<*>","org.jetbrains.exposed.v1.core.IsDistinctFromOp.expression2"]},{"name":"val expression2: Expression<*>","description":"org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.expression2","location":"exposed-core/org.jetbrains.exposed.v1.core/-is-not-distinct-from-op/expression2.html","searchKeys":["expression2","val expression2: Expression<*>","org.jetbrains.exposed.v1.core.IsNotDistinctFromOp.expression2"]},{"name":"val expression: Expression<T>","description":"org.jetbrains.exposed.v1.core.StdDevPop.expression","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-pop/expression.html","searchKeys":["expression","val expression: Expression<T>","org.jetbrains.exposed.v1.core.StdDevPop.expression"]},{"name":"val expression: Expression<T>","description":"org.jetbrains.exposed.v1.core.StdDevSamp.expression","location":"exposed-core/org.jetbrains.exposed.v1.core/-std-dev-samp/expression.html","searchKeys":["expression","val expression: Expression<T>","org.jetbrains.exposed.v1.core.StdDevSamp.expression"]},{"name":"val expression: Expression<T>","description":"org.jetbrains.exposed.v1.core.VarPop.expression","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-pop/expression.html","searchKeys":["expression","val expression: Expression<T>","org.jetbrains.exposed.v1.core.VarPop.expression"]},{"name":"val expression: Expression<T>","description":"org.jetbrains.exposed.v1.core.VarSamp.expression","location":"exposed-core/org.jetbrains.exposed.v1.core/-var-samp/expression.html","searchKeys":["expression","val expression: Expression<T>","org.jetbrains.exposed.v1.core.VarSamp.expression"]},{"name":"val expression: Expression<T>","description":"org.jetbrains.exposed.v1.core.functions.array.ArrayGet.expression","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-get/expression.html","searchKeys":["expression","val expression: Expression<T>","org.jetbrains.exposed.v1.core.functions.array.ArrayGet.expression"]},{"name":"val expression: Expression<T>","description":"org.jetbrains.exposed.v1.core.functions.array.ArraySlice.expression","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-slice/expression.html","searchKeys":["expression","val expression: Expression<T>","org.jetbrains.exposed.v1.core.functions.array.ArraySlice.expression"]},{"name":"val fieldIndex: Map<Expression<*>, Int>","description":"org.jetbrains.exposed.v1.core.ResultRow.fieldIndex","location":"exposed-core/org.jetbrains.exposed.v1.core/-result-row/field-index.html","searchKeys":["fieldIndex","val fieldIndex: Map<Expression<*>, Int>","org.jetbrains.exposed.v1.core.ResultRow.fieldIndex"]},{"name":"val fieldIndex: Map<String, Int>","description":"org.jetbrains.exposed.v1.core.ExplainResultRow.fieldIndex","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-result-row/field-index.html","searchKeys":["fieldIndex","val fieldIndex: Map<String, Int>","org.jetbrains.exposed.v1.core.ExplainResultRow.fieldIndex"]},{"name":"val filterCondition: Op<Boolean>? = null","description":"org.jetbrains.exposed.v1.core.Index.filterCondition","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/filter-condition.html","searchKeys":["filterCondition","val filterCondition: Op<Boolean>? = null","org.jetbrains.exposed.v1.core.Index.filterCondition"]},{"name":"val fkName: String","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.fkName","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/fk-name.html","searchKeys":["fkName","val fkName: String","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.fkName"]},{"name":"val foreignKeys: List<ForeignKeyConstraint>","description":"org.jetbrains.exposed.v1.core.Table.foreignKeys","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/foreign-keys.html","searchKeys":["foreignKeys","val foreignKeys: List<ForeignKeyConstraint>","org.jetbrains.exposed.v1.core.Table.foreignKeys"]},{"name":"val from: Expression<*>","description":"org.jetbrains.exposed.v1.core.Between.from","location":"exposed-core/org.jetbrains.exposed.v1.core/-between/from.html","searchKeys":["from","val from: Expression<*>","org.jetbrains.exposed.v1.core.Between.from"]},{"name":"val from: LinkedHashSet<Column<*>>","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.from","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/from.html","searchKeys":["from","val from: LinkedHashSet<Column<*>>","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.from"]},{"name":"val fromDb: (Any) -> T","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.fromDb","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/from-db.html","searchKeys":["fromDb","val fromDb: (Any) -> T","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.fromDb"]},{"name":"val fromTable: Table","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.fromTable","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/from-table.html","searchKeys":["fromTable","val fromTable: Table","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.fromTable"]},{"name":"val fromTableName: String","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.fromTableName","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/from-table-name.html","searchKeys":["fromTableName","val fromTableName: String","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.fromTableName"]},{"name":"val functionName: String","description":"org.jetbrains.exposed.v1.core.CustomFunction.functionName","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-function/function-name.html","searchKeys":["functionName","val functionName: String","org.jetbrains.exposed.v1.core.CustomFunction.functionName"]},{"name":"val functions: List<ExpressionWithColumnType<*>>? = null","description":"org.jetbrains.exposed.v1.core.Index.functions","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/functions.html","searchKeys":["functions","val functions: List<ExpressionWithColumnType<*>>? = null","org.jetbrains.exposed.v1.core.Index.functions"]},{"name":"val functionsTable: Table? = null","description":"org.jetbrains.exposed.v1.core.Index.functionsTable","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/functions-table.html","searchKeys":["functionsTable","val functionsTable: Table? = null","org.jetbrains.exposed.v1.core.Index.functionsTable"]},{"name":"val group: StatementGroup","description":"org.jetbrains.exposed.v1.core.statements.StatementType.group","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-type/group.html","searchKeys":["group","val group: StatementGroup","org.jetbrains.exposed.v1.core.statements.StatementType.group"]},{"name":"val h2Mode: H2Dialect.H2CompatibilityMode?","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.h2Mode","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/h2-mode.html","searchKeys":["h2Mode","val h2Mode: H2Dialect.H2CompatibilityMode?","org.jetbrains.exposed.v1.core.vendors.H2Dialect.h2Mode"]},{"name":"val id: String","description":"org.jetbrains.exposed.v1.core.Transaction.id","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/id.html","searchKeys":["id","val id: String","org.jetbrains.exposed.v1.core.Transaction.id"]},{"name":"val idColumn: Column<T>","description":"org.jetbrains.exposed.v1.core.EntityIDColumnType.idColumn","location":"exposed-core/org.jetbrains.exposed.v1.core/-entity-i-d-column-type/id-column.html","searchKeys":["idColumn","val idColumn: Column<T>","org.jetbrains.exposed.v1.core.EntityIDColumnType.idColumn"]},{"name":"val idColumns: Set<Column<out Any>>","description":"org.jetbrains.exposed.v1.core.dao.id.IdTable.idColumns","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-id-table/id-columns.html","searchKeys":["idColumns","val idColumns: Set<Column<out Any>>","org.jetbrains.exposed.v1.core.dao.id.IdTable.idColumns"]},{"name":"val identifier: String","description":"org.jetbrains.exposed.v1.core.Schema.identifier","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/identifier.html","searchKeys":["identifier","val identifier: String","org.jetbrains.exposed.v1.core.Schema.identifier"]},{"name":"val identifier: String","description":"org.jetbrains.exposed.v1.core.Sequence.identifier","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/identifier.html","searchKeys":["identifier","val identifier: String","org.jetbrains.exposed.v1.core.Sequence.identifier"]},{"name":"val incrementBy: Long? = null","description":"org.jetbrains.exposed.v1.core.Sequence.incrementBy","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/increment-by.html","searchKeys":["incrementBy","val incrementBy: Long? = null","org.jetbrains.exposed.v1.core.Sequence.incrementBy"]},{"name":"val index: Int","description":"org.jetbrains.exposed.v1.core.functions.array.ArrayGet.index","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-get/--index--.html","searchKeys":["index","val index: Int","org.jetbrains.exposed.v1.core.functions.array.ArrayGet.index"]},{"name":"val indexName: String","description":"org.jetbrains.exposed.v1.core.Index.indexName","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/index-name.html","searchKeys":["indexName","val indexName: String","org.jetbrains.exposed.v1.core.Index.indexName"]},{"name":"val indexType: String? = null","description":"org.jetbrains.exposed.v1.core.Index.indexType","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/index-type.html","searchKeys":["indexType","val indexType: String? = null","org.jetbrains.exposed.v1.core.Index.indexType"]},{"name":"val indices: List<Index>","description":"org.jetbrains.exposed.v1.core.Table.indices","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/indices.html","searchKeys":["indices","val indices: List<Index>","org.jetbrains.exposed.v1.core.Table.indices"]},{"name":"val init: Transaction.() -> T? = null","description":"org.jetbrains.exposed.v1.core.transactions.TransactionStore.init","location":"exposed-core/org.jetbrains.exposed.v1.core.transactions/-transaction-store/init.html","searchKeys":["init","val init: Transaction.() -> T? = null","org.jetbrains.exposed.v1.core.transactions.TransactionStore.init"]},{"name":"val isAny: Boolean","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.isAny","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-base-op/is-any.html","searchKeys":["isAny","val isAny: Boolean","org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.isAny"]},{"name":"val isIgnore: Boolean = false","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.isIgnore","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/is-ignore.html","searchKeys":["isIgnore","val isIgnore: Boolean = false","org.jetbrains.exposed.v1.core.statements.DeleteStatement.isIgnore"]},{"name":"val isIgnore: Boolean = false","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.isIgnore","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/is-ignore.html","searchKeys":["isIgnore","val isIgnore: Boolean = false","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.isIgnore"]},{"name":"val isIgnore: Boolean = false","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.isIgnore","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/is-ignore.html","searchKeys":["isIgnore","val isIgnore: Boolean = false","org.jetbrains.exposed.v1.core.statements.InsertStatement.isIgnore"]},{"name":"val isInList: Boolean = true","description":"org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.isInList","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-list-or-not-in-list-base-op/is-in-list.html","searchKeys":["isInList","val isInList: Boolean = true","org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.isInList"]},{"name":"val isInTable: Boolean = true","description":"org.jetbrains.exposed.v1.core.ops.InTableOp.isInTable","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-table-op/is-in-table.html","searchKeys":["isInTable","val isInTable: Boolean = true","org.jetbrains.exposed.v1.core.ops.InTableOp.isInTable"]},{"name":"val isSecondVersion: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.isSecondVersion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/is-second-version.html","searchKeys":["isSecondVersion","val isSecondVersion: Boolean","org.jetbrains.exposed.v1.core.vendors.H2Dialect.isSecondVersion"]},{"name":"val jdbcType: Int","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.jdbcType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/jdbc-type.html","searchKeys":["jdbcType","val jdbcType: Int","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.jdbcType"]},{"name":"val keys: Array<out Column<*>>","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.keys","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/keys.html","searchKeys":["keys","val keys: Array<out Column<*>>","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.keys"]},{"name":"val keys: Array<out Column<*>>","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.keys","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/keys.html","searchKeys":["keys","val keys: Array<out Column<*>>","org.jetbrains.exposed.v1.core.statements.UpsertStatement.keys"]},{"name":"val keywords: Set<String>","description":"org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.keywords","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-identifier-manager-api/keywords.html","searchKeys":["keywords","val keywords: Set<String>","org.jetbrains.exposed.v1.core.statements.api.IdentifierManagerApi.keywords"]},{"name":"val klass: KClass<T>","description":"org.jetbrains.exposed.v1.core.EnumerationColumnType.klass","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-column-type/klass.html","searchKeys":["klass","val klass: KClass<T>","org.jetbrains.exposed.v1.core.EnumerationColumnType.klass"]},{"name":"val klass: KClass<T>","description":"org.jetbrains.exposed.v1.core.EnumerationNameColumnType.klass","location":"exposed-core/org.jetbrains.exposed.v1.core/-enumeration-name-column-type/klass.html","searchKeys":["klass","val klass: KClass<T>","org.jetbrains.exposed.v1.core.EnumerationNameColumnType.klass"]},{"name":"val length: Expression<Int>","description":"org.jetbrains.exposed.v1.core.Substring.length","location":"exposed-core/org.jetbrains.exposed.v1.core/-substring/length.html","searchKeys":["length","val length: Expression<Int>","org.jetbrains.exposed.v1.core.Substring.length"]},{"name":"val length: Int","description":"org.jetbrains.exposed.v1.core.BinaryColumnType.length","location":"exposed-core/org.jetbrains.exposed.v1.core/-binary-column-type/length.html","searchKeys":["length","val length: Int","org.jetbrains.exposed.v1.core.BinaryColumnType.length"]},{"name":"val limit: Int?","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.limit","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/limit.html","searchKeys":["limit","val limit: Int?","org.jetbrains.exposed.v1.core.statements.UpdateStatement.limit"]},{"name":"val limit: Int? = null","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.limit","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/limit.html","searchKeys":["limit","val limit: Int? = null","org.jetbrains.exposed.v1.core.statements.DeleteStatement.limit"]},{"name":"val list: Iterable<V>","description":"org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.list","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-list-or-not-in-list-base-op/list.html","searchKeys":["list","val list: Iterable<V>","org.jetbrains.exposed.v1.core.ops.InListOrNotInListBaseOp.list"]},{"name":"val lower: Int?","description":"org.jetbrains.exposed.v1.core.functions.array.ArraySlice.lower","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-slice/lower.html","searchKeys":["lower","val lower: Int?","org.jetbrains.exposed.v1.core.functions.array.ArraySlice.lower"]},{"name":"val mainStatement: Statement<*>","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement.mainStatement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/main-statement.html","searchKeys":["mainStatement","val mainStatement: Statement<*>","org.jetbrains.exposed.v1.core.statements.ReturningStatement.mainStatement"]},{"name":"val majorVersion: H2Dialect.H2MajorVersion","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.majorVersion","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/major-version.html","searchKeys":["majorVersion","val majorVersion: H2Dialect.H2MajorVersion","org.jetbrains.exposed.v1.core.vendors.H2Dialect.majorVersion"]},{"name":"val maxValue: Long? = null","description":"org.jetbrains.exposed.v1.core.Sequence.maxValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/max-value.html","searchKeys":["maxValue","val maxValue: Long? = null","org.jetbrains.exposed.v1.core.Sequence.maxValue"]},{"name":"val maximumCardinality: List<Int>? = null","description":"org.jetbrains.exposed.v1.core.ArrayColumnType.maximumCardinality","location":"exposed-core/org.jetbrains.exposed.v1.core/-array-column-type/maximum-cardinality.html","searchKeys":["maximumCardinality","val maximumCardinality: List<Int>? = null","org.jetbrains.exposed.v1.core.ArrayColumnType.maximumCardinality"]},{"name":"val minValue: Long? = null","description":"org.jetbrains.exposed.v1.core.Sequence.minValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/min-value.html","searchKeys":["minValue","val minValue: Long? = null","org.jetbrains.exposed.v1.core.Sequence.minValue"]},{"name":"val n: ExpressionWithColumnType<Int>","description":"org.jetbrains.exposed.v1.core.NthValue.n","location":"exposed-core/org.jetbrains.exposed.v1.core/-nth-value/n.html","searchKeys":["n","val n: ExpressionWithColumnType<Int>","org.jetbrains.exposed.v1.core.NthValue.n"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.Column.name","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.Column.name"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.name","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.name"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.Sequence.name","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.Sequence.name"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.Table.PrimaryKey.name","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/-primary-key/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.Table.PrimaryKey.name"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedSavepoint.name","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-savepoint/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.statements.api.ExposedSavepoint.name"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.name"]},{"name":"val name: String","description":"org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata.name","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-primary-key-metadata/name.html","searchKeys":["name","val name: String","org.jetbrains.exposed.v1.core.vendors.PrimaryKeyMetadata.name"]},{"name":"val nextValExpression: NextVal<*>?","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.nextValExpression","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/next-val-expression.html","searchKeys":["nextValExpression","val nextValExpression: NextVal<*>?","org.jetbrains.exposed.v1.core.AutoIncColumnType.nextValExpression"]},{"name":"val nullability: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.nullability","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/nullability.html","searchKeys":["nullability","val nullability: Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.nullability"]},{"name":"val nullable: Boolean","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.nullable","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/nullable.html","searchKeys":["nullable","val nullable: Boolean","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.nullable"]},{"name":"val numBuckets: ExpressionWithColumnType<Int>","description":"org.jetbrains.exposed.v1.core.Ntile.numBuckets","location":"exposed-core/org.jetbrains.exposed.v1.core/-ntile/num-buckets.html","searchKeys":["numBuckets","val numBuckets: ExpressionWithColumnType<Int>","org.jetbrains.exposed.v1.core.Ntile.numBuckets"]},{"name":"val offset: ExpressionWithColumnType<Int>","description":"org.jetbrains.exposed.v1.core.Lag.offset","location":"exposed-core/org.jetbrains.exposed.v1.core/-lag/offset.html","searchKeys":["offset","val offset: ExpressionWithColumnType<Int>","org.jetbrains.exposed.v1.core.Lag.offset"]},{"name":"val offset: ExpressionWithColumnType<Int>","description":"org.jetbrains.exposed.v1.core.Lead.offset","location":"exposed-core/org.jetbrains.exposed.v1.core/-lead/offset.html","searchKeys":["offset","val offset: ExpressionWithColumnType<Int>","org.jetbrains.exposed.v1.core.Lead.offset"]},{"name":"val offset: Long? = null","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.offset","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/offset.html","searchKeys":["offset","val offset: Long? = null","org.jetbrains.exposed.v1.core.statements.DeleteStatement.offset"]},{"name":"val on: Op<Boolean>","description":"org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.on","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-select-statement/on.html","searchKeys":["on","val on: Op<Boolean>","org.jetbrains.exposed.v1.core.statements.MergeSelectStatement.on"]},{"name":"val on: String? = null","description":"org.jetbrains.exposed.v1.core.Schema.on","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/on.html","searchKeys":["on","val on: String? = null","org.jetbrains.exposed.v1.core.Schema.on"]},{"name":"val onUpdateExclude: List<Column<*>>?","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.onUpdateExclude","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/on-update-exclude.html","searchKeys":["onUpdateExclude","val onUpdateExclude: List<Column<*>>?","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.onUpdateExclude"]},{"name":"val onUpdateExclude: List<Column<*>>?","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.onUpdateExclude","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/on-update-exclude.html","searchKeys":["onUpdateExclude","val onUpdateExclude: List<Column<*>>?","org.jetbrains.exposed.v1.core.statements.UpsertStatement.onUpdateExclude"]},{"name":"val opSign: String","description":"org.jetbrains.exposed.v1.core.ComparisonOp.opSign","location":"exposed-core/org.jetbrains.exposed.v1.core/-comparison-op/op-sign.html","searchKeys":["opSign","val opSign: String","org.jetbrains.exposed.v1.core.ComparisonOp.opSign"]},{"name":"val operator: String","description":"org.jetbrains.exposed.v1.core.SubQueryOp.operator","location":"exposed-core/org.jetbrains.exposed.v1.core/-sub-query-op/operator.html","searchKeys":["operator","val operator: String","org.jetbrains.exposed.v1.core.SubQueryOp.operator"]},{"name":"val operatorName: String","description":"org.jetbrains.exposed.v1.core.CustomOperator.operatorName","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-operator/operator-name.html","searchKeys":["operatorName","val operatorName: String","org.jetbrains.exposed.v1.core.CustomOperator.operatorName"]},{"name":"val options: String?","description":"org.jetbrains.exposed.v1.core.ExplainQuery.options","location":"exposed-core/org.jetbrains.exposed.v1.core/-explain-query/options.html","searchKeys":["options","val options: String?","org.jetbrains.exposed.v1.core.ExplainQuery.options"]},{"name":"val orderBy: Array<out Pair<Expression<*>, SortOrder>>","description":"org.jetbrains.exposed.v1.core.GroupConcat.orderBy","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/order-by.html","searchKeys":["orderBy","val orderBy: Array<out Pair<Expression<*>, SortOrder>>","org.jetbrains.exposed.v1.core.GroupConcat.orderBy"]},{"name":"val originalColumnType: IColumnType<Any>","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.originalColumnType","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/original-column-type.html","searchKeys":["originalColumnType","val originalColumnType: IColumnType<Any>","org.jetbrains.exposed.v1.core.ColumnWithTransform.originalColumnType"]},{"name":"val originalDataTypeProvider: DataTypeProvider","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.originalDataTypeProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/original-data-type-provider.html","searchKeys":["originalDataTypeProvider","val originalDataTypeProvider: DataTypeProvider","org.jetbrains.exposed.v1.core.vendors.H2Dialect.originalDataTypeProvider"]},{"name":"val originalFunctionProvider: FunctionProvider","description":"org.jetbrains.exposed.v1.core.vendors.H2Dialect.originalFunctionProvider","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-h2-dialect/original-function-provider.html","searchKeys":["originalFunctionProvider","val originalFunctionProvider: FunctionProvider","org.jetbrains.exposed.v1.core.vendors.H2Dialect.originalFunctionProvider"]},{"name":"val overridingSystemValue: Boolean = false","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.overridingSystemValue","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/overriding-system-value.html","searchKeys":["overridingSystemValue","val overridingSystemValue: Boolean = false","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.overridingSystemValue"]},{"name":"val overridingUserValue: Boolean = false","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.overridingUserValue","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/overriding-user-value.html","searchKeys":["overridingUserValue","val overridingUserValue: Boolean = false","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.overridingUserValue"]},{"name":"val password: String? = null","description":"org.jetbrains.exposed.v1.core.Schema.password","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/password.html","searchKeys":["password","val password: String? = null","org.jetbrains.exposed.v1.core.Schema.password"]},{"name":"val pattern: String","description":"org.jetbrains.exposed.v1.core.LikePattern.pattern","location":"exposed-core/org.jetbrains.exposed.v1.core/-like-pattern/pattern.html","searchKeys":["pattern","val pattern: String","org.jetbrains.exposed.v1.core.LikePattern.pattern"]},{"name":"val precision: Int","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.precision","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/precision.html","searchKeys":["precision","val precision: Int","org.jetbrains.exposed.v1.core.DecimalColumnType.precision"]},{"name":"val prepared: Boolean","description":"org.jetbrains.exposed.v1.core.QueryBuilder.prepared","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-builder/prepared.html","searchKeys":["prepared","val prepared: Boolean","org.jetbrains.exposed.v1.core.QueryBuilder.prepared"]},{"name":"val query: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.core.Exists.query","location":"exposed-core/org.jetbrains.exposed.v1.core/-exists/query.html","searchKeys":["query","val query: AbstractQuery<*>","org.jetbrains.exposed.v1.core.Exists.query"]},{"name":"val query: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.core.NotExists.query","location":"exposed-core/org.jetbrains.exposed.v1.core/-not-exists/query.html","searchKeys":["query","val query: AbstractQuery<*>","org.jetbrains.exposed.v1.core.NotExists.query"]},{"name":"val query: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.core.QueryAlias.query","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-alias/query.html","searchKeys":["query","val query: AbstractQuery<*>","org.jetbrains.exposed.v1.core.QueryAlias.query"]},{"name":"val query: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.core.SubQueryOp.query","location":"exposed-core/org.jetbrains.exposed.v1.core/-sub-query-op/query.html","searchKeys":["query","val query: AbstractQuery<*>","org.jetbrains.exposed.v1.core.SubQueryOp.query"]},{"name":"val quota: String? = null","description":"org.jetbrains.exposed.v1.core.Schema.quota","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/quota.html","searchKeys":["quota","val quota: String? = null","org.jetbrains.exposed.v1.core.Schema.quota"]},{"name":"val references: Map<Column<*>, Column<*>>","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.references","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/references.html","searchKeys":["references","val references: Map<Column<*>, Column<*>>","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.references"]},{"name":"val resultSet: ResultApi","description":"org.jetbrains.exposed.v1.core.statements.StatementResult.Object.resultSet","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-result/-object/result-set.html","searchKeys":["resultSet","val resultSet: ResultApi","org.jetbrains.exposed.v1.core.statements.StatementResult.Object.resultSet"]},{"name":"val returningExpressions: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement.returningExpressions","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/returning-expressions.html","searchKeys":["returningExpressions","val returningExpressions: List<Expression<*>>","org.jetbrains.exposed.v1.core.statements.ReturningStatement.returningExpressions"]},{"name":"val scale: Int","description":"org.jetbrains.exposed.v1.core.DecimalColumnType.scale","location":"exposed-core/org.jetbrains.exposed.v1.core/-decimal-column-type/scale.html","searchKeys":["scale","val scale: Int","org.jetbrains.exposed.v1.core.DecimalColumnType.scale"]},{"name":"val scale: Int?","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.scale","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/scale.html","searchKeys":["scale","val scale: Int?","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.scale"]},{"name":"val schemaName: String","description":"org.jetbrains.exposed.v1.core.vendors.SchemaMetadata.schemaName","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-schema-metadata/schema-name.html","searchKeys":["schemaName","val schemaName: String","org.jetbrains.exposed.v1.core.vendors.SchemaMetadata.schemaName"]},{"name":"val schemaName: String?","description":"org.jetbrains.exposed.v1.core.Table.schemaName","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/schema-name.html","searchKeys":["schemaName","val schemaName: String?","org.jetbrains.exposed.v1.core.Table.schemaName"]},{"name":"val seed: Int? = null","description":"org.jetbrains.exposed.v1.core.Random.seed","location":"exposed-core/org.jetbrains.exposed.v1.core/-random/seed.html","searchKeys":["seed","val seed: Int? = null","org.jetbrains.exposed.v1.core.Random.seed"]},{"name":"val selectQuery: AbstractQuery<*>","description":"org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.selectQuery","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-select-statement/select-query.html","searchKeys":["selectQuery","val selectQuery: AbstractQuery<*>","org.jetbrains.exposed.v1.core.statements.InsertSelectStatement.selectQuery"]},{"name":"val separator: String","description":"org.jetbrains.exposed.v1.core.Concat.separator","location":"exposed-core/org.jetbrains.exposed.v1.core/-concat/separator.html","searchKeys":["separator","val separator: String","org.jetbrains.exposed.v1.core.Concat.separator"]},{"name":"val separator: String?","description":"org.jetbrains.exposed.v1.core.GroupConcat.separator","location":"exposed-core/org.jetbrains.exposed.v1.core/-group-concat/separator.html","searchKeys":["separator","val separator: String?","org.jetbrains.exposed.v1.core.GroupConcat.separator"]},{"name":"val seq: Sequence","description":"org.jetbrains.exposed.v1.core.NextVal.seq","location":"exposed-core/org.jetbrains.exposed.v1.core/-next-val/seq.html","searchKeys":["seq","val seq: Sequence","org.jetbrains.exposed.v1.core.NextVal.seq"]},{"name":"val sequence: Sequence?","description":"org.jetbrains.exposed.v1.core.AutoIncColumnType.sequence","location":"exposed-core/org.jetbrains.exposed.v1.core/-auto-inc-column-type/sequence.html","searchKeys":["sequence","val sequence: Sequence?","org.jetbrains.exposed.v1.core.AutoIncColumnType.sequence"]},{"name":"val sequences: List<Sequence>","description":"org.jetbrains.exposed.v1.core.Table.sequences","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/sequences.html","searchKeys":["sequences","val sequences: List<Sequence>","org.jetbrains.exposed.v1.core.Table.sequences"]},{"name":"val shouldReturnGeneratedValues: Boolean = true","description":"org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.shouldReturnGeneratedValues","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-base-batch-insert-statement/should-return-generated-values.html","searchKeys":["shouldReturnGeneratedValues","val shouldReturnGeneratedValues: Boolean = true","org.jetbrains.exposed.v1.core.statements.BaseBatchInsertStatement.shouldReturnGeneratedValues"]},{"name":"val size: Int?","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.size","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/size.html","searchKeys":["size","val size: Int?","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.size"]},{"name":"val sizeAndScale: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.sizeAndScale","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/size-and-scale.html","searchKeys":["sizeAndScale","val sizeAndScale: Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.sizeAndScale"]},{"name":"val sql: String?","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.sql","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/sql.html","searchKeys":["sql","val sql: String?","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.sql"]},{"name":"val sqlType: IColumnType<T & Any>","description":"org.jetbrains.exposed.v1.core.QueryParameter.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-parameter/sql-type.html","searchKeys":["sqlType","val sqlType: IColumnType<T & Any>","org.jetbrains.exposed.v1.core.QueryParameter.sqlType"]},{"name":"val sqlType: String","description":"org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.sqlType","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-column-metadata/sql-type.html","searchKeys":["sqlType","val sqlType: String","org.jetbrains.exposed.v1.core.vendors.ColumnMetadata.sqlType"]},{"name":"val startWith: Long? = null","description":"org.jetbrains.exposed.v1.core.Sequence.startWith","location":"exposed-core/org.jetbrains.exposed.v1.core/-sequence/start-with.html","searchKeys":["startWith","val startWith: Long? = null","org.jetbrains.exposed.v1.core.Sequence.startWith"]},{"name":"val statement: Statement<*>","description":"org.jetbrains.exposed.v1.core.statements.StatementContext.statement","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement-context/statement.html","searchKeys":["statement","val statement: Statement<*>","org.jetbrains.exposed.v1.core.statements.StatementContext.statement"]},{"name":"val statementStats: HashMap<String, Pair<Int, Long>>","description":"org.jetbrains.exposed.v1.core.Transaction.statementStats","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/statement-stats.html","searchKeys":["statementStats","val statementStats: HashMap<String, Pair<Int, Long>>","org.jetbrains.exposed.v1.core.Transaction.statementStats"]},{"name":"val statements: StringBuilder","description":"org.jetbrains.exposed.v1.core.Transaction.statements","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/statements.html","searchKeys":["statements","val statements: StringBuilder","org.jetbrains.exposed.v1.core.Transaction.statements"]},{"name":"val subSearch: SubSearch","description":"org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.subSearch","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-all-any-from-base-op/sub-search.html","searchKeys":["subSearch","val subSearch: SubSearch","org.jetbrains.exposed.v1.core.ops.AllAnyFromBaseOp.subSearch"]},{"name":"val substring: String","description":"org.jetbrains.exposed.v1.core.Locate.substring","location":"exposed-core/org.jetbrains.exposed.v1.core/-locate/substring.html","searchKeys":["substring","val substring: String","org.jetbrains.exposed.v1.core.Locate.substring"]},{"name":"val table: ColumnSet","description":"org.jetbrains.exposed.v1.core.Join.table","location":"exposed-core/org.jetbrains.exposed.v1.core/-join/table.html","searchKeys":["table","val table: ColumnSet","org.jetbrains.exposed.v1.core.Join.table"]},{"name":"val table: IdTable<*>","description":"org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.table","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-update-statement/table.html","searchKeys":["table","val table: IdTable<*>","org.jetbrains.exposed.v1.core.statements.BatchUpdateStatement.table"]},{"name":"val table: IdTable<T>","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID.table","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/table.html","searchKeys":["table","val table: IdTable<T>","org.jetbrains.exposed.v1.core.dao.id.EntityID.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.Column.table","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.Column.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.Index.table","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.Index.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.ops.InTableOp.table","location":"exposed-core/org.jetbrains.exposed.v1.core.ops/-in-table-op/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.ops.InTableOp.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.table","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.statements.DeleteStatement.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.table","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.statements.InsertStatement.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.table","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.statements.MergeStatement.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.core.statements.ReturningStatement.table","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-returning-statement/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.core.statements.ReturningStatement.table"]},{"name":"val tableName: String","description":"org.jetbrains.exposed.v1.core.CheckConstraint.tableName","location":"exposed-core/org.jetbrains.exposed.v1.core/-check-constraint/table-name.html","searchKeys":["tableName","val tableName: String","org.jetbrains.exposed.v1.core.CheckConstraint.tableName"]},{"name":"val tableNameWithAlias: String","description":"org.jetbrains.exposed.v1.core.Alias.tableNameWithAlias","location":"exposed-core/org.jetbrains.exposed.v1.core/-alias/table-name-with-alias.html","searchKeys":["tableNameWithAlias","val tableNameWithAlias: String","org.jetbrains.exposed.v1.core.Alias.tableNameWithAlias"]},{"name":"val tableNameWithoutScheme: String","description":"org.jetbrains.exposed.v1.core.Table.tableNameWithoutScheme","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/table-name-without-scheme.html","searchKeys":["tableNameWithoutScheme","val tableNameWithoutScheme: String","org.jetbrains.exposed.v1.core.Table.tableNameWithoutScheme"]},{"name":"val tableNameWithoutSchemeSanitized: String","description":"org.jetbrains.exposed.v1.core.Table.tableNameWithoutSchemeSanitized","location":"exposed-core/org.jetbrains.exposed.v1.core/-table/table-name-without-scheme-sanitized.html","searchKeys":["tableNameWithoutSchemeSanitized","val tableNameWithoutSchemeSanitized: String","org.jetbrains.exposed.v1.core.Table.tableNameWithoutSchemeSanitized"]},{"name":"val tableNames: List<String>","description":"org.jetbrains.exposed.v1.core.vendors.SchemaMetadata.tableNames","location":"exposed-core/org.jetbrains.exposed.v1.core.vendors/-schema-metadata/table-names.html","searchKeys":["tableNames","val tableNames: List<String>","org.jetbrains.exposed.v1.core.vendors.SchemaMetadata.tableNames"]},{"name":"val target: LinkedHashSet<Column<*>>","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.target","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/target.html","searchKeys":["target","val target: LinkedHashSet<Column<*>>","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.target"]},{"name":"val targetTable: Table","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.targetTable","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/target-table.html","searchKeys":["targetTable","val targetTable: Table","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.targetTable"]},{"name":"val targetTableName: String","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.targetTableName","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/target-table-name.html","searchKeys":["targetTableName","val targetTableName: String","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.targetTableName"]},{"name":"val targetTables: List<Table>","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.targetTables","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/target-tables.html","searchKeys":["targetTables","val targetTables: List<Table>","org.jetbrains.exposed.v1.core.statements.DeleteStatement.targetTables"]},{"name":"val targets: List<Table>","description":"org.jetbrains.exposed.v1.core.statements.Statement.targets","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement/targets.html","searchKeys":["targets","val targets: List<Table>","org.jetbrains.exposed.v1.core.statements.Statement.targets"]},{"name":"val targetsSet: ColumnSet","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.targetsSet","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/targets-set.html","searchKeys":["targetsSet","val targetsSet: ColumnSet","org.jetbrains.exposed.v1.core.statements.DeleteStatement.targetsSet"]},{"name":"val targetsSet: ColumnSet","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.targetsSet","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/targets-set.html","searchKeys":["targetsSet","val targetsSet: ColumnSet","org.jetbrains.exposed.v1.core.statements.UpdateStatement.targetsSet"]},{"name":"val temporaryTablespace: String? = null","description":"org.jetbrains.exposed.v1.core.Schema.temporaryTablespace","location":"exposed-core/org.jetbrains.exposed.v1.core/-schema/temporary-tablespace.html","searchKeys":["temporaryTablespace","val temporaryTablespace: String? = null","org.jetbrains.exposed.v1.core.Schema.temporaryTablespace"]},{"name":"val to: Expression<*>","description":"org.jetbrains.exposed.v1.core.Between.to","location":"exposed-core/org.jetbrains.exposed.v1.core/-between/to.html","searchKeys":["to","val to: Expression<*>","org.jetbrains.exposed.v1.core.Between.to"]},{"name":"val toDb: (T) -> Any","description":"org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.toDb","location":"exposed-core/org.jetbrains.exposed.v1.core/-custom-enumeration-column-type/to-db.html","searchKeys":["toDb","val toDb: (T) -> Any","org.jetbrains.exposed.v1.core.CustomEnumerationColumnType.toDb"]},{"name":"val transformFromValue: (T) -> Pair<C1?, C2?>","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn.transformFromValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/transform-from-value.html","searchKeys":["transformFromValue","val transformFromValue: (T) -> Pair<C1?, C2?>","org.jetbrains.exposed.v1.core.BiCompositeColumn.transformFromValue"]},{"name":"val transformToValue: (Any?, Any?) -> T","description":"org.jetbrains.exposed.v1.core.BiCompositeColumn.transformToValue","location":"exposed-core/org.jetbrains.exposed.v1.core/-bi-composite-column/transform-to-value.html","searchKeys":["transformToValue","val transformToValue: (Any?, Any?) -> T","org.jetbrains.exposed.v1.core.BiCompositeColumn.transformToValue"]},{"name":"val transformer: ColumnTransformer<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.core.ColumnWithTransform.transformer","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-with-transform/transformer.html","searchKeys":["transformer","val transformer: ColumnTransformer<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.core.ColumnWithTransform.transformer"]},{"name":"val type: Boolean","description":"org.jetbrains.exposed.v1.core.ColumnDiff.type","location":"exposed-core/org.jetbrains.exposed.v1.core/-column-diff/type.html","searchKeys":["type","val type: Boolean","org.jetbrains.exposed.v1.core.ColumnDiff.type"]},{"name":"val type: MergeStatement.ClauseCondition","description":"org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.type","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-merge-statement/-clause/type.html","searchKeys":["type","val type: MergeStatement.ClauseCondition","org.jetbrains.exposed.v1.core.statements.MergeStatement.Clause.type"]},{"name":"val type: StatementType","description":"org.jetbrains.exposed.v1.core.statements.Statement.type","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-statement/type.html","searchKeys":["type","val type: StatementType","org.jetbrains.exposed.v1.core.statements.Statement.type"]},{"name":"val unique: Boolean","description":"org.jetbrains.exposed.v1.core.Index.unique","location":"exposed-core/org.jetbrains.exposed.v1.core/-index/unique.html","searchKeys":["unique","val unique: Boolean","org.jetbrains.exposed.v1.core.Index.unique"]},{"name":"val updateRule: ReferenceOption?","description":"org.jetbrains.exposed.v1.core.ForeignKeyConstraint.updateRule","location":"exposed-core/org.jetbrains.exposed.v1.core/-foreign-key-constraint/update-rule.html","searchKeys":["updateRule","val updateRule: ReferenceOption?","org.jetbrains.exposed.v1.core.ForeignKeyConstraint.updateRule"]},{"name":"val upper: Int?","description":"org.jetbrains.exposed.v1.core.functions.array.ArraySlice.upper","location":"exposed-core/org.jetbrains.exposed.v1.core.functions.array/-array-slice/upper.html","searchKeys":["upper","val upper: Int?","org.jetbrains.exposed.v1.core.functions.array.ArraySlice.upper"]},{"name":"val useNestedTransactions: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseApi.useNestedTransactions","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/use-nested-transactions.html","searchKeys":["useNestedTransactions","val useNestedTransactions: Boolean","org.jetbrains.exposed.v1.core.DatabaseApi.useNestedTransactions"]},{"name":"val useObjectIdentifier: Boolean = false","description":"org.jetbrains.exposed.v1.core.BlobColumnType.useObjectIdentifier","location":"exposed-core/org.jetbrains.exposed.v1.core/-blob-column-type/use-object-identifier.html","searchKeys":["useObjectIdentifier","val useObjectIdentifier: Boolean = false","org.jetbrains.exposed.v1.core.BlobColumnType.useObjectIdentifier"]},{"name":"val value: Expression<*>?","description":"org.jetbrains.exposed.v1.core.CaseWhen.value","location":"exposed-core/org.jetbrains.exposed.v1.core/-case-when/value.html","searchKeys":["value","val value: Expression<*>?","org.jetbrains.exposed.v1.core.CaseWhen.value"]},{"name":"val value: Expression<*>? = null","description":"org.jetbrains.exposed.v1.core.Case.value","location":"exposed-core/org.jetbrains.exposed.v1.core/-case/value.html","searchKeys":["value","val value: Expression<*>? = null","org.jetbrains.exposed.v1.core.Case.value"]},{"name":"val value: T","description":"org.jetbrains.exposed.v1.core.LiteralOp.value","location":"exposed-core/org.jetbrains.exposed.v1.core/-literal-op/value.html","searchKeys":["value","val value: T","org.jetbrains.exposed.v1.core.LiteralOp.value"]},{"name":"val value: T","description":"org.jetbrains.exposed.v1.core.QueryParameter.value","location":"exposed-core/org.jetbrains.exposed.v1.core/-query-parameter/value.html","searchKeys":["value","val value: T","org.jetbrains.exposed.v1.core.QueryParameter.value"]},{"name":"val value: T","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID.value","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/value.html","searchKeys":["value","val value: T","org.jetbrains.exposed.v1.core.dao.id.EntityID.value"]},{"name":"val values: MutableMap<Column<*>, Any?>","description":"org.jetbrains.exposed.v1.core.statements.UpdateBuilder.values","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-builder/values.html","searchKeys":["values","val values: MutableMap<Column<*>, Any?>","org.jetbrains.exposed.v1.core.statements.UpdateBuilder.values"]},{"name":"val where: Op<Boolean>?","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.where","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/where.html","searchKeys":["where","val where: Op<Boolean>?","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.where"]},{"name":"val where: Op<Boolean>?","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.where","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/where.html","searchKeys":["where","val where: Op<Boolean>?","org.jetbrains.exposed.v1.core.statements.UpsertStatement.where"]},{"name":"val where: Op<Boolean>? = null","description":"org.jetbrains.exposed.v1.core.statements.DeleteStatement.where","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-delete-statement/where.html","searchKeys":["where","val where: Op<Boolean>? = null","org.jetbrains.exposed.v1.core.statements.DeleteStatement.where"]},{"name":"val where: Op<Boolean>? = null","description":"org.jetbrains.exposed.v1.core.statements.UpdateStatement.where","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-update-statement/where.html","searchKeys":["where","val where: Op<Boolean>? = null","org.jetbrains.exposed.v1.core.statements.UpdateStatement.where"]},{"name":"var _value: Any?","description":"org.jetbrains.exposed.v1.core.dao.id.EntityID._value","location":"exposed-core/org.jetbrains.exposed.v1.core.dao.id/-entity-i-d/_value.html","searchKeys":["_value","var _value: Any?","org.jetbrains.exposed.v1.core.dao.id.EntityID._value"]},{"name":"var comments: Map<AbstractQuery.CommentPosition, String>","description":"org.jetbrains.exposed.v1.core.AbstractQuery.comments","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/comments.html","searchKeys":["comments","var comments: Map<AbstractQuery.CommentPosition, String>","org.jetbrains.exposed.v1.core.AbstractQuery.comments"]},{"name":"var debug: Boolean","description":"org.jetbrains.exposed.v1.core.Transaction.debug","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/debug.html","searchKeys":["debug","var debug: Boolean","org.jetbrains.exposed.v1.core.Transaction.debug"]},{"name":"var defaultFetchSize: Int?","description":"org.jetbrains.exposed.v1.core.DatabaseApi.defaultFetchSize","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-api/default-fetch-size.html","searchKeys":["defaultFetchSize","var defaultFetchSize: Int?","org.jetbrains.exposed.v1.core.DatabaseApi.defaultFetchSize"]},{"name":"var defaultFetchSize: Int?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultFetchSize","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-fetch-size.html","searchKeys":["defaultFetchSize","var defaultFetchSize: Int?","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultFetchSize"]},{"name":"var defaultMaxAttempts: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultMaxAttempts","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-max-attempts.html","searchKeys":["defaultMaxAttempts","var defaultMaxAttempts: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultMaxAttempts"]},{"name":"var defaultMaxRetryDelay: Long","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultMaxRetryDelay","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-max-retry-delay.html","searchKeys":["defaultMaxRetryDelay","var defaultMaxRetryDelay: Long","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultMaxRetryDelay"]},{"name":"var defaultMinRetryDelay: Long","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultMinRetryDelay","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-min-retry-delay.html","searchKeys":["defaultMinRetryDelay","var defaultMinRetryDelay: Long","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultMinRetryDelay"]},{"name":"var defaultReadOnly: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultReadOnly","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-read-only.html","searchKeys":["defaultReadOnly","var defaultReadOnly: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultReadOnly"]},{"name":"var defaultSchema: Schema?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultSchema","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/default-schema.html","searchKeys":["defaultSchema","var defaultSchema: Schema?","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.defaultSchema"]},{"name":"var defaultValueFun: () -> T?","description":"org.jetbrains.exposed.v1.core.Column.defaultValueFun","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/default-value-fun.html","searchKeys":["defaultValueFun","var defaultValueFun: () -> T?","org.jetbrains.exposed.v1.core.Column.defaultValueFun"]},{"name":"var distinct: Boolean","description":"org.jetbrains.exposed.v1.core.AbstractQuery.distinct","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/distinct.html","searchKeys":["distinct","var distinct: Boolean","org.jetbrains.exposed.v1.core.AbstractQuery.distinct"]},{"name":"var distinctOn: List<Column<*>>?","description":"org.jetbrains.exposed.v1.core.AbstractQuery.distinctOn","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/distinct-on.html","searchKeys":["distinctOn","var distinctOn: List<Column<*>>?","org.jetbrains.exposed.v1.core.AbstractQuery.distinctOn"]},{"name":"var duration: Long","description":"org.jetbrains.exposed.v1.core.Transaction.duration","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/duration.html","searchKeys":["duration","var duration: Long","org.jetbrains.exposed.v1.core.Transaction.duration"]},{"name":"var explicitDialect: DatabaseDialect?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.explicitDialect","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/explicit-dialect.html","searchKeys":["explicitDialect","var explicitDialect: DatabaseDialect?","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.explicitDialect"]},{"name":"var fetchSize: Int?","description":"org.jetbrains.exposed.v1.core.AbstractQuery.fetchSize","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/fetch-size.html","searchKeys":["fetchSize","var fetchSize: Int?","org.jetbrains.exposed.v1.core.AbstractQuery.fetchSize"]},{"name":"var foreignKey: ForeignKeyConstraint?","description":"org.jetbrains.exposed.v1.core.Column.foreignKey","location":"exposed-core/org.jetbrains.exposed.v1.core/-column/foreign-key.html","searchKeys":["foreignKey","var foreignKey: ForeignKeyConstraint?","org.jetbrains.exposed.v1.core.Column.foreignKey"]},{"name":"var groupedByColumns: List<Expression<*>>","description":"org.jetbrains.exposed.v1.core.AbstractQuery.groupedByColumns","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/grouped-by-columns.html","searchKeys":["groupedByColumns","var groupedByColumns: List<Expression<*>>","org.jetbrains.exposed.v1.core.AbstractQuery.groupedByColumns"]},{"name":"var having: Op<Boolean>?","description":"org.jetbrains.exposed.v1.core.AbstractQuery.having","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/having.html","searchKeys":["having","var having: Op<Boolean>?","org.jetbrains.exposed.v1.core.AbstractQuery.having"]},{"name":"var inputStream: InputStream","description":"org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.inputStream","location":"exposed-core/org.jetbrains.exposed.v1.core.statements.api/-exposed-blob/input-stream.html","searchKeys":["inputStream","var inputStream: InputStream","org.jetbrains.exposed.v1.core.statements.api.ExposedBlob.inputStream"]},{"name":"var insertedCount: Int","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.insertedCount","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/inserted-count.html","searchKeys":["insertedCount","var insertedCount: Int","org.jetbrains.exposed.v1.core.statements.InsertStatement.insertedCount"]},{"name":"var keepLoadedReferencesOutOfTransaction: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.keepLoadedReferencesOutOfTransaction","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/keep-loaded-references-out-of-transaction.html","searchKeys":["keepLoadedReferencesOutOfTransaction","var keepLoadedReferencesOutOfTransaction: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.keepLoadedReferencesOutOfTransaction"]},{"name":"var limit: Int?","description":"org.jetbrains.exposed.v1.core.AbstractQuery.limit","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/limit.html","searchKeys":["limit","var limit: Int?","org.jetbrains.exposed.v1.core.AbstractQuery.limit"]},{"name":"var logTooMuchResultSetsThreshold: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.logTooMuchResultSetsThreshold","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/log-too-much-result-sets-threshold.html","searchKeys":["logTooMuchResultSetsThreshold","var logTooMuchResultSetsThreshold: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.logTooMuchResultSetsThreshold"]},{"name":"var maxEntitiesToStoreInCachePerEntity: Int","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.maxEntitiesToStoreInCachePerEntity","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/max-entities-to-store-in-cache-per-entity.html","searchKeys":["maxEntitiesToStoreInCachePerEntity","var maxEntitiesToStoreInCachePerEntity: Int","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.maxEntitiesToStoreInCachePerEntity"]},{"name":"var offset: Long","description":"org.jetbrains.exposed.v1.core.AbstractQuery.offset","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/offset.html","searchKeys":["offset","var offset: Long","org.jetbrains.exposed.v1.core.AbstractQuery.offset"]},{"name":"var onUpdate: List<Pair<Column<*>, Expression<*>>>?","description":"org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.onUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-batch-upsert-statement/on-update.html","searchKeys":["onUpdate","var onUpdate: List<Pair<Column<*>, Expression<*>>>?","org.jetbrains.exposed.v1.core.statements.BatchUpsertStatement.onUpdate"]},{"name":"var onUpdate: List<Pair<Column<*>, Expression<*>>>?","description":"org.jetbrains.exposed.v1.core.statements.UpsertStatement.onUpdate","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-upsert-statement/on-update.html","searchKeys":["onUpdate","var onUpdate: List<Pair<Column<*>, Expression<*>>>?","org.jetbrains.exposed.v1.core.statements.UpsertStatement.onUpdate"]},{"name":"var orderByExpressions: List<Pair<Expression<*>, SortOrder>>","description":"org.jetbrains.exposed.v1.core.AbstractQuery.orderByExpressions","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/order-by-expressions.html","searchKeys":["orderByExpressions","var orderByExpressions: List<Pair<Expression<*>, SortOrder>>","org.jetbrains.exposed.v1.core.AbstractQuery.orderByExpressions"]},{"name":"var preserveKeywordCasing: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.preserveKeywordCasing","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/preserve-keyword-casing.html","searchKeys":["preserveKeywordCasing","var preserveKeywordCasing: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.preserveKeywordCasing"]},{"name":"var queryTimeout: Int?","description":"org.jetbrains.exposed.v1.core.Transaction.queryTimeout","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/query-timeout.html","searchKeys":["queryTimeout","var queryTimeout: Int?","org.jetbrains.exposed.v1.core.Transaction.queryTimeout"]},{"name":"var resultedValues: List<ResultRow>?","description":"org.jetbrains.exposed.v1.core.statements.InsertStatement.resultedValues","location":"exposed-core/org.jetbrains.exposed.v1.core.statements/-insert-statement/resulted-values.html","searchKeys":["resultedValues","var resultedValues: List<ResultRow>?","org.jetbrains.exposed.v1.core.statements.InsertStatement.resultedValues"]},{"name":"var sqlLogger: SqlLogger?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.sqlLogger","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/sql-logger.html","searchKeys":["sqlLogger","var sqlLogger: SqlLogger?","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.sqlLogger"]},{"name":"var statementCount: Int","description":"org.jetbrains.exposed.v1.core.Transaction.statementCount","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/statement-count.html","searchKeys":["statementCount","var statementCount: Int","org.jetbrains.exposed.v1.core.Transaction.statementCount"]},{"name":"var useNestedTransactions: Boolean","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.useNestedTransactions","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/use-nested-transactions.html","searchKeys":["useNestedTransactions","var useNestedTransactions: Boolean","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.useNestedTransactions"]},{"name":"var warnLongQueriesDuration: Long?","description":"org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.warnLongQueriesDuration","location":"exposed-core/org.jetbrains.exposed.v1.core/-database-config/-builder/warn-long-queries-duration.html","searchKeys":["warnLongQueriesDuration","var warnLongQueriesDuration: Long?","org.jetbrains.exposed.v1.core.DatabaseConfig.Builder.warnLongQueriesDuration"]},{"name":"var warnLongQueriesDuration: Long?","description":"org.jetbrains.exposed.v1.core.Transaction.warnLongQueriesDuration","location":"exposed-core/org.jetbrains.exposed.v1.core/-transaction/warn-long-queries-duration.html","searchKeys":["warnLongQueriesDuration","var warnLongQueriesDuration: Long?","org.jetbrains.exposed.v1.core.Transaction.warnLongQueriesDuration"]},{"name":"var where: Op<Boolean>?","description":"org.jetbrains.exposed.v1.core.AbstractQuery.where","location":"exposed-core/org.jetbrains.exposed.v1.core/-abstract-query/where.html","searchKeys":["where","var where: Op<Boolean>?","org.jetbrains.exposed.v1.core.AbstractQuery.where"]},{"name":"class Contains(val target: Expression<*>, val candidate: Expression<*>, val path: String?, val jsonType: IColumnType<*>) : Op<Boolean> , ComplexExpression","description":"org.jetbrains.exposed.v1.json.Contains","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/index.html","searchKeys":["Contains","class Contains(val target: Expression<*>, val candidate: Expression<*>, val path: String?, val jsonType: IColumnType<*>) : Op<Boolean> , ComplexExpression","org.jetbrains.exposed.v1.json.Contains"]},{"name":"class Exists(val expression: Expression<*>, val path: String, val optional: String?, val jsonType: IColumnType<*>) : Op<Boolean> , ComplexExpression","description":"org.jetbrains.exposed.v1.json.Exists","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/index.html","searchKeys":["Exists","class Exists(val expression: Expression<*>, val path: String, val optional: String?, val jsonType: IColumnType<*>) : Op<Boolean> , ComplexExpression","org.jetbrains.exposed.v1.json.Exists"]},{"name":"class Extract<T>(val expression: Expression<*>, val path: String, val toScalar: Boolean, val jsonType: IColumnType<*>, columnType: IColumnType<T & Any>) : Function<T> ","description":"org.jetbrains.exposed.v1.json.Extract","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/index.html","searchKeys":["Extract","class Extract<T>(val expression: Expression<*>, val path: String, val toScalar: Boolean, val jsonType: IColumnType<*>, columnType: IColumnType<T & Any>) : Function<T> ","org.jetbrains.exposed.v1.json.Extract"]},{"name":"class JsonBColumnType<T : Any>(serialize: (T) -> String, deserialize: (String) -> T) : JsonColumnType<T> ","description":"org.jetbrains.exposed.v1.json.JsonBColumnType","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-b-column-type/index.html","searchKeys":["JsonBColumnType","class JsonBColumnType<T : Any>(serialize: (T) -> String, deserialize: (String) -> T) : JsonColumnType<T> ","org.jetbrains.exposed.v1.json.JsonBColumnType"]},{"name":"constructor(expression: Expression<*>, vararg path: String, optional: String?, jsonType: IColumnType<*>)","description":"org.jetbrains.exposed.v1.json.Exists.Exists","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/-exists.html","searchKeys":["Exists","constructor(expression: Expression<*>, vararg path: String, optional: String?, jsonType: IColumnType<*>)","org.jetbrains.exposed.v1.json.Exists.Exists"]},{"name":"constructor(expression: Expression<*>, vararg path: String, toScalar: Boolean, jsonType: IColumnType<*>, columnType: IColumnType<T & Any>)","description":"org.jetbrains.exposed.v1.json.Extract.Extract","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/-extract.html","searchKeys":["Extract","constructor(expression: Expression<*>, vararg path: String, toScalar: Boolean, jsonType: IColumnType<*>, columnType: IColumnType<T & Any>)","org.jetbrains.exposed.v1.json.Extract.Extract"]},{"name":"constructor(serialize: (T) -> String, deserialize: (String) -> T)","description":"org.jetbrains.exposed.v1.json.JsonBColumnType.JsonBColumnType","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-b-column-type/-json-b-column-type.html","searchKeys":["JsonBColumnType","constructor(serialize: (T) -> String, deserialize: (String) -> T)","org.jetbrains.exposed.v1.json.JsonBColumnType.JsonBColumnType"]},{"name":"constructor(serialize: (T) -> String, deserialize: (String) -> T)","description":"org.jetbrains.exposed.v1.json.JsonColumnType.JsonColumnType","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/-json-column-type.html","searchKeys":["JsonColumnType","constructor(serialize: (T) -> String, deserialize: (String) -> T)","org.jetbrains.exposed.v1.json.JsonColumnType.JsonColumnType"]},{"name":"constructor(target: Expression<*>, candidate: Expression<*>, path: String?, jsonType: IColumnType<*>)","description":"org.jetbrains.exposed.v1.json.Contains.Contains","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/-contains.html","searchKeys":["Contains","constructor(target: Expression<*>, candidate: Expression<*>, path: String?, jsonType: IColumnType<*>)","org.jetbrains.exposed.v1.json.Contains.Contains"]},{"name":"fun <T : Any> Table.json(name: String, serialize: (T) -> String, deserialize: (String) -> T): Column<T>","description":"org.jetbrains.exposed.v1.json.json","location":"exposed-json/org.jetbrains.exposed.v1.json/json.html","searchKeys":["json","fun <T : Any> Table.json(name: String, serialize: (T) -> String, deserialize: (String) -> T): Column<T>","org.jetbrains.exposed.v1.json.json"]},{"name":"fun <T : Any> Table.jsonb(name: String, serialize: (T) -> String, deserialize: (String) -> T): Column<T>","description":"org.jetbrains.exposed.v1.json.jsonb","location":"exposed-json/org.jetbrains.exposed.v1.json/jsonb.html","searchKeys":["jsonb","fun <T : Any> Table.jsonb(name: String, serialize: (T) -> String, deserialize: (String) -> T): Column<T>","org.jetbrains.exposed.v1.json.jsonb"]},{"name":"fun <T> ExpressionWithColumnType<*>.contains(candidate: T, path: String? = null): Contains","description":"org.jetbrains.exposed.v1.json.contains","location":"exposed-json/org.jetbrains.exposed.v1.json/contains.html","searchKeys":["contains","fun <T> ExpressionWithColumnType<*>.contains(candidate: T, path: String? = null): Contains","org.jetbrains.exposed.v1.json.contains"]},{"name":"fun ExpressionWithColumnType<*>.contains(candidate: Expression<*>, path: String? = null): Contains","description":"org.jetbrains.exposed.v1.json.contains","location":"exposed-json/org.jetbrains.exposed.v1.json/contains.html","searchKeys":["contains","fun ExpressionWithColumnType<*>.contains(candidate: Expression<*>, path: String? = null): Contains","org.jetbrains.exposed.v1.json.contains"]},{"name":"fun ExpressionWithColumnType<*>.exists(vararg path: String, optional: String? = null): Exists","description":"org.jetbrains.exposed.v1.json.exists","location":"exposed-json/org.jetbrains.exposed.v1.json/exists.html","searchKeys":["exists","fun ExpressionWithColumnType<*>.exists(vararg path: String, optional: String? = null): Exists","org.jetbrains.exposed.v1.json.exists"]},{"name":"inline fun <T : Any> ExpressionWithColumnType<*>.extract(vararg path: String, toScalar: Boolean = true): Extract<T>","description":"org.jetbrains.exposed.v1.json.extract","location":"exposed-json/org.jetbrains.exposed.v1.json/extract.html","searchKeys":["extract","inline fun <T : Any> ExpressionWithColumnType<*>.extract(vararg path: String, toScalar: Boolean = true): Extract<T>","org.jetbrains.exposed.v1.json.extract"]},{"name":"inline fun <T : Any> Table.json(name: String, jsonConfig: Json, kSerializer: KSerializer<T> = serializer<T>()): Column<T>","description":"org.jetbrains.exposed.v1.json.json","location":"exposed-json/org.jetbrains.exposed.v1.json/json.html","searchKeys":["json","inline fun <T : Any> Table.json(name: String, jsonConfig: Json, kSerializer: KSerializer<T> = serializer<T>()): Column<T>","org.jetbrains.exposed.v1.json.json"]},{"name":"inline fun <T : Any> Table.jsonb(name: String, jsonConfig: Json, kSerializer: KSerializer<T> = serializer<T>()): Column<T>","description":"org.jetbrains.exposed.v1.json.jsonb","location":"exposed-json/org.jetbrains.exposed.v1.json/jsonb.html","searchKeys":["jsonb","inline fun <T : Any> Table.jsonb(name: String, jsonConfig: Json, kSerializer: KSerializer<T> = serializer<T>()): Column<T>","org.jetbrains.exposed.v1.json.jsonb"]},{"name":"open class JsonColumnType<T : Any>(val serialize: (T) -> String, val deserialize: (String) -> T) : ColumnType<T> , JsonColumnMarker","description":"org.jetbrains.exposed.v1.json.JsonColumnType","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/index.html","searchKeys":["JsonColumnType","open class JsonColumnType<T : Any>(val serialize: (T) -> String, val deserialize: (String) -> T) : ColumnType<T> , JsonColumnMarker","org.jetbrains.exposed.v1.json.JsonColumnType"]},{"name":"open override fun nonNullValueAsDefaultString(value: T): String","description":"org.jetbrains.exposed.v1.json.JsonColumnType.nonNullValueAsDefaultString","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: T): String","org.jetbrains.exposed.v1.json.JsonColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueToString(value: T): String","description":"org.jetbrains.exposed.v1.json.JsonColumnType.nonNullValueToString","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: T): String","org.jetbrains.exposed.v1.json.JsonColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: T): Any","description":"org.jetbrains.exposed.v1.json.JsonColumnType.notNullValueToDB","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: T): Any","org.jetbrains.exposed.v1.json.JsonColumnType.notNullValueToDB"]},{"name":"open override fun parameterMarker(value: T?): String","description":"org.jetbrains.exposed.v1.json.JsonColumnType.parameterMarker","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/parameter-marker.html","searchKeys":["parameterMarker","open override fun parameterMarker(value: T?): String","org.jetbrains.exposed.v1.json.JsonColumnType.parameterMarker"]},{"name":"open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","description":"org.jetbrains.exposed.v1.json.JsonColumnType.setParameter","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/set-parameter.html","searchKeys":["setParameter","open override fun setParameter(stmt: PreparedStatementApi, index: Int, value: Any?)","org.jetbrains.exposed.v1.json.JsonColumnType.setParameter"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.json.JsonBColumnType.sqlType","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-b-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.json.JsonBColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.json.JsonColumnType.sqlType","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.json.JsonColumnType.sqlType"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.json.Contains.toQueryBuilder","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.json.Contains.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.json.Exists.toQueryBuilder","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.json.Exists.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.json.Extract.toQueryBuilder","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.json.Extract.toQueryBuilder"]},{"name":"open override fun valueFromDB(value: Any): T","description":"org.jetbrains.exposed.v1.json.JsonColumnType.valueFromDB","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): T","org.jetbrains.exposed.v1.json.JsonColumnType.valueFromDB"]},{"name":"open override fun valueToString(value: T?): String","description":"org.jetbrains.exposed.v1.json.JsonColumnType.valueToString","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/value-to-string.html","searchKeys":["valueToString","open override fun valueToString(value: T?): String","org.jetbrains.exposed.v1.json.JsonColumnType.valueToString"]},{"name":"open override val usesBinaryFormat: Boolean = false","description":"org.jetbrains.exposed.v1.json.JsonColumnType.usesBinaryFormat","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/uses-binary-format.html","searchKeys":["usesBinaryFormat","open override val usesBinaryFormat: Boolean = false","org.jetbrains.exposed.v1.json.JsonColumnType.usesBinaryFormat"]},{"name":"open override val usesBinaryFormat: Boolean = true","description":"org.jetbrains.exposed.v1.json.JsonBColumnType.usesBinaryFormat","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-b-column-type/uses-binary-format.html","searchKeys":["usesBinaryFormat","open override val usesBinaryFormat: Boolean = true","org.jetbrains.exposed.v1.json.JsonBColumnType.usesBinaryFormat"]},{"name":"val candidate: Expression<*>","description":"org.jetbrains.exposed.v1.json.Contains.candidate","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/candidate.html","searchKeys":["candidate","val candidate: Expression<*>","org.jetbrains.exposed.v1.json.Contains.candidate"]},{"name":"val deserialize: (String) -> T","description":"org.jetbrains.exposed.v1.json.JsonColumnType.deserialize","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/deserialize.html","searchKeys":["deserialize","val deserialize: (String) -> T","org.jetbrains.exposed.v1.json.JsonColumnType.deserialize"]},{"name":"val expression: Expression<*>","description":"org.jetbrains.exposed.v1.json.Exists.expression","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/expression.html","searchKeys":["expression","val expression: Expression<*>","org.jetbrains.exposed.v1.json.Exists.expression"]},{"name":"val expression: Expression<*>","description":"org.jetbrains.exposed.v1.json.Extract.expression","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/expression.html","searchKeys":["expression","val expression: Expression<*>","org.jetbrains.exposed.v1.json.Extract.expression"]},{"name":"val jsonType: IColumnType<*>","description":"org.jetbrains.exposed.v1.json.Contains.jsonType","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/json-type.html","searchKeys":["jsonType","val jsonType: IColumnType<*>","org.jetbrains.exposed.v1.json.Contains.jsonType"]},{"name":"val jsonType: IColumnType<*>","description":"org.jetbrains.exposed.v1.json.Exists.jsonType","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/json-type.html","searchKeys":["jsonType","val jsonType: IColumnType<*>","org.jetbrains.exposed.v1.json.Exists.jsonType"]},{"name":"val jsonType: IColumnType<*>","description":"org.jetbrains.exposed.v1.json.Extract.jsonType","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/json-type.html","searchKeys":["jsonType","val jsonType: IColumnType<*>","org.jetbrains.exposed.v1.json.Extract.jsonType"]},{"name":"val optional: String?","description":"org.jetbrains.exposed.v1.json.Exists.optional","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/optional.html","searchKeys":["optional","val optional: String?","org.jetbrains.exposed.v1.json.Exists.optional"]},{"name":"val path: Array<out String>","description":"org.jetbrains.exposed.v1.json.Exists.path","location":"exposed-json/org.jetbrains.exposed.v1.json/-exists/path.html","searchKeys":["path","val path: Array<out String>","org.jetbrains.exposed.v1.json.Exists.path"]},{"name":"val path: Array<out String>","description":"org.jetbrains.exposed.v1.json.Extract.path","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/path.html","searchKeys":["path","val path: Array<out String>","org.jetbrains.exposed.v1.json.Extract.path"]},{"name":"val path: String?","description":"org.jetbrains.exposed.v1.json.Contains.path","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/path.html","searchKeys":["path","val path: String?","org.jetbrains.exposed.v1.json.Contains.path"]},{"name":"val serialize: (T) -> String","description":"org.jetbrains.exposed.v1.json.JsonColumnType.serialize","location":"exposed-json/org.jetbrains.exposed.v1.json/-json-column-type/serialize.html","searchKeys":["serialize","val serialize: (T) -> String","org.jetbrains.exposed.v1.json.JsonColumnType.serialize"]},{"name":"val target: Expression<*>","description":"org.jetbrains.exposed.v1.json.Contains.target","location":"exposed-json/org.jetbrains.exposed.v1.json/-contains/target.html","searchKeys":["target","val target: Expression<*>","org.jetbrains.exposed.v1.json.Contains.target"]},{"name":"val toScalar: Boolean","description":"org.jetbrains.exposed.v1.json.Extract.toScalar","location":"exposed-json/org.jetbrains.exposed.v1.json/-extract/to-scalar.html","searchKeys":["toScalar","val toScalar: Boolean","org.jetbrains.exposed.v1.json.Extract.toScalar"]},{"name":"class ByteArrayEncryptionTransformer(encryptor: Encryptor) : ColumnTransformer<ByteArray, ByteArray> ","description":"org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-byte-array-encryption-transformer/index.html","searchKeys":["ByteArrayEncryptionTransformer","class ByteArrayEncryptionTransformer(encryptor: Encryptor) : ColumnTransformer<ByteArray, ByteArray> ","org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer"]},{"name":"class EncryptedBinaryColumnType(encryptor: Encryptor, length: Int) : ColumnWithTransform<ByteArray, ByteArray> ","description":"org.jetbrains.exposed.v1.crypt.EncryptedBinaryColumnType","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encrypted-binary-column-type/index.html","searchKeys":["EncryptedBinaryColumnType","class EncryptedBinaryColumnType(encryptor: Encryptor, length: Int) : ColumnWithTransform<ByteArray, ByteArray> ","org.jetbrains.exposed.v1.crypt.EncryptedBinaryColumnType"]},{"name":"class EncryptedVarCharColumnType(encryptor: Encryptor, colLength: Int) : ColumnWithTransform<String, String> ","description":"org.jetbrains.exposed.v1.crypt.EncryptedVarCharColumnType","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encrypted-var-char-column-type/index.html","searchKeys":["EncryptedVarCharColumnType","class EncryptedVarCharColumnType(encryptor: Encryptor, colLength: Int) : ColumnWithTransform<String, String> ","org.jetbrains.exposed.v1.crypt.EncryptedVarCharColumnType"]},{"name":"class Encryptor(val encryptFn: (String) -> String, val decryptFn: (String) -> String, val maxColLengthFn: (Int) -> Int)","description":"org.jetbrains.exposed.v1.crypt.Encryptor","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/index.html","searchKeys":["Encryptor","class Encryptor(val encryptFn: (String) -> String, val decryptFn: (String) -> String, val maxColLengthFn: (Int) -> Int)","org.jetbrains.exposed.v1.crypt.Encryptor"]},{"name":"class StringEncryptionTransformer(encryptor: Encryptor) : ColumnTransformer<String, String> ","description":"org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-string-encryption-transformer/index.html","searchKeys":["StringEncryptionTransformer","class StringEncryptionTransformer(encryptor: Encryptor) : ColumnTransformer<String, String> ","org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer"]},{"name":"constructor(encryptFn: (String) -> String, decryptFn: (String) -> String, maxColLengthFn: (Int) -> Int)","description":"org.jetbrains.exposed.v1.crypt.Encryptor.Encryptor","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/-encryptor.html","searchKeys":["Encryptor","constructor(encryptFn: (String) -> String, decryptFn: (String) -> String, maxColLengthFn: (Int) -> Int)","org.jetbrains.exposed.v1.crypt.Encryptor.Encryptor"]},{"name":"constructor(encryptor: Encryptor)","description":"org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer.ByteArrayEncryptionTransformer","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-byte-array-encryption-transformer/-byte-array-encryption-transformer.html","searchKeys":["ByteArrayEncryptionTransformer","constructor(encryptor: Encryptor)","org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer.ByteArrayEncryptionTransformer"]},{"name":"constructor(encryptor: Encryptor)","description":"org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer.StringEncryptionTransformer","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-string-encryption-transformer/-string-encryption-transformer.html","searchKeys":["StringEncryptionTransformer","constructor(encryptor: Encryptor)","org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer.StringEncryptionTransformer"]},{"name":"constructor(encryptor: Encryptor, colLength: Int)","description":"org.jetbrains.exposed.v1.crypt.EncryptedVarCharColumnType.EncryptedVarCharColumnType","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encrypted-var-char-column-type/-encrypted-var-char-column-type.html","searchKeys":["EncryptedVarCharColumnType","constructor(encryptor: Encryptor, colLength: Int)","org.jetbrains.exposed.v1.crypt.EncryptedVarCharColumnType.EncryptedVarCharColumnType"]},{"name":"constructor(encryptor: Encryptor, length: Int)","description":"org.jetbrains.exposed.v1.crypt.EncryptedBinaryColumnType.EncryptedBinaryColumnType","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encrypted-binary-column-type/-encrypted-binary-column-type.html","searchKeys":["EncryptedBinaryColumnType","constructor(encryptor: Encryptor, length: Int)","org.jetbrains.exposed.v1.crypt.EncryptedBinaryColumnType.EncryptedBinaryColumnType"]},{"name":"fun AES_256_PBE_CBC(password: CharSequence, salt: CharSequence): Encryptor","description":"org.jetbrains.exposed.v1.crypt.Algorithms.AES_256_PBE_CBC","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-algorithms/-a-e-s_256_-p-b-e_-c-b-c.html","searchKeys":["AES_256_PBE_CBC","fun AES_256_PBE_CBC(password: CharSequence, salt: CharSequence): Encryptor","org.jetbrains.exposed.v1.crypt.Algorithms.AES_256_PBE_CBC"]},{"name":"fun AES_256_PBE_GCM(password: CharSequence, salt: CharSequence): Encryptor","description":"org.jetbrains.exposed.v1.crypt.Algorithms.AES_256_PBE_GCM","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-algorithms/-a-e-s_256_-p-b-e_-g-c-m.html","searchKeys":["AES_256_PBE_GCM","fun AES_256_PBE_GCM(password: CharSequence, salt: CharSequence): Encryptor","org.jetbrains.exposed.v1.crypt.Algorithms.AES_256_PBE_GCM"]},{"name":"fun BLOW_FISH(key: CharSequence): Encryptor","description":"org.jetbrains.exposed.v1.crypt.Algorithms.BLOW_FISH","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-algorithms/-b-l-o-w_-f-i-s-h.html","searchKeys":["BLOW_FISH","fun BLOW_FISH(key: CharSequence): Encryptor","org.jetbrains.exposed.v1.crypt.Algorithms.BLOW_FISH"]},{"name":"fun TRIPLE_DES(secretKey: CharSequence): Encryptor","description":"org.jetbrains.exposed.v1.crypt.Algorithms.TRIPLE_DES","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-algorithms/-t-r-i-p-l-e_-d-e-s.html","searchKeys":["TRIPLE_DES","fun TRIPLE_DES(secretKey: CharSequence): Encryptor","org.jetbrains.exposed.v1.crypt.Algorithms.TRIPLE_DES"]},{"name":"fun Table.encryptedBinary(name: String, cipherByteLength: Int, encryptor: Encryptor): Column<ByteArray>","description":"org.jetbrains.exposed.v1.crypt.encryptedBinary","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/encrypted-binary.html","searchKeys":["encryptedBinary","fun Table.encryptedBinary(name: String, cipherByteLength: Int, encryptor: Encryptor): Column<ByteArray>","org.jetbrains.exposed.v1.crypt.encryptedBinary"]},{"name":"fun Table.encryptedVarchar(name: String, cipherTextLength: Int, encryptor: Encryptor): Column<String>","description":"org.jetbrains.exposed.v1.crypt.encryptedVarchar","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/encrypted-varchar.html","searchKeys":["encryptedVarchar","fun Table.encryptedVarchar(name: String, cipherTextLength: Int, encryptor: Encryptor): Column<String>","org.jetbrains.exposed.v1.crypt.encryptedVarchar"]},{"name":"fun decrypt(str: String): String","description":"org.jetbrains.exposed.v1.crypt.Encryptor.decrypt","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/decrypt.html","searchKeys":["decrypt","fun decrypt(str: String): String","org.jetbrains.exposed.v1.crypt.Encryptor.decrypt"]},{"name":"fun encrypt(str: String): String","description":"org.jetbrains.exposed.v1.crypt.Encryptor.encrypt","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/encrypt.html","searchKeys":["encrypt","fun encrypt(str: String): String","org.jetbrains.exposed.v1.crypt.Encryptor.encrypt"]},{"name":"fun maxColLength(inputByteSize: Int): Int","description":"org.jetbrains.exposed.v1.crypt.Encryptor.maxColLength","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/max-col-length.html","searchKeys":["maxColLength","fun maxColLength(inputByteSize: Int): Int","org.jetbrains.exposed.v1.crypt.Encryptor.maxColLength"]},{"name":"object Algorithms","description":"org.jetbrains.exposed.v1.crypt.Algorithms","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-algorithms/index.html","searchKeys":["Algorithms","object Algorithms","org.jetbrains.exposed.v1.crypt.Algorithms"]},{"name":"open override fun unwrap(value: ByteArray): ByteArray","description":"org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer.unwrap","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-byte-array-encryption-transformer/unwrap.html","searchKeys":["unwrap","open override fun unwrap(value: ByteArray): ByteArray","org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer.unwrap"]},{"name":"open override fun unwrap(value: String): String","description":"org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer.unwrap","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-string-encryption-transformer/unwrap.html","searchKeys":["unwrap","open override fun unwrap(value: String): String","org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer.unwrap"]},{"name":"open override fun wrap(value: ByteArray): ByteArray","description":"org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer.wrap","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-byte-array-encryption-transformer/wrap.html","searchKeys":["wrap","open override fun wrap(value: ByteArray): ByteArray","org.jetbrains.exposed.v1.crypt.ByteArrayEncryptionTransformer.wrap"]},{"name":"open override fun wrap(value: String): String","description":"org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer.wrap","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-string-encryption-transformer/wrap.html","searchKeys":["wrap","open override fun wrap(value: String): String","org.jetbrains.exposed.v1.crypt.StringEncryptionTransformer.wrap"]},{"name":"val decryptFn: (String) -> String","description":"org.jetbrains.exposed.v1.crypt.Encryptor.decryptFn","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/decrypt-fn.html","searchKeys":["decryptFn","val decryptFn: (String) -> String","org.jetbrains.exposed.v1.crypt.Encryptor.decryptFn"]},{"name":"val encryptFn: (String) -> String","description":"org.jetbrains.exposed.v1.crypt.Encryptor.encryptFn","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/encrypt-fn.html","searchKeys":["encryptFn","val encryptFn: (String) -> String","org.jetbrains.exposed.v1.crypt.Encryptor.encryptFn"]},{"name":"val maxColLengthFn: (Int) -> Int","description":"org.jetbrains.exposed.v1.crypt.Encryptor.maxColLengthFn","location":"exposed-crypt/org.jetbrains.exposed.v1.crypt/-encryptor/max-col-length-fn.html","searchKeys":["maxColLengthFn","val maxColLengthFn: (Int) -> Int","org.jetbrains.exposed.v1.crypt.Encryptor.maxColLengthFn"]},{"name":"Created","description":"org.jetbrains.exposed.v1.dao.EntityChangeType.Created","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/-created/index.html","searchKeys":["Created","Created","org.jetbrains.exposed.v1.dao.EntityChangeType.Created"]},{"name":"Removed","description":"org.jetbrains.exposed.v1.dao.EntityChangeType.Removed","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/-removed/index.html","searchKeys":["Removed","Removed","org.jetbrains.exposed.v1.dao.EntityChangeType.Removed"]},{"name":"Updated","description":"org.jetbrains.exposed.v1.dao.EntityChangeType.Updated","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/-updated/index.html","searchKeys":["Updated","Updated","org.jetbrains.exposed.v1.dao.EntityChangeType.Updated"]},{"name":"abstract class CompositeEntity(id: EntityID<CompositeID>) : Entity<CompositeID> ","description":"org.jetbrains.exposed.v1.dao.CompositeEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-composite-entity/index.html","searchKeys":["CompositeEntity","abstract class CompositeEntity(id: EntityID<CompositeID>) : Entity<CompositeID> ","org.jetbrains.exposed.v1.dao.CompositeEntity"]},{"name":"abstract class CompositeEntityClass<out E : CompositeEntity>(table: IdTable<CompositeID>, entityType: Class<E>? = null, entityCtor: (EntityID<CompositeID>) -> E? = null) : EntityClass<CompositeID, E> ","description":"org.jetbrains.exposed.v1.dao.CompositeEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-composite-entity-class/index.html","searchKeys":["CompositeEntityClass","abstract class CompositeEntityClass<out E : CompositeEntity>(table: IdTable<CompositeID>, entityType: Class<E>? = null, entityCtor: (EntityID<CompositeID>) -> E? = null) : EntityClass<CompositeID, E> ","org.jetbrains.exposed.v1.dao.CompositeEntityClass"]},{"name":"abstract class EntityClass<ID : Any, out T : Entity<ID>>(val table: IdTable<ID>, entityType: Class<T>? = null, entityCtor: (EntityID<ID>) -> T? = null)","description":"org.jetbrains.exposed.v1.dao.EntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/index.html","searchKeys":["EntityClass","abstract class EntityClass<ID : Any, out T : Entity<ID>>(val table: IdTable<ID>, entityType: Class<T>? = null, entityCtor: (EntityID<ID>) -> T? = null)","org.jetbrains.exposed.v1.dao.EntityClass"]},{"name":"abstract class ImmutableCachedEntityClass<ID : Any, out T : Entity<ID>>(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null) : ImmutableEntityClass<ID, T> ","description":"org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-cached-entity-class/index.html","searchKeys":["ImmutableCachedEntityClass","abstract class ImmutableCachedEntityClass<ID : Any, out T : Entity<ID>>(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null) : ImmutableEntityClass<ID, T> ","org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass"]},{"name":"abstract class ImmutableEntityClass<ID : Any, out T : Entity<ID>>(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null) : EntityClass<ID, T> ","description":"org.jetbrains.exposed.v1.dao.ImmutableEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-entity-class/index.html","searchKeys":["ImmutableEntityClass","abstract class ImmutableEntityClass<ID : Any, out T : Entity<ID>>(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null) : EntityClass<ID, T> ","org.jetbrains.exposed.v1.dao.ImmutableEntityClass"]},{"name":"abstract class IntEntity(id: EntityID<Int>) : Entity<Int> ","description":"org.jetbrains.exposed.v1.dao.IntEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-int-entity/index.html","searchKeys":["IntEntity","abstract class IntEntity(id: EntityID<Int>) : Entity<Int> ","org.jetbrains.exposed.v1.dao.IntEntity"]},{"name":"abstract class IntEntityClass<out E : IntEntity>(table: IdTable<Int>, entityType: Class<E>? = null, entityCtor: (EntityID<Int>) -> E? = null) : EntityClass<Int, E> ","description":"org.jetbrains.exposed.v1.dao.IntEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-int-entity-class/index.html","searchKeys":["IntEntityClass","abstract class IntEntityClass<out E : IntEntity>(table: IdTable<Int>, entityType: Class<E>? = null, entityCtor: (EntityID<Int>) -> E? = null) : EntityClass<Int, E> ","org.jetbrains.exposed.v1.dao.IntEntityClass"]},{"name":"abstract class LongEntity(id: EntityID<Long>) : Entity<Long> ","description":"org.jetbrains.exposed.v1.dao.LongEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-long-entity/index.html","searchKeys":["LongEntity","abstract class LongEntity(id: EntityID<Long>) : Entity<Long> ","org.jetbrains.exposed.v1.dao.LongEntity"]},{"name":"abstract class LongEntityClass<out E : LongEntity>(table: IdTable<Long>, entityType: Class<E>? = null, entityCtor: (EntityID<Long>) -> E? = null) : EntityClass<Long, E> ","description":"org.jetbrains.exposed.v1.dao.LongEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-long-entity-class/index.html","searchKeys":["LongEntityClass","abstract class LongEntityClass<out E : LongEntity>(table: IdTable<Long>, entityType: Class<E>? = null, entityCtor: (EntityID<Long>) -> E? = null) : EntityClass<Long, E> ","org.jetbrains.exposed.v1.dao.LongEntityClass"]},{"name":"abstract class UIntEntity(id: EntityID<UInt>) : Entity<UInt> ","description":"org.jetbrains.exposed.v1.dao.UIntEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-int-entity/index.html","searchKeys":["UIntEntity","abstract class UIntEntity(id: EntityID<UInt>) : Entity<UInt> ","org.jetbrains.exposed.v1.dao.UIntEntity"]},{"name":"abstract class UIntEntityClass<out E : UIntEntity>(table: IdTable<UInt>, entityType: Class<E>? = null, entityCtor: (EntityID<UInt>) -> E? = null) : EntityClass<UInt, E> ","description":"org.jetbrains.exposed.v1.dao.UIntEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-int-entity-class/index.html","searchKeys":["UIntEntityClass","abstract class UIntEntityClass<out E : UIntEntity>(table: IdTable<UInt>, entityType: Class<E>? = null, entityCtor: (EntityID<UInt>) -> E? = null) : EntityClass<UInt, E> ","org.jetbrains.exposed.v1.dao.UIntEntityClass"]},{"name":"abstract class ULongEntity(id: EntityID<ULong>) : Entity<ULong> ","description":"org.jetbrains.exposed.v1.dao.ULongEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-long-entity/index.html","searchKeys":["ULongEntity","abstract class ULongEntity(id: EntityID<ULong>) : Entity<ULong> ","org.jetbrains.exposed.v1.dao.ULongEntity"]},{"name":"abstract class ULongEntityClass<out E : ULongEntity>(table: IdTable<ULong>, entityType: Class<E>? = null, entityCtor: (EntityID<ULong>) -> E? = null) : EntityClass<ULong, E> ","description":"org.jetbrains.exposed.v1.dao.ULongEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-long-entity-class/index.html","searchKeys":["ULongEntityClass","abstract class ULongEntityClass<out E : ULongEntity>(table: IdTable<ULong>, entityType: Class<E>? = null, entityCtor: (EntityID<ULong>) -> E? = null) : EntityClass<ULong, E> ","org.jetbrains.exposed.v1.dao.ULongEntityClass"]},{"name":"abstract class UUIDEntity(id: EntityID<UUID>) : Entity<UUID> ","description":"org.jetbrains.exposed.v1.dao.UUIDEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-u-i-d-entity/index.html","searchKeys":["UUIDEntity","abstract class UUIDEntity(id: EntityID<UUID>) : Entity<UUID> ","org.jetbrains.exposed.v1.dao.UUIDEntity"]},{"name":"abstract class UUIDEntityClass<out E : UUIDEntity>(table: IdTable<UUID>, entityType: Class<E>? = null, entityCtor: (EntityID<UUID>) -> E? = null) : EntityClass<UUID, E> ","description":"org.jetbrains.exposed.v1.dao.UUIDEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-u-i-d-entity-class/index.html","searchKeys":["UUIDEntityClass","abstract class UUIDEntityClass<out E : UUIDEntity>(table: IdTable<UUID>, entityType: Class<E>? = null, entityCtor: (EntityID<UUID>) -> E? = null) : EntityClass<UUID, E> ","org.jetbrains.exposed.v1.dao.UUIDEntityClass"]},{"name":"class DaoEntityID<T : Any>(id: T?, table: IdTable<T>) : EntityID<T> ","description":"org.jetbrains.exposed.v1.dao.DaoEntityID","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-dao-entity-i-d/index.html","searchKeys":["DaoEntityID","class DaoEntityID<T : Any>(id: T?, table: IdTable<T>) : EntityID<T> ","org.jetbrains.exposed.v1.dao.DaoEntityID"]},{"name":"class DaoEntityIDFactory : EntityIDFactory","description":"org.jetbrains.exposed.v1.dao.DaoEntityIDFactory","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-dao-entity-i-d-factory/index.html","searchKeys":["DaoEntityIDFactory","class DaoEntityIDFactory : EntityIDFactory","org.jetbrains.exposed.v1.dao.DaoEntityIDFactory"]},{"name":"class EntityBatchUpdate(klass: EntityClass<*, Entity<*>>)","description":"org.jetbrains.exposed.v1.dao.EntityBatchUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-batch-update/index.html","searchKeys":["EntityBatchUpdate","class EntityBatchUpdate(klass: EntityClass<*, Entity<*>>)","org.jetbrains.exposed.v1.dao.EntityBatchUpdate"]},{"name":"class EntityCache(transaction: Transaction)","description":"org.jetbrains.exposed.v1.dao.EntityCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/index.html","searchKeys":["EntityCache","class EntityCache(transaction: Transaction)","org.jetbrains.exposed.v1.dao.EntityCache"]},{"name":"class EntityLifecycleInterceptor : GlobalStatementInterceptor","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/index.html","searchKeys":["EntityLifecycleInterceptor","class EntityLifecycleInterceptor : GlobalStatementInterceptor","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor"]},{"name":"class EntityNotFoundException(val id: EntityID<*>, val entity: EntityClass<*, *>) : Exception","description":"org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException","location":"exposed-dao/org.jetbrains.exposed.v1.dao.exceptions/-entity-not-found-exception/index.html","searchKeys":["EntityNotFoundException","class EntityNotFoundException(val id: EntityID<*>, val entity: EntityClass<*, *>) : Exception","org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException"]},{"name":"class InnerTableLink<SID : Any, Source : Entity<SID>, ID : Any, Target : Entity<ID>>(val table: Table, sourceTable: IdTable<SID>, val target: EntityClass<ID, Target>, _sourceColumn: Column<EntityID<SID>>? = null, _targetColumn: Column<EntityID<ID>>? = null) : ReadWriteProperty<Source, SizedIterable<Target>> ","description":"org.jetbrains.exposed.v1.dao.InnerTableLink","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/index.html","searchKeys":["InnerTableLink","class InnerTableLink<SID : Any, Source : Entity<SID>, ID : Any, Target : Entity<ID>>(val table: Table, sourceTable: IdTable<SID>, val target: EntityClass<ID, Target>, _sourceColumn: Column<EntityID<SID>>? = null, _targetColumn: Column<EntityID<ID>>? = null) : ReadWriteProperty<Source, SizedIterable<Target>> ","org.jetbrains.exposed.v1.dao.InnerTableLink"]},{"name":"class OptionalBackReference<ParentID : Any, out Parent : Entity<ParentID>, ChildID : Any, in Child : Entity<ChildID>, REF>(reference: Column<REF?>, factory: EntityClass<ParentID, Parent>, references: Map<Column<*>, Column<*>>? = null) : ReadOnlyProperty<Child, Parent?> ","description":"org.jetbrains.exposed.v1.dao.OptionalBackReference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-back-reference/index.html","searchKeys":["OptionalBackReference","class OptionalBackReference<ParentID : Any, out Parent : Entity<ParentID>, ChildID : Any, in Child : Entity<ChildID>, REF>(reference: Column<REF?>, factory: EntityClass<ParentID, Parent>, references: Map<Column<*>, Column<*>>? = null) : ReadOnlyProperty<Child, Parent?> ","org.jetbrains.exposed.v1.dao.OptionalBackReference"]},{"name":"class OptionalReference<REF : Any, ID : Any, out Target : Entity<ID>>(val reference: Column<REF?>, val factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.OptionalReference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-reference/index.html","searchKeys":["OptionalReference","class OptionalReference<REF : Any, ID : Any, out Target : Entity<ID>>(val reference: Column<REF?>, val factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.OptionalReference"]},{"name":"class OptionalReferrers<ParentID : Any, in Parent : Entity<ParentID>, ChildID : Any, out Child : Entity<ChildID>, REF>(reference: Column<REF?>, factory: EntityClass<ChildID, Child>, cache: Boolean, references: Map<Column<*>, Column<*>>? = null) : Referrers<ParentID, Parent, ChildID, Child, REF?> ","description":"org.jetbrains.exposed.v1.dao.OptionalReferrers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-referrers/index.html","searchKeys":["OptionalReferrers","class OptionalReferrers<ParentID : Any, in Parent : Entity<ParentID>, ChildID : Any, out Child : Entity<ChildID>, REF>(reference: Column<REF?>, factory: EntityClass<ChildID, Child>, cache: Boolean, references: Map<Column<*>, Column<*>>? = null) : Referrers<ParentID, Parent, ChildID, Child, REF?> ","org.jetbrains.exposed.v1.dao.OptionalReferrers"]},{"name":"class Reference<REF : Any, ID : Any, out Target : Entity<ID>>(val reference: Column<REF>, val factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.Reference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-reference/index.html","searchKeys":["Reference","class Reference<REF : Any, ID : Any, out Target : Entity<ID>>(val reference: Column<REF>, val factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.Reference"]},{"name":"class View<out Target : Entity<*>>(val op: Op<Boolean>, val factory: EntityClass<*, Target>) : SizedIterable<Target> ","description":"org.jetbrains.exposed.v1.dao.View","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/index.html","searchKeys":["View","class View<out Target : Entity<*>>(val op: Op<Boolean>, val factory: EntityClass<*, Target>) : SizedIterable<Target> ","org.jetbrains.exposed.v1.dao.View"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.dao.DaoEntityIDFactory.DaoEntityIDFactory","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-dao-entity-i-d-factory/-dao-entity-i-d-factory.html","searchKeys":["DaoEntityIDFactory","constructor()","org.jetbrains.exposed.v1.dao.DaoEntityIDFactory.DaoEntityIDFactory"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.EntityLifecycleInterceptor","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/-entity-lifecycle-interceptor.html","searchKeys":["EntityLifecycleInterceptor","constructor()","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.EntityLifecycleInterceptor"]},{"name":"constructor(column: Column<Unwrapped>, transformer: ColumnTransformer<Unwrapped, Wrapped>, cacheResult: Boolean = false)","description":"org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.EntityFieldWithTransform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-field-with-transform/-entity-field-with-transform.html","searchKeys":["EntityFieldWithTransform","constructor(column: Column<Unwrapped>, transformer: ColumnTransformer<Unwrapped, Wrapped>, cacheResult: Boolean = false)","org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.EntityFieldWithTransform"]},{"name":"constructor(entityClass: EntityClass<*, Entity<*>>, entityId: EntityID<*>, changeType: EntityChangeType, transactionId: String)","description":"org.jetbrains.exposed.v1.dao.EntityChange.EntityChange","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change/-entity-change.html","searchKeys":["EntityChange","constructor(entityClass: EntityClass<*, Entity<*>>, entityId: EntityID<*>, changeType: EntityChangeType, transactionId: String)","org.jetbrains.exposed.v1.dao.EntityChange.EntityChange"]},{"name":"constructor(id: EntityID<*>, entity: EntityClass<*, *>)","description":"org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException.EntityNotFoundException","location":"exposed-dao/org.jetbrains.exposed.v1.dao.exceptions/-entity-not-found-exception/-entity-not-found-exception.html","searchKeys":["EntityNotFoundException","constructor(id: EntityID<*>, entity: EntityClass<*, *>)","org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException.EntityNotFoundException"]},{"name":"constructor(id: EntityID<CompositeID>)","description":"org.jetbrains.exposed.v1.dao.CompositeEntity.CompositeEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-composite-entity/-composite-entity.html","searchKeys":["CompositeEntity","constructor(id: EntityID<CompositeID>)","org.jetbrains.exposed.v1.dao.CompositeEntity.CompositeEntity"]},{"name":"constructor(id: EntityID<ID>)","description":"org.jetbrains.exposed.v1.dao.Entity.Entity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/-entity.html","searchKeys":["Entity","constructor(id: EntityID<ID>)","org.jetbrains.exposed.v1.dao.Entity.Entity"]},{"name":"constructor(id: EntityID<Int>)","description":"org.jetbrains.exposed.v1.dao.IntEntity.IntEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-int-entity/-int-entity.html","searchKeys":["IntEntity","constructor(id: EntityID<Int>)","org.jetbrains.exposed.v1.dao.IntEntity.IntEntity"]},{"name":"constructor(id: EntityID<Long>)","description":"org.jetbrains.exposed.v1.dao.LongEntity.LongEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-long-entity/-long-entity.html","searchKeys":["LongEntity","constructor(id: EntityID<Long>)","org.jetbrains.exposed.v1.dao.LongEntity.LongEntity"]},{"name":"constructor(id: EntityID<UInt>)","description":"org.jetbrains.exposed.v1.dao.UIntEntity.UIntEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-int-entity/-u-int-entity.html","searchKeys":["UIntEntity","constructor(id: EntityID<UInt>)","org.jetbrains.exposed.v1.dao.UIntEntity.UIntEntity"]},{"name":"constructor(id: EntityID<ULong>)","description":"org.jetbrains.exposed.v1.dao.ULongEntity.ULongEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-long-entity/-u-long-entity.html","searchKeys":["ULongEntity","constructor(id: EntityID<ULong>)","org.jetbrains.exposed.v1.dao.ULongEntity.ULongEntity"]},{"name":"constructor(id: EntityID<UUID>)","description":"org.jetbrains.exposed.v1.dao.UUIDEntity.UUIDEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-u-i-d-entity/-u-u-i-d-entity.html","searchKeys":["UUIDEntity","constructor(id: EntityID<UUID>)","org.jetbrains.exposed.v1.dao.UUIDEntity.UUIDEntity"]},{"name":"constructor(id: T?, table: IdTable<T>)","description":"org.jetbrains.exposed.v1.dao.DaoEntityID.DaoEntityID","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-dao-entity-i-d/-dao-entity-i-d.html","searchKeys":["DaoEntityID","constructor(id: T?, table: IdTable<T>)","org.jetbrains.exposed.v1.dao.DaoEntityID.DaoEntityID"]},{"name":"constructor(klass: EntityClass<*, Entity<*>>)","description":"org.jetbrains.exposed.v1.dao.EntityBatchUpdate.EntityBatchUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-batch-update/-entity-batch-update.html","searchKeys":["EntityBatchUpdate","constructor(klass: EntityClass<*, Entity<*>>)","org.jetbrains.exposed.v1.dao.EntityBatchUpdate.EntityBatchUpdate"]},{"name":"constructor(op: Op<Boolean>, factory: EntityClass<*, Target>)","description":"org.jetbrains.exposed.v1.dao.View.View","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/-view.html","searchKeys":["View","constructor(op: Op<Boolean>, factory: EntityClass<*, Target>)","org.jetbrains.exposed.v1.dao.View.View"]},{"name":"constructor(reference: Column<REF>, factory: EntityClass<ChildID, Child>, cache: Boolean, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.Referrers.Referrers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/-referrers.html","searchKeys":["Referrers","constructor(reference: Column<REF>, factory: EntityClass<ChildID, Child>, cache: Boolean, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.Referrers.Referrers"]},{"name":"constructor(reference: Column<REF>, factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.Reference.Reference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-reference/-reference.html","searchKeys":["Reference","constructor(reference: Column<REF>, factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.Reference.Reference"]},{"name":"constructor(reference: Column<REF?>, factory: EntityClass<ChildID, Child>, cache: Boolean, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.OptionalReferrers.OptionalReferrers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-referrers/-optional-referrers.html","searchKeys":["OptionalReferrers","constructor(reference: Column<REF?>, factory: EntityClass<ChildID, Child>, cache: Boolean, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.OptionalReferrers.OptionalReferrers"]},{"name":"constructor(reference: Column<REF?>, factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.OptionalReference.OptionalReference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-reference/-optional-reference.html","searchKeys":["OptionalReference","constructor(reference: Column<REF?>, factory: EntityClass<ID, Target>, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.OptionalReference.OptionalReference"]},{"name":"constructor(reference: Column<REF?>, factory: EntityClass<ParentID, Parent>, references: Map<Column<*>, Column<*>>? = null)","description":"org.jetbrains.exposed.v1.dao.OptionalBackReference.OptionalBackReference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-back-reference/-optional-back-reference.html","searchKeys":["OptionalBackReference","constructor(reference: Column<REF?>, factory: EntityClass<ParentID, Parent>, references: Map<Column<*>, Column<*>>? = null)","org.jetbrains.exposed.v1.dao.OptionalBackReference.OptionalBackReference"]},{"name":"constructor(table: IdTable<CompositeID>, entityType: Class<E>? = null, entityCtor: (EntityID<CompositeID>) -> E? = null)","description":"org.jetbrains.exposed.v1.dao.CompositeEntityClass.CompositeEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-composite-entity-class/-composite-entity-class.html","searchKeys":["CompositeEntityClass","constructor(table: IdTable<CompositeID>, entityType: Class<E>? = null, entityCtor: (EntityID<CompositeID>) -> E? = null)","org.jetbrains.exposed.v1.dao.CompositeEntityClass.CompositeEntityClass"]},{"name":"constructor(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null)","description":"org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.ImmutableCachedEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-cached-entity-class/-immutable-cached-entity-class.html","searchKeys":["ImmutableCachedEntityClass","constructor(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null)","org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.ImmutableCachedEntityClass"]},{"name":"constructor(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null)","description":"org.jetbrains.exposed.v1.dao.ImmutableEntityClass.ImmutableEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-entity-class/-immutable-entity-class.html","searchKeys":["ImmutableEntityClass","constructor(table: IdTable<ID>, entityType: Class<T>? = null, ctor: (EntityID<ID>) -> T? = null)","org.jetbrains.exposed.v1.dao.ImmutableEntityClass.ImmutableEntityClass"]},{"name":"constructor(table: IdTable<ID>, entityType: Class<T>? = null, entityCtor: (EntityID<ID>) -> T? = null)","description":"org.jetbrains.exposed.v1.dao.EntityClass.EntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/-entity-class.html","searchKeys":["EntityClass","constructor(table: IdTable<ID>, entityType: Class<T>? = null, entityCtor: (EntityID<ID>) -> T? = null)","org.jetbrains.exposed.v1.dao.EntityClass.EntityClass"]},{"name":"constructor(table: IdTable<Int>, entityType: Class<E>? = null, entityCtor: (EntityID<Int>) -> E? = null)","description":"org.jetbrains.exposed.v1.dao.IntEntityClass.IntEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-int-entity-class/-int-entity-class.html","searchKeys":["IntEntityClass","constructor(table: IdTable<Int>, entityType: Class<E>? = null, entityCtor: (EntityID<Int>) -> E? = null)","org.jetbrains.exposed.v1.dao.IntEntityClass.IntEntityClass"]},{"name":"constructor(table: IdTable<Long>, entityType: Class<E>? = null, entityCtor: (EntityID<Long>) -> E? = null)","description":"org.jetbrains.exposed.v1.dao.LongEntityClass.LongEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-long-entity-class/-long-entity-class.html","searchKeys":["LongEntityClass","constructor(table: IdTable<Long>, entityType: Class<E>? = null, entityCtor: (EntityID<Long>) -> E? = null)","org.jetbrains.exposed.v1.dao.LongEntityClass.LongEntityClass"]},{"name":"constructor(table: IdTable<UInt>, entityType: Class<E>? = null, entityCtor: (EntityID<UInt>) -> E? = null)","description":"org.jetbrains.exposed.v1.dao.UIntEntityClass.UIntEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-int-entity-class/-u-int-entity-class.html","searchKeys":["UIntEntityClass","constructor(table: IdTable<UInt>, entityType: Class<E>? = null, entityCtor: (EntityID<UInt>) -> E? = null)","org.jetbrains.exposed.v1.dao.UIntEntityClass.UIntEntityClass"]},{"name":"constructor(table: IdTable<ULong>, entityType: Class<E>? = null, entityCtor: (EntityID<ULong>) -> E? = null)","description":"org.jetbrains.exposed.v1.dao.ULongEntityClass.ULongEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-long-entity-class/-u-long-entity-class.html","searchKeys":["ULongEntityClass","constructor(table: IdTable<ULong>, entityType: Class<E>? = null, entityCtor: (EntityID<ULong>) -> E? = null)","org.jetbrains.exposed.v1.dao.ULongEntityClass.ULongEntityClass"]},{"name":"constructor(table: IdTable<UUID>, entityType: Class<E>? = null, entityCtor: (EntityID<UUID>) -> E? = null)","description":"org.jetbrains.exposed.v1.dao.UUIDEntityClass.UUIDEntityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-u-u-i-d-entity-class/-u-u-i-d-entity-class.html","searchKeys":["UUIDEntityClass","constructor(table: IdTable<UUID>, entityType: Class<E>? = null, entityCtor: (EntityID<UUID>) -> E? = null)","org.jetbrains.exposed.v1.dao.UUIDEntityClass.UUIDEntityClass"]},{"name":"constructor(table: Table, sourceTable: IdTable<SID>, target: EntityClass<ID, Target>, _sourceColumn: Column<EntityID<SID>>? = null, _targetColumn: Column<EntityID<ID>>? = null)","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.InnerTableLink","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/-inner-table-link.html","searchKeys":["InnerTableLink","constructor(table: Table, sourceTable: IdTable<SID>, target: EntityClass<ID, Target>, _sourceColumn: Column<EntityID<SID>>? = null, _targetColumn: Column<EntityID<ID>>? = null)","org.jetbrains.exposed.v1.dao.InnerTableLink.InnerTableLink"]},{"name":"constructor(transaction: Transaction)","description":"org.jetbrains.exposed.v1.dao.EntityCache.EntityCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/-entity-cache.html","searchKeys":["EntityCache","constructor(transaction: Transaction)","org.jetbrains.exposed.v1.dao.EntityCache.EntityCache"]},{"name":"data class EntityChange(val entityClass: EntityClass<*, Entity<*>>, val entityId: EntityID<*>, val changeType: EntityChangeType, val transactionId: String)","description":"org.jetbrains.exposed.v1.dao.EntityChange","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change/index.html","searchKeys":["EntityChange","data class EntityChange(val entityClass: EntityClass<*, Entity<*>>, val entityId: EntityID<*>, val changeType: EntityChangeType, val transactionId: String)","org.jetbrains.exposed.v1.dao.EntityChange"]},{"name":"enum EntityChangeType : Enum<EntityChangeType> ","description":"org.jetbrains.exposed.v1.dao.EntityChangeType","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/index.html","searchKeys":["EntityChangeType","enum EntityChangeType : Enum<EntityChangeType> ","org.jetbrains.exposed.v1.dao.EntityChangeType"]},{"name":"fun <ID : Any, R : Entity<ID>> getOrPutReferrers(sourceId: EntityID<*>, key: Column<*>, refs: () -> SizedIterable<R>): SizedIterable<R>","description":"org.jetbrains.exposed.v1.dao.EntityCache.getOrPutReferrers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/get-or-put-referrers.html","searchKeys":["getOrPutReferrers","fun <ID : Any, R : Entity<ID>> getOrPutReferrers(sourceId: EntityID<*>, key: Column<*>, refs: () -> SizedIterable<R>): SizedIterable<R>","org.jetbrains.exposed.v1.dao.EntityCache.getOrPutReferrers"]},{"name":"fun <ID : Any, T : Entity<ID>> EntityChange.toEntity(): T?","description":"org.jetbrains.exposed.v1.dao.toEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/to-entity.html","searchKeys":["toEntity","fun <ID : Any, T : Entity<ID>> EntityChange.toEntity(): T?","org.jetbrains.exposed.v1.dao.toEntity"]},{"name":"fun <ID : Any, T : Entity<ID>> EntityChange.toEntity(klass: EntityClass<ID, T>): T?","description":"org.jetbrains.exposed.v1.dao.toEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/to-entity.html","searchKeys":["toEntity","fun <ID : Any, T : Entity<ID>> EntityChange.toEntity(klass: EntityClass<ID, T>): T?","org.jetbrains.exposed.v1.dao.toEntity"]},{"name":"fun <ID : Any, T : Entity<ID>> find(f: EntityClass<ID, T>, id: EntityID<ID>): T?","description":"org.jetbrains.exposed.v1.dao.EntityCache.find","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/find.html","searchKeys":["find","fun <ID : Any, T : Entity<ID>> find(f: EntityClass<ID, T>, id: EntityID<ID>): T?","org.jetbrains.exposed.v1.dao.EntityCache.find"]},{"name":"fun <ID : Any, T : Entity<ID>> findAll(f: EntityClass<ID, T>): Collection<T>","description":"org.jetbrains.exposed.v1.dao.EntityCache.findAll","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/find-all.html","searchKeys":["findAll","fun <ID : Any, T : Entity<ID>> findAll(f: EntityClass<ID, T>): Collection<T>","org.jetbrains.exposed.v1.dao.EntityCache.findAll"]},{"name":"fun <ID : Any, T : Entity<ID>> isAssignableTo(entityClass: EntityClass<ID, T>): Boolean","description":"org.jetbrains.exposed.v1.dao.EntityClass.isAssignableTo","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/is-assignable-to.html","searchKeys":["isAssignableTo","fun <ID : Any, T : Entity<ID>> isAssignableTo(entityClass: EntityClass<ID, T>): Boolean","org.jetbrains.exposed.v1.dao.EntityClass.isAssignableTo"]},{"name":"fun <ID : Any, T : Entity<ID>> remove(table: IdTable<ID>, o: T)","description":"org.jetbrains.exposed.v1.dao.EntityCache.remove","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/remove.html","searchKeys":["remove","fun <ID : Any, T : Entity<ID>> remove(table: IdTable<ID>, o: T)","org.jetbrains.exposed.v1.dao.EntityCache.remove"]},{"name":"fun <ID : Any, T : Entity<ID>> scheduleInsert(f: EntityClass<ID, T>, o: T)","description":"org.jetbrains.exposed.v1.dao.EntityCache.scheduleInsert","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/schedule-insert.html","searchKeys":["scheduleInsert","fun <ID : Any, T : Entity<ID>> scheduleInsert(f: EntityClass<ID, T>, o: T)","org.jetbrains.exposed.v1.dao.EntityCache.scheduleInsert"]},{"name":"fun <ID : Any, T : Entity<ID>> scheduleUpdate(f: EntityClass<ID, T>, o: T)","description":"org.jetbrains.exposed.v1.dao.EntityCache.scheduleUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/schedule-update.html","searchKeys":["scheduleUpdate","fun <ID : Any, T : Entity<ID>> scheduleUpdate(f: EntityClass<ID, T>, o: T)","org.jetbrains.exposed.v1.dao.EntityCache.scheduleUpdate"]},{"name":"fun <ID : Any, T : Entity<ID>> store(f: EntityClass<ID, T>, o: T)","description":"org.jetbrains.exposed.v1.dao.EntityCache.store","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/store.html","searchKeys":["store","fun <ID : Any, T : Entity<ID>> store(f: EntityClass<ID, T>, o: T)","org.jetbrains.exposed.v1.dao.EntityCache.store"]},{"name":"fun <R : Entity<*>> getReferrers(sourceId: EntityID<*>, key: Column<*>): SizedIterable<R>?","description":"org.jetbrains.exposed.v1.dao.EntityCache.getReferrers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/get-referrers.html","searchKeys":["getReferrers","fun <R : Entity<*>> getReferrers(sourceId: EntityID<*>, key: Column<*>): SizedIterable<R>?","org.jetbrains.exposed.v1.dao.EntityCache.getReferrers"]},{"name":"fun <SID : Any> warmUpLinkedReferences(references: List<EntityID<SID>>, linkTable: Table, forUpdate: Boolean? = null, optimizedLoad: Boolean = false): List<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.warmUpLinkedReferences","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/warm-up-linked-references.html","searchKeys":["warmUpLinkedReferences","fun <SID : Any> warmUpLinkedReferences(references: List<EntityID<SID>>, linkTable: Table, forUpdate: Boolean? = null, optimizedLoad: Boolean = false): List<T>","org.jetbrains.exposed.v1.dao.EntityClass.warmUpLinkedReferences"]},{"name":"fun <SID> warmUpOptReferences(references: List<SID>, refColumn: Column<SID?>, forUpdate: Boolean? = null): List<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.warmUpOptReferences","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/warm-up-opt-references.html","searchKeys":["warmUpOptReferences","fun <SID> warmUpOptReferences(references: List<SID>, refColumn: Column<SID?>, forUpdate: Boolean? = null): List<T>","org.jetbrains.exposed.v1.dao.EntityClass.warmUpOptReferences"]},{"name":"fun <SID> warmUpReferences(references: List<SID>, refColumn: Column<SID>, forUpdate: Boolean? = null): List<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.warmUpReferences","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/warm-up-references.html","searchKeys":["warmUpReferences","fun <SID> warmUpReferences(references: List<SID>, refColumn: Column<SID>, forUpdate: Boolean? = null): List<T>","org.jetbrains.exposed.v1.dao.EntityClass.warmUpReferences"]},{"name":"fun <SRCID : Any, SRC : Entity<SRCID>, REF : Entity<*>, L : Iterable<SRC>> L.with(vararg relations: KProperty1<out REF, Any?>): L","description":"org.jetbrains.exposed.v1.dao.with","location":"exposed-dao/org.jetbrains.exposed.v1.dao/with.html","searchKeys":["with","fun <SRCID : Any, SRC : Entity<SRCID>, REF : Entity<*>, L : Iterable<SRC>> L.with(vararg relations: KProperty1<out REF, Any?>): L","org.jetbrains.exposed.v1.dao.with"]},{"name":"fun <SRCID : Any, SRC : Entity<SRCID>> SRC.load(vararg relations: KProperty1<out Entity<*>, Any?>): SRC","description":"org.jetbrains.exposed.v1.dao.load","location":"exposed-dao/org.jetbrains.exposed.v1.dao/load.html","searchKeys":["load","fun <SRCID : Any, SRC : Entity<SRCID>> SRC.load(vararg relations: KProperty1<out Entity<*>, Any?>): SRC","org.jetbrains.exposed.v1.dao.load"]},{"name":"fun <T, R : Any> Column<T>.lookupInReadValues(found: (T?) -> R?, notFound: () -> R?): R?","description":"org.jetbrains.exposed.v1.dao.Entity.lookupInReadValues","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/lookup-in-read-values.html","searchKeys":["lookupInReadValues","fun <T, R : Any> Column<T>.lookupInReadValues(found: (T?) -> R?, notFound: () -> R?): R?","org.jetbrains.exposed.v1.dao.Entity.lookupInReadValues"]},{"name":"fun <T> Column<T>.lookup(): T","description":"org.jetbrains.exposed.v1.dao.Entity.lookup","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/lookup.html","searchKeys":["lookup","fun <T> Column<T>.lookup(): T","org.jetbrains.exposed.v1.dao.Entity.lookup"]},{"name":"fun <T> withHook(action: (EntityChange) -> Unit, body: () -> T): T","description":"org.jetbrains.exposed.v1.dao.withHook","location":"exposed-dao/org.jetbrains.exposed.v1.dao/with-hook.html","searchKeys":["withHook","fun <T> withHook(action: (EntityChange) -> Unit, body: () -> T): T","org.jetbrains.exposed.v1.dao.withHook"]},{"name":"fun <TColumn, Unwrapped, Wrapped> EntityFieldWithTransform<TColumn, Unwrapped>.memoizedTransform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<TColumn, Wrapped>","description":"org.jetbrains.exposed.v1.dao.EntityClass.memoizedTransform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/memoized-transform.html","searchKeys":["memoizedTransform","fun <TColumn, Unwrapped, Wrapped> EntityFieldWithTransform<TColumn, Unwrapped>.memoizedTransform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<TColumn, Wrapped>","org.jetbrains.exposed.v1.dao.EntityClass.memoizedTransform"]},{"name":"fun <TColumn, Unwrapped, Wrapped> EntityFieldWithTransform<TColumn, Unwrapped>.transform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<TColumn, Wrapped>","description":"org.jetbrains.exposed.v1.dao.EntityClass.transform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/transform.html","searchKeys":["transform","fun <TColumn, Unwrapped, Wrapped> EntityFieldWithTransform<TColumn, Unwrapped>.transform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<TColumn, Wrapped>","org.jetbrains.exposed.v1.dao.EntityClass.transform"]},{"name":"fun <TID : Any, Target : Entity<TID>> EntityClass<TID, Target>.via(sourceColumn: Column<EntityID<ID>>, targetColumn: Column<EntityID<TID>>): InnerTableLink<ID, Entity<ID>, TID, Target>","description":"org.jetbrains.exposed.v1.dao.Entity.via","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/via.html","searchKeys":["via","fun <TID : Any, Target : Entity<TID>> EntityClass<TID, Target>.via(sourceColumn: Column<EntityID<ID>>, targetColumn: Column<EntityID<TID>>): InnerTableLink<ID, Entity<ID>, TID, Target>","org.jetbrains.exposed.v1.dao.Entity.via"]},{"name":"fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalReferrersOn(column: Column<REF?>, cache: Boolean = false): Referrers<ID, Entity<ID>, TargetID, Target, REF?>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-referrers-on.html","searchKeys":["optionalReferrersOn","fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalReferrersOn(column: Column<REF?>, cache: Boolean = false): Referrers<ID, Entity<ID>, TargetID, Target, REF?>","org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn"]},{"name":"fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.referrersOn(column: Column<REF>, cache: Boolean): Referrers<ID, Entity<ID>, TargetID, Target, REF>","description":"org.jetbrains.exposed.v1.dao.EntityClass.referrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/referrers-on.html","searchKeys":["referrersOn","fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.referrersOn(column: Column<REF>, cache: Boolean): Referrers<ID, Entity<ID>, TargetID, Target, REF>","org.jetbrains.exposed.v1.dao.EntityClass.referrersOn"]},{"name":"fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.optionalReferrersOn(table: IdTable<*>, cache: Boolean = false): Referrers<ID, Entity<ID>, TargetID, Target, Any?>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-referrers-on.html","searchKeys":["optionalReferrersOn","fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.optionalReferrersOn(table: IdTable<*>, cache: Boolean = false): Referrers<ID, Entity<ID>, TargetID, Target, Any?>","org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn"]},{"name":"fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.referrersOn(table: IdTable<*>, cache: Boolean): Referrers<ID, Entity<ID>, TargetID, Target, Any>","description":"org.jetbrains.exposed.v1.dao.EntityClass.referrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/referrers-on.html","searchKeys":["referrersOn","fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.referrersOn(table: IdTable<*>, cache: Boolean): Referrers<ID, Entity<ID>, TargetID, Target, Any>","org.jetbrains.exposed.v1.dao.EntityClass.referrersOn"]},{"name":"fun <Unwrapped, Wrapped> Column<Unwrapped>.memoizedTransform(transformer: ColumnTransformer<Unwrapped, Wrapped>): EntityFieldWithTransform<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.dao.EntityClass.memoizedTransform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/memoized-transform.html","searchKeys":["memoizedTransform","fun <Unwrapped, Wrapped> Column<Unwrapped>.memoizedTransform(transformer: ColumnTransformer<Unwrapped, Wrapped>): EntityFieldWithTransform<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.dao.EntityClass.memoizedTransform"]},{"name":"fun <Unwrapped, Wrapped> Column<Unwrapped>.memoizedTransform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.dao.EntityClass.memoizedTransform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/memoized-transform.html","searchKeys":["memoizedTransform","fun <Unwrapped, Wrapped> Column<Unwrapped>.memoizedTransform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.dao.EntityClass.memoizedTransform"]},{"name":"fun <Unwrapped, Wrapped> Column<Unwrapped>.transform(transformer: ColumnTransformer<Unwrapped, Wrapped>): EntityFieldWithTransform<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.dao.EntityClass.transform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/transform.html","searchKeys":["transform","fun <Unwrapped, Wrapped> Column<Unwrapped>.transform(transformer: ColumnTransformer<Unwrapped, Wrapped>): EntityFieldWithTransform<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.dao.EntityClass.transform"]},{"name":"fun <Unwrapped, Wrapped> Column<Unwrapped>.transform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<Unwrapped, Wrapped>","description":"org.jetbrains.exposed.v1.dao.EntityClass.transform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/transform.html","searchKeys":["transform","fun <Unwrapped, Wrapped> Column<Unwrapped>.transform(unwrap: (Wrapped) -> Unwrapped, wrap: (Unwrapped) -> Wrapped): EntityFieldWithTransform<Unwrapped, Wrapped>","org.jetbrains.exposed.v1.dao.EntityClass.transform"]},{"name":"fun Transaction.alertSubscribers()","description":"org.jetbrains.exposed.v1.dao.alertSubscribers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/alert-subscribers.html","searchKeys":["alertSubscribers","fun Transaction.alertSubscribers()","org.jetbrains.exposed.v1.dao.alertSubscribers"]},{"name":"fun Transaction.flushCache(): List<Entity<*>>","description":"org.jetbrains.exposed.v1.dao.flushCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/flush-cache.html","searchKeys":["flushCache","fun Transaction.flushCache(): List<Entity<*>>","org.jetbrains.exposed.v1.dao.flushCache"]},{"name":"fun Transaction.registerChange(entityClass: EntityClass<*, Entity<*>>, entityId: EntityID<*>, changeType: EntityChangeType)","description":"org.jetbrains.exposed.v1.dao.registerChange","location":"exposed-dao/org.jetbrains.exposed.v1.dao/register-change.html","searchKeys":["registerChange","fun Transaction.registerChange(entityClass: EntityClass<*, Entity<*>>, entityId: EntityID<*>, changeType: EntityChangeType)","org.jetbrains.exposed.v1.dao.registerChange"]},{"name":"fun Transaction.registeredChanges(): List<EntityChange>","description":"org.jetbrains.exposed.v1.dao.registeredChanges","location":"exposed-dao/org.jetbrains.exposed.v1.dao/registered-changes.html","searchKeys":["registeredChanges","fun Transaction.registeredChanges(): List<EntityChange>","org.jetbrains.exposed.v1.dao.registeredChanges"]},{"name":"fun addBatch(entity: Entity<*>)","description":"org.jetbrains.exposed.v1.dao.EntityBatchUpdate.addBatch","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-batch-update/add-batch.html","searchKeys":["addBatch","fun addBatch(entity: Entity<*>)","org.jetbrains.exposed.v1.dao.EntityBatchUpdate.addBatch"]},{"name":"fun clear(flush: Boolean = true)","description":"org.jetbrains.exposed.v1.dao.EntityCache.clear","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/clear.html","searchKeys":["clear","fun clear(flush: Boolean = true)","org.jetbrains.exposed.v1.dao.EntityCache.clear"]},{"name":"fun clearReferrersCache()","description":"org.jetbrains.exposed.v1.dao.EntityCache.clearReferrersCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/clear-referrers-cache.html","searchKeys":["clearReferrersCache","fun clearReferrersCache()","org.jetbrains.exposed.v1.dao.EntityCache.clearReferrersCache"]},{"name":"fun count(op: Op<Boolean>? = null): Long","description":"org.jetbrains.exposed.v1.dao.EntityClass.count","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/count.html","searchKeys":["count","fun count(op: Op<Boolean>? = null): Long","org.jetbrains.exposed.v1.dao.EntityClass.count"]},{"name":"fun execute(transaction: Transaction): Int","description":"org.jetbrains.exposed.v1.dao.EntityBatchUpdate.execute","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-batch-update/execute.html","searchKeys":["execute","fun execute(transaction: Transaction): Int","org.jetbrains.exposed.v1.dao.EntityBatchUpdate.execute"]},{"name":"fun expireCache()","description":"org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.expireCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-cached-entity-class/expire-cache.html","searchKeys":["expireCache","fun expireCache()","org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.expireCache"]},{"name":"fun find(op: Op<Boolean>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.find","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find.html","searchKeys":["find","fun find(op: Op<Boolean>): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.find"]},{"name":"fun find(op: SqlExpressionBuilder.() -> Op<Boolean>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.find","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find.html","searchKeys":["find","fun find(op: SqlExpressionBuilder.() -> Op<Boolean>): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.find"]},{"name":"fun findById(id: ID): T?","description":"org.jetbrains.exposed.v1.dao.EntityClass.findById","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find-by-id.html","searchKeys":["findById","fun findById(id: ID): T?","org.jetbrains.exposed.v1.dao.EntityClass.findById"]},{"name":"fun findByIdAndUpdate(id: ID, block: (it: T) -> Unit): T?","description":"org.jetbrains.exposed.v1.dao.EntityClass.findByIdAndUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find-by-id-and-update.html","searchKeys":["findByIdAndUpdate","fun findByIdAndUpdate(id: ID, block: (it: T) -> Unit): T?","org.jetbrains.exposed.v1.dao.EntityClass.findByIdAndUpdate"]},{"name":"fun findSingleByAndUpdate(op: Op<Boolean>, block: (it: T) -> Unit): T?","description":"org.jetbrains.exposed.v1.dao.EntityClass.findSingleByAndUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find-single-by-and-update.html","searchKeys":["findSingleByAndUpdate","fun findSingleByAndUpdate(op: Op<Boolean>, block: (it: T) -> Unit): T?","org.jetbrains.exposed.v1.dao.EntityClass.findSingleByAndUpdate"]},{"name":"fun findWithCacheCondition(cacheCheckCondition: T.() -> Boolean, op: SqlExpressionBuilder.() -> Op<Boolean>): Sequence<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.findWithCacheCondition","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find-with-cache-condition.html","searchKeys":["findWithCacheCondition","fun findWithCacheCondition(cacheCheckCondition: T.() -> Boolean, op: SqlExpressionBuilder.() -> Op<Boolean>): Sequence<T>","org.jetbrains.exposed.v1.dao.EntityClass.findWithCacheCondition"]},{"name":"fun flush()","description":"org.jetbrains.exposed.v1.dao.EntityCache.flush","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/flush.html","searchKeys":["flush","fun flush()","org.jetbrains.exposed.v1.dao.EntityCache.flush"]},{"name":"fun flush(tables: Iterable<IdTable<*>>)","description":"org.jetbrains.exposed.v1.dao.EntityCache.flush","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/flush.html","searchKeys":["flush","fun flush(tables: Iterable<IdTable<*>>)","org.jetbrains.exposed.v1.dao.EntityCache.flush"]},{"name":"fun forIds(ids: List<ID>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.forIds","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/for-ids.html","searchKeys":["forIds","fun forIds(ids: List<ID>): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.forIds"]},{"name":"fun invalidateGlobalCaches(created: List<Entity<*>>)","description":"org.jetbrains.exposed.v1.dao.EntityCache.Companion.invalidateGlobalCaches","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/-companion/invalidate-global-caches.html","searchKeys":["invalidateGlobalCaches","fun invalidateGlobalCaches(created: List<Entity<*>>)","org.jetbrains.exposed.v1.dao.EntityCache.Companion.invalidateGlobalCaches"]},{"name":"fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): Referrers<ParentID, Parent, ChildID, Child, REF>","description":"org.jetbrains.exposed.v1.dao.Referrers.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/order-by.html","searchKeys":["orderBy","fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): Referrers<ParentID, Parent, ChildID, Child, REF>","org.jetbrains.exposed.v1.dao.Referrers.orderBy"]},{"name":"fun reload(entity: Entity<ID>, flush: Boolean = false): T?","description":"org.jetbrains.exposed.v1.dao.EntityClass.reload","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/reload.html","searchKeys":["reload","fun reload(entity: Entity<ID>, flush: Boolean = false): T?","org.jetbrains.exposed.v1.dao.EntityClass.reload"]},{"name":"fun removeFromCache(entity: Entity<ID>)","description":"org.jetbrains.exposed.v1.dao.EntityClass.removeFromCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/remove-from-cache.html","searchKeys":["removeFromCache","fun removeFromCache(entity: Entity<ID>)","org.jetbrains.exposed.v1.dao.EntityClass.removeFromCache"]},{"name":"fun store(o: Entity<*>)","description":"org.jetbrains.exposed.v1.dao.EntityCache.store","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/store.html","searchKeys":["store","fun store(o: Entity<*>)","org.jetbrains.exposed.v1.dao.EntityCache.store"]},{"name":"fun storeWrittenValues()","description":"org.jetbrains.exposed.v1.dao.Entity.storeWrittenValues","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/store-written-values.html","searchKeys":["storeWrittenValues","fun storeWrittenValues()","org.jetbrains.exposed.v1.dao.Entity.storeWrittenValues"]},{"name":"fun subscribe(action: (EntityChange) -> Unit): (EntityChange) -> Unit","description":"org.jetbrains.exposed.v1.dao.EntityHook.subscribe","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-hook/subscribe.html","searchKeys":["subscribe","fun subscribe(action: (EntityChange) -> Unit): (EntityChange) -> Unit","org.jetbrains.exposed.v1.dao.EntityHook.subscribe"]},{"name":"fun testCache(cacheCheckCondition: T.() -> Boolean): Sequence<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.testCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/test-cache.html","searchKeys":["testCache","fun testCache(cacheCheckCondition: T.() -> Boolean): Sequence<T>","org.jetbrains.exposed.v1.dao.EntityClass.testCache"]},{"name":"fun testCache(id: EntityID<ID>): T?","description":"org.jetbrains.exposed.v1.dao.EntityClass.testCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/test-cache.html","searchKeys":["testCache","fun testCache(id: EntityID<ID>): T?","org.jetbrains.exposed.v1.dao.EntityClass.testCache"]},{"name":"fun unsubscribe(action: (EntityChange) -> Unit)","description":"org.jetbrains.exposed.v1.dao.EntityHook.unsubscribe","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-hook/unsubscribe.html","searchKeys":["unsubscribe","fun unsubscribe(action: (EntityChange) -> Unit)","org.jetbrains.exposed.v1.dao.EntityHook.unsubscribe"]},{"name":"fun valueOf(value: String): EntityChangeType","description":"org.jetbrains.exposed.v1.dao.EntityChangeType.valueOf","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EntityChangeType","org.jetbrains.exposed.v1.dao.EntityChangeType.valueOf"]},{"name":"fun values(): Array<EntityChangeType>","description":"org.jetbrains.exposed.v1.dao.EntityChangeType.values","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/values.html","searchKeys":["values","fun values(): Array<EntityChangeType>","org.jetbrains.exposed.v1.dao.EntityChangeType.values"]},{"name":"fun wrap(id: EntityID<ID>, row: ResultRow?): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrap","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap.html","searchKeys":["wrap","fun wrap(id: EntityID<ID>, row: ResultRow?): T","org.jetbrains.exposed.v1.dao.EntityClass.wrap"]},{"name":"fun wrapRow(row: ResultRow): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrapRow","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap-row.html","searchKeys":["wrapRow","fun wrapRow(row: ResultRow): T","org.jetbrains.exposed.v1.dao.EntityClass.wrapRow"]},{"name":"fun wrapRow(row: ResultRow, alias: Alias<IdTable<*>>): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrapRow","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap-row.html","searchKeys":["wrapRow","fun wrapRow(row: ResultRow, alias: Alias<IdTable<*>>): T","org.jetbrains.exposed.v1.dao.EntityClass.wrapRow"]},{"name":"fun wrapRow(row: ResultRow, alias: QueryAlias): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrapRow","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap-row.html","searchKeys":["wrapRow","fun wrapRow(row: ResultRow, alias: QueryAlias): T","org.jetbrains.exposed.v1.dao.EntityClass.wrapRow"]},{"name":"fun wrapRows(rows: SizedIterable<ResultRow>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrapRows","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap-rows.html","searchKeys":["wrapRows","fun wrapRows(rows: SizedIterable<ResultRow>): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.wrapRows"]},{"name":"fun wrapRows(rows: SizedIterable<ResultRow>, alias: Alias<IdTable<*>>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrapRows","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap-rows.html","searchKeys":["wrapRows","fun wrapRows(rows: SizedIterable<ResultRow>, alias: Alias<IdTable<*>>): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.wrapRows"]},{"name":"fun wrapRows(rows: SizedIterable<ResultRow>, alias: QueryAlias): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.wrapRows","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/wrap-rows.html","searchKeys":["wrapRows","fun wrapRows(rows: SizedIterable<ResultRow>, alias: QueryAlias): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.wrapRows"]},{"name":"infix fun <REF : Any> optionalReferencedOn(column: Column<REF?>): OptionalReference<REF, ID, T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-referenced-on.html","searchKeys":["optionalReferencedOn","infix fun <REF : Any> optionalReferencedOn(column: Column<REF?>): OptionalReference<REF, ID, T>","org.jetbrains.exposed.v1.dao.EntityClass.optionalReferencedOn"]},{"name":"infix fun <REF : Any> referencedOn(column: Column<REF>): Reference<REF, ID, T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.referencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/referenced-on.html","searchKeys":["referencedOn","infix fun <REF : Any> referencedOn(column: Column<REF>): Reference<REF, ID, T>","org.jetbrains.exposed.v1.dao.EntityClass.referencedOn"]},{"name":"infix fun <TID : Any, Target : Entity<TID>> EntityClass<TID, Target>.via(table: Table): InnerTableLink<ID, Entity<ID>, TID, Target>","description":"org.jetbrains.exposed.v1.dao.Entity.via","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/via.html","searchKeys":["via","infix fun <TID : Any, Target : Entity<TID>> EntityClass<TID, Target>.via(table: Table): InnerTableLink<ID, Entity<ID>, TID, Target>","org.jetbrains.exposed.v1.dao.Entity.via"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.backReferencedOn(column: Column<REF>): ReadOnlyProperty<Entity<ID>, Target>","description":"org.jetbrains.exposed.v1.dao.EntityClass.backReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/back-referenced-on.html","searchKeys":["backReferencedOn","infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.backReferencedOn(column: Column<REF>): ReadOnlyProperty<Entity<ID>, Target>","org.jetbrains.exposed.v1.dao.EntityClass.backReferencedOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.backReferencedOn(column: Column<REF?>): ReadOnlyProperty<Entity<ID>, Target>","description":"org.jetbrains.exposed.v1.dao.EntityClass.backReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/back-referenced-on.html","searchKeys":["backReferencedOn","infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.backReferencedOn(column: Column<REF?>): ReadOnlyProperty<Entity<ID>, Target>","org.jetbrains.exposed.v1.dao.EntityClass.backReferencedOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalBackReferencedOn(column: Column<REF>): OptionalBackReference<TargetID, Target, ID, Entity<ID>, REF>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalBackReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-back-referenced-on.html","searchKeys":["optionalBackReferencedOn","infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalBackReferencedOn(column: Column<REF>): OptionalBackReference<TargetID, Target, ID, Entity<ID>, REF>","org.jetbrains.exposed.v1.dao.EntityClass.optionalBackReferencedOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalBackReferencedOn(column: Column<REF?>): OptionalBackReference<TargetID, Target, ID, Entity<ID>, REF>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalBackReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-back-referenced-on.html","searchKeys":["optionalBackReferencedOn","infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalBackReferencedOn(column: Column<REF?>): OptionalBackReference<TargetID, Target, ID, Entity<ID>, REF>","org.jetbrains.exposed.v1.dao.EntityClass.optionalBackReferencedOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalReferrersOn(column: Column<REF?>): Referrers<ID, Entity<ID>, TargetID, Target, REF?>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-referrers-on.html","searchKeys":["optionalReferrersOn","infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.optionalReferrersOn(column: Column<REF?>): Referrers<ID, Entity<ID>, TargetID, Target, REF?>","org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.referrersOn(column: Column<REF>): Referrers<ID, Entity<ID>, TargetID, Target, REF>","description":"org.jetbrains.exposed.v1.dao.EntityClass.referrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/referrers-on.html","searchKeys":["referrersOn","infix fun <TargetID : Any, Target : Entity<TargetID>, REF : Any> EntityClass<TargetID, Target>.referrersOn(column: Column<REF>): Referrers<ID, Entity<ID>, TargetID, Target, REF>","org.jetbrains.exposed.v1.dao.EntityClass.referrersOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.backReferencedOn(table: IdTable<*>): ReadOnlyProperty<Entity<ID>, Target>","description":"org.jetbrains.exposed.v1.dao.EntityClass.backReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/back-referenced-on.html","searchKeys":["backReferencedOn","infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.backReferencedOn(table: IdTable<*>): ReadOnlyProperty<Entity<ID>, Target>","org.jetbrains.exposed.v1.dao.EntityClass.backReferencedOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.optionalBackReferencedOn(table: IdTable<*>): OptionalBackReference<TargetID, Target, ID, Entity<ID>, Any>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalBackReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-back-referenced-on.html","searchKeys":["optionalBackReferencedOn","infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.optionalBackReferencedOn(table: IdTable<*>): OptionalBackReference<TargetID, Target, ID, Entity<ID>, Any>","org.jetbrains.exposed.v1.dao.EntityClass.optionalBackReferencedOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.optionalReferrersOn(table: IdTable<*>): Referrers<ID, Entity<ID>, TargetID, Target, Any?>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-referrers-on.html","searchKeys":["optionalReferrersOn","infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.optionalReferrersOn(table: IdTable<*>): Referrers<ID, Entity<ID>, TargetID, Target, Any?>","org.jetbrains.exposed.v1.dao.EntityClass.optionalReferrersOn"]},{"name":"infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.referrersOn(table: IdTable<*>): Referrers<ID, Entity<ID>, TargetID, Target, Any>","description":"org.jetbrains.exposed.v1.dao.EntityClass.referrersOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/referrers-on.html","searchKeys":["referrersOn","infix fun <TargetID : Any, Target : Entity<TargetID>> EntityClass<TargetID, Target>.referrersOn(table: IdTable<*>): Referrers<ID, Entity<ID>, TargetID, Target, Any>","org.jetbrains.exposed.v1.dao.EntityClass.referrersOn"]},{"name":"infix fun optionalReferencedOn(table: IdTable<*>): OptionalReference<Any, ID, T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.optionalReferencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/optional-referenced-on.html","searchKeys":["optionalReferencedOn","infix fun optionalReferencedOn(table: IdTable<*>): OptionalReference<Any, ID, T>","org.jetbrains.exposed.v1.dao.EntityClass.optionalReferencedOn"]},{"name":"infix fun orderBy(expression: Expression<*>): InnerTableLink<SID, Source, ID, Target>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/order-by.html","searchKeys":["orderBy","infix fun orderBy(expression: Expression<*>): InnerTableLink<SID, Source, ID, Target>","org.jetbrains.exposed.v1.dao.InnerTableLink.orderBy"]},{"name":"infix fun orderBy(expression: Expression<*>): Referrers<ParentID, Parent, ChildID, Child, REF>","description":"org.jetbrains.exposed.v1.dao.Referrers.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/order-by.html","searchKeys":["orderBy","infix fun orderBy(expression: Expression<*>): Referrers<ParentID, Parent, ChildID, Child, REF>","org.jetbrains.exposed.v1.dao.Referrers.orderBy"]},{"name":"infix fun orderBy(order: List<Pair<Expression<*>, SortOrder>>): InnerTableLink<SID, Source, ID, Target>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/order-by.html","searchKeys":["orderBy","infix fun orderBy(order: List<Pair<Expression<*>, SortOrder>>): InnerTableLink<SID, Source, ID, Target>","org.jetbrains.exposed.v1.dao.InnerTableLink.orderBy"]},{"name":"infix fun orderBy(order: List<Pair<Expression<*>, SortOrder>>): Referrers<ParentID, Parent, ChildID, Child, REF>","description":"org.jetbrains.exposed.v1.dao.Referrers.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/order-by.html","searchKeys":["orderBy","infix fun orderBy(order: List<Pair<Expression<*>, SortOrder>>): Referrers<ParentID, Parent, ChildID, Child, REF>","org.jetbrains.exposed.v1.dao.Referrers.orderBy"]},{"name":"infix fun orderBy(order: Pair<Expression<*>, SortOrder>): InnerTableLink<SID, Source, ID, Target>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/order-by.html","searchKeys":["orderBy","infix fun orderBy(order: Pair<Expression<*>, SortOrder>): InnerTableLink<SID, Source, ID, Target>","org.jetbrains.exposed.v1.dao.InnerTableLink.orderBy"]},{"name":"infix fun orderBy(order: Pair<Expression<*>, SortOrder>): Referrers<ParentID, Parent, ChildID, Child, REF>","description":"org.jetbrains.exposed.v1.dao.Referrers.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/order-by.html","searchKeys":["orderBy","infix fun orderBy(order: Pair<Expression<*>, SortOrder>): Referrers<ParentID, Parent, ChildID, Child, REF>","org.jetbrains.exposed.v1.dao.Referrers.orderBy"]},{"name":"infix fun referencedOn(table: IdTable<*>): Reference<Any, ID, T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.referencedOn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/referenced-on.html","searchKeys":["referencedOn","infix fun referencedOn(table: IdTable<*>): Reference<Any, ID, T>","org.jetbrains.exposed.v1.dao.EntityClass.referencedOn"]},{"name":"inline fun view(op: SqlExpressionBuilder.() -> Op<Boolean>): View<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.view","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/view.html","searchKeys":["view","inline fun view(op: SqlExpressionBuilder.() -> Op<Boolean>): View<T>","org.jetbrains.exposed.v1.dao.EntityClass.view"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.dao.EntityCache.Companion","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.dao.EntityCache.Companion"]},{"name":"object EntityHook","description":"org.jetbrains.exposed.v1.dao.EntityHook","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-hook/index.html","searchKeys":["EntityHook","object EntityHook","org.jetbrains.exposed.v1.dao.EntityHook"]},{"name":"open class Entity<ID : Any>(val id: EntityID<ID>)","description":"org.jetbrains.exposed.v1.dao.Entity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/index.html","searchKeys":["Entity","open class Entity<ID : Any>(val id: EntityID<ID>)","org.jetbrains.exposed.v1.dao.Entity"]},{"name":"open class EntityFieldWithTransform<Unwrapped, Wrapped>(val column: Column<Unwrapped>, transformer: ColumnTransformer<Unwrapped, Wrapped>, cacheResult: Boolean = false) : ColumnTransformer<Unwrapped, Wrapped> ","description":"org.jetbrains.exposed.v1.dao.EntityFieldWithTransform","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-field-with-transform/index.html","searchKeys":["EntityFieldWithTransform","open class EntityFieldWithTransform<Unwrapped, Wrapped>(val column: Column<Unwrapped>, transformer: ColumnTransformer<Unwrapped, Wrapped>, cacheResult: Boolean = false) : ColumnTransformer<Unwrapped, Wrapped> ","org.jetbrains.exposed.v1.dao.EntityFieldWithTransform"]},{"name":"open class Referrers<ParentID : Any, in Parent : Entity<ParentID>, ChildID : Any, out Child : Entity<ChildID>, REF>(val reference: Column<REF>, val factory: EntityClass<ChildID, Child>, val cache: Boolean, references: Map<Column<*>, Column<*>>? = null) : ReadOnlyProperty<Parent, SizedIterable<Child>> ","description":"org.jetbrains.exposed.v1.dao.Referrers","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/index.html","searchKeys":["Referrers","open class Referrers<ParentID : Any, in Parent : Entity<ParentID>, ChildID : Any, out Child : Entity<ChildID>, REF>(val reference: Column<REF>, val factory: EntityClass<ChildID, Child>, val cache: Boolean, references: Map<Column<*>, Column<*>>? = null) : ReadOnlyProperty<Parent, SizedIterable<Child>> ","org.jetbrains.exposed.v1.dao.Referrers"]},{"name":"open fun <T> forceUpdateEntity(entity: Entity<ID>, column: Column<T>, value: T)","description":"org.jetbrains.exposed.v1.dao.ImmutableEntityClass.forceUpdateEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-entity-class/force-update-entity.html","searchKeys":["forceUpdateEntity","open fun <T> forceUpdateEntity(entity: Entity<ID>, column: Column<T>, value: T)","org.jetbrains.exposed.v1.dao.ImmutableEntityClass.forceUpdateEntity"]},{"name":"open fun all(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.all","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/all.html","searchKeys":["all","open fun all(): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.all"]},{"name":"open fun delete()","description":"org.jetbrains.exposed.v1.dao.Entity.delete","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/delete.html","searchKeys":["delete","open fun delete()","org.jetbrains.exposed.v1.dao.Entity.delete"]},{"name":"open fun findById(id: EntityID<ID>): T?","description":"org.jetbrains.exposed.v1.dao.EntityClass.findById","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/find-by-id.html","searchKeys":["findById","open fun findById(id: EntityID<ID>): T?","org.jetbrains.exposed.v1.dao.EntityClass.findById"]},{"name":"open fun flush(batch: EntityBatchUpdate? = null): Boolean","description":"org.jetbrains.exposed.v1.dao.Entity.flush","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/flush.html","searchKeys":["flush","open fun flush(batch: EntityBatchUpdate? = null): Boolean","org.jetbrains.exposed.v1.dao.Entity.flush"]},{"name":"open fun forEntityIds(ids: List<EntityID<ID>>): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.EntityClass.forEntityIds","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/for-entity-ids.html","searchKeys":["forEntityIds","open fun forEntityIds(ids: List<EntityID<ID>>): SizedIterable<T>","org.jetbrains.exposed.v1.dao.EntityClass.forEntityIds"]},{"name":"open fun new(id: ID?, init: T.() -> Unit): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.new","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/new.html","searchKeys":["new","open fun new(id: ID?, init: T.() -> Unit): T","org.jetbrains.exposed.v1.dao.EntityClass.new"]},{"name":"open fun new(init: T.() -> Unit): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.new","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/new.html","searchKeys":["new","open fun new(init: T.() -> Unit): T","org.jetbrains.exposed.v1.dao.EntityClass.new"]},{"name":"open fun refresh(flush: Boolean = false)","description":"org.jetbrains.exposed.v1.dao.Entity.refresh","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/refresh.html","searchKeys":["refresh","open fun refresh(flush: Boolean = false)","org.jetbrains.exposed.v1.dao.Entity.refresh"]},{"name":"open fun searchQuery(op: Op<Boolean>): Query","description":"org.jetbrains.exposed.v1.dao.EntityClass.searchQuery","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/search-query.html","searchKeys":["searchQuery","open fun searchQuery(op: Op<Boolean>): Query","org.jetbrains.exposed.v1.dao.EntityClass.searchQuery"]},{"name":"open operator override fun getValue(o: Source, unused: KProperty<*>): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/get-value.html","searchKeys":["getValue","open operator override fun getValue(o: Source, unused: KProperty<*>): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.InnerTableLink.getValue"]},{"name":"open operator override fun getValue(thisRef: Child, property: KProperty<*>): Parent?","description":"org.jetbrains.exposed.v1.dao.OptionalBackReference.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-back-reference/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: Child, property: KProperty<*>): Parent?","org.jetbrains.exposed.v1.dao.OptionalBackReference.getValue"]},{"name":"open operator override fun getValue(thisRef: Parent, property: KProperty<*>): SizedIterable<Child>","description":"org.jetbrains.exposed.v1.dao.Referrers.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: Parent, property: KProperty<*>): SizedIterable<Child>","org.jetbrains.exposed.v1.dao.Referrers.getValue"]},{"name":"open operator override fun iterator(): Iterator<Target>","description":"org.jetbrains.exposed.v1.dao.View.iterator","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Target>","org.jetbrains.exposed.v1.dao.View.iterator"]},{"name":"open operator override fun setValue(o: Source, unused: KProperty<*>, value: SizedIterable<Target>)","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.setValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/set-value.html","searchKeys":["setValue","open operator override fun setValue(o: Source, unused: KProperty<*>, value: SizedIterable<Target>)","org.jetbrains.exposed.v1.dao.InnerTableLink.setValue"]},{"name":"open override fun <T : Any> createEntityID(value: T, table: IdTable<T>): EntityID<T>","description":"org.jetbrains.exposed.v1.dao.DaoEntityIDFactory.createEntityID","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-dao-entity-i-d-factory/create-entity-i-d.html","searchKeys":["createEntityID","open override fun <T : Any> createEntityID(value: T, table: IdTable<T>): EntityID<T>","org.jetbrains.exposed.v1.dao.DaoEntityIDFactory.createEntityID"]},{"name":"open override fun <T> forceUpdateEntity(entity: Entity<ID>, column: Column<T>, value: T)","description":"org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.forceUpdateEntity","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-cached-entity-class/force-update-entity.html","searchKeys":["forceUpdateEntity","open override fun <T> forceUpdateEntity(entity: Entity<ID>, column: Column<T>, value: T)","org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.forceUpdateEntity"]},{"name":"open override fun afterExecution(transaction: Transaction, contexts: List<StatementContext>, executedStatement: PreparedStatementApi)","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.afterExecution","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/after-execution.html","searchKeys":["afterExecution","open override fun afterExecution(transaction: Transaction, contexts: List<StatementContext>, executedStatement: PreparedStatementApi)","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.afterExecution"]},{"name":"open override fun all(): SizedIterable<T>","description":"org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.all","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-immutable-cached-entity-class/all.html","searchKeys":["all","open override fun all(): SizedIterable<T>","org.jetbrains.exposed.v1.dao.ImmutableCachedEntityClass.all"]},{"name":"open override fun beforeCommit(transaction: Transaction)","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.beforeCommit","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/before-commit.html","searchKeys":["beforeCommit","open override fun beforeCommit(transaction: Transaction)","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.beforeCommit"]},{"name":"open override fun beforeExecution(transaction: Transaction, context: StatementContext)","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.beforeExecution","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/before-execution.html","searchKeys":["beforeExecution","open override fun beforeExecution(transaction: Transaction, context: StatementContext)","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.beforeExecution"]},{"name":"open override fun beforeRollback(transaction: Transaction)","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.beforeRollback","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/before-rollback.html","searchKeys":["beforeRollback","open override fun beforeRollback(transaction: Transaction)","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.beforeRollback"]},{"name":"open override fun copy(): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.copy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/copy.html","searchKeys":["copy","open override fun copy(): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.copy"]},{"name":"open override fun count(): Long","description":"org.jetbrains.exposed.v1.dao.View.count","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/count.html","searchKeys":["count","open override fun count(): Long","org.jetbrains.exposed.v1.dao.View.count"]},{"name":"open override fun empty(): Boolean","description":"org.jetbrains.exposed.v1.dao.View.empty","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/empty.html","searchKeys":["empty","open override fun empty(): Boolean","org.jetbrains.exposed.v1.dao.View.empty"]},{"name":"open override fun forUpdate(option: ForUpdateOption): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.forUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/for-update.html","searchKeys":["forUpdate","open override fun forUpdate(option: ForUpdateOption): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.forUpdate"]},{"name":"open override fun keepUserDataInTransactionStoreOnCommit(userData: Map<Key<*>, Any?>): Map<Key<*>, Any?>","description":"org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.keepUserDataInTransactionStoreOnCommit","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-lifecycle-interceptor/keep-user-data-in-transaction-store-on-commit.html","searchKeys":["keepUserDataInTransactionStoreOnCommit","open override fun keepUserDataInTransactionStoreOnCommit(userData: Map<Key<*>, Any?>): Map<Key<*>, Any?>","org.jetbrains.exposed.v1.dao.EntityLifecycleInterceptor.keepUserDataInTransactionStoreOnCommit"]},{"name":"open override fun limit(count: Int): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.limit","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/limit.html","searchKeys":["limit","open override fun limit(count: Int): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.limit"]},{"name":"open override fun notForUpdate(): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.notForUpdate","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/not-for-update.html","searchKeys":["notForUpdate","open override fun notForUpdate(): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.notForUpdate"]},{"name":"open override fun offset(start: Long): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.offset","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/offset.html","searchKeys":["offset","open override fun offset(start: Long): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.offset"]},{"name":"open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.orderBy","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/order-by.html","searchKeys":["orderBy","open override fun orderBy(vararg order: Pair<Expression<*>, SortOrder>): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.orderBy"]},{"name":"open override fun unwrap(value: Wrapped): Unwrapped","description":"org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.unwrap","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-field-with-transform/unwrap.html","searchKeys":["unwrap","open override fun unwrap(value: Wrapped): Unwrapped","org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.unwrap"]},{"name":"open override fun wrap(value: Unwrapped): Wrapped","description":"org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.wrap","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-field-with-transform/wrap.html","searchKeys":["wrap","open override fun wrap(value: Unwrapped): Wrapped","org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.wrap"]},{"name":"open val dependsOnColumns: List<Column<out Any?>>","description":"org.jetbrains.exposed.v1.dao.EntityClass.dependsOnColumns","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/depends-on-columns.html","searchKeys":["dependsOnColumns","open val dependsOnColumns: List<Column<out Any?>>","org.jetbrains.exposed.v1.dao.EntityClass.dependsOnColumns"]},{"name":"open val dependsOnTables: ColumnSet","description":"org.jetbrains.exposed.v1.dao.EntityClass.dependsOnTables","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/depends-on-tables.html","searchKeys":["dependsOnTables","open val dependsOnTables: ColumnSet","org.jetbrains.exposed.v1.dao.EntityClass.dependsOnTables"]},{"name":"operator fun <REF : Any, RID : Any, T : Entity<RID>> OptionalReference<REF, RID, T>.getValue(o: Entity<ID>, desc: KProperty<*>): T?","description":"org.jetbrains.exposed.v1.dao.Entity.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/get-value.html","searchKeys":["getValue","operator fun <REF : Any, RID : Any, T : Entity<RID>> OptionalReference<REF, RID, T>.getValue(o: Entity<ID>, desc: KProperty<*>): T?","org.jetbrains.exposed.v1.dao.Entity.getValue"]},{"name":"operator fun <REF : Any, RID : Any, T : Entity<RID>> OptionalReference<REF, RID, T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T?)","description":"org.jetbrains.exposed.v1.dao.Entity.setValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/set-value.html","searchKeys":["setValue","operator fun <REF : Any, RID : Any, T : Entity<RID>> OptionalReference<REF, RID, T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T?)","org.jetbrains.exposed.v1.dao.Entity.setValue"]},{"name":"operator fun <REF : Any, RID : Any, T : Entity<RID>> Reference<REF, RID, T>.getValue(o: Entity<ID>, desc: KProperty<*>): T","description":"org.jetbrains.exposed.v1.dao.Entity.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/get-value.html","searchKeys":["getValue","operator fun <REF : Any, RID : Any, T : Entity<RID>> Reference<REF, RID, T>.getValue(o: Entity<ID>, desc: KProperty<*>): T","org.jetbrains.exposed.v1.dao.Entity.getValue"]},{"name":"operator fun <REF : Any, RID : Any, T : Entity<RID>> Reference<REF, RID, T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T)","description":"org.jetbrains.exposed.v1.dao.Entity.setValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/set-value.html","searchKeys":["setValue","operator fun <REF : Any, RID : Any, T : Entity<RID>> Reference<REF, RID, T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T)","org.jetbrains.exposed.v1.dao.Entity.setValue"]},{"name":"operator fun <T> Column<T>.getValue(o: Entity<ID>, desc: KProperty<*>): T","description":"org.jetbrains.exposed.v1.dao.Entity.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/get-value.html","searchKeys":["getValue","operator fun <T> Column<T>.getValue(o: Entity<ID>, desc: KProperty<*>): T","org.jetbrains.exposed.v1.dao.Entity.getValue"]},{"name":"operator fun <T> Column<T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T)","description":"org.jetbrains.exposed.v1.dao.Entity.setValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/set-value.html","searchKeys":["setValue","operator fun <T> Column<T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T)","org.jetbrains.exposed.v1.dao.Entity.setValue"]},{"name":"operator fun <T> CompositeColumn<T>.getValue(o: Entity<ID>, desc: KProperty<*>): T","description":"org.jetbrains.exposed.v1.dao.Entity.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/get-value.html","searchKeys":["getValue","operator fun <T> CompositeColumn<T>.getValue(o: Entity<ID>, desc: KProperty<*>): T","org.jetbrains.exposed.v1.dao.Entity.getValue"]},{"name":"operator fun <T> CompositeColumn<T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T)","description":"org.jetbrains.exposed.v1.dao.Entity.setValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/set-value.html","searchKeys":["setValue","operator fun <T> CompositeColumn<T>.setValue(o: Entity<ID>, desc: KProperty<*>, value: T)","org.jetbrains.exposed.v1.dao.Entity.setValue"]},{"name":"operator fun <Unwrapped, Wrapped> EntityFieldWithTransform<Unwrapped, Wrapped>.getValue(o: Entity<ID>, desc: KProperty<*>): Wrapped","description":"org.jetbrains.exposed.v1.dao.Entity.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/get-value.html","searchKeys":["getValue","operator fun <Unwrapped, Wrapped> EntityFieldWithTransform<Unwrapped, Wrapped>.getValue(o: Entity<ID>, desc: KProperty<*>): Wrapped","org.jetbrains.exposed.v1.dao.Entity.getValue"]},{"name":"operator fun <Unwrapped, Wrapped> EntityFieldWithTransform<Unwrapped, Wrapped>.setValue(o: Entity<ID>, desc: KProperty<*>, value: Wrapped)","description":"org.jetbrains.exposed.v1.dao.Entity.setValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/set-value.html","searchKeys":["setValue","operator fun <Unwrapped, Wrapped> EntityFieldWithTransform<Unwrapped, Wrapped>.setValue(o: Entity<ID>, desc: KProperty<*>, value: Wrapped)","org.jetbrains.exposed.v1.dao.Entity.setValue"]},{"name":"operator fun get(id: EntityID<ID>): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.get","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/get.html","searchKeys":["get","operator fun get(id: EntityID<ID>): T","org.jetbrains.exposed.v1.dao.EntityClass.get"]},{"name":"operator fun get(id: ID): T","description":"org.jetbrains.exposed.v1.dao.EntityClass.get","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/get.html","searchKeys":["get","operator fun get(id: ID): T","org.jetbrains.exposed.v1.dao.EntityClass.get"]},{"name":"operator fun getValue(o: Any?, desc: KProperty<*>): SizedIterable<Target>","description":"org.jetbrains.exposed.v1.dao.View.getValue","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/get-value.html","searchKeys":["getValue","operator fun getValue(o: Any?, desc: KProperty<*>): SizedIterable<Target>","org.jetbrains.exposed.v1.dao.View.getValue"]},{"name":"operator fun set(column: Column<*>, value: Any?)","description":"org.jetbrains.exposed.v1.dao.EntityBatchUpdate.set","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-batch-update/set.html","searchKeys":["set","operator fun set(column: Column<*>, value: Any?)","org.jetbrains.exposed.v1.dao.EntityBatchUpdate.set"]},{"name":"val Transaction.entityCache: EntityCache","description":"org.jetbrains.exposed.v1.dao.entityCache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/entity-cache.html","searchKeys":["entityCache","val Transaction.entityCache: EntityCache","org.jetbrains.exposed.v1.dao.entityCache"]},{"name":"val allReferences: Map<Column<*>, Column<*>>","description":"org.jetbrains.exposed.v1.dao.OptionalReference.allReferences","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-reference/all-references.html","searchKeys":["allReferences","val allReferences: Map<Column<*>, Column<*>>","org.jetbrains.exposed.v1.dao.OptionalReference.allReferences"]},{"name":"val allReferences: Map<Column<*>, Column<*>>","description":"org.jetbrains.exposed.v1.dao.Reference.allReferences","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-reference/all-references.html","searchKeys":["allReferences","val allReferences: Map<Column<*>, Column<*>>","org.jetbrains.exposed.v1.dao.Reference.allReferences"]},{"name":"val allReferences: Map<Column<*>, Column<*>>","description":"org.jetbrains.exposed.v1.dao.Referrers.allReferences","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/all-references.html","searchKeys":["allReferences","val allReferences: Map<Column<*>, Column<*>>","org.jetbrains.exposed.v1.dao.Referrers.allReferences"]},{"name":"val cache: Boolean","description":"org.jetbrains.exposed.v1.dao.Referrers.cache","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/cache.html","searchKeys":["cache","val cache: Boolean","org.jetbrains.exposed.v1.dao.Referrers.cache"]},{"name":"val changeType: EntityChangeType","description":"org.jetbrains.exposed.v1.dao.EntityChange.changeType","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change/change-type.html","searchKeys":["changeType","val changeType: EntityChangeType","org.jetbrains.exposed.v1.dao.EntityChange.changeType"]},{"name":"val column: Column<Unwrapped>","description":"org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.column","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-field-with-transform/column.html","searchKeys":["column","val column: Column<Unwrapped>","org.jetbrains.exposed.v1.dao.EntityFieldWithTransform.column"]},{"name":"val data: LinkedHashMap<IdTable<*>, MutableMap<Any, Entity<*>>>","description":"org.jetbrains.exposed.v1.dao.EntityCache.data","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/data.html","searchKeys":["data","val data: LinkedHashMap<IdTable<*>, MutableMap<Any, Entity<*>>>","org.jetbrains.exposed.v1.dao.EntityCache.data"]},{"name":"val entity: EntityClass<*, *>","description":"org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException.entity","location":"exposed-dao/org.jetbrains.exposed.v1.dao.exceptions/-entity-not-found-exception/entity.html","searchKeys":["entity","val entity: EntityClass<*, *>","org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException.entity"]},{"name":"val entityClass: EntityClass<*, Entity<*>>","description":"org.jetbrains.exposed.v1.dao.EntityChange.entityClass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change/entity-class.html","searchKeys":["entityClass","val entityClass: EntityClass<*, Entity<*>>","org.jetbrains.exposed.v1.dao.EntityChange.entityClass"]},{"name":"val entityId: EntityID<*>","description":"org.jetbrains.exposed.v1.dao.EntityChange.entityId","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change/entity-id.html","searchKeys":["entityId","val entityId: EntityID<*>","org.jetbrains.exposed.v1.dao.EntityChange.entityId"]},{"name":"val entries: EnumEntries<EntityChangeType>","description":"org.jetbrains.exposed.v1.dao.EntityChangeType.entries","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change-type/entries.html","searchKeys":["entries","val entries: EnumEntries<EntityChangeType>","org.jetbrains.exposed.v1.dao.EntityChangeType.entries"]},{"name":"val factory: EntityClass<*, Target>","description":"org.jetbrains.exposed.v1.dao.View.factory","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/factory.html","searchKeys":["factory","val factory: EntityClass<*, Target>","org.jetbrains.exposed.v1.dao.View.factory"]},{"name":"val factory: EntityClass<ChildID, Child>","description":"org.jetbrains.exposed.v1.dao.Referrers.factory","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/factory.html","searchKeys":["factory","val factory: EntityClass<ChildID, Child>","org.jetbrains.exposed.v1.dao.Referrers.factory"]},{"name":"val factory: EntityClass<ID, Target>","description":"org.jetbrains.exposed.v1.dao.OptionalReference.factory","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-reference/factory.html","searchKeys":["factory","val factory: EntityClass<ID, Target>","org.jetbrains.exposed.v1.dao.OptionalReference.factory"]},{"name":"val factory: EntityClass<ID, Target>","description":"org.jetbrains.exposed.v1.dao.Reference.factory","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-reference/factory.html","searchKeys":["factory","val factory: EntityClass<ID, Target>","org.jetbrains.exposed.v1.dao.Reference.factory"]},{"name":"val id: EntityID<*>","description":"org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException.id","location":"exposed-dao/org.jetbrains.exposed.v1.dao.exceptions/-entity-not-found-exception/id.html","searchKeys":["id","val id: EntityID<*>","org.jetbrains.exposed.v1.dao.exceptions.EntityNotFoundException.id"]},{"name":"val id: EntityID<ID>","description":"org.jetbrains.exposed.v1.dao.Entity.id","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/id.html","searchKeys":["id","val id: EntityID<ID>","org.jetbrains.exposed.v1.dao.Entity.id"]},{"name":"val op: Op<Boolean>","description":"org.jetbrains.exposed.v1.dao.View.op","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-view/op.html","searchKeys":["op","val op: Op<Boolean>","org.jetbrains.exposed.v1.dao.View.op"]},{"name":"val readValues: ResultRow","description":"org.jetbrains.exposed.v1.dao.Entity.readValues","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/read-values.html","searchKeys":["readValues","val readValues: ResultRow","org.jetbrains.exposed.v1.dao.Entity.readValues"]},{"name":"val reference: Column<REF>","description":"org.jetbrains.exposed.v1.dao.Reference.reference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-reference/reference.html","searchKeys":["reference","val reference: Column<REF>","org.jetbrains.exposed.v1.dao.Reference.reference"]},{"name":"val reference: Column<REF>","description":"org.jetbrains.exposed.v1.dao.Referrers.reference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-referrers/reference.html","searchKeys":["reference","val reference: Column<REF>","org.jetbrains.exposed.v1.dao.Referrers.reference"]},{"name":"val reference: Column<REF?>","description":"org.jetbrains.exposed.v1.dao.OptionalReference.reference","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-optional-reference/reference.html","searchKeys":["reference","val reference: Column<REF?>","org.jetbrains.exposed.v1.dao.OptionalReference.reference"]},{"name":"val sourceColumn: Column<EntityID<SID>>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.sourceColumn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/source-column.html","searchKeys":["sourceColumn","val sourceColumn: Column<EntityID<SID>>","org.jetbrains.exposed.v1.dao.InnerTableLink.sourceColumn"]},{"name":"val table: IdTable<ID>","description":"org.jetbrains.exposed.v1.dao.EntityClass.table","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-class/table.html","searchKeys":["table","val table: IdTable<ID>","org.jetbrains.exposed.v1.dao.EntityClass.table"]},{"name":"val table: Table","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.table","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/table.html","searchKeys":["table","val table: Table","org.jetbrains.exposed.v1.dao.InnerTableLink.table"]},{"name":"val target: EntityClass<ID, Target>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.target","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/target.html","searchKeys":["target","val target: EntityClass<ID, Target>","org.jetbrains.exposed.v1.dao.InnerTableLink.target"]},{"name":"val targetColumn: Column<EntityID<ID>>","description":"org.jetbrains.exposed.v1.dao.InnerTableLink.targetColumn","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-inner-table-link/target-column.html","searchKeys":["targetColumn","val targetColumn: Column<EntityID<ID>>","org.jetbrains.exposed.v1.dao.InnerTableLink.targetColumn"]},{"name":"val transactionId: String","description":"org.jetbrains.exposed.v1.dao.EntityChange.transactionId","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-change/transaction-id.html","searchKeys":["transactionId","val transactionId: String","org.jetbrains.exposed.v1.dao.EntityChange.transactionId"]},{"name":"val writeValues: LinkedHashMap<Column<Any?>, Any?>","description":"org.jetbrains.exposed.v1.dao.Entity.writeValues","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/write-values.html","searchKeys":["writeValues","val writeValues: LinkedHashMap<Column<Any?>, Any?>","org.jetbrains.exposed.v1.dao.Entity.writeValues"]},{"name":"var _readValues: ResultRow?","description":"org.jetbrains.exposed.v1.dao.Entity._readValues","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/_read-values.html","searchKeys":["_readValues","var _readValues: ResultRow?","org.jetbrains.exposed.v1.dao.Entity._readValues"]},{"name":"var db: Database","description":"org.jetbrains.exposed.v1.dao.Entity.db","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/db.html","searchKeys":["db","var db: Database","org.jetbrains.exposed.v1.dao.Entity.db"]},{"name":"var klass: EntityClass<ID, Entity<ID>>","description":"org.jetbrains.exposed.v1.dao.Entity.klass","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity/klass.html","searchKeys":["klass","var klass: EntityClass<ID, Entity<ID>>","org.jetbrains.exposed.v1.dao.Entity.klass"]},{"name":"var maxEntitiesToStore: Int","description":"org.jetbrains.exposed.v1.dao.EntityCache.maxEntitiesToStore","location":"exposed-dao/org.jetbrains.exposed.v1.dao/-entity-cache/max-entities-to-store.html","searchKeys":["maxEntitiesToStore","var maxEntitiesToStore: Int","org.jetbrains.exposed.v1.dao.EntityCache.maxEntitiesToStore"]},{"name":"class ExposedSpringTransactionAttributeSource(delegate: TransactionAttributeSource = AnnotationTransactionAttributeSource(), rollbackExceptions: List<Class<out Throwable>> = listOf(SQLException::class.java)) : TransactionAttributeSource","description":"org.jetbrains.exposed.v1.spring.transaction.ExposedSpringTransactionAttributeSource","location":"spring-transaction/org.jetbrains.exposed.v1.spring.transaction/-exposed-spring-transaction-attribute-source/index.html","searchKeys":["ExposedSpringTransactionAttributeSource","class ExposedSpringTransactionAttributeSource(delegate: TransactionAttributeSource = AnnotationTransactionAttributeSource(), rollbackExceptions: List<Class<out Throwable>> = listOf(SQLException::class.java)) : TransactionAttributeSource","org.jetbrains.exposed.v1.spring.transaction.ExposedSpringTransactionAttributeSource"]},{"name":"class SpringTransactionManager(dataSource: DataSource, databaseConfig: DatabaseConfig = DatabaseConfig {}, showSql: Boolean = false) : AbstractPlatformTransactionManager","description":"org.jetbrains.exposed.v1.spring.transaction.SpringTransactionManager","location":"spring-transaction/org.jetbrains.exposed.v1.spring.transaction/-spring-transaction-manager/index.html","searchKeys":["SpringTransactionManager","class SpringTransactionManager(dataSource: DataSource, databaseConfig: DatabaseConfig = DatabaseConfig {}, showSql: Boolean = false) : AbstractPlatformTransactionManager","org.jetbrains.exposed.v1.spring.transaction.SpringTransactionManager"]},{"name":"constructor(dataSource: DataSource, databaseConfig: DatabaseConfig = DatabaseConfig {}, showSql: Boolean = false)","description":"org.jetbrains.exposed.v1.spring.transaction.SpringTransactionManager.SpringTransactionManager","location":"spring-transaction/org.jetbrains.exposed.v1.spring.transaction/-spring-transaction-manager/-spring-transaction-manager.html","searchKeys":["SpringTransactionManager","constructor(dataSource: DataSource, databaseConfig: DatabaseConfig = DatabaseConfig {}, showSql: Boolean = false)","org.jetbrains.exposed.v1.spring.transaction.SpringTransactionManager.SpringTransactionManager"]},{"name":"constructor(delegate: TransactionAttributeSource = AnnotationTransactionAttributeSource(), rollbackExceptions: List<Class<out Throwable>> = listOf(SQLException::class.java))","description":"org.jetbrains.exposed.v1.spring.transaction.ExposedSpringTransactionAttributeSource.ExposedSpringTransactionAttributeSource","location":"spring-transaction/org.jetbrains.exposed.v1.spring.transaction/-exposed-spring-transaction-attribute-source/-exposed-spring-transaction-attribute-source.html","searchKeys":["ExposedSpringTransactionAttributeSource","constructor(delegate: TransactionAttributeSource = AnnotationTransactionAttributeSource(), rollbackExceptions: List<Class<out Throwable>> = listOf(SQLException::class.java))","org.jetbrains.exposed.v1.spring.transaction.ExposedSpringTransactionAttributeSource.ExposedSpringTransactionAttributeSource"]},{"name":"open override fun getTransactionAttribute(method: Method, targetClass: Class<*>?): TransactionAttribute?","description":"org.jetbrains.exposed.v1.spring.transaction.ExposedSpringTransactionAttributeSource.getTransactionAttribute","location":"spring-transaction/org.jetbrains.exposed.v1.spring.transaction/-exposed-spring-transaction-attribute-source/get-transaction-attribute.html","searchKeys":["getTransactionAttribute","open override fun getTransactionAttribute(method: Method, targetClass: Class<*>?): TransactionAttribute?","org.jetbrains.exposed.v1.spring.transaction.ExposedSpringTransactionAttributeSource.getTransactionAttribute"]},{"name":"abstract class MigrationUtilityApi : SchemaUtilityApi","description":"org.jetbrains.exposed.v1.migration.MigrationUtilityApi","location":"exposed-migration/org.jetbrains.exposed.v1.migration/-migration-utility-api/index.html","searchKeys":["MigrationUtilityApi","abstract class MigrationUtilityApi : SchemaUtilityApi","org.jetbrains.exposed.v1.migration.MigrationUtilityApi"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.migration.MigrationUtilityApi.MigrationUtilityApi","location":"exposed-migration/org.jetbrains.exposed.v1.migration/-migration-utility-api/-migration-utility-api.html","searchKeys":["MigrationUtilityApi","constructor()","org.jetbrains.exposed.v1.migration.MigrationUtilityApi.MigrationUtilityApi"]},{"name":"fun dropUnmappedColumnsStatements(vararg tables: Table, withLogs: Boolean = true): List<String>","description":"org.jetbrains.exposed.v1.migration.MigrationUtils.dropUnmappedColumnsStatements","location":"exposed-migration/org.jetbrains.exposed.v1.migration/-migration-utils/drop-unmapped-columns-statements.html","searchKeys":["dropUnmappedColumnsStatements","fun dropUnmappedColumnsStatements(vararg tables: Table, withLogs: Boolean = true): List<String>","org.jetbrains.exposed.v1.migration.MigrationUtils.dropUnmappedColumnsStatements"]},{"name":"fun generateMigrationScript(vararg tables: Table, scriptDirectory: String, scriptName: String, withLogs: Boolean = true): File","description":"org.jetbrains.exposed.v1.migration.MigrationUtils.generateMigrationScript","location":"exposed-migration/org.jetbrains.exposed.v1.migration/-migration-utils/generate-migration-script.html","searchKeys":["generateMigrationScript","fun generateMigrationScript(vararg tables: Table, scriptDirectory: String, scriptName: String, withLogs: Boolean = true): File","org.jetbrains.exposed.v1.migration.MigrationUtils.generateMigrationScript"]},{"name":"fun statementsRequiredForDatabaseMigration(vararg tables: Table, withLogs: Boolean = true): List<String>","description":"org.jetbrains.exposed.v1.migration.MigrationUtils.statementsRequiredForDatabaseMigration","location":"exposed-migration/org.jetbrains.exposed.v1.migration/-migration-utils/statements-required-for-database-migration.html","searchKeys":["statementsRequiredForDatabaseMigration","fun statementsRequiredForDatabaseMigration(vararg tables: Table, withLogs: Boolean = true): List<String>","org.jetbrains.exposed.v1.migration.MigrationUtils.statementsRequiredForDatabaseMigration"]},{"name":"object MigrationUtils : MigrationUtilityApi","description":"org.jetbrains.exposed.v1.migration.MigrationUtils","location":"exposed-migration/org.jetbrains.exposed.v1.migration/-migration-utils/index.html","searchKeys":["MigrationUtils","object MigrationUtils : MigrationUtilityApi","org.jetbrains.exposed.v1.migration.MigrationUtils"]},{"name":"class KotlinDurationColumnType : ColumnType<Duration> ","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/index.html","searchKeys":["KotlinDurationColumnType","class KotlinDurationColumnType : ColumnType<Duration> ","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType"]},{"name":"class KotlinInstantColumnType : ColumnType<Instant> , IDateColumnType","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/index.html","searchKeys":["KotlinInstantColumnType","class KotlinInstantColumnType : ColumnType<Instant> , IDateColumnType","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType"]},{"name":"class KotlinLocalDateColumnType : ColumnType<LocalDate> , IDateColumnType","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/index.html","searchKeys":["KotlinLocalDateColumnType","class KotlinLocalDateColumnType : ColumnType<LocalDate> , IDateColumnType","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType"]},{"name":"class KotlinLocalDateTimeColumnType : ColumnType<LocalDateTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/index.html","searchKeys":["KotlinLocalDateTimeColumnType","class KotlinLocalDateTimeColumnType : ColumnType<LocalDateTime> , IDateColumnType","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType"]},{"name":"class KotlinLocalTimeColumnType : ColumnType<LocalTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/index.html","searchKeys":["KotlinLocalTimeColumnType","class KotlinLocalTimeColumnType : ColumnType<LocalTime> , IDateColumnType","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType"]},{"name":"class KotlinOffsetDateTimeColumnType : ColumnType<OffsetDateTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/index.html","searchKeys":["KotlinOffsetDateTimeColumnType","class KotlinOffsetDateTimeColumnType : ColumnType<OffsetDateTime> , IDateColumnType","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType"]},{"name":"class YearInternal(val expr: Expression<*>) : Function<Int> ","description":"org.jetbrains.exposed.v1.datetime.YearInternal","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year-internal/index.html","searchKeys":["YearInternal","class YearInternal(val expr: Expression<*>) : Function<Int> ","org.jetbrains.exposed.v1.datetime.YearInternal"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.KotlinDurationColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/-kotlin-duration-column-type.html","searchKeys":["KotlinDurationColumnType","constructor()","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.KotlinDurationColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.KotlinInstantColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/-kotlin-instant-column-type.html","searchKeys":["KotlinInstantColumnType","constructor()","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.KotlinInstantColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.KotlinLocalDateColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/-kotlin-local-date-column-type.html","searchKeys":["KotlinLocalDateColumnType","constructor()","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.KotlinLocalDateColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.KotlinLocalDateTimeColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/-kotlin-local-date-time-column-type.html","searchKeys":["KotlinLocalDateTimeColumnType","constructor()","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.KotlinLocalDateTimeColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.KotlinLocalTimeColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/-kotlin-local-time-column-type.html","searchKeys":["KotlinLocalTimeColumnType","constructor()","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.KotlinLocalTimeColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.KotlinOffsetDateTimeColumnType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/-kotlin-offset-date-time-column-type.html","searchKeys":["KotlinOffsetDateTimeColumnType","constructor()","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.KotlinOffsetDateTimeColumnType"]},{"name":"constructor(expr: Expression<*>)","description":"org.jetbrains.exposed.v1.datetime.YearInternal.YearInternal","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year-internal/-year-internal.html","searchKeys":["YearInternal","constructor(expr: Expression<*>)","org.jetbrains.exposed.v1.datetime.YearInternal.YearInternal"]},{"name":"fun <T : Instant?> Date(expr: Expression<T>): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.Date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-date.html","searchKeys":["Date","fun <T : Instant?> Date(expr: Expression<T>): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.Date"]},{"name":"fun <T : Instant?> Day(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-day.html","searchKeys":["Day","fun <T : Instant?> Day(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Day"]},{"name":"fun <T : Instant?> Expression<T>.date(): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date.html","searchKeys":["date","fun <T : Instant?> Expression<T>.date(): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.date"]},{"name":"fun <T : Instant?> Expression<T>.day(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/day.html","searchKeys":["day","fun <T : Instant?> Expression<T>.day(): Function<Int>","org.jetbrains.exposed.v1.datetime.day"]},{"name":"fun <T : Instant?> Expression<T>.hour(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/hour.html","searchKeys":["hour","fun <T : Instant?> Expression<T>.hour(): Function<Int>","org.jetbrains.exposed.v1.datetime.hour"]},{"name":"fun <T : Instant?> Expression<T>.minute(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/minute.html","searchKeys":["minute","fun <T : Instant?> Expression<T>.minute(): Function<Int>","org.jetbrains.exposed.v1.datetime.minute"]},{"name":"fun <T : Instant?> Expression<T>.month(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/month.html","searchKeys":["month","fun <T : Instant?> Expression<T>.month(): Function<Int>","org.jetbrains.exposed.v1.datetime.month"]},{"name":"fun <T : Instant?> Expression<T>.second(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/second.html","searchKeys":["second","fun <T : Instant?> Expression<T>.second(): Function<Int>","org.jetbrains.exposed.v1.datetime.second"]},{"name":"fun <T : Instant?> Expression<T>.time(): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time.html","searchKeys":["time","fun <T : Instant?> Expression<T>.time(): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.time"]},{"name":"fun <T : Instant?> Expression<T>.year(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/year.html","searchKeys":["year","fun <T : Instant?> Expression<T>.year(): Function<Int>","org.jetbrains.exposed.v1.datetime.year"]},{"name":"fun <T : Instant?> Hour(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-hour.html","searchKeys":["Hour","fun <T : Instant?> Hour(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Hour"]},{"name":"fun <T : Instant?> Minute(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-minute.html","searchKeys":["Minute","fun <T : Instant?> Minute(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Minute"]},{"name":"fun <T : Instant?> Month(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-month.html","searchKeys":["Month","fun <T : Instant?> Month(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Month"]},{"name":"fun <T : Instant?> Second(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-second.html","searchKeys":["Second","fun <T : Instant?> Second(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Second"]},{"name":"fun <T : Instant?> Time(expr: Expression<T>): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.Time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-time.html","searchKeys":["Time","fun <T : Instant?> Time(expr: Expression<T>): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.Time"]},{"name":"fun <T : Instant?> Year(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year.html","searchKeys":["Year","fun <T : Instant?> Year(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Year"]},{"name":"fun <T : LocalDate?> Date(expr: Expression<T>): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.Date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-date.html","searchKeys":["Date","fun <T : LocalDate?> Date(expr: Expression<T>): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.Date"]},{"name":"fun <T : LocalDate?> Day(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-day.html","searchKeys":["Day","fun <T : LocalDate?> Day(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Day"]},{"name":"fun <T : LocalDate?> Expression<T>.date(): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date.html","searchKeys":["date","fun <T : LocalDate?> Expression<T>.date(): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.date"]},{"name":"fun <T : LocalDate?> Expression<T>.day(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/day.html","searchKeys":["day","fun <T : LocalDate?> Expression<T>.day(): Function<Int>","org.jetbrains.exposed.v1.datetime.day"]},{"name":"fun <T : LocalDate?> Expression<T>.hour(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/hour.html","searchKeys":["hour","fun <T : LocalDate?> Expression<T>.hour(): Function<Int>","org.jetbrains.exposed.v1.datetime.hour"]},{"name":"fun <T : LocalDate?> Expression<T>.minute(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/minute.html","searchKeys":["minute","fun <T : LocalDate?> Expression<T>.minute(): Function<Int>","org.jetbrains.exposed.v1.datetime.minute"]},{"name":"fun <T : LocalDate?> Expression<T>.month(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/month.html","searchKeys":["month","fun <T : LocalDate?> Expression<T>.month(): Function<Int>","org.jetbrains.exposed.v1.datetime.month"]},{"name":"fun <T : LocalDate?> Expression<T>.second(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/second.html","searchKeys":["second","fun <T : LocalDate?> Expression<T>.second(): Function<Int>","org.jetbrains.exposed.v1.datetime.second"]},{"name":"fun <T : LocalDate?> Expression<T>.time(): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time.html","searchKeys":["time","fun <T : LocalDate?> Expression<T>.time(): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.time"]},{"name":"fun <T : LocalDate?> Expression<T>.year(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/year.html","searchKeys":["year","fun <T : LocalDate?> Expression<T>.year(): Function<Int>","org.jetbrains.exposed.v1.datetime.year"]},{"name":"fun <T : LocalDate?> Hour(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-hour.html","searchKeys":["Hour","fun <T : LocalDate?> Hour(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Hour"]},{"name":"fun <T : LocalDate?> Minute(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-minute.html","searchKeys":["Minute","fun <T : LocalDate?> Minute(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Minute"]},{"name":"fun <T : LocalDate?> Month(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-month.html","searchKeys":["Month","fun <T : LocalDate?> Month(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Month"]},{"name":"fun <T : LocalDate?> Second(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-second.html","searchKeys":["Second","fun <T : LocalDate?> Second(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Second"]},{"name":"fun <T : LocalDate?> Time(expr: Expression<T>): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.Time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-time.html","searchKeys":["Time","fun <T : LocalDate?> Time(expr: Expression<T>): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.Time"]},{"name":"fun <T : LocalDate?> Year(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year.html","searchKeys":["Year","fun <T : LocalDate?> Year(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Year"]},{"name":"fun <T : LocalDateTime?> Date(expr: Expression<T>): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.Date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-date.html","searchKeys":["Date","fun <T : LocalDateTime?> Date(expr: Expression<T>): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.Date"]},{"name":"fun <T : LocalDateTime?> Day(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-day.html","searchKeys":["Day","fun <T : LocalDateTime?> Day(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Day"]},{"name":"fun <T : LocalDateTime?> Expression<T>.date(): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date.html","searchKeys":["date","fun <T : LocalDateTime?> Expression<T>.date(): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.date"]},{"name":"fun <T : LocalDateTime?> Expression<T>.day(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/day.html","searchKeys":["day","fun <T : LocalDateTime?> Expression<T>.day(): Function<Int>","org.jetbrains.exposed.v1.datetime.day"]},{"name":"fun <T : LocalDateTime?> Expression<T>.hour(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/hour.html","searchKeys":["hour","fun <T : LocalDateTime?> Expression<T>.hour(): Function<Int>","org.jetbrains.exposed.v1.datetime.hour"]},{"name":"fun <T : LocalDateTime?> Expression<T>.minute(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/minute.html","searchKeys":["minute","fun <T : LocalDateTime?> Expression<T>.minute(): Function<Int>","org.jetbrains.exposed.v1.datetime.minute"]},{"name":"fun <T : LocalDateTime?> Expression<T>.month(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/month.html","searchKeys":["month","fun <T : LocalDateTime?> Expression<T>.month(): Function<Int>","org.jetbrains.exposed.v1.datetime.month"]},{"name":"fun <T : LocalDateTime?> Expression<T>.second(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/second.html","searchKeys":["second","fun <T : LocalDateTime?> Expression<T>.second(): Function<Int>","org.jetbrains.exposed.v1.datetime.second"]},{"name":"fun <T : LocalDateTime?> Expression<T>.time(): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time.html","searchKeys":["time","fun <T : LocalDateTime?> Expression<T>.time(): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.time"]},{"name":"fun <T : LocalDateTime?> Expression<T>.year(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/year.html","searchKeys":["year","fun <T : LocalDateTime?> Expression<T>.year(): Function<Int>","org.jetbrains.exposed.v1.datetime.year"]},{"name":"fun <T : LocalDateTime?> Hour(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-hour.html","searchKeys":["Hour","fun <T : LocalDateTime?> Hour(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Hour"]},{"name":"fun <T : LocalDateTime?> Minute(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-minute.html","searchKeys":["Minute","fun <T : LocalDateTime?> Minute(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Minute"]},{"name":"fun <T : LocalDateTime?> Month(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-month.html","searchKeys":["Month","fun <T : LocalDateTime?> Month(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Month"]},{"name":"fun <T : LocalDateTime?> Second(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-second.html","searchKeys":["Second","fun <T : LocalDateTime?> Second(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Second"]},{"name":"fun <T : LocalDateTime?> Time(expr: Expression<T>): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.Time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-time.html","searchKeys":["Time","fun <T : LocalDateTime?> Time(expr: Expression<T>): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.Time"]},{"name":"fun <T : LocalDateTime?> Year(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year.html","searchKeys":["Year","fun <T : LocalDateTime?> Year(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Year"]},{"name":"fun <T : OffsetDateTime?> Date(expr: Expression<T>): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.Date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-date.html","searchKeys":["Date","fun <T : OffsetDateTime?> Date(expr: Expression<T>): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.Date"]},{"name":"fun <T : OffsetDateTime?> Day(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-day.html","searchKeys":["Day","fun <T : OffsetDateTime?> Day(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Day"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.date(): Function<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date.html","searchKeys":["date","fun <T : OffsetDateTime?> Expression<T>.date(): Function<LocalDate>","org.jetbrains.exposed.v1.datetime.date"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.day(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.day","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/day.html","searchKeys":["day","fun <T : OffsetDateTime?> Expression<T>.day(): Function<Int>","org.jetbrains.exposed.v1.datetime.day"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.hour(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/hour.html","searchKeys":["hour","fun <T : OffsetDateTime?> Expression<T>.hour(): Function<Int>","org.jetbrains.exposed.v1.datetime.hour"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.minute(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/minute.html","searchKeys":["minute","fun <T : OffsetDateTime?> Expression<T>.minute(): Function<Int>","org.jetbrains.exposed.v1.datetime.minute"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.month(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/month.html","searchKeys":["month","fun <T : OffsetDateTime?> Expression<T>.month(): Function<Int>","org.jetbrains.exposed.v1.datetime.month"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.second(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/second.html","searchKeys":["second","fun <T : OffsetDateTime?> Expression<T>.second(): Function<Int>","org.jetbrains.exposed.v1.datetime.second"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.time(): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time.html","searchKeys":["time","fun <T : OffsetDateTime?> Expression<T>.time(): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.time"]},{"name":"fun <T : OffsetDateTime?> Expression<T>.year(): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/year.html","searchKeys":["year","fun <T : OffsetDateTime?> Expression<T>.year(): Function<Int>","org.jetbrains.exposed.v1.datetime.year"]},{"name":"fun <T : OffsetDateTime?> Hour(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Hour","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-hour.html","searchKeys":["Hour","fun <T : OffsetDateTime?> Hour(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Hour"]},{"name":"fun <T : OffsetDateTime?> Minute(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Minute","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-minute.html","searchKeys":["Minute","fun <T : OffsetDateTime?> Minute(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Minute"]},{"name":"fun <T : OffsetDateTime?> Month(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Month","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-month.html","searchKeys":["Month","fun <T : OffsetDateTime?> Month(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Month"]},{"name":"fun <T : OffsetDateTime?> Second(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Second","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-second.html","searchKeys":["Second","fun <T : OffsetDateTime?> Second(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Second"]},{"name":"fun <T : OffsetDateTime?> Time(expr: Expression<T>): Function<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.Time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-time.html","searchKeys":["Time","fun <T : OffsetDateTime?> Time(expr: Expression<T>): Function<LocalTime>","org.jetbrains.exposed.v1.datetime.Time"]},{"name":"fun <T : OffsetDateTime?> Year(expr: Expression<T>): Function<Int>","description":"org.jetbrains.exposed.v1.datetime.Year","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year.html","searchKeys":["Year","fun <T : OffsetDateTime?> Year(expr: Expression<T>): Function<Int>","org.jetbrains.exposed.v1.datetime.Year"]},{"name":"fun CustomDateFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDate?>","description":"org.jetbrains.exposed.v1.datetime.CustomDateFunction","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-custom-date-function.html","searchKeys":["CustomDateFunction","fun CustomDateFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDate?>","org.jetbrains.exposed.v1.datetime.CustomDateFunction"]},{"name":"fun CustomDateTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDateTime?>","description":"org.jetbrains.exposed.v1.datetime.CustomDateTimeFunction","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-custom-date-time-function.html","searchKeys":["CustomDateTimeFunction","fun CustomDateTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDateTime?>","org.jetbrains.exposed.v1.datetime.CustomDateTimeFunction"]},{"name":"fun CustomDurationFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Duration?>","description":"org.jetbrains.exposed.v1.datetime.CustomDurationFunction","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-custom-duration-function.html","searchKeys":["CustomDurationFunction","fun CustomDurationFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Duration?>","org.jetbrains.exposed.v1.datetime.CustomDurationFunction"]},{"name":"fun CustomTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalTime?>","description":"org.jetbrains.exposed.v1.datetime.CustomTimeFunction","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-custom-time-function.html","searchKeys":["CustomTimeFunction","fun CustomTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalTime?>","org.jetbrains.exposed.v1.datetime.CustomTimeFunction"]},{"name":"fun CustomTimeStampFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Instant?>","description":"org.jetbrains.exposed.v1.datetime.CustomTimeStampFunction","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-custom-time-stamp-function.html","searchKeys":["CustomTimeStampFunction","fun CustomTimeStampFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Instant?>","org.jetbrains.exposed.v1.datetime.CustomTimeStampFunction"]},{"name":"fun CustomTimestampWithTimeZoneFunction(functionName: String, vararg params: Expression<*>): CustomFunction<OffsetDateTime?>","description":"org.jetbrains.exposed.v1.datetime.CustomTimestampWithTimeZoneFunction","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-custom-timestamp-with-time-zone-function.html","searchKeys":["CustomTimestampWithTimeZoneFunction","fun CustomTimestampWithTimeZoneFunction(functionName: String, vararg params: Expression<*>): CustomFunction<OffsetDateTime?>","org.jetbrains.exposed.v1.datetime.CustomTimestampWithTimeZoneFunction"]},{"name":"fun Table.date(name: String): Column<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.date","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date.html","searchKeys":["date","fun Table.date(name: String): Column<LocalDate>","org.jetbrains.exposed.v1.datetime.date"]},{"name":"fun Table.datetime(name: String): Column<LocalDateTime>","description":"org.jetbrains.exposed.v1.datetime.datetime","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/datetime.html","searchKeys":["datetime","fun Table.datetime(name: String): Column<LocalDateTime>","org.jetbrains.exposed.v1.datetime.datetime"]},{"name":"fun Table.duration(name: String): Column<Duration>","description":"org.jetbrains.exposed.v1.datetime.duration","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/duration.html","searchKeys":["duration","fun Table.duration(name: String): Column<Duration>","org.jetbrains.exposed.v1.datetime.duration"]},{"name":"fun Table.time(name: String): Column<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.time","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time.html","searchKeys":["time","fun Table.time(name: String): Column<LocalTime>","org.jetbrains.exposed.v1.datetime.time"]},{"name":"fun Table.timestamp(name: String): Column<Instant>","description":"org.jetbrains.exposed.v1.datetime.timestamp","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/timestamp.html","searchKeys":["timestamp","fun Table.timestamp(name: String): Column<Instant>","org.jetbrains.exposed.v1.datetime.timestamp"]},{"name":"fun Table.timestampWithTimeZone(name: String): Column<OffsetDateTime>","description":"org.jetbrains.exposed.v1.datetime.timestampWithTimeZone","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/timestamp-with-time-zone.html","searchKeys":["timestampWithTimeZone","fun Table.timestampWithTimeZone(name: String): Column<OffsetDateTime>","org.jetbrains.exposed.v1.datetime.timestampWithTimeZone"]},{"name":"fun dateLiteral(value: LocalDate): LiteralOp<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.dateLiteral","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date-literal.html","searchKeys":["dateLiteral","fun dateLiteral(value: LocalDate): LiteralOp<LocalDate>","org.jetbrains.exposed.v1.datetime.dateLiteral"]},{"name":"fun dateParam(value: LocalDate): Expression<LocalDate>","description":"org.jetbrains.exposed.v1.datetime.dateParam","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date-param.html","searchKeys":["dateParam","fun dateParam(value: LocalDate): Expression<LocalDate>","org.jetbrains.exposed.v1.datetime.dateParam"]},{"name":"fun dateTimeLiteral(value: LocalDateTime): LiteralOp<LocalDateTime>","description":"org.jetbrains.exposed.v1.datetime.dateTimeLiteral","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date-time-literal.html","searchKeys":["dateTimeLiteral","fun dateTimeLiteral(value: LocalDateTime): LiteralOp<LocalDateTime>","org.jetbrains.exposed.v1.datetime.dateTimeLiteral"]},{"name":"fun dateTimeParam(value: LocalDateTime): Expression<LocalDateTime>","description":"org.jetbrains.exposed.v1.datetime.dateTimeParam","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/date-time-param.html","searchKeys":["dateTimeParam","fun dateTimeParam(value: LocalDateTime): Expression<LocalDateTime>","org.jetbrains.exposed.v1.datetime.dateTimeParam"]},{"name":"fun durationLiteral(value: Duration): LiteralOp<Duration>","description":"org.jetbrains.exposed.v1.datetime.durationLiteral","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/duration-literal.html","searchKeys":["durationLiteral","fun durationLiteral(value: Duration): LiteralOp<Duration>","org.jetbrains.exposed.v1.datetime.durationLiteral"]},{"name":"fun durationParam(value: Duration): Expression<Duration>","description":"org.jetbrains.exposed.v1.datetime.durationParam","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/duration-param.html","searchKeys":["durationParam","fun durationParam(value: Duration): Expression<Duration>","org.jetbrains.exposed.v1.datetime.durationParam"]},{"name":"fun timeLiteral(value: LocalTime): LiteralOp<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.timeLiteral","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time-literal.html","searchKeys":["timeLiteral","fun timeLiteral(value: LocalTime): LiteralOp<LocalTime>","org.jetbrains.exposed.v1.datetime.timeLiteral"]},{"name":"fun timeParam(value: LocalTime): Expression<LocalTime>","description":"org.jetbrains.exposed.v1.datetime.timeParam","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/time-param.html","searchKeys":["timeParam","fun timeParam(value: LocalTime): Expression<LocalTime>","org.jetbrains.exposed.v1.datetime.timeParam"]},{"name":"fun timestampLiteral(value: Instant): LiteralOp<Instant>","description":"org.jetbrains.exposed.v1.datetime.timestampLiteral","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/timestamp-literal.html","searchKeys":["timestampLiteral","fun timestampLiteral(value: Instant): LiteralOp<Instant>","org.jetbrains.exposed.v1.datetime.timestampLiteral"]},{"name":"fun timestampParam(value: Instant): Expression<Instant>","description":"org.jetbrains.exposed.v1.datetime.timestampParam","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/timestamp-param.html","searchKeys":["timestampParam","fun timestampParam(value: Instant): Expression<Instant>","org.jetbrains.exposed.v1.datetime.timestampParam"]},{"name":"fun timestampWithTimeZoneLiteral(value: OffsetDateTime): LiteralOp<OffsetDateTime>","description":"org.jetbrains.exposed.v1.datetime.timestampWithTimeZoneLiteral","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/timestamp-with-time-zone-literal.html","searchKeys":["timestampWithTimeZoneLiteral","fun timestampWithTimeZoneLiteral(value: OffsetDateTime): LiteralOp<OffsetDateTime>","org.jetbrains.exposed.v1.datetime.timestampWithTimeZoneLiteral"]},{"name":"fun timestampWithTimeZoneParam(value: OffsetDateTime): Expression<OffsetDateTime>","description":"org.jetbrains.exposed.v1.datetime.timestampWithTimeZoneParam","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/timestamp-with-time-zone-param.html","searchKeys":["timestampWithTimeZoneParam","fun timestampWithTimeZoneParam(value: OffsetDateTime): Expression<OffsetDateTime>","org.jetbrains.exposed.v1.datetime.timestampWithTimeZoneParam"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.Companion","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.Companion","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.Companion","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.Companion","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.Companion","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.Companion","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.Companion"]},{"name":"object CurrentDate : Function<LocalDate> ","description":"org.jetbrains.exposed.v1.datetime.CurrentDate","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-date/index.html","searchKeys":["CurrentDate","object CurrentDate : Function<LocalDate> ","org.jetbrains.exposed.v1.datetime.CurrentDate"]},{"name":"object CurrentDateTime : CurrentTimestampBase<LocalDateTime> ","description":"org.jetbrains.exposed.v1.datetime.CurrentDateTime","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-date-time/index.html","searchKeys":["CurrentDateTime","object CurrentDateTime : CurrentTimestampBase<LocalDateTime> ","org.jetbrains.exposed.v1.datetime.CurrentDateTime"]},{"name":"object CurrentTimestamp : CurrentTimestampBase<Instant> ","description":"org.jetbrains.exposed.v1.datetime.CurrentTimestamp","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-timestamp/index.html","searchKeys":["CurrentTimestamp","object CurrentTimestamp : CurrentTimestampBase<Instant> ","org.jetbrains.exposed.v1.datetime.CurrentTimestamp"]},{"name":"object CurrentTimestampWithTimeZone : CurrentTimestampBase<OffsetDateTime> ","description":"org.jetbrains.exposed.v1.datetime.CurrentTimestampWithTimeZone","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-timestamp-with-time-zone/index.html","searchKeys":["CurrentTimestampWithTimeZone","object CurrentTimestampWithTimeZone : CurrentTimestampBase<OffsetDateTime> ","org.jetbrains.exposed.v1.datetime.CurrentTimestampWithTimeZone"]},{"name":"open override fun nonNullValueAsDefaultString(value: Instant): String","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.nonNullValueAsDefaultString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: Instant): String","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalDate): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.nonNullValueAsDefaultString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalDate): String","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalDateTime): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.nonNullValueAsDefaultString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalDateTime): String","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalTime): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.nonNullValueAsDefaultString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalTime): String","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: OffsetDateTime): String","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.nonNullValueAsDefaultString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: OffsetDateTime): String","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueToString(value: Duration): String","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.nonNullValueToString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Duration): String","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: Instant): String","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.nonNullValueToString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Instant): String","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalDate): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.nonNullValueToString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalDate): String","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalDateTime): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.nonNullValueToString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalDateTime): String","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalTime): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.nonNullValueToString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalTime): String","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: OffsetDateTime): String","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.nonNullValueToString","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: OffsetDateTime): String","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: Duration): Any","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.notNullValueToDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Duration): Any","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: Instant): Any","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.notNullValueToDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Instant): Any","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalDate): Any","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.notNullValueToDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalDate): Any","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalDateTime): Any","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.notNullValueToDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalDateTime): Any","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalTime): Any","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.notNullValueToDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalTime): Any","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: OffsetDateTime): Any","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.notNullValueToDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: OffsetDateTime): Any","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.notNullValueToDB"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.readObject","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.readObject","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.readObject","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.readObject","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.readObject","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.readObject"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.sqlType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.sqlType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.sqlType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.sqlType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.sqlType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.sqlType","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.sqlType"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.datetime.CurrentDate.toQueryBuilder","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-date/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.datetime.CurrentDate.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.datetime.CurrentTimestampBase.toQueryBuilder","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-timestamp-base/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.datetime.CurrentTimestampBase.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.datetime.YearInternal.toQueryBuilder","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year-internal/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.datetime.YearInternal.toQueryBuilder"]},{"name":"open override fun valueFromDB(value: Any): Duration","description":"org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.valueFromDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-duration-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Duration","org.jetbrains.exposed.v1.datetime.KotlinDurationColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Instant","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.valueFromDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Instant","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalDate","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.valueFromDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalDate","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalDateTime","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.valueFromDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalDateTime","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalTime","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.valueFromDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalTime","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): OffsetDateTime","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.valueFromDB","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): OffsetDateTime","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.valueFromDB"]},{"name":"open override val hasTimePart: Boolean = false","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.hasTimePart","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = false","org.jetbrains.exposed.v1.datetime.KotlinLocalDateColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.hasTimePart","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-instant-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.datetime.KotlinInstantColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.hasTimePart","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-date-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.datetime.KotlinLocalDateTimeColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.hasTimePart","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-local-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.datetime.KotlinLocalTimeColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.hasTimePart","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-kotlin-offset-date-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.datetime.KotlinOffsetDateTimeColumnType.hasTimePart"]},{"name":"sealed class CurrentTimestampBase<T> : Function<T> ","description":"org.jetbrains.exposed.v1.datetime.CurrentTimestampBase","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-current-timestamp-base/index.html","searchKeys":["CurrentTimestampBase","sealed class CurrentTimestampBase<T> : Function<T> ","org.jetbrains.exposed.v1.datetime.CurrentTimestampBase"]},{"name":"val expr: Expression<*>","description":"org.jetbrains.exposed.v1.datetime.YearInternal.expr","location":"exposed-kotlin-datetime/org.jetbrains.exposed.v1.datetime/-year-internal/expr.html","searchKeys":["expr","val expr: Expression<*>","org.jetbrains.exposed.v1.datetime.YearInternal.expr"]},{"name":"class Date<T : Temporal?>(val expr: Expression<T>) : Function<LocalDate> ","description":"org.jetbrains.exposed.v1.javatime.Date","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-date/index.html","searchKeys":["Date","class Date<T : Temporal?>(val expr: Expression<T>) : Function<LocalDate> ","org.jetbrains.exposed.v1.javatime.Date"]},{"name":"class Day<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.javatime.Day","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-day/index.html","searchKeys":["Day","class Day<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.javatime.Day"]},{"name":"class Hour<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.javatime.Hour","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-hour/index.html","searchKeys":["Hour","class Hour<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.javatime.Hour"]},{"name":"class JavaDurationColumnType : ColumnType<Duration> ","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/index.html","searchKeys":["JavaDurationColumnType","class JavaDurationColumnType : ColumnType<Duration> ","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType"]},{"name":"class JavaInstantColumnType : ColumnType<Instant> , IDateColumnType","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/index.html","searchKeys":["JavaInstantColumnType","class JavaInstantColumnType : ColumnType<Instant> , IDateColumnType","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType"]},{"name":"class JavaLocalDateColumnType : ColumnType<LocalDate> , IDateColumnType","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/index.html","searchKeys":["JavaLocalDateColumnType","class JavaLocalDateColumnType : ColumnType<LocalDate> , IDateColumnType","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType"]},{"name":"class JavaLocalDateTimeColumnType : ColumnType<LocalDateTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/index.html","searchKeys":["JavaLocalDateTimeColumnType","class JavaLocalDateTimeColumnType : ColumnType<LocalDateTime> , IDateColumnType","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType"]},{"name":"class JavaLocalTimeColumnType : ColumnType<LocalTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/index.html","searchKeys":["JavaLocalTimeColumnType","class JavaLocalTimeColumnType : ColumnType<LocalTime> , IDateColumnType","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType"]},{"name":"class JavaOffsetDateTimeColumnType : ColumnType<OffsetDateTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/index.html","searchKeys":["JavaOffsetDateTimeColumnType","class JavaOffsetDateTimeColumnType : ColumnType<OffsetDateTime> , IDateColumnType","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType"]},{"name":"class Minute<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.javatime.Minute","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-minute/index.html","searchKeys":["Minute","class Minute<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.javatime.Minute"]},{"name":"class Month<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.javatime.Month","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-month/index.html","searchKeys":["Month","class Month<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.javatime.Month"]},{"name":"class Second<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.javatime.Second","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-second/index.html","searchKeys":["Second","class Second<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.javatime.Second"]},{"name":"class Time<T : Temporal?>(val expr: Expression<T>) : Function<LocalTime> ","description":"org.jetbrains.exposed.v1.javatime.Time","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-time/index.html","searchKeys":["Time","class Time<T : Temporal?>(val expr: Expression<T>) : Function<LocalTime> ","org.jetbrains.exposed.v1.javatime.Time"]},{"name":"class Year<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.javatime.Year","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-year/index.html","searchKeys":["Year","class Year<T : Temporal?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.javatime.Year"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.JavaDurationColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/-java-duration-column-type.html","searchKeys":["JavaDurationColumnType","constructor()","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.JavaDurationColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.JavaInstantColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/-java-instant-column-type.html","searchKeys":["JavaInstantColumnType","constructor()","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.JavaInstantColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.JavaLocalDateColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/-java-local-date-column-type.html","searchKeys":["JavaLocalDateColumnType","constructor()","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.JavaLocalDateColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.JavaLocalDateTimeColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/-java-local-date-time-column-type.html","searchKeys":["JavaLocalDateTimeColumnType","constructor()","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.JavaLocalDateTimeColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.JavaLocalTimeColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/-java-local-time-column-type.html","searchKeys":["JavaLocalTimeColumnType","constructor()","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.JavaLocalTimeColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.JavaOffsetDateTimeColumnType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/-java-offset-date-time-column-type.html","searchKeys":["JavaOffsetDateTimeColumnType","constructor()","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.JavaOffsetDateTimeColumnType"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Date.Date","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-date/-date.html","searchKeys":["Date","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Date.Date"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Day.Day","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-day/-day.html","searchKeys":["Day","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Day.Day"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Hour.Hour","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-hour/-hour.html","searchKeys":["Hour","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Hour.Hour"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Minute.Minute","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-minute/-minute.html","searchKeys":["Minute","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Minute.Minute"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Month.Month","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-month/-month.html","searchKeys":["Month","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Month.Month"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Second.Second","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-second/-second.html","searchKeys":["Second","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Second.Second"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Time.Time","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-time/-time.html","searchKeys":["Time","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Time.Time"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.javatime.Year.Year","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-year/-year.html","searchKeys":["Year","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.javatime.Year.Year"]},{"name":"fun <T : Temporal?> Expression<T>.date(): Date<T>","description":"org.jetbrains.exposed.v1.javatime.date","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/date.html","searchKeys":["date","fun <T : Temporal?> Expression<T>.date(): Date<T>","org.jetbrains.exposed.v1.javatime.date"]},{"name":"fun <T : Temporal?> Expression<T>.day(): Day<T>","description":"org.jetbrains.exposed.v1.javatime.day","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/day.html","searchKeys":["day","fun <T : Temporal?> Expression<T>.day(): Day<T>","org.jetbrains.exposed.v1.javatime.day"]},{"name":"fun <T : Temporal?> Expression<T>.hour(): Hour<T>","description":"org.jetbrains.exposed.v1.javatime.hour","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/hour.html","searchKeys":["hour","fun <T : Temporal?> Expression<T>.hour(): Hour<T>","org.jetbrains.exposed.v1.javatime.hour"]},{"name":"fun <T : Temporal?> Expression<T>.minute(): Minute<T>","description":"org.jetbrains.exposed.v1.javatime.minute","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/minute.html","searchKeys":["minute","fun <T : Temporal?> Expression<T>.minute(): Minute<T>","org.jetbrains.exposed.v1.javatime.minute"]},{"name":"fun <T : Temporal?> Expression<T>.month(): Month<T>","description":"org.jetbrains.exposed.v1.javatime.month","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/month.html","searchKeys":["month","fun <T : Temporal?> Expression<T>.month(): Month<T>","org.jetbrains.exposed.v1.javatime.month"]},{"name":"fun <T : Temporal?> Expression<T>.second(): Second<T>","description":"org.jetbrains.exposed.v1.javatime.second","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/second.html","searchKeys":["second","fun <T : Temporal?> Expression<T>.second(): Second<T>","org.jetbrains.exposed.v1.javatime.second"]},{"name":"fun <T : Temporal?> Expression<T>.time(): Time<T>","description":"org.jetbrains.exposed.v1.javatime.time","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/time.html","searchKeys":["time","fun <T : Temporal?> Expression<T>.time(): Time<T>","org.jetbrains.exposed.v1.javatime.time"]},{"name":"fun <T : Temporal?> Expression<T>.year(): Year<T>","description":"org.jetbrains.exposed.v1.javatime.year","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/year.html","searchKeys":["year","fun <T : Temporal?> Expression<T>.year(): Year<T>","org.jetbrains.exposed.v1.javatime.year"]},{"name":"fun CustomDateFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDate?>","description":"org.jetbrains.exposed.v1.javatime.CustomDateFunction","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-custom-date-function.html","searchKeys":["CustomDateFunction","fun CustomDateFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDate?>","org.jetbrains.exposed.v1.javatime.CustomDateFunction"]},{"name":"fun CustomDateTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDateTime?>","description":"org.jetbrains.exposed.v1.javatime.CustomDateTimeFunction","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-custom-date-time-function.html","searchKeys":["CustomDateTimeFunction","fun CustomDateTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalDateTime?>","org.jetbrains.exposed.v1.javatime.CustomDateTimeFunction"]},{"name":"fun CustomDurationFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Duration?>","description":"org.jetbrains.exposed.v1.javatime.CustomDurationFunction","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-custom-duration-function.html","searchKeys":["CustomDurationFunction","fun CustomDurationFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Duration?>","org.jetbrains.exposed.v1.javatime.CustomDurationFunction"]},{"name":"fun CustomTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalTime?>","description":"org.jetbrains.exposed.v1.javatime.CustomTimeFunction","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-custom-time-function.html","searchKeys":["CustomTimeFunction","fun CustomTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalTime?>","org.jetbrains.exposed.v1.javatime.CustomTimeFunction"]},{"name":"fun CustomTimeStampFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Instant?>","description":"org.jetbrains.exposed.v1.javatime.CustomTimeStampFunction","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-custom-time-stamp-function.html","searchKeys":["CustomTimeStampFunction","fun CustomTimeStampFunction(functionName: String, vararg params: Expression<*>): CustomFunction<Instant?>","org.jetbrains.exposed.v1.javatime.CustomTimeStampFunction"]},{"name":"fun CustomTimestampWithTimeZoneFunction(functionName: String, vararg params: Expression<*>): CustomFunction<OffsetDateTime?>","description":"org.jetbrains.exposed.v1.javatime.CustomTimestampWithTimeZoneFunction","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-custom-timestamp-with-time-zone-function.html","searchKeys":["CustomTimestampWithTimeZoneFunction","fun CustomTimestampWithTimeZoneFunction(functionName: String, vararg params: Expression<*>): CustomFunction<OffsetDateTime?>","org.jetbrains.exposed.v1.javatime.CustomTimestampWithTimeZoneFunction"]},{"name":"fun Table.date(name: String): Column<LocalDate>","description":"org.jetbrains.exposed.v1.javatime.date","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/date.html","searchKeys":["date","fun Table.date(name: String): Column<LocalDate>","org.jetbrains.exposed.v1.javatime.date"]},{"name":"fun Table.datetime(name: String): Column<LocalDateTime>","description":"org.jetbrains.exposed.v1.javatime.datetime","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/datetime.html","searchKeys":["datetime","fun Table.datetime(name: String): Column<LocalDateTime>","org.jetbrains.exposed.v1.javatime.datetime"]},{"name":"fun Table.duration(name: String): Column<Duration>","description":"org.jetbrains.exposed.v1.javatime.duration","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/duration.html","searchKeys":["duration","fun Table.duration(name: String): Column<Duration>","org.jetbrains.exposed.v1.javatime.duration"]},{"name":"fun Table.time(name: String): Column<LocalTime>","description":"org.jetbrains.exposed.v1.javatime.time","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/time.html","searchKeys":["time","fun Table.time(name: String): Column<LocalTime>","org.jetbrains.exposed.v1.javatime.time"]},{"name":"fun Table.timestamp(name: String): Column<Instant>","description":"org.jetbrains.exposed.v1.javatime.timestamp","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/timestamp.html","searchKeys":["timestamp","fun Table.timestamp(name: String): Column<Instant>","org.jetbrains.exposed.v1.javatime.timestamp"]},{"name":"fun Table.timestampWithTimeZone(name: String): Column<OffsetDateTime>","description":"org.jetbrains.exposed.v1.javatime.timestampWithTimeZone","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/timestamp-with-time-zone.html","searchKeys":["timestampWithTimeZone","fun Table.timestampWithTimeZone(name: String): Column<OffsetDateTime>","org.jetbrains.exposed.v1.javatime.timestampWithTimeZone"]},{"name":"fun dateLiteral(value: LocalDate): LiteralOp<LocalDate>","description":"org.jetbrains.exposed.v1.javatime.dateLiteral","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/date-literal.html","searchKeys":["dateLiteral","fun dateLiteral(value: LocalDate): LiteralOp<LocalDate>","org.jetbrains.exposed.v1.javatime.dateLiteral"]},{"name":"fun dateParam(value: LocalDate): Expression<LocalDate>","description":"org.jetbrains.exposed.v1.javatime.dateParam","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/date-param.html","searchKeys":["dateParam","fun dateParam(value: LocalDate): Expression<LocalDate>","org.jetbrains.exposed.v1.javatime.dateParam"]},{"name":"fun dateTimeLiteral(value: LocalDateTime): LiteralOp<LocalDateTime>","description":"org.jetbrains.exposed.v1.javatime.dateTimeLiteral","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/date-time-literal.html","searchKeys":["dateTimeLiteral","fun dateTimeLiteral(value: LocalDateTime): LiteralOp<LocalDateTime>","org.jetbrains.exposed.v1.javatime.dateTimeLiteral"]},{"name":"fun dateTimeParam(value: LocalDateTime): Expression<LocalDateTime>","description":"org.jetbrains.exposed.v1.javatime.dateTimeParam","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/date-time-param.html","searchKeys":["dateTimeParam","fun dateTimeParam(value: LocalDateTime): Expression<LocalDateTime>","org.jetbrains.exposed.v1.javatime.dateTimeParam"]},{"name":"fun durationLiteral(value: Duration): LiteralOp<Duration>","description":"org.jetbrains.exposed.v1.javatime.durationLiteral","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/duration-literal.html","searchKeys":["durationLiteral","fun durationLiteral(value: Duration): LiteralOp<Duration>","org.jetbrains.exposed.v1.javatime.durationLiteral"]},{"name":"fun durationParam(value: Duration): Expression<Duration>","description":"org.jetbrains.exposed.v1.javatime.durationParam","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/duration-param.html","searchKeys":["durationParam","fun durationParam(value: Duration): Expression<Duration>","org.jetbrains.exposed.v1.javatime.durationParam"]},{"name":"fun timeLiteral(value: LocalTime): LiteralOp<LocalTime>","description":"org.jetbrains.exposed.v1.javatime.timeLiteral","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/time-literal.html","searchKeys":["timeLiteral","fun timeLiteral(value: LocalTime): LiteralOp<LocalTime>","org.jetbrains.exposed.v1.javatime.timeLiteral"]},{"name":"fun timeParam(value: LocalTime): Expression<LocalTime>","description":"org.jetbrains.exposed.v1.javatime.timeParam","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/time-param.html","searchKeys":["timeParam","fun timeParam(value: LocalTime): Expression<LocalTime>","org.jetbrains.exposed.v1.javatime.timeParam"]},{"name":"fun timestampLiteral(value: Instant): LiteralOp<Instant>","description":"org.jetbrains.exposed.v1.javatime.timestampLiteral","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/timestamp-literal.html","searchKeys":["timestampLiteral","fun timestampLiteral(value: Instant): LiteralOp<Instant>","org.jetbrains.exposed.v1.javatime.timestampLiteral"]},{"name":"fun timestampParam(value: Instant): Expression<Instant>","description":"org.jetbrains.exposed.v1.javatime.timestampParam","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/timestamp-param.html","searchKeys":["timestampParam","fun timestampParam(value: Instant): Expression<Instant>","org.jetbrains.exposed.v1.javatime.timestampParam"]},{"name":"fun timestampWithTimeZoneLiteral(value: OffsetDateTime): LiteralOp<OffsetDateTime>","description":"org.jetbrains.exposed.v1.javatime.timestampWithTimeZoneLiteral","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/timestamp-with-time-zone-literal.html","searchKeys":["timestampWithTimeZoneLiteral","fun timestampWithTimeZoneLiteral(value: OffsetDateTime): LiteralOp<OffsetDateTime>","org.jetbrains.exposed.v1.javatime.timestampWithTimeZoneLiteral"]},{"name":"fun timestampWithTimeZoneParam(value: OffsetDateTime): Expression<OffsetDateTime>","description":"org.jetbrains.exposed.v1.javatime.timestampWithTimeZoneParam","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/timestamp-with-time-zone-param.html","searchKeys":["timestampWithTimeZoneParam","fun timestampWithTimeZoneParam(value: OffsetDateTime): Expression<OffsetDateTime>","org.jetbrains.exposed.v1.javatime.timestampWithTimeZoneParam"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.Companion","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.Companion","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.Companion","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.Companion","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.Companion","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.Companion"]},{"name":"object Companion","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.Companion","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.Companion"]},{"name":"object CurrentDate : Function<LocalDate> ","description":"org.jetbrains.exposed.v1.javatime.CurrentDate","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-date/index.html","searchKeys":["CurrentDate","object CurrentDate : Function<LocalDate> ","org.jetbrains.exposed.v1.javatime.CurrentDate"]},{"name":"object CurrentDateTime : CurrentTimestampBase<LocalDateTime> ","description":"org.jetbrains.exposed.v1.javatime.CurrentDateTime","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-date-time/index.html","searchKeys":["CurrentDateTime","object CurrentDateTime : CurrentTimestampBase<LocalDateTime> ","org.jetbrains.exposed.v1.javatime.CurrentDateTime"]},{"name":"object CurrentTimestamp : CurrentTimestampBase<Instant> ","description":"org.jetbrains.exposed.v1.javatime.CurrentTimestamp","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-timestamp/index.html","searchKeys":["CurrentTimestamp","object CurrentTimestamp : CurrentTimestampBase<Instant> ","org.jetbrains.exposed.v1.javatime.CurrentTimestamp"]},{"name":"object CurrentTimestampWithTimeZone : CurrentTimestampBase<OffsetDateTime> ","description":"org.jetbrains.exposed.v1.javatime.CurrentTimestampWithTimeZone","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-timestamp-with-time-zone/index.html","searchKeys":["CurrentTimestampWithTimeZone","object CurrentTimestampWithTimeZone : CurrentTimestampBase<OffsetDateTime> ","org.jetbrains.exposed.v1.javatime.CurrentTimestampWithTimeZone"]},{"name":"open override fun nonNullValueAsDefaultString(value: Instant): String","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.nonNullValueAsDefaultString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: Instant): String","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalDate): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.nonNullValueAsDefaultString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalDate): String","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalDateTime): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.nonNullValueAsDefaultString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalDateTime): String","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalTime): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.nonNullValueAsDefaultString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalTime): String","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: OffsetDateTime): String","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.nonNullValueAsDefaultString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: OffsetDateTime): String","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueToString(value: Duration): String","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.nonNullValueToString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Duration): String","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: Instant): String","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.nonNullValueToString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Instant): String","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalDate): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.nonNullValueToString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalDate): String","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalDateTime): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.nonNullValueToString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalDateTime): String","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalTime): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.nonNullValueToString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalTime): String","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: OffsetDateTime): String","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.nonNullValueToString","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: OffsetDateTime): String","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: Duration): Any","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.notNullValueToDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Duration): Any","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: Instant): Any","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.notNullValueToDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Instant): Any","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalDate): Any","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.notNullValueToDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalDate): Any","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalDateTime): Any","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.notNullValueToDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalDateTime): Any","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalTime): Any","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.notNullValueToDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalTime): Any","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: OffsetDateTime): Any","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.notNullValueToDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: OffsetDateTime): Any","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.notNullValueToDB"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.readObject","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.readObject","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.readObject","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.readObject","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.readObject","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.readObject"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.sqlType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.sqlType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.sqlType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.sqlType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.sqlType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.sqlType","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.sqlType"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.CurrentDate.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-date/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.CurrentDate.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.CurrentTimestampBase.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-timestamp-base/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.CurrentTimestampBase.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Date.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-date/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Date.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Day.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-day/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Day.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Hour.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-hour/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Hour.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Minute.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-minute/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Minute.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Month.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-month/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Month.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Second.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-second/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Second.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Time.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-time/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Time.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.javatime.Year.toQueryBuilder","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-year/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.javatime.Year.toQueryBuilder"]},{"name":"open override fun valueFromDB(value: Any): Duration","description":"org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.valueFromDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-duration-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Duration","org.jetbrains.exposed.v1.javatime.JavaDurationColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): Instant","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.valueFromDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): Instant","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalDate?","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.valueFromDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalDate?","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalDateTime?","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.valueFromDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalDateTime?","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalTime","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.valueFromDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalTime","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): OffsetDateTime","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.valueFromDB","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): OffsetDateTime","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.valueFromDB"]},{"name":"open override val hasTimePart: Boolean = false","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.hasTimePart","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = false","org.jetbrains.exposed.v1.javatime.JavaLocalDateColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.hasTimePart","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-instant-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.javatime.JavaInstantColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.hasTimePart","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-date-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.javatime.JavaLocalDateTimeColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.hasTimePart","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-local-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.javatime.JavaLocalTimeColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.hasTimePart","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-java-offset-date-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.javatime.JavaOffsetDateTimeColumnType.hasTimePart"]},{"name":"sealed class CurrentTimestampBase<T> : Function<T> ","description":"org.jetbrains.exposed.v1.javatime.CurrentTimestampBase","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-current-timestamp-base/index.html","searchKeys":["CurrentTimestampBase","sealed class CurrentTimestampBase<T> : Function<T> ","org.jetbrains.exposed.v1.javatime.CurrentTimestampBase"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Date.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-date/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Date.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Day.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-day/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Day.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Hour.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-hour/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Hour.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Minute.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-minute/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Minute.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Month.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-month/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Month.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Second.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-second/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Second.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Time.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-time/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Time.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.javatime.Year.expr","location":"exposed-java-time/org.jetbrains.exposed.v1.javatime/-year/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.javatime.Year.expr"]},{"name":"class Date<T : DateTime?>(val expr: Expression<T>) : Function<DateTime> ","description":"org.jetbrains.exposed.v1.jodatime.Date","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date/index.html","searchKeys":["Date","class Date<T : DateTime?>(val expr: Expression<T>) : Function<DateTime> ","org.jetbrains.exposed.v1.jodatime.Date"]},{"name":"class DateColumnType(val time: Boolean) : ColumnType<DateTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/index.html","searchKeys":["DateColumnType","class DateColumnType(val time: Boolean) : ColumnType<DateTime> , IDateColumnType","org.jetbrains.exposed.v1.jodatime.DateColumnType"]},{"name":"class DateTimeWithTimeZoneColumnType : ColumnType<DateTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/index.html","searchKeys":["DateTimeWithTimeZoneColumnType","class DateTimeWithTimeZoneColumnType : ColumnType<DateTime> , IDateColumnType","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType"]},{"name":"class Day<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.jodatime.Day","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-day/index.html","searchKeys":["Day","class Day<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.jodatime.Day"]},{"name":"class Hour<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.jodatime.Hour","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-hour/index.html","searchKeys":["Hour","class Hour<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.jodatime.Hour"]},{"name":"class LocalTimeColumnType : ColumnType<LocalTime> , IDateColumnType","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/index.html","searchKeys":["LocalTimeColumnType","class LocalTimeColumnType : ColumnType<LocalTime> , IDateColumnType","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType"]},{"name":"class Minute<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.jodatime.Minute","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-minute/index.html","searchKeys":["Minute","class Minute<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.jodatime.Minute"]},{"name":"class Month<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.jodatime.Month","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-month/index.html","searchKeys":["Month","class Month<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.jodatime.Month"]},{"name":"class Second<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.jodatime.Second","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-second/index.html","searchKeys":["Second","class Second<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.jodatime.Second"]},{"name":"class Time<T : DateTime?>(val expr: Expression<T>) : Function<LocalTime> ","description":"org.jetbrains.exposed.v1.jodatime.Time","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-time/index.html","searchKeys":["Time","class Time<T : DateTime?>(val expr: Expression<T>) : Function<LocalTime> ","org.jetbrains.exposed.v1.jodatime.Time"]},{"name":"class Year<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","description":"org.jetbrains.exposed.v1.jodatime.Year","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-year/index.html","searchKeys":["Year","class Year<T : DateTime?>(val expr: Expression<T>) : Function<Int> ","org.jetbrains.exposed.v1.jodatime.Year"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.DateTimeWithTimeZoneColumnType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/-date-time-with-time-zone-column-type.html","searchKeys":["DateTimeWithTimeZoneColumnType","constructor()","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.DateTimeWithTimeZoneColumnType"]},{"name":"constructor()","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.LocalTimeColumnType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/-local-time-column-type.html","searchKeys":["LocalTimeColumnType","constructor()","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.LocalTimeColumnType"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Date.Date","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date/-date.html","searchKeys":["Date","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Date.Date"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Day.Day","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-day/-day.html","searchKeys":["Day","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Day.Day"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Hour.Hour","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-hour/-hour.html","searchKeys":["Hour","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Hour.Hour"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Minute.Minute","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-minute/-minute.html","searchKeys":["Minute","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Minute.Minute"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Month.Month","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-month/-month.html","searchKeys":["Month","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Month.Month"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Second.Second","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-second/-second.html","searchKeys":["Second","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Second.Second"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Time.Time","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-time/-time.html","searchKeys":["Time","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Time.Time"]},{"name":"constructor(expr: Expression<T>)","description":"org.jetbrains.exposed.v1.jodatime.Year.Year","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-year/-year.html","searchKeys":["Year","constructor(expr: Expression<T>)","org.jetbrains.exposed.v1.jodatime.Year.Year"]},{"name":"constructor(time: Boolean)","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.DateColumnType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/-date-column-type.html","searchKeys":["DateColumnType","constructor(time: Boolean)","org.jetbrains.exposed.v1.jodatime.DateColumnType.DateColumnType"]},{"name":"fun <T : DateTime?> Expression<T>.date(): Date<T>","description":"org.jetbrains.exposed.v1.jodatime.date","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/date.html","searchKeys":["date","fun <T : DateTime?> Expression<T>.date(): Date<T>","org.jetbrains.exposed.v1.jodatime.date"]},{"name":"fun <T : DateTime?> Expression<T>.day(): Day<T>","description":"org.jetbrains.exposed.v1.jodatime.day","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/day.html","searchKeys":["day","fun <T : DateTime?> Expression<T>.day(): Day<T>","org.jetbrains.exposed.v1.jodatime.day"]},{"name":"fun <T : DateTime?> Expression<T>.hour(): Hour<T>","description":"org.jetbrains.exposed.v1.jodatime.hour","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/hour.html","searchKeys":["hour","fun <T : DateTime?> Expression<T>.hour(): Hour<T>","org.jetbrains.exposed.v1.jodatime.hour"]},{"name":"fun <T : DateTime?> Expression<T>.minute(): Minute<T>","description":"org.jetbrains.exposed.v1.jodatime.minute","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/minute.html","searchKeys":["minute","fun <T : DateTime?> Expression<T>.minute(): Minute<T>","org.jetbrains.exposed.v1.jodatime.minute"]},{"name":"fun <T : DateTime?> Expression<T>.month(): Month<T>","description":"org.jetbrains.exposed.v1.jodatime.month","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/month.html","searchKeys":["month","fun <T : DateTime?> Expression<T>.month(): Month<T>","org.jetbrains.exposed.v1.jodatime.month"]},{"name":"fun <T : DateTime?> Expression<T>.second(): Second<T>","description":"org.jetbrains.exposed.v1.jodatime.second","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/second.html","searchKeys":["second","fun <T : DateTime?> Expression<T>.second(): Second<T>","org.jetbrains.exposed.v1.jodatime.second"]},{"name":"fun <T : DateTime?> Expression<T>.time(): Time<T>","description":"org.jetbrains.exposed.v1.jodatime.time","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/time.html","searchKeys":["time","fun <T : DateTime?> Expression<T>.time(): Time<T>","org.jetbrains.exposed.v1.jodatime.time"]},{"name":"fun <T : DateTime?> Expression<T>.year(): Year<T>","description":"org.jetbrains.exposed.v1.jodatime.year","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/year.html","searchKeys":["year","fun <T : DateTime?> Expression<T>.year(): Year<T>","org.jetbrains.exposed.v1.jodatime.year"]},{"name":"fun CustomDateFunction(functionName: String, vararg params: Expression<*>): CustomFunction<DateTime?>","description":"org.jetbrains.exposed.v1.jodatime.CustomDateFunction","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-custom-date-function.html","searchKeys":["CustomDateFunction","fun CustomDateFunction(functionName: String, vararg params: Expression<*>): CustomFunction<DateTime?>","org.jetbrains.exposed.v1.jodatime.CustomDateFunction"]},{"name":"fun CustomDateTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<DateTime?>","description":"org.jetbrains.exposed.v1.jodatime.CustomDateTimeFunction","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-custom-date-time-function.html","searchKeys":["CustomDateTimeFunction","fun CustomDateTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<DateTime?>","org.jetbrains.exposed.v1.jodatime.CustomDateTimeFunction"]},{"name":"fun CustomTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalTime?>","description":"org.jetbrains.exposed.v1.jodatime.CustomTimeFunction","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-custom-time-function.html","searchKeys":["CustomTimeFunction","fun CustomTimeFunction(functionName: String, vararg params: Expression<*>): CustomFunction<LocalTime?>","org.jetbrains.exposed.v1.jodatime.CustomTimeFunction"]},{"name":"fun CustomTimestampWithTimeZoneFunction(functionName: String, vararg params: Expression<*>): CustomFunction<DateTime?>","description":"org.jetbrains.exposed.v1.jodatime.CustomTimestampWithTimeZoneFunction","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-custom-timestamp-with-time-zone-function.html","searchKeys":["CustomTimestampWithTimeZoneFunction","fun CustomTimestampWithTimeZoneFunction(functionName: String, vararg params: Expression<*>): CustomFunction<DateTime?>","org.jetbrains.exposed.v1.jodatime.CustomTimestampWithTimeZoneFunction"]},{"name":"fun Table.date(name: String): Column<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.date","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/date.html","searchKeys":["date","fun Table.date(name: String): Column<DateTime>","org.jetbrains.exposed.v1.jodatime.date"]},{"name":"fun Table.datetime(name: String): Column<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.datetime","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/datetime.html","searchKeys":["datetime","fun Table.datetime(name: String): Column<DateTime>","org.jetbrains.exposed.v1.jodatime.datetime"]},{"name":"fun Table.time(name: String): Column<LocalTime>","description":"org.jetbrains.exposed.v1.jodatime.time","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/time.html","searchKeys":["time","fun Table.time(name: String): Column<LocalTime>","org.jetbrains.exposed.v1.jodatime.time"]},{"name":"fun Table.timestampWithTimeZone(name: String): Column<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.timestampWithTimeZone","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/timestamp-with-time-zone.html","searchKeys":["timestampWithTimeZone","fun Table.timestampWithTimeZone(name: String): Column<DateTime>","org.jetbrains.exposed.v1.jodatime.timestampWithTimeZone"]},{"name":"fun dateLiteral(value: DateTime): LiteralOp<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.dateLiteral","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/date-literal.html","searchKeys":["dateLiteral","fun dateLiteral(value: DateTime): LiteralOp<DateTime>","org.jetbrains.exposed.v1.jodatime.dateLiteral"]},{"name":"fun dateParam(value: DateTime): Expression<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.dateParam","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/date-param.html","searchKeys":["dateParam","fun dateParam(value: DateTime): Expression<DateTime>","org.jetbrains.exposed.v1.jodatime.dateParam"]},{"name":"fun dateTimeLiteral(value: DateTime): LiteralOp<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.dateTimeLiteral","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/date-time-literal.html","searchKeys":["dateTimeLiteral","fun dateTimeLiteral(value: DateTime): LiteralOp<DateTime>","org.jetbrains.exposed.v1.jodatime.dateTimeLiteral"]},{"name":"fun dateTimeParam(value: DateTime): Expression<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.dateTimeParam","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/date-time-param.html","searchKeys":["dateTimeParam","fun dateTimeParam(value: DateTime): Expression<DateTime>","org.jetbrains.exposed.v1.jodatime.dateTimeParam"]},{"name":"fun timeLiteral(value: LocalTime): LiteralOp<LocalTime>","description":"org.jetbrains.exposed.v1.jodatime.timeLiteral","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/time-literal.html","searchKeys":["timeLiteral","fun timeLiteral(value: LocalTime): LiteralOp<LocalTime>","org.jetbrains.exposed.v1.jodatime.timeLiteral"]},{"name":"fun timeParam(value: LocalTime): Expression<LocalTime>","description":"org.jetbrains.exposed.v1.jodatime.timeParam","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/time-param.html","searchKeys":["timeParam","fun timeParam(value: LocalTime): Expression<LocalTime>","org.jetbrains.exposed.v1.jodatime.timeParam"]},{"name":"fun timestampWithTimeZoneLiteral(value: DateTime): LiteralOp<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.timestampWithTimeZoneLiteral","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/timestamp-with-time-zone-literal.html","searchKeys":["timestampWithTimeZoneLiteral","fun timestampWithTimeZoneLiteral(value: DateTime): LiteralOp<DateTime>","org.jetbrains.exposed.v1.jodatime.timestampWithTimeZoneLiteral"]},{"name":"fun timestampWithTimeZoneParam(value: DateTime): Expression<DateTime>","description":"org.jetbrains.exposed.v1.jodatime.timestampWithTimeZoneParam","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/timestamp-with-time-zone-param.html","searchKeys":["timestampWithTimeZoneParam","fun timestampWithTimeZoneParam(value: DateTime): Expression<DateTime>","org.jetbrains.exposed.v1.jodatime.timestampWithTimeZoneParam"]},{"name":"object CurrentDate : Function<DateTime> ","description":"org.jetbrains.exposed.v1.jodatime.CurrentDate","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-current-date/index.html","searchKeys":["CurrentDate","object CurrentDate : Function<DateTime> ","org.jetbrains.exposed.v1.jodatime.CurrentDate"]},{"name":"object CurrentDateTime : Function<DateTime> ","description":"org.jetbrains.exposed.v1.jodatime.CurrentDateTime","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-current-date-time/index.html","searchKeys":["CurrentDateTime","object CurrentDateTime : Function<DateTime> ","org.jetbrains.exposed.v1.jodatime.CurrentDateTime"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.equals","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.jetbrains.exposed.v1.jodatime.DateColumnType.equals"]},{"name":"open override fun hashCode(): Int","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.hashCode","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.jetbrains.exposed.v1.jodatime.DateColumnType.hashCode"]},{"name":"open override fun nonNullValueAsDefaultString(value: DateTime): String","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.nonNullValueAsDefaultString","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: DateTime): String","org.jetbrains.exposed.v1.jodatime.DateColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: DateTime): String","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.nonNullValueAsDefaultString","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: DateTime): String","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueAsDefaultString(value: LocalTime): String","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.nonNullValueAsDefaultString","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/non-null-value-as-default-string.html","searchKeys":["nonNullValueAsDefaultString","open override fun nonNullValueAsDefaultString(value: LocalTime): String","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.nonNullValueAsDefaultString"]},{"name":"open override fun nonNullValueToString(value: DateTime): String","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.nonNullValueToString","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: DateTime): String","org.jetbrains.exposed.v1.jodatime.DateColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: DateTime): String","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.nonNullValueToString","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: DateTime): String","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: LocalTime): String","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.nonNullValueToString","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: LocalTime): String","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: DateTime): Any","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.notNullValueToDB","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: DateTime): Any","org.jetbrains.exposed.v1.jodatime.DateColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: DateTime): Any","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.notNullValueToDB","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: DateTime): Any","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: LocalTime): Any","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.notNullValueToDB","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: LocalTime): Any","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.notNullValueToDB"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.readObject","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.jodatime.DateColumnType.readObject"]},{"name":"open override fun readObject(rs: RowApi, index: Int): Any?","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.readObject","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/read-object.html","searchKeys":["readObject","open override fun readObject(rs: RowApi, index: Int): Any?","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.readObject"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.sqlType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.jodatime.DateColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.sqlType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.sqlType","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.sqlType"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.CurrentDate.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-current-date/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.CurrentDate.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.CurrentDateTime.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-current-date-time/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.CurrentDateTime.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Date.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Date.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Day.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-day/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Day.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Hour.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-hour/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Hour.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Minute.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-minute/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Minute.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Month.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-month/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Month.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Second.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-second/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Second.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Time.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-time/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Time.toQueryBuilder"]},{"name":"open override fun toQueryBuilder(queryBuilder: QueryBuilder)","description":"org.jetbrains.exposed.v1.jodatime.Year.toQueryBuilder","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-year/to-query-builder.html","searchKeys":["toQueryBuilder","open override fun toQueryBuilder(queryBuilder: QueryBuilder)","org.jetbrains.exposed.v1.jodatime.Year.toQueryBuilder"]},{"name":"open override fun valueFromDB(value: Any): DateTime","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.valueFromDB","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): DateTime","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): DateTime?","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.valueFromDB","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): DateTime?","org.jetbrains.exposed.v1.jodatime.DateColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): LocalTime?","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.valueFromDB","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): LocalTime?","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.valueFromDB"]},{"name":"open override val hasTimePart: Boolean","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.hasTimePart","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean","org.jetbrains.exposed.v1.jodatime.DateColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.hasTimePart","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-time-with-time-zone-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.jodatime.DateTimeWithTimeZoneColumnType.hasTimePart"]},{"name":"open override val hasTimePart: Boolean = true","description":"org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.hasTimePart","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-local-time-column-type/has-time-part.html","searchKeys":["hasTimePart","open override val hasTimePart: Boolean = true","org.jetbrains.exposed.v1.jodatime.LocalTimeColumnType.hasTimePart"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Date.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Date.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Day.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-day/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Day.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Hour.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-hour/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Hour.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Minute.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-minute/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Minute.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Month.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-month/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Month.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Second.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-second/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Second.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Time.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-time/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Time.expr"]},{"name":"val expr: Expression<T>","description":"org.jetbrains.exposed.v1.jodatime.Year.expr","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-year/expr.html","searchKeys":["expr","val expr: Expression<T>","org.jetbrains.exposed.v1.jodatime.Year.expr"]},{"name":"val time: Boolean","description":"org.jetbrains.exposed.v1.jodatime.DateColumnType.time","location":"exposed-jodatime/org.jetbrains.exposed.v1.jodatime/-date-column-type/time.html","searchKeys":["time","val time: Boolean","org.jetbrains.exposed.v1.jodatime.DateColumnType.time"]}]